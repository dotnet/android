<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\Configuration.props" />
  <Import Project="android-toolchain.projitems" />
  <Import Project="..\scripts\RequiredPrograms.targets" />
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)..\..\bin\Build$(Configuration)\xa-prep-tasks.dll"  TaskName="Xamarin.Android.BuildTools.PrepTasks.AcceptAndroidSdkLicenses" />
  <Target Name="_CopyBootstrapTasksAssembly"
      Outputs="$(OutputPath)\Xamarin.Android.Tools.BootstrapTasks.dll">
    <MSBuild
        Projects="..\..\src\Xamarin.Android.Tools.BootstrapTasks\Xamarin.Android.Tools.BootstrapTasks.csproj"
        Properties="OutputPath=$(AndroidToolchainDirectory)\"
    />
  </Target>
  <UsingTask AssemblyFile="..\..\bin\Build$(Configuration)\Xamarin.Android.Tools.BootstrapTasks.dll" TaskName="Xamarin.Android.Tools.BootstrapTasks.UnzipDirectoryChildren" />
  <Target Name="_DetermineItems">
    <CreateItem
        Include="@(AndroidSdkItem)"
        Condition=" '%(HostOS)' == '$(HostOS)' Or '%(HostOS)' == '' ">
			<Output TaskParameter="Include" ItemName="_PlatformAndroidSdkItem"/>
    </CreateItem>
    <CreateItem
        Include="@(AndroidNdkItem)"
        Condition=" '%(HostOS)' == '$(HostOS)' Or '%(HostOS)' == '' ">
			<Output TaskParameter="Include" ItemName="_PlatformAndroidNdkItem"/>
    </CreateItem>
    <CreateItem
        Include="@(AntItem)"
        Condition=" '%(HostOS)' == '$(HostOS)' Or '%(HostOS)' == '' ">
      <Output TaskParameter="Include" ItemName="_PlatformAntItem"/>
    </CreateItem>
    <ItemGroup>
        <_SdkStampFiles Include="@(_PlatformAndroidSdkItem->'$(AndroidToolchainDirectory)\sdk\.stamp-%(Identity)')" />
    </ItemGroup>
    <ItemGroup>
      <_SdkStampFiles Include="@(_PlatformAntItem->'$(AntDirectory)\.stamp-%(Identity)')" />
    </ItemGroup>
    <ItemGroup>
      <_DownloadedItem Include="@(_PlatformAndroidSdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity)')" />
      <_DownloadedItem Include="@(_PlatformAndroidNdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity)')" />
      <_DownloadedItem Include="@(_PlatformAntItem->'$(AndroidToolchainCacheDirectory)\%(Identity)')" />
    </ItemGroup>
  </Target>
  <Target Name="_DownloadItems"
      DependsOnTargets="_DetermineItems"
      Outputs="@(_DownloadedItem)">
    <MakeDir Directories="$(AndroidToolchainCacheDirectory)" />
    <DownloadUri
        SourceUris="@(_PlatformAndroidSdkItem->'$(AndroidUri)/%(RelUrl)%(Identity)');@(_PlatformAndroidNdkItem->'$(AndroidUri)/%(RelUrl)%(Identity)')"
        DestinationFiles="@(_PlatformAndroidSdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity)');@(_PlatformAndroidNdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity)')"
    />
    <DownloadUri
        SourceUris="@(_PlatformAntItem->'$(AntUri)/%(RelUrl)%(Identity)')"
        DestinationFiles="@(_PlatformAntItem->'$(AndroidToolchainCacheDirectory)\%(Identity)')"
    />
  </Target>
  <Target Name="_UnzipFiles"
      DependsOnTargets="_DetermineItems"
      Inputs="@(_DownloadedItem)"
      Outputs="@(_SdkStampFiles);$(AndroidToolchainDirectory)\ndk\.stamp-ndk">
    <CreateItem
        Include="@(_PlatformAndroidSdkItem->'$(AndroidToolchainCacheDirectory)\%(_PlatformAndroidSdkItem.Identity)">
      <Output TaskParameter="Include" ItemName="_AndroidSdkItems"/>
    </CreateItem>
    <CreateItem
        Include="@(_PlatformAndroidNdkItem->'$(AndroidToolchainCacheDirectory)\%(_PlatformAndroidNdkItem.Identity)"
        Condition=" '%(HostOS)' == '$(HostOS)' Or '%(HostOS)' == '' ">
      <Output TaskParameter="Include" ItemName="_AndroidNdkItems"/>
    </CreateItem>

    <RemoveDir Directories="$(AndroidSdkDirectory);$(AndroidNdkDirectory);$(AntDirectory)" />
    <MakeDir Directories="$(AndroidSdkDirectory);$(AndroidNdkDirectory);$(AntDirectory)" />

    <UnzipDirectoryChildren
        HostOS="$(HostOS)"
        SourceFiles="@(_PlatformAndroidSdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity)')"
        DestinationFolder="$(AndroidToolchainDirectory)\sdk"
    />
    <UnzipDirectoryChildren
        HostOS="$(HostOS)"
        SourceFiles="@(_PlatformAndroidNdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity)')"
        DestinationFolder="$(AndroidToolchainDirectory)\ndk"
    />
    <UnzipDirectoryChildren
        HostOS="$(HostOS)"
        SourceFiles="@(_PlatformAntItem->'$(AndroidToolchainCacheDirectory)\%(Identity)')"
        DestinationFolder="$(AntDirectory)"
    />
    <Touch
        Files="@(_SdkStampFiles);$(AndroidToolchainDirectory)\ndk\.stamp-ndk"
        AlwaysCreate="True"
    />
  </Target>
  <Target Name="_CreateNdkToolchains"
      Condition=" '$(OS)' == 'Unix' "
      Inputs="$(AndroidToolchainDirectory)\ndk\.stamp-ndk"
      Outputs="@(_NdkToolchain->'$(AndroidToolchainDirectory)\toolchains\%(Identity)\AndroidVersion.txt')">
    <PropertyGroup>
      <_Script>$(AndroidToolchainDirectory)\ndk\build\tools\make_standalone_toolchain.py</_Script>
    </PropertyGroup>
    <RemoveDir Directories="@(_NdkToolchain->'$(AndroidToolchainDirectory)\toolchains\%(Identity)')" />
    <Exec Command="python &quot;$(_Script)&quot; -v --api %(_NdkToolchain.Platform) --install-dir &quot;$(AndroidToolchainDirectory)\toolchains\%(_NdkToolchain.Identity)&quot; --arch %(_NdkToolchain.Arch)" />
    <Touch
        Files="@(_NdkToolchain->'$(AndroidToolchainDirectory)\toolchains\%(Identity)\AndroidVersion.txt')"
        AlwaysCreate="False"
    />
  </Target>
  <Target Name="_SetMxeToolchainMakefileTimeToLastCommitTimestamp"
      Condition=" '$(NeedMxe)' == 'true' And ($(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win64:')) Or $(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win32:')))">
    <GitCommitTime
        WorkingDirectory="..\..\external\mxe"
        ToolPath="$(GitToolPath)"
        ToolExe="$(GitToolExe)">
      <Output TaskParameter="Time" PropertyName="_MxeCommitTime" />
    </GitCommitTime>
    <Touch Files="..\..\external\mxe\Makefile" Time="$(_MxeCommitTime)" />
  </Target>
  <ItemGroup>
    <_AndroidMxeToolchain Include="$(MingwCommandPrefix32)" Condition="$(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win32:'))" />
    <_AndroidMxeToolchain Include="$(MingwCommandPrefix64)" Condition="$(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win64:'))" />
  </ItemGroup>
  <ItemGroup>
    <_AndroidMxeOutput Include="@(_AndroidMxeToolchain->'$(AndroidMxeFullPath)\bin\%(Identity)-gcc')" />
    <_AndroidMxeOutput Include="@(_AndroidMxeToolchain->'$(AndroidMxeFullPath)\bin\%(Identity)-cmake')" />
    <_AndroidMxeOutput Include="@(_AndroidMxeToolchain->'$(AndroidMxeFullPath)\%(Identity)\include\dlfcn.h')" />
    <_AndroidMxeOutput Include="@(_AndroidMxeToolchain->'$(AndroidMxeFullPath)\%(Identity)\include\pthread.h')" />
    <_AndroidMxeOutput Include="@(_AndroidMxeToolchain->'$(AndroidMxeFullPath)\%(Identity)\include\sys\mman.h')" />
    <_AndroidMxeOutput Include="@(_AndroidMxeToolchain->'$(AndroidMxeFullPath)\%(Identity)\include\zlib.h')" />
    <_AndroidMxeOutput Include="@(_AndroidMxeToolchain->'$(AndroidMxeFullPath)\%(Identity)\lib\libz.a')" />
  </ItemGroup>
  <Target Name="_AcceptAndroidSdkLicenses">
	<AcceptAndroidSdkLicenses AndroidSdkDirectory="$(AndroidSdkDirectory)" />
  </Target>
  <Target Name="_CreateMxeToolchains"
      DependsOnTargets="_SetMxeToolchainMakefileTimeToLastCommitTimestamp"
      Condition=" '$(NeedMxe)' == 'true' And ($(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win32:')) Or $(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win64:')))"
      Inputs="..\..\external\mxe\Makefile"
      Outputs="@(_AndroidMxeOutput)">
    <Exec
        Condition="$(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win32:'))"
        Command="make MXE_TARGETS=&quot;$(MingwCommandPrefix32)&quot; gcc cmake zlib pthreads dlfcn-win32 mman-win32 PREFIX=&quot;$(AndroidMxeFullPath)&quot;"
        WorkingDirectory="..\..\external\mxe"
    />
    <Exec
        Condition="$(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win64:'))"
        Command="make MXE_TARGETS=&quot;$(MingwCommandPrefix64)&quot; gcc cmake zlib pthreads dlfcn-win32 mman-win32 PREFIX=&quot;$(AndroidMxeFullPath)&quot;"
        WorkingDirectory="..\..\external\mxe"
    />
    <Touch Files="@(_AndroidMxeOutput)" />
  </Target>
</Project>
