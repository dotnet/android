<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="..\..\bin\Build$(Configuration)\xa-prep-tasks.dll"  TaskName="Xamarin.Android.BuildTools.PrepTasks.AcceptAndroidSdkLicenses" />
  <UsingTask AssemblyFile="..\..\bin\Build$(Configuration)\xa-prep-tasks.dll"  TaskName="Xamarin.Android.BuildTools.PrepTasks.GitCommitHash" />
  <UsingTask AssemblyFile="..\..\bin\Build$(Configuration)\xa-prep-tasks.dll"  TaskName="Xamarin.Android.BuildTools.PrepTasks.SetEnvironmentVariable" />
  <PropertyGroup>
    <BuildDependsOn>
      ResolveReferences;
      _DownloadItems;
      _UnzipFiles;
      _CreateMxeToolchains;
    </BuildDependsOn>
  </PropertyGroup>
  <UsingTask AssemblyFile="..\..\bin\Build$(Configuration)\Xamarin.Android.Tools.BootstrapTasks.dll" TaskName="Xamarin.Android.Tools.BootstrapTasks.UnzipDirectoryChildren" />
  <Target Name="_DetermineItems">
    <CreateItem
        Include="@(AndroidSdkItem)"
        Condition=" '%(HostOS)' == '$(HostOS)' Or '%(HostOS)' == '' ">
			<Output TaskParameter="Include" ItemName="_PlatformAndroidSdkItem"/>
    </CreateItem>
    <CreateItem
        Include="@(AndroidNdkItem)"
        Condition=" '%(HostOS)' == '$(HostOS)' Or '%(HostOS)' == '' ">
			<Output TaskParameter="Include" ItemName="_PlatformAndroidNdkItem"/>
    </CreateItem>
    <CreateItem
        Include="@(AntItem)"
        Condition=" '%(HostOS)' == '$(HostOS)' Or '%(HostOS)' == '' ">
      <Output TaskParameter="Include" ItemName="_PlatformAntItem"/>
    </CreateItem>
    <CreateItem
        Include="@(ChromeItem)"
        Condition=" '%(HostOS)' == '$(HostOS)' Or '%(HostOS)' == '' ">
      <Output TaskParameter="Include" ItemName="_PlatformChromeItem"/>
    </CreateItem>
    <ItemGroup>
        <_SdkStampFiles Include="@(_PlatformAndroidSdkItem->'$(AndroidToolchainDirectory)\sdk\.stamp-%(Identity)')" />
    </ItemGroup>
    <ItemGroup>
      <_SdkStampFiles Include="@(_PlatformAntItem->'$(AntDirectory)\.stamp-%(Identity)')" />
    </ItemGroup>
  </Target>
  <Target Name="_DownloadItems"
      DependsOnTargets="_DetermineItems"
      Outputs="@(_DownloadedItem)">
    <MakeDir Directories="$(AndroidToolchainCacheDirectory)" />
    <DownloadUri
        SourceUris="@(_PlatformAndroidSdkItem->'$(AndroidUri)/%(RelUrl)%(Identity).zip');@(_PlatformAndroidNdkItem->'$(AndroidUri)/%(RelUrl)%(Identity).zip')"
        DestinationFiles="@(_PlatformAndroidSdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity).zip');@(_PlatformAndroidNdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity).zip')">
      <Output TaskParameter="DestinationFiles" ItemName="_DownloadedItem" />
    </DownloadUri>
    <DownloadUri
        SourceUris="@(_PlatformAntItem->'$(AntUri)/%(RelUrl)%(Identity).zip')"
        DestinationFiles="@(_PlatformAntItem->'$(AndroidToolchainCacheDirectory)\%(Identity).zip')">
      <Output TaskParameter="DestinationFiles" ItemName="_DownloadedItem" />
    </DownloadUri>
    <DownloadUri
        SourceUris="@(_PlatformChromeItem->'$(ChromeUri)/%(RelUrl)%(Identity).zip')"
        DestinationFiles="@(_PlatformChromeItem->'$(AndroidToolchainCacheDirectory)\%(Identity).zip')"
        HashHeader="%(_PlatformChromeItem.HashHeader)">
      <Output TaskParameter="DestinationFiles" ItemName="_DownloadedItem" />
      <Output TaskParameter="DestinationFiles" ItemName="_DownloadedChromeItem" />
    </DownloadUri>
    <ItemGroup>
      <_SdkStampFiles Include="@(_DownloadedChromeItem->'$(ChromeToolsDirectory)\.stamp-%(FileName)')" />
    </ItemGroup>
  </Target>
  <Target Name="_UnzipFiles"
      DependsOnTargets="_DetermineItems"
      Inputs="@(_DownloadedItem)"
      Outputs="@(_SdkStampFiles);$(AndroidToolchainDirectory)\ndk\.stamp-ndk">
    <PropertyGroup>
      <_OriginalPath>$(PATH)</_OriginalPath>
    </PropertyGroup>
    <CreateItem
        Include="@(_PlatformAndroidSdkItem->'$(AndroidToolchainCacheDirectory)\%(_PlatformAndroidSdkItem.Identity).zip'">
      <Output TaskParameter="Include" ItemName="_AndroidSdkItems"/>
    </CreateItem>
    <CreateItem
        Include="@(_PlatformAndroidNdkItem->'$(AndroidToolchainCacheDirectory)\%(_PlatformAndroidNdkItem.Identity).zip'"
        Condition=" '%(HostOS)' == '$(HostOS)' Or '%(HostOS)' == '' ">
      <Output TaskParameter="Include" ItemName="_AndroidNdkItems"/>
    </CreateItem>

    <RemoveDir Directories="$(AndroidSdkDirectory);$(AndroidNdkDirectory);$(AntDirectory);$(ChromeToolsDirectory)" />
    <MakeDir Directories="$(AndroidSdkDirectory);$(AndroidNdkDirectory);$(AntDirectory);$(ChromeToolsDirectory)" />

    <UnzipDirectoryChildren
        HostOS="$(HostOS)"
        NoSubdirectory="%(_PlatformAndroidSdkItem.NoSubdirectory)"
        SourceFiles="@(_PlatformAndroidSdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity).zip')"
        DestinationFolder="$(AndroidToolchainDirectory)\sdk"
    />
    <UnzipDirectoryChildren
        HostOS="$(HostOS)"
        NoSubdirectory="%(_PlatformAndroidSdkItem.NoSubdirectory)"
        SourceFiles="@(_PlatformAndroidNdkItem->'$(AndroidToolchainCacheDirectory)\%(Identity).zip')"
        DestinationFolder="$(AndroidToolchainDirectory)\ndk"
    />
    <UnzipDirectoryChildren
        HostOS="$(HostOS)"
        NoSubdirectory="%(_PlatformAndroidSdkItem.NoSubdirectory)"
        SourceFiles="@(_PlatformAntItem->'$(AndroidToolchainCacheDirectory)\%(Identity).zip')"
        DestinationFolder="$(AntDirectory)"
    />
    <UnzipDirectoryChildren
        HostOS="$(HostOS)"
        NoSubdirectory="%(_DownloadedChromeItem.NoSubdirectory)"
        SourceFiles="@(_DownloadedChromeItem)"
        DestinationFolder="$(ChromeToolsDirectory)"
    />
    <AcceptAndroidSdkLicenses AndroidSdkDirectory="$(AndroidSdkDirectory)" JavaSdkDirectory="$(JavaSdkDirectory)" />
    <Xamarin.Android.BuildTools.PrepTasks.SetEnvironmentVariable
        Name="PATH"
        Value="$([System.IO.Path]::GetFullPath('$(ChromeToolsDirectory)'))$(PathSeparator)$(_OriginalPath)"
    />
    <Exec Command="gclient --version" />
    <Xamarin.Android.BuildTools.PrepTasks.SetEnvironmentVariable
        Name="PATH"
        Value="$(_OriginalPath)"
    />
    <Touch
        Files="@(_SdkStampFiles);$(AndroidToolchainDirectory)\ndk\.stamp-ndk"
        AlwaysCreate="True"
    />
  </Target>
  <Target Name="_CreateMxeToolchains"
      Condition=" '$(HostOS)' != 'Windows' And '$(NeedMxe)' == 'true' And ($(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win32:')) Or $(AndroidSupportedHostJitAbisForConditionalChecks.Contains (':mxe-Win64:')))"
      Outputs="$(AndroidMxeFullPath)\.stamp">
    <GitCommitHash
        WorkingDirectory="..\..\external\mxe"
        ToolPath="$(GitToolPath)"
        ToolExe="$(GitToolExe)">
      <Output TaskParameter="AbbreviatedCommitHash" PropertyName="_MxeHash" />
    </GitCommitHash>
    <Error
        Condition=" !$(AndroidMxeFullPath.EndsWith ($(_MxeHash))) "
        Text="%24(AndroidMxeFullPath) value of `$(AndroidMxeFullPath)` MUST end with `$(_MxeHash)`!"
    />
    <Exec
        Command="make $(MakeConcurrency) provision-mxe DISABLE_IOS=1 MXE_SRC=&quot;$(MSBuildThisFileDirectory)\..\..\external\mxe&quot; MXE_PREFIX_DIR=&quot;$(AndroidToolchainDirectory)&quot;"
        WorkingDirectory="$(MonoSourceFullPath)\sdks\builds"
    />
  </Target>
</Project>
