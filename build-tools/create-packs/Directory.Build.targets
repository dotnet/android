<Project>
  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Feed" Version="$(MicrosoftDotNetBuildTasksFeedPackageVersion)" PrivateAssets="all" />
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Packaging" Version="$(MicrosoftDotNetBuildTasksFeedPackageVersion)" PrivateAssets="all" />
    <PackageReference Include="Microsoft.DotNet.Arcade.Sdk" Version="$(MicrosoftDotNetBuildTasksFeedPackageVersion)" PrivateAssets="all" GeneratePathProperty="true" />
  </ItemGroup>

  <Import Project="License.targets" />
  <Import Project="..\..\build-tools\installers\create-installers.targets" />
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.SharedFramework.Sdk" Version="$(MicrosoftDotNetBuildTasksFeedPackageVersion)" />

  <UsingTask TaskName="CreateFrameworkListFile" AssemblyFile="$(DotNetSharedFrameworkTaskFile)"/>
  <UsingTask TaskName="GenerateBuildManifest" AssemblyFile="$(_MicrosoftDotNetBuildTasksFeedTaskDir)Microsoft.DotNet.Build.Tasks.Feed.dll" />
  <UsingTask TaskName="Xamarin.Android.BuildTools.PrepTasks.ReplaceFileContents" AssemblyFile="$(PrepTasksAssembly)" />

  <!-- https://github.com/dotnet/runtime/blob/0647ec314948904319da5eb15e9931f7c85ed1e2/src/installer/pkg/projects/Directory.Build.targets#L281 -->
  <!-- TODO: Generate PlatformManifest.txt files? -->
  <Target Name="_GenerateFrameworkListFile" >
    <!-- Hardcode framework attributes -->
    <ItemGroup>
      <FrameworkListRootAttributes Include="Name" Value=".NET 6.0 - Android" />
      <FrameworkListRootAttributes Include="TargetFrameworkIdentifier" Value=".NETCoreApp" />
      <FrameworkListRootAttributes Include="TargetFrameworkVersion" Value="6.0" />
      <FrameworkListRootAttributes Include="FrameworkName" Value="Microsoft.Android" />
    </ItemGroup>

    <!-- https://github.com/dotnet/arcade/blob/5824baf1c9a900ee00c167f96201c750bba6a574/src/Microsoft.DotNet.SharedFramework.Sdk/src/CreateFrameworkListFile.cs -->
    <CreateFrameworkListFile
        Files="@(_PackageFiles)"
        FileClassifications="@(FrameworkListFileClass)"
        TargetFile="$(FrameworkListFile)"
        TargetFilePrefixes="ref;runtimes"
        RootAttributes="@(FrameworkListRootAttributes)"
    />
    <ItemGroup>
      <_PackageFiles Include="$(FrameworkListFile)" PackagePath="data" />
    </ItemGroup>
  </Target>

  <Target Name="_GetDefaultPackageVersion"
      DependsOnTargets="GetXAVersionInfo" >
    <PropertyGroup>
      <PackageVersion>$(AndroidPackVersionLong)+sha.$(XAVersionHash)</PackageVersion>
    </PropertyGroup>
  </Target>

  <Target Name="_SetGlobalProperties">
    <ItemGroup>
      <_GlobalProperties Include="-p:Configuration=$(Configuration)" />
      <_GlobalProperties Include="-p:NuGetLicense=$(NuGetLicense)" />
      <_GlobalProperties Include="-p:IncludeSymbols=False" />
    </ItemGroup>
  </Target>

  <Target Name="_CleanNuGetDirectory">
    <RemoveDir Directories="$(XamarinAndroidSourcePath)bin\Build$(Configuration)\nuget-unsigned" />
  </Target>

  <Target Name="_CreatePreviewPacks"
      Condition=" '$(AndroidLatestStableApiLevel)' != '$(AndroidLatestUnstableApiLevel)' and Exists('$(XAInstallPrefix)xbuild-frameworks\Microsoft.Android\net6.0-android$(AndroidLatestUnstableApiLevel)\Mono.Android.dll') ">
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:AndroidApiLevel=$(AndroidLatestUnstableApiLevel) -p:AndroidRID=android-arm -p:AndroidABI=armeabi-v7a-net6 &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Runtime.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:AndroidApiLevel=$(AndroidLatestUnstableApiLevel) -p:AndroidRID=android-arm64 -p:AndroidABI=arm64-v8a-net6 &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Runtime.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:AndroidApiLevel=$(AndroidLatestUnstableApiLevel) -p:AndroidRID=android-x86 -p:AndroidABI=x86-net6 &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Runtime.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:AndroidApiLevel=$(AndroidLatestUnstableApiLevel) -p:AndroidRID=android-x64 -p:AndroidABI=x86_64-net6 &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Runtime.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:AndroidApiLevel=$(AndroidLatestUnstableApiLevel) &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Ref.proj&quot;" />
  </Target>

  <Target Name="CreateAllPacks"
      DependsOnTargets="DeleteExtractedWorkloadPacks;_SetGlobalProperties;GetXAVersionInfo;_CleanNuGetDirectory;_CreatePreviewPacks">
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:AndroidRID=android-arm -p:AndroidABI=armeabi-v7a-net6 &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Runtime.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:AndroidRID=android-arm64 -p:AndroidABI=arm64-v8a-net6 &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Runtime.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:AndroidRID=android-x86 -p:AndroidABI=x86-net6 &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Runtime.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:AndroidRID=android-x64 -p:AndroidABI=x86_64-net6 &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Runtime.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Ref.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:HostOS=Linux   &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Sdk.proj&quot;" Condition=" '$(HostOS)' == 'Linux' " />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:HostOS=Darwin  &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Sdk.proj&quot;" Condition=" '$(HostOS)' == 'Darwin' " />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') -p:HostOS=Windows &quot;$(MSBuildThisFileDirectory)Microsoft.Android.Sdk.proj&quot;" Condition=" '$(HostOS)' != 'Linux' " /> <!-- Windows pack should be built both Windows and macOS -->
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') &quot;$(MSBuildThisFileDirectory)Microsoft.NET.Sdk.Android.proj&quot;" />
    <Exec Command="dotnet pack @(_GlobalProperties, ' ') &quot;$(XamarinAndroidSourcePath)src\Microsoft.Android.Templates\Microsoft.Android.Templates.csproj&quot;" />
    <ReplaceFileContents
        SourceFile="vs-workload.in.props"
        DestinationFile="$(XamarinAndroidSourcePath)bin\Build$(Configuration)\nuget-unsigned\vs-workload.props"
        Replacements="@PACK_VERSION_LONG@=$(AndroidPackVersionLong);@PACK_VERSION_SHORT@=$(AndroidMSIVersion);@WORKLOAD_VERSION@=$(AndroidMSIVersion)"
    />
  </Target>

  <Target Name="ExtractWorkloadPacks"
      DependsOnTargets="DeleteExtractedWorkloadPacks" >
    <ItemGroup>
      <_WLManifest Include="$(XamarinAndroidSourcePath)bin\Build$(Configuration)\nuget-unsigned\Microsoft.NET.Sdk.Android.Manifest-*.nupkg" />
    </ItemGroup>
    <PropertyGroup>
      <_WLPackVersion>@(_WLManifest->'%(Filename)'->Replace('Microsoft.NET.Sdk.Android.Manifest-$(DotNetPreviewVersionBand).', ''))</_WLPackVersion>
      <_SdkManifestsFolder>$(DotNetPreviewPath)sdk-manifests\$(DotNetPreviewVersionBand)\</_SdkManifestsFolder>
    </PropertyGroup>
    <Unzip
        SourceFiles="@(_WLManifest)"
        DestinationFolder="$(_SdkManifestsFolder)temp"
    />
    <!-- The .nupkg contains the files under /data/, so we need to move them -->
    <ItemGroup>
      <_WLExtractedFiles Include="$(_SdkManifestsFolder)temp\LICENSE" />
      <_WLExtractedFiles Include="$(_SdkManifestsFolder)temp\data\*" />
    </ItemGroup>
    <Move SourceFiles="@(_WLExtractedFiles)" DestinationFolder="$(_SdkManifestsFolder)microsoft.net.sdk.android" />
    <RemoveDir Directories="$(_SdkManifestsFolder)temp\" />

    <!-- Parse NuGet.config -->
    <XmlPeek
        XmlInputPath="$(XamarinAndroidSourcePath)NuGet.config"
        Query="/configuration/packageSources/add/@value">
      <Output TaskParameter="Result" ItemName="_NuGetSources" />
    </XmlPeek>

    <!-- dotnet workload install android-aot -->
    <PropertyGroup>
      <_TempDirectory>$(DotNetPreviewPath)..\.xa-workload-temp-$([System.IO.Path]::GetRandomFileName())</_TempDirectory>
    </PropertyGroup>
    <ItemGroup>
      <_NuGetSources Include="$(OutputPath.TrimEnd('\'))" />
      <_PreviewPacks Condition=" '$(AndroidLatestStableApiLevel)' != '$(AndroidLatestUnstableApiLevel)' " Include="$(XamarinAndroidSourcePath)bin\Build$(Configuration)\nuget-unsigned\Microsoft.Android.Ref.$(AndroidLatestUnstableApiLevel).*.nupkg" />
      <_InstallArguments Include="android-aot" />
      <!-- NOTE: temporary if $(AndroidDefaultTargetDotnetApiLevel) is not 32 -->
      <_InstallArguments Include="android-32" />
      <_InstallArguments Include="android-$(AndroidLatestUnstableApiLevel)" Condition=" '@(_PreviewPacks->Count())' != '0' " />
      <_InstallArguments Include="--skip-manifest-update" />
      <_InstallArguments Include="--verbosity diag" />
      <_InstallArguments Include="--source &quot;%(_NuGetSources.Identity)&quot;" />
      <_InstallArguments Include="--temp-dir &quot;$(_TempDirectory)&quot;" />
    </ItemGroup>
    <MakeDir Directories="$(_TempDirectory)" />
    <Exec
        Command="&quot;$(DotNetPreviewTool)&quot; workload install @(_InstallArguments, ' ')"
        WorkingDirectory="$(_TempDirectory)"
        EnvironmentVariables="DOTNET_MULTILEVEL_LOOKUP=0"
    />
    <RemoveDir Directories="$(_TempDirectory)" />
  </Target>

  <Target Name="DeleteExtractedWorkloadPacks" >
    <ItemGroup>
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)metadata" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)sdk-manifests\$(DotNetPreviewVersionBand)\microsoft.net.sdk.android" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)sdk-manifests\$(DotNetPreviewVersionBand)\microsoft.net.workload.android" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)packs\Microsoft.Android.Ref" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)packs\Microsoft.Android.Runtime.android-arm" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)packs\Microsoft.Android.Runtime.android-arm64" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)packs\Microsoft.Android.Runtime.android-x86" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)packs\Microsoft.Android.Runtime.android-x64" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)packs\Microsoft.Android.Sdk.Darwin" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)packs\Microsoft.Android.Sdk.Linux" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)packs\Microsoft.Android.Sdk.Windows" />
      <_PackFoldersToDelete Include="$(DotNetPreviewPath)template-packs" />
    </ItemGroup>
    <RemoveDir Directories="@(_PackFoldersToDelete)" />
  </Target>

  <Target Name="PushManifestToBuildAssetRegistry" >
    <ItemGroup>
      <BuildArtifacts Include="$(OutputPath)*.nupkg" />
    </ItemGroup>

    <Error Condition="'@(BuildArtifacts)' == ''" Text="No packages to create manifest from." />

    <ItemGroup>
      <ManifestBuildData Include="InitialAssetsLocation=https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json" />
      <ManifestBuildData Include="AzureDevOpsBuildId=$(BUILD_BUILDID)" />
      <ManifestBuildData Include="AzureDevOpsBuildDefinitionId=$(SYSTEM_DEFINITIONID)" />
      <ManifestBuildData Include="AzureDevOpsProject=$(SYSTEM_TEAMPROJECT)" />
      <ManifestBuildData Include="AzureDevOpsBuildNumber=$(BUILD_BUILDNUMBER)" />
      <ManifestBuildData Include="AzureDevOpsRepository=$(BUILD_REPOSITORY_URI)" />
      <ManifestBuildData Include="AzureDevOpsBranch=$(BUILD_SOURCEBRANCH)" />
    </ItemGroup>

    <GenerateBuildManifest
        Artifacts="@(BuildArtifacts)"
        OutputPath="$(OutputPath)bar-manifests\AssetManifest.xml"
        BuildId="$(BUILD_BUILDNUMBER)"
        BuildData="@(ManifestBuildData)"
        RepoUri="$(BUILD_REPOSITORY_URI)"
        RepoBranch="$(BUILD_SOURCEBRANCH)"
        RepoCommit="$(BUILD_SOURCEVERSION)"
        PublishingVersion="3" />

    <MSBuild
        Targets="Restore"
        Projects="$(PkgMicrosoft_DotNet_Arcade_Sdk)\tools\SdkTasks\PublishBuildAssets.proj"
        Properties="Configuration=$(Configuration);RepoRoot=$(XamarinAndroidSourcePath);VersionPrefix=$(AndroidPackVersion)"
    />

    <MSBuild
        Projects="$(PkgMicrosoft_DotNet_Arcade_Sdk)\tools\SdkTasks\PublishBuildAssets.proj"
        Properties="Configuration=$(Configuration);RepoRoot=$(XamarinAndroidSourcePath);VersionPrefix=$(AndroidPackVersion);ManifestsPath=$(OutputPath)bar-manifests;MaestroApiEndpoint=https://maestro-prod.westus2.cloudapp.azure.com"
    />
  </Target>

</Project>
