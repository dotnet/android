<Project>
  <PropertyGroup>
    <_Root>$(MSBuildThisFileDirectory)..\..\</_Root>
    <_BinlogPathPrefix>$(_Root)bin/Build$(Configuration)/msbuild-$([System.DateTime]::Now.ToString("yyyyMMddTHHmmss"))</_BinlogPathPrefix>
    <MauiUseLocalPacks Condition=" '$(MauiUseLocalPacks)' == '' ">false</MauiUseLocalPacks>
    <MauiSourcePath Condition=" '$(MauiSourcePath)' == '' ">$(_Root)..\maui</MauiSourcePath>
    <MauiPackagePath Condition=" '$(MauiPackagePath)' == '' ">$(MauiSourcePath)\artifacts</MauiPackagePath>
    <MauiWorkloadToInstall Condition=" '$(MauiWorkloadToInstall)' == '' ">maui-android</MauiWorkloadToInstall>
  </PropertyGroup>

  <Target Name="BuildExternal">
    <Exec
        Command="&quot;$(DotNetPreviewTool)&quot; build monodroid.proj -c $(Configuration) -p:XamarinAndroidSourcePath=$(_Root) -p:XAIntegrationBuild=true -bl:$(_BinlogPathPrefix)-build-monodroid.binlog"
        WorkingDirectory="$(_Root)external\android-platform-support\build-tools"
    />
  </Target>

  <Target Name="PrepareJavaInterop">
    <Exec
        Command="&quot;$(DotNetPreviewTool)&quot; build -t:Prepare Java.Interop.sln -c $(Configuration) -p:JdksRoot=$(JavaSdkDirectory) -p:DotnetToolPath=$(DotNetPreviewTool) -bl:$(_BinlogPathPrefix)-prepare-java-interop.binlog"
        WorkingDirectory="$(_Root)external\Java.Interop"
    />
  </Target>

  <Target Name="BuildDotNet"
      DependsOnTargets="PrepareJavaInterop">
    <MSBuild Projects="$(_Root)build-tools\xa-prep-tasks\xa-prep-tasks.csproj" />
    <MSBuild Projects="$(_Root)Xamarin.Android.sln" Properties="DisableApiCompatibilityCheck=true" />
    <MSBuild Projects="$(_Root)build-tools\create-packs\Microsoft.Android.Sdk.proj" Targets="ConfigureLocalWorkload" />
  </Target>

  <Target Name="PackDotNet">
    <!-- Build extra versions of Mono.Android.dll if necessary -->
    <MSBuild
         Condition=" '$(AndroidDefaultTargetDotnetApiLevel)' != '$(AndroidLatestStableApiLevel)' "
         Projects="$(_Root)src\Mono.Android\Mono.Android.csproj"
         Properties="TargetFramework=$(DotNetTargetFramework);AndroidApiLevel=$(AndroidDefaultTargetDotnetApiLevel);AndroidPlatformId=$(AndroidDefaultTargetDotnetApiLevel);DisableApiCompatibilityCheck=true"
    />
    <MSBuild
         Condition=" '$(AndroidLatestUnstableApiLevel)' != '$(AndroidLatestStableApiLevel)' "
         Projects="$(_Root)src\Mono.Android\Mono.Android.csproj"
         Properties="TargetFramework=$(DotNetTargetFramework);AndroidApiLevel=$(AndroidLatestUnstableApiLevel);AndroidPlatformId=$(AndroidLatestUnstablePlatformId);DisableApiCompatibilityCheck=true"
    />
    <MSBuild Projects="$(_Root)build-tools\create-packs\Microsoft.Android.Sdk.proj" Targets="CreateAllPacks" />
    <MSBuild Projects="$(_Root)build-tools\create-packs\Microsoft.Android.Sdk.proj" Targets="ExtractWorkloadPacks" />
    <!-- Clean up old, previously restored packages -->
    <ItemGroup>
      <_OldPackages Include="$(_Root)packages\microsoft.android.*\**\*.nupkg" />
      <_DirectoriesToRemove Include="%(_OldPackages.RootDir)%(_OldPackages.Directory)" />
    </ItemGroup>
    <RemoveDir Directories="@(_DirectoriesToRemove)" />
  </Target>

  <Target Name="UpdateMauiWorkloadsProj">
    <XmlPoke
      XmlInputPath="$(MauiSourcePath)\src\DotNet\Dependencies\Workloads.csproj"
      Value="Microsoft.NET.Sdk.Android.Manifest-$(DotNetSdkManifestsFolder)"
      Query="/Project/ItemGroup/PackageDownload[contains(@Include,'Microsoft.NET.Sdk.Android.Manifest-')]/@Include" />
    <XmlPeek
        XmlInputPath="$(_Root)NuGet.config"
        Query="/configuration/packageSources/add[starts-with(@key,'darc-pub-dotnet-android-')]">
      <Output TaskParameter="Result" ItemName="_DotNetAndroidFeeds" />
    </XmlPeek>
    <XmlPeek
        Condition=" '@(_DotNetAndroidFeeds->Count())' != '0' "
        XmlInputPath="$(MauiSourcePath)\NuGet.config"
        Query="/configuration/packageSources/*">
      <Output TaskParameter="Result" ItemName="_DotNetMauiFeeds" />
    </XmlPeek>
    <ItemGroup>
      <_DotNetMauiFeeds Include="@(_DotNetAndroidFeeds)" />
    </ItemGroup>
    <XmlPoke
        Condition=" '@(_DotNetAndroidFeeds->Count())' != '0' "
        XmlInputPath="$(MauiSourcePath)\NuGet.config"
        Value="@(_DotNetMauiFeeds, ' ')"
        Query="/configuration/packageSources"
    />
  </Target>

  <Target Name="InstallMaui">
    <Error Text="%24(MauiVersion) must be specified." Condition=" '$(MauiVersion)' == '' and '$(MauiUseLocalPacks)' != 'true' " />
    <PropertyGroup>
      <_TempDirectory>$(DotNetPreviewPath)..\.xa-workload-temp-$([System.IO.Path]::GetRandomFileName())</_TempDirectory>
      <MauiVersionBand Condition=" '$(MauiVersionBand)' == '' ">$(DotNetSdkManifestsFolder)</MauiVersionBand>
    </PropertyGroup>
    <MakeDir Directories="$(_TempDirectory)" />

    <!-- Restore or extract WorkloadManifest.* files-->
    <Exec
        Condition=" '$(MauiUseLocalPacks)' != 'true' "
        Command="&quot;$(DotNetPreviewTool)&quot; restore maui.proj -p:MauiVersion=$(MauiVersion) -p:MauiVersionBand=$(MauiVersionBand)"
        WorkingDirectory="$(MSBuildThisFileDirectory)"
        EnvironmentVariables="NUGET_PACKAGES=$(_TempDirectory);DOTNET_MULTILEVEL_LOOKUP=0"
    />
    <ItemGroup>
      <_WLManifestPack Include="$(MauiPackagePath)\Microsoft.NET.Sdk.Maui.Manifest-$(MauiVersionBand.Substring (0,3))*.nupkg" />
    </ItemGroup>
    <Unzip
        Condition=" '$(MauiUseLocalPacks)' == 'true' "
        SourceFiles="@(_WLManifestPack)"
        DestinationFolder="$(_TempDirectory)"
    />

    <!-- Copy WorkloadManifest.* files-->
    <ItemGroup>
      <_WLManifest Condition=" '$(MauiUseLocalPacks)' != 'true' " Include="$(_TempDirectory)\microsoft.net.sdk.maui.manifest-$(MauiVersionBand)\$(MauiVersion)\data\WorkloadManifest.*" />
      <_WLManifest Condition=" '$(MauiUseLocalPacks)' == 'true' " Include="$(_TempDirectory)\data\*" />
    </ItemGroup>
    <Copy SourceFiles="@(_WLManifest)" DestinationFolder="$(DotNetPreviewPath)sdk-manifests\$(DotNetSdkManifestsFolder)\microsoft.net.sdk.maui" />

    <!-- Parse NuGet.config -->
    <XmlPeek
        Condition=" '$(MauiUseLocalPacks)' == 'true' "
        XmlInputPath="$(MauiSourcePath)\NuGet.config"
        Query="/configuration/packageSources/add/@value">
      <Output TaskParameter="Result" ItemName="_NuGetSources" />
    </XmlPeek>
    <XmlPeek
        XmlInputPath="$(XamarinAndroidSourcePath)NuGet.config"
        Query="/configuration/packageSources/add/@value">
      <Output TaskParameter="Result" ItemName="_NuGetSources" />
    </XmlPeek>

    <!-- dotnet workload install maui-android -->
    <ItemGroup>
      <_NuGetSources Condition=" '$(MauiUseLocalPacks)' == 'true' " Include="$(MauiPackagePath.TrimEnd('\'))" />
      <_InstallArguments Include="--skip-manifest-update" />
      <_InstallArguments Include="--skip-sign-check" />
      <_InstallArguments Include="--verbosity diag" />
      <_InstallArguments Include="--source &quot;%(_NuGetSources.Identity)&quot;" />
      <_InstallArguments Include="--temp-dir &quot;$(_TempDirectory)&quot;" />
    </ItemGroup>
    <Exec
        Command="&quot;$(DotNetPreviewTool)&quot; workload install $(MauiWorkloadToInstall) @(_InstallArguments, ' ')"
        WorkingDirectory="$(_TempDirectory)"
        EnvironmentVariables="DOTNET_MULTILEVEL_LOOKUP=0"
    />
    <RemoveDir Directories="$(_TempDirectory)" />
  </Target>
</Project>
