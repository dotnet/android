#!/bin/bash -e

function die()
{
    echo $*
    exit 1
}

#
# *ALL* of the HOST_* variables found below must be set
#
# Notes:
#
#  HOST_CC and HOST_CXX are generic compiler names, without any parameters. The name is
#  required by the build targets to check for the compiler presence on the system and
#  the way the task is constructed it requires an existing binary name.
#
#  If your OS requires any specific variables, prefix them with the capitalized OS name,
#  for instance `LINUX_MY_VARIABLE`
#
function getMingwSearchDir_Linux()
{
    echo `$1 -print-search-dirs | grep install: | cut -d ':' -f 2 | tr -d ' '`
}

function getInfo_Linux()
{
    local uses_clang=no
    local compiler_version="`cc --version | tr -d '\n'`"

    if [ -d /app ]; then
      OS_NAME="Flatpak"
      OS_RELEASE=`grep ^flatpak-version /.flatpak-info | cut -f2 -d'='`
    else
      lsb_release > /dev/null 2>&1 || die "Your Linux does not have a working 'lsb_release' command"
      OS_NAME="`lsb_release -is`"
      OS_RELEASE="`lsb_release -rs`"
    fi

    HOST_CPUS="`nproc`"

    if echo $compiler_version | grep -i "Free Software Foundation" > /dev/null 2>&1; then
        HOST_CC=gcc
        HOST_CXX=g++
    elif echo $compiler_version | grep -i clang > /dev/null 2>&1; then
        uses_clang=yes
        HOST_CC=clang
        HOST_CXX=clang++
    else
        HOST_CC=cc
        HOST_CXX=c++
    fi

    HOST_TRIPLET="`$HOST_CC -dumpmachine`"

    if [ "x$ARCHITECTURE_BITS" = "x64" ]; then
        HOST_CC64="$HOST_CC"
        HOST_CXX64="$HOST_CXX"
        HOST_CC32="$HOST_CC -m32"
        HOST_CXX32="$HOST_CXX -m32"
        HOST_TRIPLET32=`sed s/[^-]*-/i686-/ <<< "$HOST_TRIPLET"`
        HOST_TRIPLET64="$HOST_TRIPLET"
    else
        HOST_CC32="$HOST_CC"
        HOST_CXX32="$HOST_CXX"
        HOST_CC64=false
        HOST_CXX64=false
        HOST_TRIPLET32="$HOST_TRIPLET"
        HOST_TRIPLET64="false"
        HOST_TRIPLET="$HOST_TRIPLET32"
    fi
}

function getInfo_Darwin()
{
    local PLIST_BUDDY=/usr/libexec/PlistBuddy
    local VERSION_PLIST=/System/Library/CoreServices/SystemVersion.plist

    if [ ! -x $PLIST_BUDDY ]; then
        die "Your Mac does not have the '$PLIST_BUDDY' command"
    fi
    OS_NAME="`$PLIST_BUDDY -c 'Print :ProductName' $VERSION_PLIST`"
    OS_RELEASE="`$PLIST_BUDDY -c 'Print :ProductVersion' $VERSION_PLIST`"
    HOST_TRIPLET64=x86_64-apple-darwin11.2.0
    HOST_TRIPLET32=i386-apple-darwin11.2.0
    HOST_TRIPLET="$HOST_TRIPLET64"
    HOST_CPUS="`sysctl hw.ncpu | cut -d ':' -f 2 | tr -d ' '`"
    HOST_CC32="clang -m32"
    HOST_CXX32="clang++ -m32"
    HOST_CC64=clang
    HOST_CXX64=clang++
}

if [ -z "$1" ]; then
    die Usage: generate-os-info OUTPUT_FILE_PATH
fi
#
# Generic values available across all Unix systems
#
ARCHITECTURE_BITS=`getconf LONG_BIT`
OS_TYPE="`uname -s`"

eval getInfo_$OS_TYPE || die "Your operating system is not supported."

cat <<EOF > "$1"
<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <HostOS Condition=" '\$(HostOS)' == '' ">$OS_TYPE</HostOS>
        <HostOsName Condition=" '\$(HostOsName)' == '' ">$OS_NAME</HostOsName>
        <HostOsRelease Condition=" '\$(HostOsRelease)' == '' ">$OS_RELEASE</HostOsRelease>
        <HostTriplet Condition=" '\$(HostTriplet)' == '' ">$HOST_TRIPLET</HostTriplet>
        <HostTriplet32 Condition=" '\$(HostTriplet32)' == '' ">$HOST_TRIPLET32</HostTriplet32>
        <HostTriplet64 Condition=" '\$(HostTriplet64)' == '' ">$HOST_TRIPLET64</HostTriplet64>
        <HostCpuCount Condition=" '\$(HostCpuCount)' == '' ">$HOST_CPUS</HostCpuCount>
        <HostBits Condition=" '\$(HostBits)' == '' ">$ARCHITECTURE_BITS</HostBits>
        <HostCcName Condition=" '\$(HostCcName)' == '' ">$HOST_CC</HostCcName>
        <HostCxxName Condition=" '\$(HostCxxName)' == '' ">$HOST_CXX</HostCxxName>
        <HostCc32 Condition=" '\$(HostCc32)' == '' ">$HOST_CC32</HostCc32>
        <HostCc64 Condition=" '\$(HostCc64)' == '' ">$HOST_CC64</HostCc64>
        <HostCxx32 Condition=" '\$(HostCxx32)' == '' ">$HOST_CXX32</HostCxx32>
        <HostCxx64 Condition=" '\$(HostCxx64)' == '' ">$HOST_CXX64</HostCxx64>
        <JavaCPath Condition=" '\$(JavaCPath)' == '' ">javac</JavaCPath>
        <JarPath Condition=" '\$(JarPath)' == '' ">jar</JarPath>
    </PropertyGroup>
</Project>
EOF
