<?xml version="1.0" encoding="UTF-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(BootstrapTasksAssembly)" TaskName="Xamarin.Android.Tools.BootstrapTasks.Zip" />
  <Import Project="..\scripts\XAVersionInfo.targets" />
  <ItemGroup>
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)Configuration.OperatingSystem.props" Condition="Exists('$(XamarinAndroidSourcePath)Configuration.OperatingSystem.props')" />
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)Configuration.Override.props" Condition="Exists('$(XamarinAndroidSourcePath)Configuration.Override.props')" />
    <_BuildStatusFiles Include="$(BootstrapOutputDirectory)XABuildConfig.cs" Condition="Exists('$(BootstrapOutputDirectory)XABuildConfig.cs')" />
    <_BuildStatusFiles Include="$(BootstrapOutputDirectory)*.binlog" />
    <_BuildStatusFiles Include="$(BootstrapOutputDirectory)prepare*.log" />
    <_BuildStatusFiles Include="$(BootstrapOutputDirectory)*.mk" />
    <_BuildStatusFiles Include="$(BootstrapOutputDirectory)*.projitems" />
    <_BuildStatusFiles Include="$(BootstrapOutputDirectory)*.cmake" />
    <_BuildStatusFiles Include="$(BootstrapOutputDirectory)*.targets" />
    <_BuildStatusFiles Include="$(TestOutputDirectory)XABuildConfig.cs" Condition="Exists('$(TestOutputDirectory)XABuildConfig.cs')" />
    <_BuildStatusFiles Include="$(TestOutputDirectory)*.binlog" />
    <_BuildStatusFiles Include="$(TestOutputDirectory)prepare*.log" />
    <_BuildStatusFiles Include="$(TestOutputDirectory)*.mk" />
    <_BuildStatusFiles Include="$(TestOutputDirectory)*.projitems" />
    <_BuildStatusFiles Include="$(TestOutputDirectory)*.cmake" />
    <_BuildStatusFiles Include="$(TestOutputDirectory)*.targets" />
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)external\Java.Interop\bin\Build$(Configuration)\*.props" />
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)**\ThirdPartyNotices.txt" />
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)**\config.log" />
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)**\config.status" />
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)**\config.h" />
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)**\CMakeCache.txt" />
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)**\.ninja_log" />
    <_BuildStatusFiles Include="$(XamarinAndroidSourcePath)**\android-*.config.cache" />
  </ItemGroup>
  <ItemGroup>
    <_TestResultFiles Include="$(XamarinAndroidSourcePath)TestResult-*.xml" />
    <_TestResultFiles Include="$(TestOutputDirectory)*.apkdesc" />
    <_TestResultFiles Include="$(TestOutputDirectory)*.aabdesc" />
    <_TestResultFiles Include="$(TestOutputDirectory)TestResult-*.xml" />
    <_TestResultFiles Include="$(TestOutputDirectory)compatibility\*" />
    <_TestResultFiles Include="$(TestOutputDirectory)logcat*" />
    <_TestResultFiles Include="$(TestOutputDirectory)*log" />
    <_TestResultFiles Include="$(TestOutputDirectory)temp\**\*" Exclude="$(TestOutputDirectory)temp\packages\**">
      <SubDirectory>temp\</SubDirectory>
    </_TestResultFiles>
    <_TestResultFiles Include="$(TestOutputDirectory)TestOutput-*.txt" />
    <_TestResultFiles Include="$(TestOutputDirectory)Timing_*" />
    <_TestResultFiles Include="$(XamarinAndroidSourcePath)*.csv" />
    <_TestResultFiles Include="$(TEMP)\llc.exe-*" />
  </ItemGroup>
  <Target Name="_GetResultFileNames"
      DependsOnTargets="GetXAVersionInfo">
    <PropertyGroup>
      <_ResultSuffix>$(ProductVersion).$(XAVersionCommitCount)_$(XAVersionHash)-$(HostOS)-$(Configuration)</_ResultSuffix>
      <BuildStatusZipOutputPath Condition=" '$(BuildStatusZipOutputPath)' == '' ">$(XamarinAndroidSourcePath)bin\Build$(Configuration)</BuildStatusZipOutputPath>
      <TestResultZipOutputPath Condition=" '$(TestResultZipOutputPath)' == '' ">$(XamarinAndroidSourcePath)bin\Test$(Configuration)</TestResultZipOutputPath>
      <BuildStatusZipName Condition=" '$(BuildStatusZipName)' == '' ">xa-build-status-$(_ResultSuffix)</BuildStatusZipName>
      <TestResultZipName Condition=" '$(TestResultZipName)' == '' ">xa-test-results-$(_ResultSuffix)</TestResultZipName>
    </PropertyGroup>
  </Target>
  <Target Name="ZipBuildStatus"
      DependsOnTargets="_GetResultFileNames"
      Inputs="@(_BuildStatusFiles)"
      Outputs="$(BuildStatusZipOutputPath)\$(BuildStatusZipName).zip">
    <MakeDir Directories="$(BuildStatusZipOutputPath)\$(BuildStatusZipName)"/>
    <Copy
        UseHardlinksIfPossible="True"
        SourceFiles="@(_BuildStatusFiles)"
        DestinationFiles="@(_BuildStatusFiles->'$(BuildStatusZipOutputPath)\$(BuildStatusZipName)\%(RecursiveDir)%(Filename)%(Extension)')"
    />
    <ItemGroup>
      <_BuildStatusFilesToZip Include="$(BuildStatusZipOutputPath)\$(BuildStatusZipName)\**\*" />
    </ItemGroup>
    <Zip
        Entries="@(_BuildStatusFilesToZip)"
        File="$(BuildStatusZipOutputPath)\$(BuildStatusZipName).zip"
        Prefix="$(BuildStatusZipOutputPath)"
    />
    <RemoveDir Directories="$(BuildStatusZipOutputPath)\$(BuildStatusZipName)" />
  </Target>
  <Target Name="ZipTestResults"
      DependsOnTargets="_GetResultFileNames"
      Inputs="@(_TestResultFiles)"
      Outputs="$(TestResultZipOutputPath)\$(TestResultZipName).zip">
    <MakeDir Directories="$(TestResultZipOutputPath)\$(TestResultZipName)"/>
    <Copy
        UseHardlinksIfPossible="True"
        SourceFiles="@(_TestResultFiles)"
        DestinationFiles="@(_TestResultFiles->'$(TestResultZipOutputPath)\$(TestResultZipName)\%(SubDirectory)%(RecursiveDir)%(Filename)%(Extension)')"
    />
    <ItemGroup>
      <_TestResultFilesToZip Include="$(TestResultZipOutputPath)\$(TestResultZipName)\**\*" />
    </ItemGroup>
    <Zip
        Entries="@(_TestResultFilesToZip)"
        File="$(TestResultZipOutputPath)\$(TestResultZipName).zip"
        Prefix="$(TestResultZipOutputPath)"
    />
    <RemoveDir Directories="$(TestResultZipOutputPath)\$(TestResultZipName)" />
  </Target>
</Project>
