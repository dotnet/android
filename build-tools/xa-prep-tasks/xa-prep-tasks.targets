<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(OutputPath)xa-prep-tasks.dll"   TaskName="Xamarin.Android.BuildTools.PrepTasks.DownloadUri" />
  <UsingTask AssemblyFile="$(OutputPath)xa-prep-tasks.dll"   TaskName="Xamarin.Android.BuildTools.PrepTasks.SystemUnzip" />
  <Import Project="..\bundle\bundle-path.targets" />
  <Import Project="..\scripts\XAVersionInfo.targets" />
  <PropertyGroup>
    <_AzureBaseUri>https://xamjenkinsartifact.azureedge.net/xamarin-android/xamarin-android/bin/</_AzureBaseUri>
    <_NuGetUri>https://dist.nuget.org/win-x86-commandline/latest/nuget.exe</_NuGetUri>
    <_NuGetPath>$(MSBuildThisFileDirectory)\..\..\.nuget</_NuGetPath>
  </PropertyGroup>
  <Target Name="_CreateVersion"
      DependsOnTargets="GetXAVersionInfo"
      AfterTargets="Build">
    <PropertyGroup>
      <_XAPrefix>$(XAInstallPrefix)xbuild\Xamarin\Android</_XAPrefix>
      <_VersionFile>..\..\bin\$(Configuration)\Version</_VersionFile>
      <_VersionCommitFile>..\..\bin\$(Configuration)\Version.commit</_VersionCommitFile>
      <_VersionRevFile>..\..\bin\$(Configuration)\Version.rev</_VersionRevFile>
      <_XAVersionFile>$(_XAPrefix)\Version</_XAVersionFile>
      <_XAVersionTxtFile>$(_XAPrefix)\Version.txt</_XAVersionTxtFile>
      <_XAVersionCommitFile>$(_XAPrefix)\Version.commit</_XAVersionCommitFile>
      <_XAVersionRevFile>$(_XAPrefix)\Version.rev</_XAVersionRevFile>
    </PropertyGroup>
    <MakeDir Directories="$(_XAPrefix)" />
    <WriteLinesToFile
        File="$(_VersionFile)"
        Lines="$(ProductVersion)"
        Overwrite="True"
    />
    <WriteLinesToFile
        File="$(_XAVersionFile)"
        Lines="$(ProductVersion)"
        Overwrite="True"
    />
    <WriteLinesToFile
        File="$(_XAVersionTxtFile)"
        Lines="$(ProductVersion)"
        Overwrite="True"
    />
    <WriteLinesToFile
        File="$(_VersionCommitFile)"
        Lines="$(XARepositoryName)/$(XAVersionBranch)/$(XAVersionHash)"
        Overwrite="True"
    />
    <WriteLinesToFile
        File="$(_XAVersionCommitFile)"
        Lines="$(XARepositoryName)/$(XAVersionBranch)/$(XAVersionHash)"
        Overwrite="True"
    />
    <WriteLinesToFile
        File="$(_VersionRevFile)"
        Lines="$(XAVersionCommitCount)"
        Overwrite="True"
    />
    <WriteLinesToFile
        File="$(_XAVersionRevFile)"
        Lines="$(XAVersionCommitCount)"
        Overwrite="True"
    />
  </Target>
  <Target Name="_GetBundleOutputPath"
      DependsOnTargets="GetBundleFileName">
    <PropertyGroup>
      <_BundlePath>$(AndroidToolchainCacheDirectory)\$(XABundleFileName)</_BundlePath>
    </PropertyGroup>
  </Target>
  <Target Name="_DownloadBundle"
      DependsOnTargets="_GetBundleOutputPath"
      Inputs=""
      Outputs="$(_BundlePath)">
    <PropertyGroup>
      <XABundleDownloadPrefix Condition=" '$(XABundleDownloadPrefix)' == '' ">$(_AzureBaseUri)$(Configuration)</XABundleDownloadPrefix>
    </PropertyGroup>
    <DownloadUri
        ContinueOnError="True"
        SourceUris="$(XABundleDownloadPrefix)/$(XABundleFileName)"
        DestinationFiles="$(_BundlePath)"
    />
    <Error
        Text="The Windows build depends on a cached mono bundle, that may not be available yet. Try going back a few commits (with git reset) to download a different bundle."
        Condition=" '$(HostOS)' == 'Windows' And '$(MSBuildLastTaskResult)' == 'False' "
    />
  </Target>
  <Target Name="_DownloadNuGet"
	Inputs=""
	Outputs="$(_NuGetPath)\NuGet.exe">
    <MakeDir
        Directories="$(_NuGetPath)"
    />
    <DownloadUri
        SourceUris="$(_NuGetUri)"
        DestinationFiles="$(_NuGetPath)\NuGet.exe"
    />
  </Target>
  <Target Name="_ExtractBundle"
      Condition=" Exists('$(_BundlePath)') "
      Inputs="$(_BundlePath)"
      Outputs="$(OutputPath).extracted-$(XABundleFileName)">
    <PropertyGroup>
      <XABundleUnzipPath Condition=" '$(XABundleUnzipPath)' == '' "></XABundleUnzipPath>
    </PropertyGroup>
    <SystemUnzip
        SourceFiles="$(_BundlePath)"
        HostOS="$(HostOS)"
        TempUnzipDir="$(XABundleUnzipPath)"
        DestinationFolder="..\..\bin\$(Configuration)"
    />
    <WriteLinesToFile
        File="$(OutputPath).extracted-$(XABundleFileName)"
        Lines="$(XABundleFileName)"
        Overwrite="True"
    />
  </Target>
  <Target Name="_DownloadAndExtractBundle"
      AfterTargets="Build"
      DependsOnTargets="_GetBundleOutputPath;_DownloadBundle;_ExtractBundle;_DownloadNuGet">
  </Target>
</Project>
