<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(OutputPath)xa-prep-tasks.dll"   TaskName="Xamarin.Android.BuildTools.PrepTasks.DownloadUri" />
  <UsingTask AssemblyFile="$(OutputPath)xa-prep-tasks.dll"   TaskName="Xamarin.Android.BuildTools.PrepTasks.SystemUnzip" />
  <Import Project="..\..\bin\Build$(Configuration)\bundle-path.targets" />
  <PropertyGroup>
    <_AzureBaseUri>https://xamjenkinsartifact.azureedge.net/mono-jenkins/</_AzureBaseUri>
    <_NuGetUri>https://dist.nuget.org/win-x86-commandline/v4.7.1/nuget.exe</_NuGetUri>
    <_NuGetPath>$(MSBuildThisFileDirectory)\..\..\.nuget</_NuGetPath>
  </PropertyGroup>
  <Target Name="_GetBundleOutputPath">
    <PropertyGroup>
      <BundleRootPath Condition=" '$(BundleRootPath)' == '' ">$(AndroidToolchainCacheDirectory)</BundleRootPath>
      <_BundlePath>$(BundleRootPath)\$(XABundleFileName)</_BundlePath>
    </PropertyGroup>
  </Target>
  <Target Name="_DownloadBundle"
      DependsOnTargets="_GetBundleOutputPath"
      Inputs="download-bundle.csproj"
      Outputs="$(_BundlePath)">
    <PropertyGroup>
      <_AzureJobUri Condition=" '$(Configuration)' == 'Debug' ">xamarin-android-debug</_AzureJobUri>
      <_AzureJobUri Condition=" '$(Configuration)' != 'Debug' ">xamarin-android</_AzureJobUri>
      <XABundleDownloadPrefix Condition=" '$(XABundleDownloadPrefix)' == '' ">$(_AzureBaseUri)$(_AzureJobUri)/xamarin-android/bin/$(Configuration)</XABundleDownloadPrefix>
    </PropertyGroup>
    <DownloadUri
        ContinueOnError="True"
        SourceUris="$(XABundleDownloadPrefix)/$(XABundleFileName)"
        DestinationFiles="$(_BundlePath)"
    />
    <Error
        Text="The Windows build depends on a cached mono bundle, that may not be available yet. Try going back a few commits (with git reset) to download a different bundle."
        Condition=" '$(HostOS)' == 'Windows' And '$(MSBuildLastTaskResult)' == 'False' "
    />
  </Target>
  <Target Name="_DownloadNuGet"
      Inputs="download-bundle.csproj"
      Outputs="$(_NuGetPath)\NuGet.exe">
    <MakeDir
        Directories="$(_NuGetPath)"
    />
    <DownloadUri
        SourceUris="$(_NuGetUri)"
        DestinationFiles="$(_NuGetPath)\NuGet.exe"
    />
  </Target>
  <Target Name="_ExtractBundle"
      Condition=" Exists('$(_BundlePath)') "
      Inputs="$(_BundlePath)"
      Outputs="$(OutputPath).extracted-$(XABundleFileName)">
    <PropertyGroup>
      <XABundleUnzipPath Condition=" '$(XABundleUnzipPath)' == '' "></XABundleUnzipPath>
    </PropertyGroup>
    <SystemUnzip
        SourceFiles="$(_BundlePath)"
        HostOS="$(HostOS)"
        TempUnzipDir="$(XABundleUnzipPath)"
        DestinationFolder="..\..\bin\$(Configuration)"
    />
    <WriteLinesToFile
        File="$(OutputPath).extracted-$(XABundleFileName)"
        Lines="$(XABundleFileName)"
        Overwrite="True"
    />
  </Target>
  <Target Name="_DownloadAndExtractBundle"
      DependsOnTargets="_GetBundleOutputPath;_DownloadBundle;_ExtractBundle;_DownloadNuGet">
  </Target>
  <Target Name="DownloadBundle"
      DependsOnTargets="_DownloadAndExtractBundle">
  </Target>
</Project>
