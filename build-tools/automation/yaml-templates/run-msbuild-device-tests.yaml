# Runs MSBuild tests against a device running on macOS

parameters:
  node_id: 0
  job_name: ''
  job_suffix: ''
  nunit_categories: ''
  target_framework: 'net472'
  dotnet_targetframework: $(DotNetStableTargetFramework)
  provisionatorChannel: latest

jobs:
  - job: ${{ parameters.job_name }}
    displayName: MSBuild With Emulator - macOS-${{ parameters.node_id }} - ${{ parameters.job_suffix }}
    pool:
      vmImage: $(HostedMacImage)
    timeoutInMinutes: 90
    cancelTimeoutInMinutes: 5
    workspace:
      clean: all
    steps:
    - template: setup-test-environment.yaml
      parameters:
        provisionatorChannel: ${{ parameters.provisionatorChannel }}

    - template: run-xaprepare.yaml
      parameters:
        displayName: install emulator
        arguments: --s=EmulatorTestDependencies

    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: $(TestAssembliesArtifactName)
        downloadPath: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)

    # Only run on Legacy Node-1
    - ${{ if and(eq(parameters.job_suffix, 'Legacy'), eq(parameters.node_id, 1)) }}:
      - task: MSBuild@1
        displayName: build check-boot-times.csproj
        inputs:
          solution: build-tools/check-boot-times/check-boot-times.csproj
          configuration: $(XA.Build.Configuration)
          msbuildArguments: /restore /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/build-check-boot-times.binlog
        continueOnError: true

      - task: MSBuild@1
        displayName: Run check-boot-times
        inputs:
          solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
          configuration: $(XA.Build.Configuration)
          msbuildArguments: /t:CheckBootTimes /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/run-check-boot-times.binlog
        continueOnError: true

    - task: MSBuild@1
      displayName: start emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: /t:AcquireAndroidTarget /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/start-emulator.binlog

    - template: run-nunit-tests.yaml
      parameters:
        useDotNet: ${{ eq(parameters.target_framework, parameters.dotnet_targetframework) }}
        testRunTitle: MSBuildDeviceIntegration On Device - macOS-${{ parameters.node_id }} - ${{ parameters.job_suffix }}
        testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/${{ parameters.target_framework }}/MSBuildDeviceIntegration.dll
        nunitConsoleExtraArgs: --where "cat == Node-${{ parameters.node_id }} && cat != SystemApplication && cat != TimeZoneInfo && cat != SmokeTests ${{ parameters.nunit_categories }}"
        dotNetTestExtraArgs: --filter "TestCategory = Node-${{ parameters.node_id }} & TestCategory != TimeZoneInfo ${{ parameters.nunit_categories }}"
        testResultsFile: TestResult-MSBuildDeviceIntegration-${{ parameters.job_name }}-$(XA.Build.Configuration).xml

    # Tests with no "Node" category. This should be empty, but just in case! Only run these tests on node 1
    - ${{ if eq(parameters.node_id, 1) }}:
      - template: run-nunit-tests.yaml
        parameters:
          useDotNet: ${{ eq(parameters.target_framework, parameters.dotnet_targetframework) }}
          testRunTitle: MSBuildDeviceIntegration On Device - macOS-NoNode - ${{ parameters.job_suffix }}
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/${{ parameters.target_framework }}/MSBuildDeviceIntegration.dll
          nunitConsoleExtraArgs: --where "cat != Node-1 && cat != Node-2 && cat != Node-3  && cat != Node-4 && cat != SystemApplication && cat != TimeZoneInfo && cat != SmokeTests ${{ parameters.nunit_categories }}"
          dotNetTestExtraArgs: --filter "TestCategory != Node-1 & TestCategory != Node-2 & TestCategory != Node-3 & TestCategory != Node-4 & TestCategory != TimeZoneInfo ${{ parameters.nunit_categories }}"
          testResultsFile: TestResult-MSBuildDeviceIntegration-${{ parameters.job_name }}-NoNode-$(XA.Build.Configuration).xml

    - task: MSBuild@1
      displayName: shut down emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: >-
          /t:AcquireAndroidTarget,ReleaseAndroidTarget
          /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/shutdown-emulator.binlog
      condition: always()

    - template: upload-results.yaml
      parameters:
        artifactName: Test Results - MSBuild With Emulator - macOS-${{ parameters.node_id }} - ${{ parameters.job_suffix }}

    - template: fail-on-issue.yaml
