# Runs MSBuild tests against a device running on macOS

parameters:
  job_name: ''
  job_suffix: ''
  nunit_categories: ''
  target_framework: 'net472'

jobs:
  - job: ${{ parameters.job_name }}
    displayName: MSBuild With Emulator - macOS - ${{ parameters.job_suffix }}
    pool: $(HostedMac)
    timeoutInMinutes: 150
    cancelTimeoutInMinutes: 5
    workspace:
      clean: all
    variables:
      UseDotNet: ${{ eq(parameters.target_framework, 'netcoreapp3.1') }}
    steps:
    - template: setup-test-environment.yaml

    - script: mono $(System.DefaultWorkingDirectory)/build-tools/xaprepare/xaprepare/bin/$(XA.Build.Configuration)/xaprepare.exe --s=EmulatorTestDependencies --no-emoji --run-mode=CI
      displayName: install emulator

    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: $(TestAssembliesArtifactName)
        downloadPath: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)

    - ${{ if eq(parameters.job_suffix, 'Legacy') }}:
      - task: MSBuild@1
        displayName: build check-boot-times.csproj
        inputs:
          solution: build-tools/check-boot-times/check-boot-times.csproj
          configuration: $(XA.Build.Configuration)
          msbuildArguments: /restore /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/build-check-boot-times.binlog
        continueOnError: true

      - task: MSBuild@1
        displayName: Run check-boot-times
        inputs:
          solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
          configuration: $(XA.Build.Configuration)
          msbuildArguments: /t:CheckBootTimes /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/run-check-boot-times.binlog
        continueOnError: true

    - task: MSBuild@1
      displayName: start emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: /t:AcquireAndroidTarget /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/start-emulator.binlog

    - template: run-nunit-tests.yaml
      parameters:
        useDotNet: $(UseDotNet)
        testRunTitle: MSBuildDeviceIntegration On Device - macOS - ${{ parameters.job_suffix }}
        testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/${{ parameters.target_framework }}/MSBuildDeviceIntegration.dll
        nunitConsoleExtraArgs: --where "cat != TimeZoneInfo && cat != SmokeTests ${{ parameters.nunit_categories }}"
        dotNetTestExtraArgs: --filter "TestCategory != TimeZoneInfo & TestCategory != SmokeTests ${{ parameters.nunit_categories }}"
        testResultsFile: TestResult-MSBuildDeviceIntegration-${{ parameters.job_name }}-$(XA.Build.Configuration).xml

    - task: MSBuild@1
      displayName: shut down emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: >-
          /t:AcquireAndroidTarget,ReleaseAndroidTarget
          /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/shutdown-emulator.binlog
      condition: always()

    - template: upload-results.yaml
      parameters:
        artifactName: Test Results - MSBuild With Emulator - macOS - ${{ parameters.job_suffix }}

    - template: fail-on-issue.yaml
