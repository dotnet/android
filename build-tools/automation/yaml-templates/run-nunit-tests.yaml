parameters:
  nunitConsole: $(System.DefaultWorkingDirectory)/build-tools/scripts/nunit3-console
  testRunTitle: Xamarin Android Tests
  testAssembly: []
  testResultsFile: TestResult.xml
  nunitConsoleExtraArgs: ''
  dotNetTestExtraArgs: ''
  useDotNet: false
  workers: $(NUnit.NumberOfTestWorkers)
  condition: succeeded()

steps:
- powershell: |
    if ([Environment]::OSVersion.Platform -eq "Unix") {
        if ("${{ parameters.useDotNet }}" -eq $true) {
            Write-Host '##vso[task.setvariable variable=TestResultsFormat]VSTest'
            $dotnetPath = "$env:HOME/Library/Android/dotnet/dotnet"
            if (-not (Test-Path $dotnetPath)) {
                $dotnetPath = "$env:HOME/android-toolchain/dotnet/dotnet"
            }
            & $dotnetPath test ${{ parameters.testAssembly }} --results-directory . --logger "trx;LogFileName=${{ parameters.testResultsFile }}" ${{ parameters.dotNetTestExtraArgs }} -- NUnit.NumberOfTestWorkers=${{ parameters.workers }}
        } else {
            Write-Host '##vso[task.setvariable variable=TestResultsFormat]NUnit'
            & ${{ parameters.nunitConsole }} ${{ parameters.testAssembly }} --result ${{ parameters.testResultsFile }} --workers=${{ parameters.workers }} ${{ parameters.nunitConsoleExtraArgs }}
        }
    } else {
        if ("${{ parameters.useDotNet }}" -eq $true) {
           Write-Host '##vso[task.setvariable variable=TestResultsFormat]VSTest'
           & $env:USERPROFILE\android-toolchain\dotnet\dotnet.exe test ${{ parameters.testAssembly }} --results-directory . --logger "trx;LogFileName=${{ parameters.testResultsFile }}" ${{ parameters.dotNetTestExtraArgs }} -- NUnit.NumberOfTestWorkers=${{ parameters.workers }}
        } else {
           Write-Host '##vso[task.setvariable variable=TestResultsFormat]NUnit'
           & cmd /c '${{ parameters.nunitConsole }}.cmd' ${{ parameters.testAssembly }} --result ${{ parameters.testResultsFile }} --workers=${{ parameters.workers }} ${{ parameters.nunitConsoleExtraArgs }}
        }
    }
    if ($LASTEXITCODE -ne 0) {
        Write-Host "##vso[task.logissue type=error]Test suite had $LASTEXITCODE failure(s)."
        Write-Host "##vso[task.complete result=Failed;]"
        exit 0
    }
  displayName: run ${{ parameters.testRunTitle }}
  condition: ${{ parameters.condition }}
  continueOnError: true

- template: kill-processes.yaml

- task: PublishTestResults@2
  inputs:
    testResultsFormat: $(TestResultsFormat)
    testResultsFiles: ${{ parameters.testResultsFile }}
    testRunTitle: ${{ parameters.testRunTitle }}
  condition: ${{ parameters.condition }}
