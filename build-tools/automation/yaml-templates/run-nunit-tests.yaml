parameters:
  configuration: $(XA.Build.Configuration)
  xaSourcePath: $(System.DefaultWorkingDirectory)
  testRunTitle: Xamarin Android Tests
  testAssembly: ''
  testResultsFile: TestResult.xml
  nunitConsoleExtraArgs: ''
  dotNetTestExtraArgs: ''
  useDotNet: false
  workers: $(NUnit.NumberOfTestWorkers)
  condition: succeeded()

steps:
- ${{ if eq(parameters.useDotNet, false) }}:
  - powershell: |
      Write-Host '##vso[task.setvariable variable=TestResultsFormat]NUnit'
      if ([Environment]::OSVersion.Platform -eq "Unix") {
          & ${{ parameters.xaSourcePath }}/build-tools/scripts/nunit3-console ${{ parameters.testAssembly }} --result ${{ parameters.testResultsFile }} --workers=${{ parameters.workers }} ${{ parameters.nunitConsoleExtraArgs }}
      } else {
          & cmd /c '${{ parameters.xaSourcePath }}\build-tools\scripts\nunit3-console.cmd' ${{ parameters.testAssembly }} --result ${{ parameters.testResultsFile }} --workers=${{ parameters.workers }} ${{ parameters.nunitConsoleExtraArgs }}
      }
      if ($LASTEXITCODE -ne 0) {
          Write-Host "##vso[task.logissue type=error]Test suite had $LASTEXITCODE failure(s)."
          Write-Host "##vso[task.complete result=Failed;]"
          exit 0
      }
    displayName: run ${{ parameters.testRunTitle }}
    condition: ${{ parameters.condition }}
    continueOnError: true

- ${{ if eq(parameters.useDotNet, true) }}:
  - powershell: Write-Host '##vso[task.setvariable variable=TestResultsFormat]VSTest'
  - template: run-dotnet-preview.yaml
    parameters:
      configuration: ${{ parameters.configuration }}
      xaSourcePath: ${{ parameters.xaSourcePath }}
      command: test
      project: ${{ parameters.testAssembly }}
      useExitCodeForErrors: true
      arguments: >-
        --results-directory . --logger "trx;LogFileName=${{ parameters.testResultsFile }}"
        ${{ parameters.dotNetTestExtraArgs }} -- NUnit.NumberOfTestWorkers=${{ parameters.workers }}
      displayName: run ${{ parameters.testRunTitle }}
      condition: ${{ parameters.condition }}

- template: kill-processes.yaml

- task: PublishTestResults@2
  inputs:
    testResultsFormat: $(TestResultsFormat)
    testResultsFiles: ${{ parameters.testResultsFile }}
    testRunTitle: ${{ parameters.testRunTitle }}
  condition: ${{ parameters.condition }}
