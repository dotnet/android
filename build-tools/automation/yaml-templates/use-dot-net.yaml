# This template enables installing master/nighly builds of .NET 5.
# We can eventually switch back to the UseDotNet task.

parameters:
  version: $(DotNetCoreVersion)
  remove_dotnet: false

steps:

  - powershell: |
      $ErrorActionPreference = 'Stop'
      $ProgressPreference = 'SilentlyContinue'
      $DotNetRoot = "$env:ProgramFiles\dotnet\"
      if ("${{ parameters.remove_dotnet }}" -eq $true) {
        Remove-Item -Recurse $DotNetRoot -Verbose
      }
      Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
      & .\dotnet-install.ps1 -Version ${{ parameters.version }} -InstallDir $DotNetRoot -Verbose
      & dotnet --list-sdks
    displayName: install .NET Core ${{ parameters.version }}
    condition: and(succeeded(), eq(variables['agent.os'], 'Windows_NT'))

  - bash: >
      DOTNET_ROOT=~/.dotnet/ &&
      (if [[ "${{ parameters.remove_dotnet }}" == "true" ]] ; then rm -rfv $DOTNET_ROOT; fi) &&
      curl -L https://dot.net/v1/dotnet-install.sh > dotnet-install.sh &&
      sh dotnet-install.sh --version ${{ parameters.version }} --install-dir $DOTNET_ROOT --verbose &&
      PATH="$DOTNET_ROOT:$PATH" &&
      dotnet --list-sdks &&
      echo "##vso[task.setvariable variable=DOTNET_ROOT]$DOTNET_ROOT" &&
      echo "##vso[task.setvariable variable=PATH]$PATH"
    displayName: install .NET Core ${{ parameters.version }}
    condition: and(succeeded(), eq(variables['agent.os'], 'Darwin'))
