# This template enables installation of stable and main/nighly builds of .NET.
# We prefer this over the UseDotNet task so that we can always clean up old/unstable versions on disk.

parameters:
  version: $(DotNetCoreVersion)
  remove_dotnet: false

steps:

  - pwsh: |
      $ErrorActionPreference = 'Stop'
      $ProgressPreference = 'SilentlyContinue'
      $DotNetRoot = "$env:ProgramFiles\dotnet\"
      if ("${{ parameters.remove_dotnet }}" -eq $true) {
          Remove-Item -Recurse $DotNetRoot -Verbose
      }
      $currentAttempt = 1
      $totalAttempts = 5
      $sleepTime = 5
      $completed = $false
      while (-not $completed -and $currentAttempt -le $totalAttempts) {
          try {
              $response = Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1 -PassThru
              if ($response.StatusCode -ne 200) {
                  throw
              }
              $completed = $true
          } catch {
              if ($currentAttempt -eq $totalAttempts) {
                  Write-Host "Unable to download 'dotnet-install.ps1' after $currentAttempt attempts."
                  throw
              }
              Write-Host $_.Exception
              Write-Host "Retrying after $sleepTime seconds..."
              Start-Sleep $sleepTime
              $currentAttempt++
              $sleepTime = $sleepTime * 2
          }
      }
      & .\dotnet-install.ps1 -Version ${{ parameters.version }} -InstallDir $DotNetRoot -Verbose
      & dotnet --list-sdks
    displayName: install .NET Core ${{ parameters.version }}
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

  - bash: >
      DOTNET_ROOT=~/.dotnet/ &&
      (if [[ "${{ parameters.remove_dotnet }}" == "true" ]] ; then rm -rfv $DOTNET_ROOT; fi) &&
      curl -L https://dot.net/v1/dotnet-install.sh --retry 5 --retry-max-time 300 > dotnet-install.sh &&
      chmod +x dotnet-install.sh &&
      ./dotnet-install.sh --version ${{ parameters.version }} --install-dir $DOTNET_ROOT --verbose &&
      PATH="$DOTNET_ROOT:$PATH" &&
      dotnet --list-sdks &&
      echo "##vso[task.setvariable variable=DOTNET_ROOT]$DOTNET_ROOT" &&
      echo "##vso[task.setvariable variable=PATH]$PATH"
    displayName: install .NET Core ${{ parameters.version }}
    condition: and(succeeded(), ne(variables['agent.os'], 'Windows_NT'))
