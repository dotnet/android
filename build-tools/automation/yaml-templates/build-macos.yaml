parameters:
  buildResultArtifactName: Build Results - macOS
  checkoutCommit: ''
  checkoutPath: 's/xamarin-android'
  xaSourcePath: $(System.DefaultWorkingDirectory)/xamarin-android
  checkoutPersistCredentials: false
  dependsOn: ''
  dependsOnResult: ''
  installerArtifactName: $(InstallerArtifactName)
  jobName: mac_build_create_installers
  jobDisplayName: macOS > Build
  nugetArtifactName: $(NuGetArtifactName)
  repositoryAlias: self
  stageName: mac_build
  stageDisplayName: Mac
  testAssembliesArtifactName: $(TestAssembliesArtifactName)
  windowsToolchainPdbArtifactName: $(WindowsToolchainPdbArtifactName)
  use1ESTemplate: true

stages:
- stage: ${{ parameters.stageName }}
  displayName: ${{ parameters.stageDisplayName }}
  dependsOn: ${{ parameters.dependsOn }}
  ${{ if and(ne(parameters.dependsOn, ''), ne(parameters.dependsOnResult, '')) }}:
    condition: eq(dependencies.${{ parameters.dependsOn }}.result, '${{ parameters.dependsOnResult }}')
  jobs:
  # Check - "Xamarin.Android (Mac macOS > Build)"
  - job: ${{ parameters.jobName }}
    displayName: ${{ parameters.jobDisplayName }}
    pool:
      ${{ if or(eq(variables['Build.DefinitionName'], 'Xamarin.Android-PR'), eq(variables['Build.DefinitionName'], 'Xamarin.Android Nightly')) }}:
        name: VSEng-VSMac-Xamarin-Shared
        demands:
        - macOS.Name -equals Ventura
        - macOS.Architecture -equals arm64
      ${{ else }}:
        name: Azure Pipelines
        vmImage: $(HostedMacImage)
      os: macOS
    timeoutInMinutes: 240
    cancelTimeoutInMinutes: 5
    workspace:
      clean: all
    ${{ if eq(parameters.use1ESTemplate, true) }}:
      templateContext:
        outputParentDirectory: ${{ parameters.xaSourcePath }}/bin
        outputs:
        - output: pipelineArtifact
          displayName: upload nupkgs
          artifactName: ${{ parameters.nugetArtifactName }}
          targetPath: ${{ parameters.xaSourcePath }}/bin/Build$(XA.Build.Configuration)/nuget-unsigned
        - output: pipelineArtifact
          displayName: upload Windows toolchain pdb files
          artifactName: ${{ parameters.windowsToolchainPdbArtifactName }}
          targetPath: ${{ parameters.xaSourcePath }}/bin/Build$(XA.Build.Configuration)/windows-toolchain-pdb
        - output: pipelineArtifact
          displayName: upload test assemblies
          artifactName: ${{ parameters.testAssembliesArtifactName }}
          targetPath: ${{ parameters.xaSourcePath }}/bin/Test$(XA.Build.Configuration)
          sbomEnabled: false
        - output: pipelineArtifact
          displayName: upload build tools inventory
          artifactName: AndroidBuildToolsInventory
          targetPath: ${{ parameters.xaSourcePath }}/bin/Build$(XA.Build.Configuration)/buildtoolsinventory.csv
          sbomEnabled: false
    steps:
    - template: sdk-unified/steps/checkout/v1.yml@yaml-templates
      parameters:
        resource: ${{ parameters.repositoryAlias }}
        commit: ${{ parameters.checkoutCommit }}
        path: ${{ parameters.checkoutPath }}
        persistCredentials: ${{ parameters.checkoutPersistCredentials }}

    - template: /build-tools/automation/yaml-templates/commercial-build.yaml
      parameters:
        xaSourcePath: ${{ parameters.xaSourcePath }}
        installerArtifactName: ${{ parameters.installerArtifactName }}
        nugetArtifactName: ${{ parameters.nugetArtifactName }}
        testAssembliesArtifactName: ${{ parameters.testAssembliesArtifactName }}
        windowsToolchainPdbArtifactName: ${{ parameters.windowsToolchainPdbArtifactName }}
        use1ESTemplate: ${{ parameters.use1ESTemplate }}

    - template: /build-tools/automation/yaml-templates/upload-results.yaml
      parameters:
        xaSourcePath: ${{ parameters.xaSourcePath }}
        artifactName: ${{ parameters.buildResultArtifactName }}
        includeBuildResults: true
        use1ESTemplate: ${{ parameters.use1ESTemplate }}
