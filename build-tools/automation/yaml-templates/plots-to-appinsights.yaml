parameters:
  configuration: ''
  environment: Production
  buildSystem: Azure DevOps
  buildRepo: $(Build.Repository.Name)
  buildReason: $(Build.Reason)
  buildPipelineName: $(Build.DefinitionName)
  buildId: $(Build.BuildId)
  buildNumber: $(Build.BuildNumber)
  buildUrl: $(Build.BuildUri)
  buildCommit: $(Build.SourceVersion)
  plotGroup: ''
  plotTitle: ''
  plotPathAndFilename: ''
  appInsightsTelemetryKey: $(XA.Plots.AppInsightsTelemetryKey)  # Defined as a hidden variable on the Xamarin.Android CI build definition: https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms.vss-ciworkflow.build-ci-hub?_a=edit-build-definition&id=11410&view=Tab_Variables
  condition: succeeded()

steps:
- powershell: |
    Write-Host "Current directory"
    Get-Location

    Write-Host "Input parameters:"
    Write-Host "  configuration ${{ parameters.configuration }}"
    Write-Host "  environment ${{ parameters.environment }}"
    Write-Host "  buildSystem ${{ parameters.buildSystem }}"
    Write-Host "  buildRepo ${{ parameters.buildRepo }}"
    Write-Host "  buildReason ${{ parameters.buildReason }}"
    Write-Host "  buildPipelineName ${{ parameters.buildPipelineName }}"
    Write-Host "  buildId ${{ parameters.buildId }}"
    Write-Host "  buildNumber ${{ parameters.buildNumber }}"
    Write-Host "  buildUrl ${{ parameters.buildUrl }}"
    Write-Host "  buildCommit ${{ parameters.buildCommit }}"
    Write-Host "  plotGroup ${{ parameters.plotGroup }}"
    Write-Host "  plotTitle ${{ parameters.plotTitle }}"
    Write-Host "  plotPathAndFilename ${{ parameters.plotPathAndFilename }}"

    $buildReason = "${{ parameters.buildReason }}"

    # https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml#build-variables
    $buildType  = [string]::Empty
    switch ($buildReason) {
        'Manual' { $buildType = 'Manual' }
        'IndividualCI' { $buildType = 'CI' }
        'PullRequest' { $buildType = 'PR' }
        default { $buildType = 'Unknown' }
    }

    if ($buildType -eq 'CI' -Or $buildType -eq 'Manual') {
        $azureTimestampFormatUtc = 'yyyy-MM-ddTHH:mm:ss.fffffffZ'
        $buildTime = [DateTime]::UtcNow.ToString($azureTimestampFormatUtc)
        Write-Host $buildTime
        Write-Host "Sending plot telemtry"
        mono "$(System.DefaultWorkingDirectory)/build-tools/plots-to-appinsights/bin/${{ parameters.configuration }}/ProcessPlotCSVFile.exe" -d:"${buildTime}" -e:"${{ parameters.environment }}" -r:"${{ parameters.buildRepo }}" -t:"${buildType}" -p:"${{  parameters.buildPipelineName }}" -c:${{ parameters.buildCommit }} -i:${{ parameters.buildId }} -n:"${{ parameters.buildNumber }}" -u:"${{ parameters.buildUrl }}" -pg:"${{ parameters.plotGroup }}" -pt:"${{ parameters.plotTitle }}" -k:"${{ parameters.appInsightsTelemetryKey }}" "${{ parameters.plotPathAndFilename }}"
    } else {
        Write-Host "WARNING: Plot telmemetry not sent. Plot telemetry is only sent for continuous integration (CI) or manual builds. buildType: ${buildType}"
    }
  errorActionPreference: silentlyContinue
  continueOnError: true
  ignoreLASTEXITCODE: true
  displayName: 'Plots to AppInsights: ${{ parameters.plotTitle }}'
  condition: ${{ parameters.condition }}