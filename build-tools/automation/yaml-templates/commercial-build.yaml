parameters:
  installerArtifactName: $(InstallerArtifactName)
  xaSourcePath: $(System.DefaultWorkingDirectory)/xamarin-android
  makeMSBuildArgs: ''
  nugetArtifactName: $(NuGetArtifactName)
  provisionatorChannel: latest
  signClassicPkgContent: true
  testAssembliesArtifactName: $(TestAssembliesArtifactName)

steps:
- script: echo "##vso[task.setvariable variable=JI_JAVA_HOME]$HOME/android-toolchain/jdk-11"
  displayName: set JI_JAVA_HOME

- template: use-dot-net.yaml
  parameters:
    remove_dotnet: true

- task: NuGetAuthenticate@0
  displayName: authenticate with azure artifacts
  inputs:
    forceReinstallCredentialProvider: true

- task: provisionator@2
  displayName: Install Xcode
  inputs:
    github_token: $(GitHub.Token)
    provisioning_script: ${{ parameters.xaSourcePath }}/build-tools/provisioning/xcode.csx
    provisioning_extra_args: '-v -v -v -v'
  env:
    PROVISIONATOR_CHANNEL: ${{ parameters.provisionatorChannel }}

- script: make prepare-update-mono CONFIGURATION=$(XA.Build.Configuration) PREPARE_CI=1 PREPARE_AUTOPROVISION=1
  workingDirectory: ${{ parameters.xaSourcePath }}
  displayName: make prepare-update-mono

# Clone and prepare monodroid with submodules, but disregard the unused xamarin-android submodule.
- checkout: monodroid
  clean: true
  submodules: recursive
  path: s/xamarin-android/external/monodroid
  persistCredentials: true

- script: rm -rf external/monodroid/external/xamarin-android
  workingDirectory: ${{ parameters.xaSourcePath }}
  displayName: delete legacy xamarin-android submodule

- task: CodeQL3000Init@0
  displayName: CodeQL 3000 Init
  condition: and(succeeded(), eq(variables['Codeql.Enabled'], 'true'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

- script: make prepare-external-git-dependencies PREPARE_CI=1 CONFIGURATION=$(XA.Build.Configuration)
  workingDirectory: ${{ parameters.xaSourcePath }}
  displayName: make prepare-external-git-dependencies

# Prepare and Build everything
- script: make jenkins CONFIGURATION=$(XA.Build.Configuration) PREPARE_CI=1 PREPARE_AUTOPROVISION=1 MSBUILD_ARGS='${{ parameters.makeMSBuildArgs }}'
  workingDirectory: ${{ parameters.xaSourcePath }}
  displayName: make jenkins

- task: CodeQL3000Finalize@0
  displayName: CodeQL 3000 Finalize
  condition: and(succeededOrFailed(), eq(variables['Codeql.Enabled'], 'true'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

# Build test assemblies
- script: make all-tests CONFIGURATION=$(XA.Build.Configuration)
  workingDirectory: ${{ parameters.xaSourcePath }}
  displayName: make all-tests

- script: make create-installers CONFIGURATION=$(XA.Build.Configuration) MSBUILD_ARGS='${{ parameters.makeMSBuildArgs }}'
  workingDirectory: ${{ parameters.xaSourcePath }}
  displayName: make create-installers

- task: PublishPipelineArtifact@1
  displayName: upload nupkgs
  inputs:
    artifactName: ${{ parameters.nugetArtifactName }}
    targetPath: ${{ parameters.xaSourcePath }}/bin/Build$(XA.Build.Configuration)/nuget-unsigned

- task: PublishPipelineArtifact@1
  displayName: upload test assemblies
  inputs:
    artifactName: ${{ parameters.testAssembliesArtifactName }}
    targetPath: ${{ parameters.xaSourcePath }}/bin/Test$(XA.Build.Configuration)

- task: PublishPipelineArtifact@1
  displayName: upload build tools inventory
  inputs:
    artifactName: AndroidBuildToolsInventory
    targetPath:  ${{ parameters.xaSourcePath }}/bin/Build$(XA.Build.Configuration)/buildtoolsinventory.csv
