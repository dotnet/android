parameters:
  buildResultArtifactName: Build Results - Windows
  checkoutCommit: ''
  checkoutPath: ''
  checkoutPersistCredentials: false
  dependsOn: ''
  dependsOnResult: ''
  jobName: win_build_test
  jobDisplayName: Windows > Build & Smoke Test
  repositoryAlias: self
  stageName: win_build_test
  stageDisplayName: Windows

# This stage ensures Windows specific build steps continue to work, and runs unit tests.
stages:
- stage: ${{ parameters.stageName }}
  displayName: ${{ parameters.stageDisplayName }}
  dependsOn: ${{ parameters.dependsOn }}
  ${{ if and(ne(parameters.dependsOn, ''), ne(parameters.dependsOnResult, '')) }}:
    condition: eq(dependencies.${{ parameters.dependsOn }}.result, '${{ parameters.dependsOnResult }}')
  jobs:
  # Check - "Xamarin.Android (Windows Windows > Build & Smoke Test)"
  - job: ${{ parameters.jobName }}
    displayName: ${{ parameters.jobDisplayName }}
    pool:
      name: MAUI-1ESPT
      image: $(WindowsPoolImage1ESPT)
      os: windows
    timeoutInMinutes: 240
    steps:
    - template: sdk-unified/steps/checkout/v1.yml@yaml-templates
      parameters:
        resource: ${{ parameters.repositoryAlias }}
        commit: ${{ parameters.checkoutCommit }}
        path: ${{ parameters.checkoutPath }}
        persistCredentials: ${{ parameters.checkoutPersistCredentials }}

    - template: /build-tools/automation/yaml-templates/kill-processes.yaml

    - template: /build-tools/automation/yaml-templates/clean.yaml

    - script: |
        echo ##vso[task.setvariable variable=JI_JAVA_HOME]%JAVA_HOME_17_X64%
      displayName: set JI_JAVA_HOME to $(JAVA_HOME_17_X64)

    - template: /build-tools/automation/yaml-templates/use-dot-net.yaml
      parameters:
        remove_dotnet: true

    - task: DotNetCoreCLI@2
      displayName: Prepare Solution
      inputs:
        projects: Xamarin.Android.sln
        arguments: '-c $(XA.Build.Configuration) -t:Prepare --no-restore -p:AutoProvision=true -bl:$(System.DefaultWorkingDirectory)\bin\Build$(XA.Build.Configuration)\dotnet-build-prepare.binlog'

    # Build Xamarin.Android and configure local workloads to test improved local build loop
    - template: /build-tools/automation/yaml-templates/run-dotnet-preview.yaml
      parameters:
        project: Xamarin.Android.sln
        arguments: >-
          -t:BuildDotNet -c $(XA.Build.Configuration) -v:n
          -bl:$(System.DefaultWorkingDirectory)\bin\Build$(XA.Build.Configuration)\dotnet-build.binlog
        displayName: Build Solution
        continueOnError: false

    - template: /build-tools/automation/yaml-templates/run-dotnet-preview.yaml
      parameters:
        project: build-tools/create-packs/Microsoft.Android.Sdk.proj
        arguments: >-
          -t:ConfigureLocalWorkload -c $(XA.Build.Configuration) -v:n -p:RunningOnCI=false
          -bl:$(System.DefaultWorkingDirectory)\bin\Build$(XA.Build.Configuration)\local-workload.binlog
        displayName: Run ConfigureLocalWorkload target
        continueOnError: false

    - template: /build-tools/automation/yaml-templates/install-dotnet-tool.yaml
      parameters:
        toolName: apkdiff
        version: $(ApkDiffToolVersion)

    - template: /build-tools/automation/yaml-templates/run-nunit-tests.yaml
      parameters:
        testRunTitle: Smoke MSBuild Tests - Windows Dotnet Build
        testAssembly: $(System.DefaultWorkingDirectory)\bin\Test$(XA.Build.Configuration)\$(DotNetStableTargetFramework)\Xamarin.Android.Build.Tests.dll
        dotNetTestExtraArgs: --filter "TestCategory = SmokeTests"

    - template: /build-tools/automation/yaml-templates/run-dotnet-preview.yaml@self
      parameters:
        command: test
        project: src/Microsoft.Android.Sdk.Analysis/Tests/Microsoft.Android.Sdk.Analysis.Tests.csproj 
        arguments: -c $(XA.Build.Configuration)
        displayName: Test Microsoft.Android.Sdk.Analysis $(XA.Build.Configuration)
        continueOnError: false

    - task: BatchScript@1
      displayName: Test dotnet-local.cmd - create template
      inputs:
        filename: dotnet-local.cmd
        arguments: new android -o $(Build.StagingDirectory)/LocalWorkloadTest

    - task: BatchScript@1
      displayName: Test dotnet-local.cmd - build template
      inputs:
        filename: dotnet-local.cmd
        arguments: build -v:n $(Build.StagingDirectory)/LocalWorkloadTest

    # Pack .nupkgs and extract workload packs to dotnet preview test directory
    - template: /build-tools/automation/yaml-templates/run-dotnet-preview.yaml
      parameters:
        project: Xamarin.Android.sln
        arguments: >-
          -t:PackDotNet -c $(XA.Build.Configuration) -v:n
          -bl:$(System.DefaultWorkingDirectory)\bin\Build$(XA.Build.Configuration)\dotnet-pack.binlog
        displayName: Test PackDotNet

    - template: /build-tools/automation/yaml-templates/upload-results.yaml
      parameters:
        artifactName: ${{ parameters.buildResultArtifactName }}
        includeBuildResults: true

    - template: /build-tools/automation/yaml-templates/fail-on-issue.yaml
