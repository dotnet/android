parameters:
  configuration: $(XA.Build.Configuration)
  provisionExtraArgs: -vv -f

steps:
- checkout: self
  clean: true
  submodules: recursive

- template: run-installer.yaml
  parameters:
    provisionExtraArgs: ${{ parameters.provisionExtraArgs }}

- task: UseDotNet@2
  displayName: install .NET Core $(DotNetCorePreviewVersion)
  inputs:
    version: $(DotNetCorePreviewVersion)

- task: UseDotNet@2
  displayName: install .NET Core $(DotNetCoreVersion)
  inputs:
    version: $(DotNetCoreVersion)

- script: |
    dotnet tool install --global boots
  displayName: install boots
  condition: and(succeeded(), eq(variables['agent.os'], 'Darwin'))

- script: |
    export PATH="$PATH:/Users/runner/.dotnet/tools"
    boots https://download.mono-project.com/archive/6.8.0/macos-10-universal/MonoFramework-MDK-6.8.0.105.macos10.xamarin.universal.pkg
  displayName: update Mono to version 6.x
  condition: and(succeeded(), eq(variables['agent.os'], 'Darwin'))

- task: MSBuild@1
  displayName: build xaprepare
  inputs:
    solution: build-tools/xaprepare/xaprepare.sln
    configuration: ${{ parameters.configuration }}
    msbuildArguments: /restore

- script: |
    mono build-tools/xaprepare/xaprepare/bin/${{ parameters.configuration }}/xaprepare.exe --s=UpdateMono --auto-provision=yes --auto-provision-uses-sudo=yes --no-emoji --run-mode=CI
    mono build-tools/xaprepare/xaprepare/bin/${{ parameters.configuration }}/xaprepare.exe --s=Required --auto-provision=yes --auto-provision-uses-sudo=yes --no-emoji --run-mode=CI
    mono build-tools/xaprepare/xaprepare/bin/${{ parameters.configuration }}/xaprepare.exe --s=AndroidToolchain --no-emoji --run-mode=CI
  displayName: install test dependencies
  condition: and(succeeded(), eq(variables['agent.os'], 'Darwin'))

- script: |
    $(System.DefaultWorkingDirectory)\build-tools\xaprepare\xaprepare\bin\${{ parameters.configuration }}\xaprepare.exe --s=Required --auto-provision=yes --no-emoji --run-mode=CI
    $(System.DefaultWorkingDirectory)\build-tools\xaprepare\xaprepare\bin\${{ parameters.configuration }}\xaprepare.exe --s=AndroidToolchain --no-emoji --run-mode=CI
  displayName: install test dependencies
  condition: and(succeeded(), eq(variables['agent.os'], 'Windows_NT'))

# Restore solutions for Xamarin.Android.Tools.sln, Xamarin.Android.sln, and Xamarin.Android-Tests.sln
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: 5.x

- task: NuGetCommand@2
  displayName: nuget restore Xamarin.Android.Build.Tasks.sln
  inputs:
    command: custom
    arguments: restore Xamarin.Android.Build.Tasks.sln -ConfigFile NuGet.config

- task: NuGetCommand@2
  displayName: nuget restore Xamarin.Android-Tests.sln
  inputs:
    command: custom
    arguments: restore Xamarin.Android-Tests.sln -ConfigFile NuGet.config

- task: MSBuild@1
  displayName: build Xamarin.Android.Tools.BootstrapTasks.csproj
  inputs:
    solution: build-tools/xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj
    configuration: ${{ parameters.configuration }}
    msbuildArguments: /restore /bl:$(System.DefaultWorkingDirectory)/bin/Test${{ parameters.configuration }}/BootstrapTasks.binlog
