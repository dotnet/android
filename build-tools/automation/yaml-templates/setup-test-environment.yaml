parameters:
  configuration: $(XA.Build.Configuration)
  provisionExtraArgs: -vv -f
  xaSourcePath: $(System.DefaultWorkingDirectory)
  updateVS: false

steps:
- checkout: self
  clean: true
  submodules: recursive

- ${{ if eq(parameters.updateVS, true) }}:
  - template: update-vs.yaml
    parameters: 
      xasourcePath: ${{ parameters.xaSourcePath }}

- template: run-installer.yaml
  parameters:
    provisionExtraArgs: ${{ parameters.provisionExtraArgs }}

- script: echo "##vso[task.setvariable variable=JI_JAVA_HOME]$HOME/Library/Android/$(XA.Jdk11.Folder)"
  displayName: set JI_JAVA_HOME
  condition: and(succeeded(), eq(variables['agent.os'], 'Darwin'))

- script: |
    echo ##vso[task.setvariable variable=JI_JAVA_HOME]%USERPROFILE%\android-toolchain\$(XA.Jdk11.Folder)
  displayName: set JI_JAVA_HOME
  condition: and(succeeded(), eq(variables['agent.os'], 'Windows_NT'))

- template: use-dot-net.yaml
  parameters:
    version: $(DotNet5Version)
    remove_dotnet: true

- template: use-dot-net.yaml
  parameters:
    version: $(DotNetCoreVersion)

- script: |
    dotnet tool install --global boots
  displayName: install boots
  condition: and(succeeded(), eq(variables['agent.os'], 'Darwin'))

- script: |
    export PATH="$PATH:/Users/runner/.dotnet/tools"
    boots https://download.mono-project.com/archive/6.8.0/macos-10-universal/MonoFramework-MDK-6.8.0.105.macos10.xamarin.universal.pkg
  displayName: update Mono to version 6.x
  condition: and(succeeded(), eq(variables['agent.os'], 'Darwin'))

- task: MSBuild@1
  displayName: build xaprepare
  inputs:
    solution: ${{ parameters.xaSourcePath }}/build-tools/xaprepare/xaprepare.sln
    configuration: ${{ parameters.configuration }}
    msbuildArguments: /restore

- script: >
    mono ${{ parameters.xaSourcePath }}/build-tools/xaprepare/xaprepare/bin/${{ parameters.configuration }}/xaprepare.exe --s=UpdateMono --auto-provision=yes --auto-provision-uses-sudo=yes --no-emoji --run-mode=CI &&
    mono ${{ parameters.xaSourcePath }}/build-tools/xaprepare/xaprepare/bin/${{ parameters.configuration }}/xaprepare.exe --s=AndroidTestDependencies --no-emoji --run-mode=CI
  displayName: install test dependencies
  condition: and(succeeded(), eq(variables['agent.os'], 'Darwin'))

- script: >
    ${{ parameters.xaSourcePath }}\build-tools\xaprepare\xaprepare\bin\${{ parameters.configuration }}\xaprepare.exe --s=AndroidTestDependencies --no-emoji --run-mode=CI
  displayName: install test dependencies
  condition: and(succeeded(), eq(variables['agent.os'], 'Windows_NT'))

# Restore solutions for Xamarin.Android.Tools.sln, Xamarin.Android.sln, and Xamarin.Android-Tests.sln
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: 5.x

- task: NuGetCommand@2
  displayName: nuget restore Xamarin.Android.Build.Tasks.sln
  inputs:
    command: custom
    arguments: restore ${{ parameters.xaSourcePath }}/Xamarin.Android.Build.Tasks.sln -ConfigFile ${{ parameters.xaSourcePath }}/NuGet.config -Verbosity detailed

- task: NuGetCommand@2
  displayName: nuget restore Xamarin.Android-Tests.sln
  inputs:
    command: custom
    arguments: restore ${{ parameters.xaSourcePath }}/Xamarin.Android-Tests.sln -ConfigFile ${{ parameters.xaSourcePath }}/NuGet.config -Verbosity detailed

- task: MSBuild@1
  displayName: build Xamarin.Android.Tools.BootstrapTasks.csproj
  inputs:
    solution: ${{ parameters.xaSourcePath }}/build-tools/xamarin.Android.Tools.BootstrapTasks/Xamarin.Android.Tools.BootstrapTasks.csproj
    configuration: ${{ parameters.configuration }}
    msbuildArguments: /restore /bl:${{ parameters.xaSourcePath }}/bin/Test${{ parameters.configuration }}/BootstrapTasks.binlog

# Download and install .NET nupkgs
- task: DownloadPipelineArtifact@2
  inputs:
    artifactName: $(NuGetArtifactName)
    downloadPath: ${{ parameters.xaSourcePath }}/bin/Build${{ parameters.configuration }}/$(NuGetArtifactName)

- task: MSBuild@1
  displayName: extract workload packs
  inputs:
    solution: ${{ parameters.xaSourcePath }}/build-tools/create-packs/Microsoft.Android.Sdk.proj
    configuration: ${{ parameters.configuration }}
    msbuildArguments: /t:ExtractWorkloadPacks /bl:${{ parameters.xaSourcePath }}/bin/Test${{ parameters.configuration }}/extract-workloads.binlog
