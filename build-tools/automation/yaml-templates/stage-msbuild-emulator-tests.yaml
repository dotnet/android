# Runs MSBuild tests against a device running on macOS

parameters:
  job_name: 'mac_dotnetdevice_tests'
  agent_count: 6
  nunit_categories: $(DotNetNUnitCategories)
  target_framework: $(DotNetStableTargetFramework)
  provisionatorChannel: latest
  stageCondition: succeeded()
  jobCondition: succeeded()

stages:
- stage: msbuilddevice_tests
  displayName: MSBuild Emulator Tests
  dependsOn: mac_build
  condition: ${{ parameters.stageCondition }}
  jobs:
  - job: ${{ parameters.job_name }}
    strategy:
      parallel: ${{ parameters.agent_count }}
    displayName: "macOS > Tests > MSBuild+Emulator"
    condition: ${{ parameters.jobCondition }}
    pool:
      vmImage: $(HostedMacImage)
    timeoutInMinutes: 90
    cancelTimeoutInMinutes: 5
    workspace:
      clean: all
    steps:
    - template: setup-test-environment.yaml
      parameters:
        provisionClassic: false
        provisionatorChannel: ${{ parameters.provisionatorChannel }}
        installTestSlicer: true

    - template: run-xaprepare.yaml
      parameters:
        displayName: install emulator
        arguments: --s=EmulatorTestDependencies --android-sdk-platforms="19,21,26,32,33"
        
    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: $(TestAssembliesArtifactName)
        downloadPath: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)

    - pwsh: |
        dotnet-test-slicer `
          --test-assembly="$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/${{ parameters.target_framework }}/MSBuildDeviceIntegration.dll" `
          --test-filter="cat != TimeZoneInfo & cat != Localization ${{ parameters.nunit_categories }}" `
          --slice-number=$(System.JobPositionInPhase) `
          --total-slices=$(System.TotalJobsInPhase) `
          --outfile="$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/${{ parameters.target_framework }}/MSBuildDeviceIntegration.runsettings"
      displayName: Slice unit tests
      
    - task: MSBuild@1
      displayName: start emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: /t:AcquireAndroidTarget /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/start-emulator.binlog

    - template: run-nunit-tests.yaml
      parameters:
        useDotNet: true
        testRunTitle: MSBuildDeviceIntegration On Device - macOS-$(System.JobPositionInPhase)
        testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/${{ parameters.target_framework }}/MSBuildDeviceIntegration.dll
        dotNetTestExtraArgs: --settings "$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/${{ parameters.target_framework }}/MSBuildDeviceIntegration.runsettings"
        testResultsFile: TestResult-MSBuildDeviceIntegration-${{ parameters.job_name }}-$(System.JobPositionInPhase)-$(XA.Build.Configuration).xml

    - task: MSBuild@1
      displayName: shut down emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: >-
          /t:AcquireAndroidTarget,ReleaseAndroidTarget
          /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/shutdown-emulator.binlog
      condition: always()

    - template: upload-results.yaml
      parameters:
        artifactName: Test Results - MSBuild With Emulator - macOS-$(System.JobPositionInPhase)

    - template: fail-on-issue.yaml

  - job: wear_tests
    displayName: macOS > Tests > WearOS 
    timeoutInMinutes: 180
    cancelTimeoutInMinutes: 2
    strategy:
      matrix:
        Android30-x86:
          avdApiLevel: 30
          avdAbi: x86
          avdType: android-wear
          deviceName: wear_square
    pool:
      vmImage: $(HostedMacImage)
    workspace:
      clean: all
    steps:
    - template: setup-test-environment.yaml
      parameters:
        configuration: $(XA.Build.Configuration)

    - template: run-xaprepare.yaml
      parameters:
        displayName: install required brew tools and prepare java.interop
        arguments: --s=Required --auto-provision=yes --auto-provision-uses-sudo=yes

    - template: run-xaprepare.yaml
      parameters:
        displayName: install emulator
        arguments: --s=EmulatorTestDependencies

    - script: echo "##vso[task.setvariable variable=Java8SdkDirectory]$JAVA_HOME_8_X64"
      displayName: set Java8SdkDirectory

    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: $(TestAssembliesArtifactName)
        downloadPath: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)

    - task: MSBuild@1
      displayName: install and launch emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: /t:InstallAvdImage;AcquireAndroidTarget /p:TestDeviceName=$(deviceName) /p:TestAvdApiLevel=$(avdApiLevel) /p:TestAvdAbi=$(avdAbi) /p:TestAvdType=$(avdType) /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/install-emulator-$(avdApiLevel).binlog

    - template: run-nunit-tests.yaml
      parameters:
        testRunTitle: WearOS On Device - macOS
        testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
        dotNetTestExtraArgs: --filter "TestCategory = WearOS"
        testResultsFile: TestResult-WearOS--$(XA.Build.Configuration).xml

    - task: MSBuild@1
      displayName: shut down emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: /t:AcquireAndroidTarget,ReleaseAndroidTarget /p:TestDeviceName=$(deviceName) /p:TestAvdApiLevel=$(avdApiLevel) /p:TestAvdAbi=$(avdAbi) /p:TestAvdType=$(avdType) /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/shutdown-emulator.binlog
      condition: always()

    - template: upload-results.yaml
      parameters:
        configuration: $(XA.Build.Configuration)
        artifactName: Test Results - Emulator $(avdApiLevel)-$(avdAbi)-$(avdType) - macOS

    - template: fail-on-issue.yaml

