# Runs MSBuild tests against a device running on Windows

parameters:
  node_id: 0                           # Corresponds to [Category ("Node-X")] test attribute
  additional_node_id: 0                # Additional "Node-X" to run
  job_name: ''
  job_suffix: ''
  nunit_categories: ''
  target_framework: 'net472'
  dotnet_targetframework: $(DotNetStableTargetFramework)
  run_extra_tests: false
  provisionatorChannel: latest

jobs:
  - job: ${{ parameters.job_name }}
    displayName: MSBuild ${{ parameters.job_suffix }} - Windows-${{ parameters.node_id }}/${{ parameters.additional_node_id }}
    pool: $(1ESWindowsPool)
    timeoutInMinutes: 180
    cancelTimeoutInMinutes: 5
    variables:
      VSINSTALLDIR: C:\Program Files\Microsoft Visual Studio\2022\Enterprise
    steps:
    - script: netsh int ipv4 set global sourceroutingbehavior=drop

    - template: kill-processes.yaml

    - template: clean.yaml

    - template: setup-test-environment.yaml
      parameters:
        provisionatorChannel: ${{ parameters.provisionatorChannel }}
        remove_dotnet: true

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: $(TestAssembliesArtifactName)
        downloadPath: $(System.DefaultWorkingDirectory)\bin\Test$(XA.Build.Configuration)

    # Limit the amount of worker threads used to run these tests in parallel to half of what is currently available (8) on the Windows pool.
    # Using all available cores seems to occasionally bog down our machines and cause parallel test execution to slow down dramatically.
    - template: run-nunit-tests.yaml
      parameters:
        useDotNet: ${{ eq(parameters.target_framework, parameters.dotnet_targetframework) }}
        testRunTitle: Xamarin.Android.Build.Tests - Windows-${{ parameters.node_id }}/${{ parameters.additional_node_id }} - ${{ parameters.job_suffix }}
        testAssembly: $(System.DefaultWorkingDirectory)\bin\Test$(XA.Build.Configuration)\${{ parameters.target_framework }}\Xamarin.Android.Build.Tests.dll
        nunitConsoleExtraArgs: --where "(cat == Node-${{ parameters.node_id }} or cat == Node-${{ parameters.additional_node_id }}) ${{ parameters.nunit_categories }}"
        dotNetTestExtraArgs: --filter "(TestCategory = Node-${{ parameters.node_id }} | TestCategory = Node-${{ parameters.additional_node_id }}) ${{ parameters.nunit_categories }}"
        testResultsFile: TestResult-MSBuildTests-${{ parameters.job_name }}-$(XA.Build.Configuration).xml

    # Tests with no "Node" category. This should be empty, but just in case! Only run these tests on node 2
    - ${{ if eq(parameters.run_extra_tests, true) }}:
      - template: run-nunit-tests.yaml
        parameters:
          useDotNet: ${{ eq(parameters.target_framework, parameters.dotnet_targetframework) }}
          testRunTitle: Xamarin.Android.Build.Tests - Windows - No Node
          testAssembly: $(System.DefaultWorkingDirectory)\bin\Test$(XA.Build.Configuration)\${{ parameters.target_framework }}\Xamarin.Android.Build.Tests.dll
          nunitConsoleExtraArgs: --where "cat != Node-1 && cat != Node-2 && cat != Node-3 && cat != Node-4 && cat != Node-5 && cat != Node-6"
          dotNetTestExtraArgs: --filter "TestCategory != Node-1 & TestCategory != Node-2 & TestCategory != Node-3 & TestCategory != Node-4 & TestCategory != Node-5 & TestCategory != Node-6"
          testResultsFile: TestResult-MSBuildTests-Windows-NoNode-$(XA.Build.Configuration).xml

    # Only run these tests on node 2
    - ${{ if eq(parameters.run_extra_tests, true) }}:
      - template: run-nunit-tests.yaml
        parameters:
          useDotNet: ${{ eq(parameters.target_framework, parameters.dotnet_targetframework) }}
          testRunTitle: Xamarin.Android.Tools.Aidl-Tests - Windows
          testAssembly: $(System.DefaultWorkingDirectory)\bin\Test$(XA.Build.Configuration)\${{ parameters.target_framework }}\Xamarin.Android.Tools.Aidl-Tests.dll
          testResultsFile: TestResult-Aidl-Tests-Windows-$(XA.Build.Configuration).xml

    - template: upload-results.yaml
      parameters:
        artifactName: Test Results - MSBuild ${{ parameters.job_suffix }} - Windows-${{ parameters.node_id }}

    - template: fail-on-issue.yaml
