# Runs MSBuild tests against a device running on Windows

parameters:
  node_id: 0
  job_name: ''
  job_suffix: ''
  nunit_categories: ''
  nunit_extra: ''
  run_extra_tests: false

jobs:
  - job: ${{ parameters.job_name }}
    displayName: MSBuild - Windows-${{ parameters.node_id }} - ${{ parameters.job_suffix }}
    pool: $(VSEngWinVS2019)
    timeoutInMinutes: 180
    cancelTimeoutInMinutes: 5
    variables:
      VSINSTALLDIR: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise
    steps:

    - template: kill-processes.yaml

    - template: clean.yaml

    - template: environment/win/vs-msbuild.v1.yml@yaml   # Display (in log) VS installation(s) including installation status with associated MSBuild location(s)

    - template: setup-test-environment.yaml
      parameters:
        provisionExtraArgs: -vv PROVISIONATOR_VISUALSTUDIO_LOCATION="$(VSINSTALLDIR)" -f

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: $(TestAssembliesArtifactName)
        downloadPath: $(System.DefaultWorkingDirectory)\bin\Test$(XA.Build.Configuration)

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: $(NuGetArtifactName)
        downloadPath: $(System.DefaultWorkingDirectory)\bin\Build$(XA.Build.Configuration)\$(NuGetArtifactName)

    # Limit the amount of worker threads used to run these tests in parallel to half of what is currently available (8) on the Windows pool.
    # Using all available cores seems to occasionally bog down our machines and cause parallel test execution to slow down dramatically.
    - template: run-nunit-tests.yaml
      parameters:
        testRunTitle: Xamarin.Android.Build.Tests - Windows-${{ parameters.node_id }} - ${{ parameters.job_suffix }}
        testAssembly: $(System.DefaultWorkingDirectory)\bin\Test$(XA.Build.Configuration)\Xamarin.Android.Build.Tests.dll
        nunitConsoleExtraArgs: --workers=4 --where "cat == Node-${{ parameters.node_id }} ${{ parameters.nunit_categories }}" ${{ parameters.nunit_extra }}
        testResultsFile: TestResult-MSBuildTests-${{ parameters.job_name }}-$(XA.Build.Configuration).xml

    # Only run these tests on node 2
    - ${{ if eq(parameters.run_extra_tests, true) }}:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: Xamarin.Android.Build.Tests.Commercial - Windows
          testAssembly: $(System.DefaultWorkingDirectory)\bin\Test$(XA.Build.Configuration)\Xamarin.Android.Build.Tests.Commercial.dll
          testResultsFile: TestResult-MSBuildTestsCommercial-Windows-$(XA.Build.Configuration).xml
          
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: Xamarin.Android.Build.Tests - Windows - No Node
          testAssembly: $(System.DefaultWorkingDirectory)\bin\Test$(XA.Build.Configuration)\Xamarin.Android.Build.Tests.dll
          nunitConsoleExtraArgs: --workers=4 --where "cat != Node-1 && cat != Node-2 && cat != Node-3"
          testResultsFile: TestResult-MSBuildTests-Windows-NoNode-$(XA.Build.Configuration).xml

    - template: upload-results.yaml
      parameters:
        artifactName: Test Results - MSBuild - Windows-${{ parameters.node_id }} - ${{ parameters.job_suffix }}

    - template: fail-on-issue.yaml
