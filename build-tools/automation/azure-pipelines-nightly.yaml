# Xamarin.Android Nightly Pipeline

name: $(Build.SourceBranchName)-$(Build.SourceVersion)-$(Rev:r)

trigger:
  - none

pr:
  - none

# External sources, scripts, tests, and yaml template files.
resources:
  repositories:
  - repository: yaml-templates
    type: github
    name: xamarin/yaml-templates
    ref: refs/heads/main
    endpoint: xamarin
  - repository: monodroid
    type: github
    name: xamarin/monodroid
    endpoint: xamarin
  - repository: uitools
    type: github
    name: xamarin/UITools
    ref: refs/heads/main
    endpoint: xamarin

parameters:
- name: provisionatorChannel
  type: string
  default: latest           # Support for launching a build against a Provisionator PR (e.g., pr/[github-account-name]/[pr-number]) as a means to test in-progress Provisionator changes

# Global variables
variables:
- template: yaml-templates/variables.yaml

stages:
- stage: mac_build
  displayName: Build
  dependsOn: []
  jobs:
  - job: mac_build_create_installers
    displayName: macOS > Create Installers
    pool:
      name: VSEng-VSMac-Xamarin-Shared
      demands:
      - macOS.Name -equals Ventura
      - macOS.Architecture -equals x64
    timeoutInMinutes: 420
    workspace:
      clean: all
    variables:
      - group: Xamarin-Secrets
      - group: Xamarin Signing
      - group: xamops-azdev-secrets
      - name: Codeql.Enabled
        value: true
    steps:
    - checkout: self
      submodules: recursive

    - template: yaml-templates/commercial-build.yaml
      parameters:
        makeMSBuildArgs: /p:EnableRoslynAnalyzers=true /p:EnableNativeAnalyzers=true

    - template: yaml-templates/upload-results.yaml
      parameters:
        xaSourcePath: $(System.DefaultWorkingDirectory)/xamarin-android
        artifactName: Build Results - Nightly macOS
        includeBuildResults: true

- stage: designer_tests
  displayName: Designer Tests
  dependsOn: mac_build
  variables:
    - group: Xamarin-Secrets
    - group: xamops-azdev-secrets
  jobs:
  # Check - "Xamarin.Android (macOS > Tests > Designer Integration)"
  - job: designer_integration_mac
    condition: false #TODO: Enable once test issues are fixed.
    displayName: macOS > Tests > Designer Integration
    pool:
      vmImage: $(HostedMacImage)
    timeoutInMinutes: 120
    cancelTimeoutInMinutes: 5
    workspace:
      clean: all
    variables:
      EnableRegressionTest: true
    steps:
    - checkout: uitools
      clean: true
      submodules: recursive
      path: s/UITools
      persistCredentials: true

    - powershell: |
        # Use the branch name of the source being built or the PR target branch name. Fall back to 'main' if the branch is unknown.
        $branchName = "main"
        Set-Location -Path $(System.DefaultWorkingDirectory)/UITools
        git checkout $branchName
        git submodule update -q --init --recursive
      displayName: Clone and update UITools

    - task: NuGetAuthenticate@0
      displayName: authenticate with azure artifacts
      inputs:
        forceReinstallCredentialProvider: true

    - task: provisionator@2
      displayName: provision designer dependencies
      inputs:
        github_token: $(GitHub.Token)
        provisioning_script: $(System.DefaultWorkingDirectory)/UITools/src/bot-provisioning/dependencies.csx
        provisioning_extra_args: -remove Xamarin.Android -vv DEVDIV_PKGS_NUGET_TOKEN=$(DevDiv.NuGet.Token) SECTOOLS_PKGS_NUGET_TOKEN=$(SecTools.NuGet.Token)
      env:
        PROVISIONATOR_CHANNEL: ${{ parameters.provisionatorChannel }}

    - template: yaml-templates/setup-test-environment.yaml
      parameters:
        xaSourcePath: $(System.DefaultWorkingDirectory)/xamarin-android
        jdkTestFolder: $(JAVA_HOME_8_X64)
        provisionatorChannel: ${{ parameters.provisionatorChannel }}

    - template: designer/android-designer-build-mac.yaml@yaml-templates
      parameters:
        designerSourcePath: $(System.DefaultWorkingDirectory)/UITools/src

    - template: designer/android-designer-tests.yaml@yaml-templates
      parameters:
        designerSourcePath: $(System.DefaultWorkingDirectory)/UITools/src
        runAddinTests: false

    - task: CopyFiles@2
      displayName: 'Copy binlogs'
      inputs:
        sourceFolder: $(System.DefaultWorkingDirectory)/UITools/src/Xamarin.Designer.Android
        contents: '**/*.binlog'
        targetFolder: $(Build.ArtifactStagingDirectory)/designer-binlogs
        overWrite: true
        flattenFolders: true
      condition: ne(variables['Agent.JobStatus'], 'Succeeded')

    - template: yaml-templates/publish-artifact.yaml
      parameters:
        displayName: upload designer binlogs
        artifactName: Test Results - Designer - macOS
        targetPath: $(Build.ArtifactStagingDirectory)/designer-binlogs
        condition: ne(variables['Agent.JobStatus'], 'Succeeded')

  # Check - "Xamarin.Android (Windows > Tests > Designer Integration)"
  - job: designer_integration_win
    displayName: Windows > Tests > Designer Integration
    pool:
      vmImage: $(HostedWinImage)
    timeoutInMinutes: 120
    cancelTimeoutInMinutes: 5
    workspace:
      clean: all
    variables:
      EnableRegressionTest: true
      RegressionTestSuiteOutputDir: C:\Git\ADesRegTestSuite
      VisualStudioInstallationPath: C:\Program Files\Microsoft Visual Studio\2022\Enterprise
    steps:
    - checkout: uitools
      clean: true
      submodules: recursive
      path: s\UITools
      persistCredentials: true

    - powershell: |
        # Use the branch name of the source being built or the PR target branch name. Fall back to 'main' if the branch is unknown.
        $branchName = "main"
        Set-Location -Path $(System.DefaultWorkingDirectory)\UITools
        git checkout $branchName
        git submodule update -q --init --recursive
      displayName: Clone and update UITools

    - task: NuGetAuthenticate@0
      displayName: authenticate with azure artifacts
      inputs:
        forceReinstallCredentialProvider: true

    - task: provisionator@2
      displayName: provision designer dependencies
      inputs:
        github_token: $(GitHub.Token)
        provisioning_script: $(System.DefaultWorkingDirectory)\UITools\src\bot-provisioning\dependencies.csx
        provisioning_extra_args: -vv DEVDIV_PKGS_NUGET_TOKEN=$(DevDiv.NuGet.Token) SECTOOLS_PKGS_NUGET_TOKEN=$(SecTools.NuGet.Token)
      env:
        PROVISIONATOR_CHANNEL: ${{ parameters.provisionatorChannel }}

    - template: yaml-templates\setup-test-environment.yaml
      parameters:
        xaSourcePath: $(System.DefaultWorkingDirectory)\xamarin-android
        jdkTestFolder: $(JAVA_HOME_8_X64)
        provisionatorChannel: ${{ parameters.provisionatorChannel }}

    - task: VSBuild@1
      displayName: Restore Xamarin.AndroidDesigner
      inputs:
        solution: $(System.DefaultWorkingDirectory)\UITools\src\Xamarin.Designer.Android\Xamarin.AndroidDesigner.sln
        vsVersion: 17.0
        msbuildArgs: >-
          /t:Restore /p:RestoreDisableParallel=true
          /p:RestoreConfigFile="$(System.DefaultWorkingDirectory)\UITools\NuGet.Config"
          /p:JavaSdkDirectory="$(JAVA_HOME_8_X64)"
        platform: Any CPU
        configuration: DebugWin32

    - task: VSBuild@1
      displayName: Build Xamarin.AndroidDesigner
      inputs:
        solution: $(System.DefaultWorkingDirectory)\UITools\src\Xamarin.Designer.Android\Xamarin.AndroidDesigner.sln
        vsVersion: 17.0
        msbuildArgs: /t:Build /p:GitHubToken=$(GitHub.Token)
        platform: Any CPU
        configuration: DebugWin32

    - template: yaml-templates/run-designer-tests.yml
      parameters:
        designerSourcePath: $(System.DefaultWorkingDirectory)\UITools\src

- stage: test
  displayName: Test
  dependsOn: mac_build
  variables:
    - group: Xamarin-Secrets
    - group: xamops-azdev-secrets
  jobs:
  - job: emulator_tests
    displayName: macOS > Tests > APKs (Emulator)
    timeoutInMinutes: 180
    strategy:
      matrix:
        Android21-x86:
          avdApiLevel: 21
          avdAbi: x86
          avdType: default
        Android23-x86:
          avdApiLevel: 23
          avdAbi: x86
          avdType: default
        Android24-x86:
          avdApiLevel: 24
          avdAbi: x86
          avdType: default
        Android26-x86_64:
          avdApiLevel: 26
          avdAbi: x86_64
          avdType: default
        Android28-x86_64:
          avdApiLevel: 28
          avdAbi: x86_64
          avdType: default
        Android30-x86_64:
          avdApiLevel: 30
          avdAbi: x86_64
          avdType: default
        Android31-x86_64:
          avdApiLevel: 31
          avdAbi: x86_64
          avdType: default
        Android33-x86_64:
          avdApiLevel: 33
          avdAbi: x86_64
          avdType: google_apis
    pool:
      vmImage: $(HostedMacImage)
    workspace:
      clean: all
    steps:
    - template: yaml-templates/setup-test-environment.yaml
      parameters:
        configuration: $(XA.Build.Configuration)

    - template: yaml-templates/run-xaprepare.yaml
      parameters:
        displayName: install emulator
        arguments: --s=EmulatorTestDependencies

    - template: yaml-templates/run-dotnet-preview.yaml
      parameters:
        project: Xamarin.Android.sln
        arguments: -t:PrepareJavaInterop -c $(XA.Build.Configuration) -m:1 -v:n
        displayName: prepare java.interop $(XA.Build.Configuration)
        continueOnError: false

    - script: echo "##vso[task.setvariable variable=Java8SdkDirectory]$JAVA_HOME_8_X64"
      displayName: set Java8SdkDirectory

    - task: MSBuild@1
      displayName: install and launch emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: /t:InstallAvdImage;AcquireAndroidTarget /p:TestAvdApiLevel=$(avdApiLevel) /p:TestAvdAbi=$(avdAbi) /p:TestAvdType=$(avdType) /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/install-emulator-$(avdApiLevel).binlog

    - template: yaml-templates/apk-instrumentation.yaml
      parameters:
        configuration: $(XA.Build.Configuration)
        testName: Mono.Android_Tests-$(avdApiLevel)-$(avdAbi)-$(avdType)
        project: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        testResultsFiles: TestResult-Mono.Android_Tests-$(XA.Build.Configuration).xml
        extraBuildArgs: /p:TestAvdApiLevel=$(avdApiLevel) /p:TestAvdAbi=$(avdAbi) /p:TestAvdType=$(avdType)
        artifactSource: bin/Test$(XA.Build.Configuration)/Mono.Android_Tests-Signed.apk
        artifactFolder: Default

    - task: MSBuild@1
      displayName: shut down emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: /t:AcquireAndroidTarget,ReleaseAndroidTarget /p:TestAvdApiLevel=$(avdApiLevel) /p:TestAvdAbi=$(avdAbi) /p:TestAvdType=$(avdType) /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/shutdown-emulator.binlog
      condition: always()

    - template: yaml-templates/upload-results.yaml
      parameters:
        configuration: $(XA.Build.Configuration)
        artifactName: Test Results - Emulator $(avdApiLevel)-$(avdAbi)-$(avdType) - macOS

    - template: yaml-templates/fail-on-issue.yaml

  # TimeZoneInfo test jobs
  - template: yaml-templates/run-timezoneinfo-tests.yaml
    parameters:
      node_id: 1

  - template: yaml-templates/run-timezoneinfo-tests.yaml
    parameters:
      node_id: 2

  - template: yaml-templates/run-timezoneinfo-tests.yaml
    parameters:
      node_id: 3

  - template: yaml-templates/run-timezoneinfo-tests.yaml
    parameters:
      node_id: 4

  # Localization test jobs
  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 1

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 2

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 3

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 4

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 5

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 6

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 7

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 8

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 9

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 10

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 11

  - template: yaml-templates/run-localization-tests.yaml
    parameters:
      node_id: 12

  - template: yaml-templates/run-systemapp-tests.yaml
