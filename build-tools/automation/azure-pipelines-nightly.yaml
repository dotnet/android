# Xamarin.Android Nightly Pipeline

name: $(Build.SourceBranchName)-$(Build.SourceVersion)-$(Rev:r)

trigger:
  - none

pr:
  - none

# External sources, scripts, tests, and yaml template files.
resources:
  repositories:
  - repository: yaml-templates
    type: github
    name: xamarin/yaml-templates
    ref: refs/heads/main
    endpoint: xamarin
  - repository: monodroid
    type: github
    name: xamarin/monodroid
    endpoint: xamarin

# Global variables
variables:
- template: yaml-templates/variables.yaml

stages:
- stage: mac_build
  displayName: Build
  dependsOn: []
  jobs:
  - job: mac_build_create_installers
    displayName: macOS > Create Installers
    pool:
      name: VSEng-Xamarin-RedmondMac-Android-Untrusted
      demands: macOS.Name -equals Monterey
    timeoutInMinutes: 420
    workspace:
      clean: all
    variables:
      - group: Xamarin-Secrets
      - group: Xamarin Signing
      - group: xamops-azdev-secrets
      - name: Codeql.Enabled
        value: true
    steps:
    - checkout: self
      submodules: recursive

    - template: yaml-templates/commercial-build.yaml
      parameters:
        makeMSBuildArgs: /p:EnableRoslynAnalyzers=true /p:EnableNativeAnalyzers=true

    - template: yaml-templates/upload-results.yaml
      parameters:
        xaSourcePath: $(System.DefaultWorkingDirectory)/xamarin-android
        artifactName: Build Results - Nightly macOS
        includeBuildResults: true


- stage: test_apk
  displayName: Test APKs
  dependsOn: mac_build
  variables:
  - group: Xamarin-Secrets
  - group: xamops-azdev-secrets
  jobs:
  - job: test_apk_monoandroid
    displayName: macOS > Test APKs > Mono.Android
    timeoutInMinutes: 180
    strategy:
      matrix:
        Android21-x86:
          avdApiLevel: 21
          avdAbi: x86
          avdType: default
        Android23-x86:
          avdApiLevel: 23
          avdAbi: x86
          avdType: default
        Android24-x86:
          avdApiLevel: 24
          avdAbi: x86
          avdType: default
        Android26-x86_64:
          avdApiLevel: 26
          avdAbi: x86_64
          avdType: default
        Android28-x86_64:
          avdApiLevel: 28
          avdAbi: x86_64
          avdType: default
        Android30-x86_64:
          avdApiLevel: 30
          avdAbi: x86_64
          avdType: default
        Android31-x86_64:
          avdApiLevel: 31
          avdAbi: x86_64
          avdType: default
        Android33-x86_64:
          avdApiLevel: 33
          avdAbi: x86_64
          avdType: google_apis
    pool:
      vmImage: $(HostedMacImage)
    workspace:
      clean: all
    steps:
    - template: yaml-templates/setup-test-environment.yaml
      parameters:
        configuration: $(XA.Build.Configuration)

    - template: yaml-templates/run-xaprepare.yaml
      parameters:
        displayName: install emulator
        arguments: --s=EmulatorTestDependencies

    - template: yaml-templates/run-dotnet-preview.yaml
      parameters:
        project: Xamarin.Android.sln
        arguments: -t:PrepareJavaInterop -c $(XA.Build.Configuration) -m:1 -v:n
        displayName: prepare java.interop $(XA.Build.Configuration)
        continueOnError: false

    - script: echo "##vso[task.setvariable variable=Java8SdkDirectory]$JAVA_HOME_8_X64"
      displayName: set Java8SdkDirectory

    - task: MSBuild@1
      displayName: install and launch emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: /t:InstallAvdImage;AcquireAndroidTarget /p:TestAvdApiLevel=$(avdApiLevel) /p:TestAvdAbi=$(avdAbi) /p:TestAvdType=$(avdType) /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/install-emulator-$(avdApiLevel).binlog

    - template: yaml-templates/apk-instrumentation.yaml
      parameters:
        configuration: $(XA.Build.Configuration)
        testName: Mono.Android.NET_Tests-$(XA.Build.Configuration)-$(avdApiLevel)
        project: tests/Mono.Android-Tests/Runtime-Microsoft.Android.Sdk/Mono.Android.NET-Tests.csproj
        testResultsFiles: TestResult-Mono.Android.NET_Tests-$(XA.Build.Configuration)$(avdApiLevel).xml
        extraBuildArgs: -p:TestsFlavor=$(avdApiLevel) -p:TestAvdApiLevel=$(avdApiLevel) -p:TestAvdAbi=$(avdAbi) -p:TestAvdType=$(avdType)
        artifactSource: bin/Test$(XA.Build.Configuration)/$(DotNetTargetFramework)-android/Mono.Android.NET_Tests-Signed.aab
        artifactFolder: Mono.Android-$(XA.Build.Configuration)-$(avdApiLevel)

    - task: MSBuild@1
      displayName: shut down emulator
      inputs:
        solution: tests/Mono.Android-Tests/Mono.Android-Tests.csproj
        configuration: $(XA.Build.Configuration)
        msbuildArguments: /t:AcquireAndroidTarget,ReleaseAndroidTarget /p:TestAvdApiLevel=$(avdApiLevel) /p:TestAvdAbi=$(avdAbi) /p:TestAvdType=$(avdType) /bl:$(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/shutdown-emulator.binlog
      condition: always()

    - template: yaml-templates/upload-results.yaml
      parameters:
        configuration: $(XA.Build.Configuration)
        artifactName: Test Results - Emulator $(avdApiLevel)-$(avdAbi)-$(avdType) - macOS

    - template: yaml-templates/fail-on-issue.yaml

  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      emulatorMSBuildArgs: -p:TestAvdExtraBootArgs=-writable-system
      jobName: SystemApplicationTests
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: SystemApplicationTests On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=SystemApplicationTests"
          testResultsFile: TestResult-SystemApplicationTests-$(XA.Build.Configuration).xml


# TimeZoneInfo test jobs
- stage: test_timezoneinfo
  displayName: Test TimeZoneInfo
  dependsOn: mac_build
  variables:
  - group: Xamarin-Secrets
  - group: xamops-azdev-secrets
  jobs:
  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: TimeZoneInfoTests1
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode1 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode1"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode1-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode2 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode2"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode2-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode3 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode3"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode3-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2

  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: TimeZoneInfoTests2
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode4 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode4"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode4-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode5 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode5"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode5-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode6 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode6"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode6-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2

  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: TimeZoneInfoTests3
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode7 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode7"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode7-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode8 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode8"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode8-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode9 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode9"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode9-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2

  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: TimeZoneInfoTests4
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode10 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode10"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode10-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode11 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode11"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode11-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode12 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode12"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode12-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2

  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: TimeZoneInfoTests5
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode13 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode13"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode13-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode14 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode14"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode14-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckTimeZoneInfoIsCorrectNode15 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckTimeZoneInfoIsCorrectNode15"
          testResultsFile: TestResult-CheckTimeZoneInfoIsCorrectNode15-$(XA.Build.Configuration).xml
          timeoutInMinutes: 75
          retryCountOnTaskFailure: 2


# Localization test jobs
- stage: test_locals
  displayName: Test Localization
  dependsOn: mac_build
  variables:
  - group: Xamarin-Secrets
  - group: xamops-azdev-secrets
  jobs:
  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: LocalizationTests1
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode1 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode1"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode1-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode2 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode2"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode2-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode3 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode3"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode3-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2

  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: LocalizationTests2
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode4 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode4"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode4-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode5 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode5"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode5-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode6 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode6"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode6-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2

  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: LocalizationTests3
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode7 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode7"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode7-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode8 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode8"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode8-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode9 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode9"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode9-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2

  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: LocalizationTests4
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode10 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode10"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode10-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode11 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode11"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode11-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode12 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode12"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode12-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2

  - template: yaml-templates/run-emulator-tests.yaml
    parameters:
      jobName: LocalizationTests5
      emulatorMSBuildArgs: -p:TestAvdShowWindow=true
      testSteps:
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode13 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode13"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode13-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode14 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode14"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode14-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
      - template: run-nunit-tests.yaml
        parameters:
          testRunTitle: CheckLocalizationIsCorrectNode15 On Device - macOS
          testAssembly: $(System.DefaultWorkingDirectory)/bin/Test$(XA.Build.Configuration)/MSBuildDeviceIntegration/$(DotNetStableTargetFramework)/MSBuildDeviceIntegration.dll
          dotNetTestExtraArgs: --filter "Name=CheckLocalizationIsCorrectNode15"
          testResultsFile: TestResult-CheckLocalizationIsCorrectNode15-$(XA.Build.Configuration).xml
          retryCountOnTaskFailure: 2
