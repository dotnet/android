# Pipeline for updating and uploading android-api-docs/docs/xml/*
# https://dev.azure.com/devdiv/DevDiv/_build?definitionId=15262

# This pipeline can be manually ran against a given branch to generate a new set of Mono.Android docs.
# The `Mono.Android Docs` artifact can be downloaded and copied into a local android-api-docs checkout
# for manual review and pull request creation.

trigger: none
pr: none

parameters:
- name: apiLevel
  displayName: AndroidApiLevel property value
  type: string
  default: default

- name: platformId
  displayName: AndroidPlatformId property value
  type: string
  default: default

- name: frameworkVersion
  displayName: AndroidFrameworkVersion property value
  type: string
  default: default

- name: mdocVersion
  displayName: MdocPackageVersion property value
  type: string
  default: default

- name: javadocVerbosity
  displayName: AndroidJavadocVerbosity property value
  type: string
  default: default


# Global variables
variables:
- template: yaml-templates/variables.yaml
- name: DocsApiLevelArg
  value: ''
- name: DocsPlatformIdArg
  value: ''
- name: DocsFxVersionArg
  value: ''
- name: MdocPackageVersionArg
  value: ''
- name: AndroidJavadocVerbosity
  value: ''


stages:
- stage: mac_build
  displayName: Build
  dependsOn: []
  jobs:
  - job: mac_build_update_docs
    displayName: Update API Docs
    pool:
      name: VSEng-Xamarin-RedmondMac-Android-Untrusted
      demands: macOS.Name -equals Monterey
    timeoutInMinutes: 120
    workspace:
      clean: all
    steps:
    - checkout: self
      submodules: recursive

    - script: echo "##vso[task.setvariable variable=JI_JAVA_HOME]$HOME/android-toolchain/jdk-17"
      displayName: set JI_JAVA_HOME

    # Set MSBuild property overrides if parameters are set
    - ${{ if ne(parameters.apiLevel, 'default') }}:
      - script: echo "##vso[task.setvariable variable=DocsApiLevelArg]-p:DocsApiLevel=${{ parameters.apiLevel }}"
        displayName: set DocsApiLevelArg

    - ${{ if ne(parameters.platformId, 'default') }}:
      - script: echo "##vso[task.setvariable variable=DocsPlatformIdArg]-p:DocsPlatformId=${{ parameters.platformId }}"
        displayName: set DocsPlatformIdArg

    - ${{ if ne(parameters.frameworkVersion, 'default') }}:
      - script: echo "##vso[task.setvariable variable=DocsFxVersionArg]-p:DocsFxVersion=${{ parameters.frameworkVersion }}"
        displayName: set DocsFxVersionArg

    - ${{ if ne(parameters.mdocVersion, 'default') }}:
      - script: echo "##vso[task.setvariable variable=MdocPackageVersionArg]-p:MdocPackageVersion=${{ parameters.mdocVersion }}"
        displayName: set MdocPackageVersionArg

    - ${{ if ne(parameters.javadocVerbosity, 'default') }}:
      - script: echo "##vso[task.setvariable variable=AndroidJavadocVerbosity]-p:AndroidJavadocVerbosity=${{ parameters.javadocVerbosity }}"
        displayName: set AndroidJavadocVerbosity

    - template: yaml-templates/use-dot-net.yaml

    - task: NuGetAuthenticate@1
      displayName: authenticate with azure artifacts
      inputs:
        forceReinstallCredentialProvider: true

    - template: yaml-templates/run-xaprepare.yaml
      parameters:
        displayName: update mono
        arguments: --s=UpdateMono

    - script: make prepare CONFIGURATION=$(XA.Build.Configuration) PREPARE_CI=1 PREPARE_AUTOPROVISION=1
      workingDirectory: $(Build.SourcesDirectory)
      displayName: make prepare

    - script: >-
        make update-api-docs CONFIGURATION=$(XA.Build.Configuration)
        MSBUILD_ARGS='$(DocsApiLevelArg) $(DocsPlatformIdArg) $(DocsFxVersionArg) $(MdocPackageVersionArg) $(AndroidJavadocVerbosity)'
      workingDirectory: $(Build.SourcesDirectory)
      displayName: make update-api-docs

    - script: >
        mkdir -p $(Build.StagingDirectory)/docs-binaries &&
        ln $(Build.SourcesDirectory)/bin/$(XA.Build.Configuration)/lib/xamarin.android/xbuild-frameworks/Microsoft.Android/34/*.dll $(Build.StagingDirectory)/docs-binaries/ &&
        ln $(Build.SourcesDirectory)/bin/$(XA.Build.Configuration)/lib/xamarin.android/xbuild-frameworks/Microsoft.Android/34/*.xml $(Build.StagingDirectory)/docs-binaries/
      displayName: copy docs files

    - task: PublishPipelineArtifact@1
      displayName: upload docs files
      inputs:
        artifactName: Binaries
        targetPath: $(Build.StagingDirectory)/docs-binaries

    - script: >
        mkdir -p $(Build.StagingDirectory)/api-doc-diff &&
        ln $(Build.SourcesDirectory)/bin/Build$(XA.Build.Configuration)/UpdateApiDocs*.diff $(Build.StagingDirectory)/api-doc-diff/
      displayName: copy api docs diff

    - task: PublishPipelineArtifact@1
      displayName: upload api docs diff
      inputs:
        artifactName: Api Docs Diff
        targetPath: $(Build.StagingDirectory)/api-doc-diff

    - template: yaml-templates/upload-results.yaml
      parameters:
        artifactName: Build Results - API Docs Update
        includeBuildResults: true
        condition: always()

    - powershell: |
        $docsUpdateBinlog = Get-ChildItem -Path "$(Build.SourcesDirectory)/bin/Build$(XA.Build.Configuration)" -Filter *UpdateApiDocs-*.binlog | Select-Object -First 1
        $buildLog = "$(Build.SourcesDirectory)/bin/Build$(XA.Build.Configuration)/temp-build.log"
        & "$(Build.SourcesDirectory)/bin/$(XA.Build.Configuration)/dotnet/dotnet" build $docsUpdateBinlog > $buildLog

        $issueContent = & {
            Get-Content -Path $buildLog | Select-String "## Exception translating remarks"
            Get-Content -Path $buildLog | Select-String "## Unable to translate remarks"
            Get-Content -Path $buildLog | Select-String "JavadocImport-"
        }

        if ($issueContent) {
            Write-Host "The following issues were found, review the build log for more details:"
            Write-Host ""
            foreach ($line in $issueContent) {
                Write-Host $line
                Write-Host ""
            }
            exit 1
        }
      displayName: Report issues in docs generation
