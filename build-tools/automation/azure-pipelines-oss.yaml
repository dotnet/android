# Xamarin.Android-OSS Pipeline

name: $(Build.SourceBranchName)-$(Build.SourceVersion)-$(Rev:r)

trigger:
  - master
  - d16-*

pr:
  - master
  - d16-*

# Global variables
variables:
  OSSBuildConfiguration: Release

jobs:
- job: linux_build_package
  displayName: Linux Build
  pool:
    vmImage: ubuntu-18.04
  timeoutInMinutes: 180
  cancelTimeoutInMinutes: 5
  workspace:
    clean: all
  steps:
  - checkout: self
    submodules: recursive

  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet 5.x'
    inputs:
      versionSpec: 5.x

  - script: >
      sudo apt-get install -y gnupg ca-certificates &&
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF &&
      (echo "deb https://download.mono-project.com/repo/ubuntu preview-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-preview.list) &&
      sudo apt-get update &&
      sudo apt-get install -y mono-devel &&
      sudo apt-get install -y ca-certificates-mono
    displayName: install mono preview

  - script: make jenkins V=1 PREPARE_CI_PR=1 PREPARE_AUTOPROVISION=1 CONFIGURATION=$(OSSBuildConfiguration)
    displayName: make jenkins

  - script: make package-deb V=1 CONFIGURATION=$(OSSBuildConfiguration)
    displayName: make package-deb

  - script: >
      mkdir -p $(System.DefaultWorkingDirectory)/bin/Build$(OSSBuildConfiguration)/linux-artifacts &&
      cp $(System.DefaultWorkingDirectory)/*xamarin.android*.tar.bz2 $(System.DefaultWorkingDirectory)/bin/Build$(OSSBuildConfiguration)/linux-artifacts &&
      cp $(System.DefaultWorkingDirectory)/*.changes $(System.DefaultWorkingDirectory)/bin/Build$(OSSBuildConfiguration)/linux-artifacts &&
      cp $(System.DefaultWorkingDirectory)/*.dsc $(System.DefaultWorkingDirectory)/bin/Build$(OSSBuildConfiguration)/linux-artifacts &&
      cp $(System.DefaultWorkingDirectory)/*.deb $(System.DefaultWorkingDirectory)/bin/Build$(OSSBuildConfiguration)/linux-artifacts
    displayName: copy linux artifacts

  - task: PublishPipelineArtifact@1
    displayName: publish linux artifacts
    inputs:
      artifactName: Linux Packages
      targetPath: $(System.DefaultWorkingDirectory)/bin/Build$(OSSBuildConfiguration)/linux-artifacts

  - template: yaml-templates/upload-results.yaml
    parameters:
      configuration: $(OSSBuildConfiguration)
      artifactName: OSS Build Results - Linux
