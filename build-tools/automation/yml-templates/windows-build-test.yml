- stage: win_build_test
  displayName: Windows
  dependsOn: [] # Run in parallel with full mac build stage 
  variables:
    Configuration: Release
    BundleArtifactName: bundle
    BundleRootPath: $(System.DefaultWorkingDirectory)\$(BundleArtifactName)
  jobs:
  - job: prepare
    displayName: Create Bundle On Mac
    pool: Hosted Mac Internal
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 5
    steps:
    - script: make prepare-deps V=1 CONFIGURATION=$(Configuration) MSBUILD_ARGS="$(AutoProvisionArgs)"
      displayName: make prepare-deps

    - task: MSBuild@1
      displayName: create bundle
      inputs:
        solution: build-tools/create-bundle/create-bundle.csproj
        configuration: $(Configuration)

    - task: CopyFiles@2
      displayName: copy bundle
      inputs:
        contents: bin/$(Configuration)/bundle-*.zip
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishPipelineArtifact@0
      displayName: upload bundle
      inputs:
        artifactName: $(BundleArtifactName)
        targetPath: $(Build.ArtifactStagingDirectory)

  - job: build_test
    displayName: Build and Test
    dependsOn: prepare
    pool: Hosted VS2017
    timeoutInMinutes: 240
    cancelTimeoutInMinutes: 5
    variables:
      tmp: E:\A\_work\_temp
      temp: $(tmp)
      _AndroidDesignTimeResDirIntermediate: .
      CleanAllFiles: False
      CleanOnNuGetPackagesChange: False
      NuGet.Show.Stack: true
      NUnit.Extra: --trace=Verbose
    steps:
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: $(BundleArtifactName)
        downloadPath: $(System.DefaultWorkingDirectory)

    - task: MSBuild@1
      displayName: msbuild Xamarin.Android /t:Prepare
      inputs:
        solution: Xamarin.Android.sln
        msbuildVersion: 15.0
        msbuildArguments: /t:Prepare /bl:$(Build.ArtifactStagingDirectory)\prepare.binlog

    - task: MSBuild@1
      displayName: msbuild Xamarin.Android /t:Build
      inputs:
        solution: Xamarin.Android.sln
        msbuildVersion: 15.0
        msbuildArguments: /t:Build /bl:$(Build.ArtifactStagingDirectory)\build.binlog

    - task: MSBuild@1
      displayName: msbuild create-vsix
      inputs:
        solution: build-tools\create-vsix\create-vsix.csproj
        msbuildArguments: /p:Configurations=$(Configuration) /p:CreateVsixContainer=True /p:ZipPackageCompressionLevel=Normal /bl:$(Build.ArtifactStagingDirectory)\create-vsix.binlog

    - task: CmdLine@1
      displayName: xabuild Xamarin.Android-Tests
      inputs:
        filename: bin\$(Configuration)\bin\xabuild.exe
        arguments: Xamarin.Android-Tests.sln /p:XAIntegratedTests=False /bl:$(Build.ArtifactStagingDirectory)\build-tests.binlog

    - task: MSBuild@1
      displayName: nunit Xamarin.Android.Build.Tests
      inputs:
        solution: Xamarin.Android.sln
        msbuildArguments: /t:RunNUnitTests /bl:$(Build.ArtifactStagingDirectory)\run-nunit-tests.binlog
      condition: succeededOrFailed()
      timeoutInMinutes: 120

    - task: MSBuild@1
      displayName: nunit Java.Interop Tests
      inputs:
        solution: Xamarin.Android.sln
        msbuildArguments: >
          /t:RunJavaInteropTests
          /p:TestAssembly="bin\Test$(Configuration)\generator-Tests.dll;bin\Test$(Configuration)\Java.Interop.Tools.JavaCallableWrappers-Tests.dll;bin\Test$(Configuration)\LogcatParse-Tests.dll;bin\Test$(Configuration)\Xamarin.Android.Tools.ApiXmlAdjuster-Tests.dll;bin\Test$(Configuration)\Xamarin.Android.Tools.Bytecode-Tests.dll"
          /bl:$(Build.ArtifactStagingDirectory)\run-ji-tests.binlog
      condition: succeededOrFailed()

    - task: PublishTestResults@2
      displayName: publish test results
      inputs:
        testResultsFormat: NUnit
        testResultsFiles: TestResult-*.xml
        testRunTitle: xamarin-android
        failTaskOnFailedTests: true
      condition: succeededOrFailed()

    - task: CopyFiles@2
      displayName: copy test artifacts
      inputs:
        contents: |
          TestResult-*
          *.log
          bin\Test$(Configuration)\TestOutput*.txt
          bin\Test$(Configuration)\temp\**\*.binlog
          bin\Test$(Configuration)\temp\**\*.log
        targetFolder: $(Build.ArtifactStagingDirectory)\Test$(Configuration)
        condition: always()

    - task: CopyFiles@2
      displayName: copy temp files
      inputs:
        sourceFolder: $(temp)
        contents: llc.exe-*
        targetFolder: $(Build.ArtifactStagingDirectory)
      condition: always()

    - task: PublishBuildArtifacts@1
      displayName: publish build and test artifacts
      inputs:
        artifactName: win-results
      condition: always()
