<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\scripts\XAVersionInfo.targets" />
  <UsingTask AssemblyFile="..\..\bin\Build$(Configuration)\xa-prep-tasks.dll"   TaskName="Xamarin.Android.BuildTools.PrepTasks.ReplaceFileContents" />
  <PropertyGroup>
    <!-- Don't ever deploy, since that won't work on Mac -->
    <DeployExtension>False</DeployExtension>
    <PrepareForBuildDependsOn Condition=" '$(CreateVsixContainer)' == 'True' ">
      $(PrepareForBuildDependsOn);
      AddContent
    </PrepareForBuildDependsOn>
    <LibDir>..\..\bin\$(Configuration)\lib\xamarin.android\</LibDir>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <MSBuild>
      <IncludeInVSIX>True</IncludeInVSIX>
      <VSIXSubPath></VSIXSubPath>
      <InstallRoot>MSBuild</InstallRoot>
    </MSBuild>
    <ReferenceAssemblies>
      <IncludeInVSIX>True</IncludeInVSIX>
      <VSIXSubPath></VSIXSubPath>
      <InstallRoot>ReferenceAssemblies</InstallRoot>
    </ReferenceAssemblies>
    <ThirdPartyNotice>
      <IncludeInVSIX>True</IncludeInVSIX>
      <VSIXSubPath/>
      <InstallRoot/>
    </ThirdPartyNotice>
  </ItemDefinitionGroup>
  <Target Name="AddContent"
      Returns="@(MSBuild);@(ReferenceAssemblies)">
    <ReadLinesFromFile File="$(LibDir)\xbuild-frameworks\.__sys_links.txt">
      <Output TaskParameter="Lines" ItemName="_SymLinks"/>
    </ReadLinesFromFile>
    <ItemGroup>
      <_FirstFrameworkFile  Include="Mono.Android.Export.dll" />
      <_FirstFrameworkFile  Include="Mono.Android.Export.pdb" />
      <_FirstFrameworkFile  Include="OpenTK-1.0.dll" />
      <_FirstFrameworkFile  Include="OpenTK-1.0.pdb" />
      <_FirstFrameworkFile  Include="OpenTK-1.0.xml" />
      <_FirstFrameworkFile  Include="OpenTK.dll" />
      <_FirstFrameworkFile  Include="OpenTK.pdb" />
      <_FirstFrameworkFile  Include="OpenTK.xml" />
    </ItemGroup>
    <ItemGroup>
      <MSBuild Include="$(LibDir)xbuild\Novell\**\*.*" />
      <MSBuild>
        <VSIXSubPath Condition=" '%(VSIXSubPath)' == '' ">Novell/%(RecursiveDir)</VSIXSubPath>
      </MSBuild>
      <MSBuild Include="$(LibDir)xbuild\Xamarin\**\*.*" />
      <MSBuild>
        <VSIXSubPath Condition=" '%(VSIXSubPath)' == '' ">Xamarin/%(RecursiveDir)</VSIXSubPath>
      </MSBuild>
      <MSBuild Remove="$(LibDir)xbuild\Xamarin\Android\lib\host-Darwin\**\*.*" />
      <MSBuild Remove="$(LibDir)xbuild\Xamarin\Android\lib\host-Linux\**\*.*" />
      <MSBuild Remove="$(LibDir)xbuild\Xamarin\Android\Darwin\**\*.*" />
      <MSBuild Remove="$(LibDir)xbuild\Xamarin\Android\Linux\**\*.*" />
      <MSBuild Remove="$(LibDir)xbuild\Xamarin\Android\**\*.dylib" />
      <MSBuild Remove="$(LibDir)xbuild\Xamarin\Android\**\*.pdb" />
      <MSBuild
          Condition=" '$(Configuration)' != 'Debug' "
          Remove="$(LibDir)xbuild\Xamarin\Android\**\*.d.so"
      />
      <MSBuild Include="..\..\src\Xamarin.Android.Build.Tasks\MSBuild\Xamarin\**\*.*" />
      <MSBuild>
        <VSIXSubPath Condition=" '%(VSIXSubPath)' == '' ">Xamarin/%(RecursiveDir)</VSIXSubPath>
      </MSBuild>
      <MSBuild>
        <VSIXSubPath Condition=" '%(VSIXSubPath)' == '' ">Xamarin/Android/%(RecursiveDir)</VSIXSubPath>
      </MSBuild>
      <MSBuild>
        <VSIXSubPath Condition=" '%(VSIXSubPath)' == 'Xamarin/Android/lib/host-mxe-Win64/' ">Xamarin/Android/</VSIXSubPath>
      </MSBuild>
      <MSBuild Remove="$(LibDir)xbuild\**\*.d.dll" />
      <MSBuild Remove="$(LibDir)xbuild\**\*.d.exe" />
      <ReferenceAssemblies Include="$(LibDir)xbuild-frameworks\**\*.*" />
      <ReferenceAssemblies Remove="$(LibDir)xbuild-frameworks\.__sys_links.txt" />
      <ReferenceAssemblies
          Condition=" '@(_SymLinks)' != '' "
          Remove="$(LibDir)xbuild-frameworks\%(_SymLinks.Identity)\**\*.*"
      />
      <ReferenceAssemblies Remove="$(LibDir)xbuild-frameworks\**\*.dylib" />
      <ReferenceAssemblies Remove="$(LibDir)xbuild-frameworks\**\libZipSharp*.*" />
    </ItemGroup>
    <ItemGroup Condition="Exists('$(LibDir)xbuild-frameworks\MonoAndroid\$(AndroidFirstFrameworkVersion)')">
      <ReferenceAssemblies Remove="$(LibDir)xbuild-frameworks\**\%(_FirstFrameworkFile.Identity)" />
      <ReferenceAssemblies
          Condition=" Exists ('$(LibDir)xbuild-frameworks\MonoAndroid\$(AndroidFirstFrameworkVersion)\%(_FirstFrameworkFile.Identity)') "
          Include="$(LibDir)xbuild-frameworks\MonoAndroid\$(AndroidFirstFrameworkVersion)\%(_FirstFrameworkFile.Identity)">
        <VSIXSubPath>Microsoft/Framework/MonoAndroid/$(AndroidFirstFrameworkVersion)/</VSIXSubPath>
      </ReferenceAssemblies>
    </ItemGroup>
    <ItemGroup>
      <ReferenceAssemblies>
        <VSIXSubPath Condition=" '%(VSIXSubPath)' == '' ">Microsoft/Framework/%(RecursiveDir)</VSIXSubPath>
      </ReferenceAssemblies>
      <ThirdPartyNotice Include="$(LibDir)\ThirdPartyNotices.txt">
        <VSIXSubPath>/</VSIXSubPath>
      </ThirdPartyNotice>
    </ItemGroup>
    <!-- https://bugzilla.xamarin.com/show_bug.cgi?id=54804
      Mono's `ZipPackage` mis-handles files w/o an extension,
      causing VS to state that the .vsix is invalid.
      Remove these files for now.
      -->
    <ItemGroup>
      <_MSBuildFilesWithoutExtension
          Condition=" '%(Extension)' == '' "
          Include="@(MSBuild)"
      />
      <MSBuild Remove="@(_MSBuildFilesWithoutExtension)" />
      <_ReferenceFilesWithoutExtension
          Condition=" '%(Extension)' == '' "
          Include="@(ReferenceAssemblies)"
      />
      <ReferenceAssemblies Remove="@(_ReferenceFilesWithoutExtension)" />
    </ItemGroup>
    <ItemGroup>
      <Content Include="@(MSBuild)" />
      <Content Include="@(ReferenceAssemblies)" />
      <Content Include="@(ThirdPartyNotice)" />
    </ItemGroup>
  </Target>
  <Target Name="GetVsixVersion"
      DependsOnTargets="GetXAVersionInfo"
      Returns="$(VsixVersion)">
    <PropertyGroup>
      <VsixVersion>$(ProductVersion).$(XAVersionCommitCount)</VsixVersion>
    </PropertyGroup>
  </Target>
  <Target Name="FixupTargetVsixContainer"
      BeforeTargets="VSIXContainerProjectOutputGroup;CreateVsixContainer"
      DependsOnTargets="_GetVsixPath">
    <PropertyGroup>
      <TargetVsixContainerName>$([System.IO.Path]::GetFileName('$(VsixPath)'))</TargetVsixContainerName>
      <TargetVsixContainer>$(OutDir)$(TargetVsixContainerName)</TargetVsixContainer>
    </PropertyGroup>
  </Target>
  <Target Name="GetIsExperimental"
      Returns="$(IsExperimental)">
  </Target>
  <Target Name="_CreateDependencies"
      DependsOnTargets="ResolveReferences;GetXAVersionInfo"
      BeforeTargets="Build"
      Inputs="Xamarin.Android.Sdk.pkgdef.in VSPackage.resx.in"
      Outputs="Xamarin.Android.Sdk.pkgdef VSPackage.resx">
    <ReplaceFileContents
        SourceFile="Xamarin.Android.Sdk.pkgdef.in"
        DestinationFile="Xamarin.Android.Sdk.pkgdef"
        Replacements="@PACKAGE_VERSION@=$(ProductVersion);@PACKAGE_VERSION_BUILD@=$(XAVersionCommitCount);@PACKAGE_HEAD_REV@=$(XAVersionHash);@PACKAGE_HEAD_BRANCH@=$(XAVersionBranch);@MONO_COMMIT@=$(_BuildInfo_MonoCommit);@JAVA_INTEROP_COMMIT@=$(_BuildInfo_JavaInteropCommit);@LIBZIPSHARP_COMMIT@=$(_BuildInfo_LibZipSharpCommit);@LIBZIP_COMMIT@=$(_BuildInfo_LibZipCommit);@PROGUARD_COMMIT@=$(_BuildInfo_ProguardCommit);@SQLITE_COMMIT@=$(_BuildInfo_SqliteCommit);@XAMARIN_ANDROID_TOOLS_COMMIT@=$(_BuildInfo_XamarinAndroidToolsCommit);">
    </ReplaceFileContents>

    <ReplaceFileContents
        SourceFile="VSPackage.resx.in"
        DestinationFile="VSPackage.resx"
        Replacements="@MONO_COMMIT@=$(_BuildInfo_MonoCommit);@JAVA_INTEROP_COMMIT@=$(_BuildInfo_JavaInteropCommit);@LIBZIPSHARP_COMMIT@=$(_BuildInfo_LibZipSharpCommit);@LIBZIP_COMMIT@=$(_BuildInfo_LibZipCommit);@PROGUARD_COMMIT@=$(_BuildInfo_ProguardCommit);@SQLITE_COMMIT@=$(_BuildInfo_SqliteCommit);@XAMARIN_ANDROID_TOOLS_COMMIT@=$(_BuildInfo_XamarinAndroidToolsCommit);">
    </ReplaceFileContents>
  </Target>
  <Target Name="_GetVsixPath"
      DependsOnTargets="GetXAVersionInfo">
    <PropertyGroup>
      <_Branch>$(XAVersionBranch.Replace ('/', '-'))</_Branch>
      <_Branch>$(_Branch.Replace ('\', '-'))</_Branch>
    </PropertyGroup>
    <PropertyGroup>
      <VsixPath Condition=" '$(VsixPath)' == '' ">..\..\bin\Build$(Configuration)\$(AssemblyName)-OSS-$(ProductVersion).$(XAVersionCommitCount)_$(_Branch)_$(XAVersionHash).vsix</VsixPath>
      <_VsixDir>$([System.IO.Path]::GetDirectoryName ($(VsixPath)))</_VsixDir>
    </PropertyGroup>
  </Target>
  <Target Name="_CopyToBuildConfiguration"
      DependsOnTargets="_GetVsixPath"
      Inputs="$(TargetVsixContainer)"
      Outputs="$(VsixPath)">
    <Copy
        SourceFiles="$(TargetVsixContainer)"
        DestinationFolder="$(_VsixDir)"
    />
    <Copy
        SourceFiles="$(OutputPath)Xamarin.Android.Sdk.json"
        DestinationFolder="$(_VsixDir)"
    />
  </Target>
  <!--
    This *replaces* `Microsoft.VSSDK.BuildTools.15.0.26201\build\Microsoft.VSSDK.BuildTools.targets`
    -->
  <PropertyGroup>
    <_TasksAssembly Condition=" Exists('$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll') ">$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll</_TasksAssembly>
    <_TasksAssembly Condition=" '$(_TasksAssembly)' == '' ">$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll</_TasksAssembly>
  </PropertyGroup>
  <UsingTask TaskName="SetVsSDKEnvironmentVariables"
      TaskFactory="CodeTaskFactory"
      AssemblyFile="$(_TasksAssembly)">
    <ParameterGroup>
      <ProjectDirectory Required="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Fragment" Language="cs">
        var toolsPath = System.IO.Path.Combine(ProjectDirectory, "tools", "VSSDK", "bin");
        System.Environment.SetEnvironmentVariable("VsSDKToolsPath",
            System.IO.Path.GetFullPath(toolsPath),
            EnvironmentVariableTarget.Process);
        var schemaDir = System.IO.Path.Combine(ProjectDirectory, "tools", "VSSDK", "schemas");
        System.Environment.SetEnvironmentVariable("VsSDKSchemaDir",
            System.IO.Path.GetFullPath(schemaDir),
            EnvironmentVariableTarget.Process);
      </Code>
    </Task>
  </UsingTask>
  <Target Name="SetVsSDKEnvironmentVariables"
      BeforeTargets="GeneratePkgDef;VSCTCompile;VSIXNameProjectOutputGroup">
    <SetVsSDKEnvironmentVariables ProjectDirectory="$(ThisPackageDirectory)" />
  </Target>
</Project>
