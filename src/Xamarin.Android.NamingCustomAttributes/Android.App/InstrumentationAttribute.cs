//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by 'manifest-attribute-codegen'.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using System;

namespace Android.App;

[Serializable]
[AttributeUsage (AttributeTargets.Assembly | AttributeTargets.Class, AllowMultiple = true, Inherited = false)]
public sealed partial class InstrumentationAttribute : Attribute, Java.Interop.IJniNameProviderAttribute {
	public InstrumentationAttribute ()
	{
	}

	public bool FunctionalTest { get; set; }

	public bool HandleProfiling { get; set; }

	public string? Icon { get; set; }

	public string? Label { get; set; }

	public string? Name { get; set; }

	public string? RoundIcon { get; set; }

	public string? TargetPackage { get; set; }

	public string? TargetProcesses { get; set; }

#if XABT_MANIFEST_EXTENSIONS
	static Xamarin.Android.Manifest.ManifestDocumentElement<InstrumentationAttribute> mapping = new ("instrumentation");

	static InstrumentationAttribute ()
	{
		mapping.Add (
			member: "FunctionalTest",
			attributeName: "functionalTest",
			getter: self => self.FunctionalTest,
			setter: (self, value) => self.FunctionalTest = (bool) value
		);
		mapping.Add (
			member: "HandleProfiling",
			attributeName: "handleProfiling",
			getter: self => self.HandleProfiling,
			setter: (self, value) => self.HandleProfiling = (bool) value
		);
		mapping.Add (
			member: "Icon",
			attributeName: "icon",
			getter: self => self.Icon,
			setter: (self, value) => self.Icon = (string?) value
		);
		mapping.Add (
			member: "Label",
			attributeName: "label",
			getter: self => self.Label,
			setter: (self, value) => self.Label = (string?) value
		);
		mapping.Add (
			member: "Name",
			attributeName: "name",
			getter: self => self.Name,
			setter: (self, value) => self.Name = (string?) value
		);
		mapping.Add (
			member: "RoundIcon",
			attributeName: "roundIcon",
			getter: self => self.RoundIcon,
			setter: (self, value) => self.RoundIcon = (string?) value
		);
		mapping.Add (
			member: "TargetPackage",
			attributeName: "targetPackage",
			getter: self => self.TargetPackage,
			setter: (self, value) => self.TargetPackage = (string?) value
		);
		mapping.Add (
			member: "TargetProcesses",
			attributeName: "targetProcesses",
			getter: self => self.TargetProcesses,
			setter: (self, value) => self.TargetProcesses = (string?) value
		);

		AddManualMapping ();
	}

	static partial void AddManualMapping ();
#endif // XABT_MANIFEST_EXTENSIONS
}
