<!--
***********************************************************************************************
Xamarin.Android.Legacy.targets

This file contains MSBuild targets for "legacy" Xamarin.Android
projects. .NET 5 projects will not import this file.

***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <AndroidBoundExceptionType Condition=" '$(AndroidBoundExceptionType)' == '' ">Java</AndroidBoundExceptionType>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(AndroidBuildApplicationPackage)' == 'True' And '$(AndroidApplication)' == 'True' ">
    <_PostBuildTargets>
      _CopyPackage;
      _Sign
    </_PostBuildTargets>
  </PropertyGroup>

  <!-- Application projects -->

  <PropertyGroup Condition=" '$(AndroidApplication)' == 'True' And '$(_AndroidIsBindingProject)' != 'True' ">
    <BuildDependsOn>
      _ValidateLinkMode;
      _CheckNonIdealConfigurations;
      _SetupDesignTimeBuildForBuild;
      _CreatePropertiesCache;
      _CleanIntermediateIfNeeded;
      _CheckProjectItems;
      _CheckForContent;
      _CheckTargetFramework;
      _RemoveLegacyDesigner;
      _ValidateAndroidPackageProperties;
      $(BuildDependsOn);
      _CompileDex;
      $(_AfterCompileDex);
      $(_PostBuildTargets)
    </BuildDependsOn>
    <_BeforeIncrementalClean>
      _PrepareAssemblies;
      _CompileDex;
      $(_AfterCompileDex);
      _AddFilesToFileWrites;
    </_BeforeIncrementalClean>
  </PropertyGroup>

  <!-- Class library projects -->

  <PropertyGroup Condition=" '$(AndroidApplication)' != 'True' And '$(_AndroidIsBindingProject)' != 'True' ">
    <BuildDependsOn>
      _ValidateLinkMode;
      _CheckNonIdealConfigurations;
      _SetupDesignTimeBuildForBuild;
      _CreatePropertiesCache;
      _CleanIntermediateIfNeeded;
      _AddAndroidDefines;
      _CreateNativeLibraryArchive;
      _AddAndroidEnvironmentToCompile;
      _CheckForContent;
      _CheckTargetFramework;
      _RemoveLegacyDesigner;
      _ValidateAndroidPackageProperties;
      $(BuildDependsOn);
    </BuildDependsOn>
    <_BeforeIncrementalClean>
      _AddFilesToFileWrites;
    </_BeforeIncrementalClean>
  </PropertyGroup>

  <!-- Application *and* Class library projects -->

  <PropertyGroup Condition=" '$(_AndroidIsBindingProject)' != 'True' ">
    <CoreBuildDependsOn>
      $([MSBuild]::Unescape($(CoreBuildDependsOn.Replace('IncrementalClean;', '$(_BeforeIncrementalClean);IncrementalClean;'))))
    </CoreBuildDependsOn>
    <CompileDependsOn>
      _SetupDesignTimeBuildForCompile;
      _AddAndroidDefines;
      _IncludeLayoutBindingSources;
      $(CompileDependsOn);
    </CompileDependsOn>
    <CoreCompileDependsOn>
      UpdateGeneratedFiles;
      $(CoreCompileDependsOn)
    </CoreCompileDependsOn>
    <CoreResolveReferencesDependsOn>
      _SeparateAppExtensionReferences;
      _PrepareWearApplication;
      $(ResolveReferencesDependsOn);
      _AddAndroidCustomMetaData;
    </CoreResolveReferencesDependsOn>
    <ResolveReferencesDependsOn>
      $(CoreResolveReferencesDependsOn);
      UpdateAndroidInterfaceProxies;
      UpdateAndroidResources;
    </ResolveReferencesDependsOn>
    <DeferredBuildDependsOn>
      $(DeferredBuildDependsOn);
      UpdateAndroidResources;
    </DeferredBuildDependsOn>
    <PrepareForRunDependsOn>
      $(PrepareForRunDependsOn);
      _CollectMonoAndroidOutputs;
    </PrepareForRunDependsOn>
    <CleanDependsOn>
      $(CleanDependsOn);
      _CleanMonoAndroidIntermediateDir;
      _CleanAndroidBuildPropertiesCache;
    </CleanDependsOn>
  </PropertyGroup>

  <!-- Binding projects -->

  <PropertyGroup Condition=" '$(_AndroidIsBindingProject)' == 'True' ">
    <BuildDependsOn>
      _SetupDesignTimeBuildForBuild;
      AddLibraryJarsToBind;
      $(BuildDependsOn);
      BuildDocumentation;
    </BuildDependsOn>

    <CompileDependsOn>
      _SetupDesignTimeBuildForCompile;
      AddLibraryJarsToBind;
      $(CompileDependsOn);
    </CompileDependsOn>

    <ResolveReferencesDependsOn>
      $(ResolveReferencesDependsOn);
      AddBindingsToCompile;
      AddEmbeddedJarsAsResources;
      AddEmbeddedReferenceJarsAsResources;
      _CreateNativeLibraryArchive;
    </ResolveReferencesDependsOn>

    <CleanDependsOn>
      $(CleanDependsOn);
      CleanBindingsOutput;
      CleanLibraryProjectIntermediaries;
      CleanNativeLibraryIntermediaries;
    </CleanDependsOn>

    <ExportJarToXmlDependsOnTargets>
      _ResolveMonoAndroidSdks;
      _ExtractLibraryProjectImports;
      _GetLibraryImports;
      _ExtractJavaDocJars;
      _GenerateJavaDocFromSourceJars;
      _ExportJarToXml;
    </ExportJarToXmlDependsOnTargets>

  </PropertyGroup>

  <UsingTask TaskName="Xamarin.Android.Tasks.CheckGoogleSdkRequirements"   AssemblyFile="Xamarin.Android.Build.Tasks.dll" />
  <UsingTask TaskName="Xamarin.Android.Tasks.Legacy.ValidateJavaVersion"   AssemblyFile="Xamarin.Android.Build.Tasks.dll" />
  <UsingTask TaskName="Xamarin.Android.Tasks.Legacy.ResolveAndroidTooling" AssemblyFile="Xamarin.Android.Build.Tasks.dll" />

  <Target Name="_GetReferenceAssemblyPaths">
    <GetReferenceAssemblyPaths
        TargetFrameworkMoniker="$(TargetFrameworkIdentifier),Version=v1.0"
        RootPath="$(TargetFrameworkRootPath)">
      <Output TaskParameter="ReferenceAssemblyPaths" PropertyName="_XATargetFrameworkDirectories" />
    </GetReferenceAssemblyPaths>
  </Target>

  <Target Name="_ResolveAndroidTooling">
    <ValidateJavaVersion
        Condition=" '$(DesignTimeBuild)' != 'True' Or '$(AndroidUseManagedDesignTimeResourceGenerator)' != 'True' "
        ContinueOnError="$(_AndroidAllowMissingSdkTooling)"
        TargetFrameworkVersion="$(TargetFrameworkVersion)"
        AndroidSdkBuildToolsVersion="$(AndroidSdkBuildToolsVersion)"
        JavaSdkPath="$(_JavaSdkDirectory)"
        JavaToolExe="$(JavaToolExe)"
        JavacToolExe="$(JavacToolExe)"
        LatestSupportedJavaVersion="$(LatestSupportedJavaVersion)"
        MinimumSupportedJavaVersion="$(MinimumSupportedJavaVersion)">
      <Output TaskParameter="JdkVersion"                PropertyName="_JdkVersion" />
      <Output TaskParameter="MinimumRequiredJdkVersion" PropertyName="_DefaultJdkVersion" />
    </ValidateJavaVersion>
    <ResolveAndroidTooling
        ContinueOnError="$(_AndroidAllowMissingSdkTooling)"
        TargetFrameworkVersion="$(TargetFrameworkVersion)"
        AndroidApiLevel="$(AndroidApiLevel)"
        AndroidApplication="$(AndroidApplication)"
        AndroidSdkPath="$(_AndroidSdkDirectory)"
        AndroidSdkBuildToolsVersion="$(AndroidSdkBuildToolsVersion)"
        UseLatestAndroidPlatformSdk="$(AndroidUseLatestPlatformSdk)"
        AndroidUseAapt2="$(AndroidUseAapt2)"
        AotAssemblies="$(AotAssemblies)"
        Aapt2ToolPath="$(Aapt2ToolPath)"
        SequencePointsMode="$(_AndroidSequencePointsMode)"
        ProjectFilePath="$(MSBuildProjectFullPath)"			
        LintToolPath="$(LintToolPath)"
        ZipAlignPath="$(ZipAlignToolPath)">
      <Output TaskParameter="TargetFrameworkVersion"      PropertyName="TargetFrameworkVersion" />
      <Output TaskParameter="AndroidApiLevel"             PropertyName="_AndroidApiLevel"            Condition="'$(_AndroidApiLevel)' == ''" />
      <Output TaskParameter="AndroidApiLevelName"         PropertyName="_AndroidApiLevelName" />
      <Output TaskParameter="AndroidSdkBuildToolsPath"    PropertyName="AndroidSdkBuildToolsPath"    Condition="'$(AndroidSdkBuildToolsPath)' == ''" />
      <Output TaskParameter="AndroidSdkBuildToolsBinPath" PropertyName="AndroidSdkBuildToolsBinPath" Condition="'$(AndroidSdkBuildToolsBinPath)' == ''" />
      <Output TaskParameter="ZipAlignPath"                PropertyName="ZipAlignToolPath"            Condition="'$(ZipAlignToolPath)' == ''" />
      <Output TaskParameter="AndroidSequencePointsMode"   PropertyName="_SequencePointsMode"         Condition="'$(_SequencePointsMode)' == ''" />
      <Output TaskParameter="LintToolPath"                PropertyName="LintToolPath"                Condition="'$(LintToolPath)' == ''" />
      <Output TaskParameter="ApkSignerJar"                PropertyName="ApkSignerJar"                Condition="'$(ApkSignerJar)' == ''" />
      <Output TaskParameter="AndroidUseApkSigner"         PropertyName="AndroidUseApkSigner"         Condition="'$(AndroidUseApkSigner)' == ''" />
      <Output TaskParameter="AndroidUseAapt2"             PropertyName="_AndroidUseAapt2" />
      <Output TaskParameter="Aapt2Version"                PropertyName="_Aapt2Version" />
      <Output TaskParameter="Aapt2ToolPath"               PropertyName="Aapt2ToolPath"               Condition="'$(Aapt2ToolPath)' == ''" />
    </ResolveAndroidTooling>
  </Target>

  <Target Name="_ResolveAssemblies">
    <!--- Remove the ImplicitlyExpandDesignTimeFacades assemblies. We have already build the app there are not required for packaging  -->
    <ItemGroup>
      <FilteredAssemblies
          Include="$(OutDir)$(TargetFileName)"
          Condition="Exists ('$(OutDir)$(TargetFileName)')"
      />
      <FilteredAssemblies
          Include="@(ReferenceCopyLocalPaths)"
          Condition="'%(ReferenceCopyLocalPaths.ResolvedFrom)' != 'ImplicitlyExpandDesignTimeFacades' And '%(ReferenceCopyLocalPaths.Extension)' == '.dll' And '%(ReferenceCopyLocalPaths.RelativeDir)' == '' And Exists('%(ReferenceCopyLocalPaths.Identity)') "
      />
      <FilteredAssemblies
          Include="@(_ReferencePath)"
          Condition="'%(ReferencePath.ResolvedFrom)' != 'ImplicitlyExpandDesignTimeFacades' And Exists('%(_ReferencePath.Identity)') "
      />
    </ItemGroup>
    <!-- Find all the assemblies this app requires -->
    <ResolveAssemblies
        Assemblies="@(FilteredAssemblies)"
        I18nAssemblies="$(MandroidI18n)"
        LinkMode="$(AndroidLinkMode)"
        ProjectFile="$(MSBuildProjectFullPath)"
        TargetFrameworkVersion="$(TargetFrameworkVersion)"
        ProjectAssetFile="$(ProjectLockFile)"
        TargetMoniker="$(NuGetTargetMoniker)"
        ReferenceAssembliesDirectory="$(TargetFrameworkDirectory)">
      <Output TaskParameter="ResolvedAssemblies" ItemName="ResolvedAssemblies" />
      <Output TaskParameter="ResolvedUserAssemblies" ItemName="ResolvedUserAssemblies" />
      <Output TaskParameter="ResolvedFrameworkAssemblies" ItemName="ResolvedFrameworkAssemblies" />
      <Output TaskParameter="ResolvedSymbols" ItemName="ResolvedSymbols" />
      <Output TaskParameter="ResolvedDoNotPackageAttributes" ItemName="_ResolvedDoNotPackageAttributes" />
    </ResolveAssemblies>
    <Hash ItemsToHash="@(ResolvedAssemblies)">
      <Output TaskParameter="HashResult" PropertyName="_ResolvedUserAssembliesHash" />
    </Hash>
    <WriteLinesToFile
        File="$(_ResolvedUserAssembliesHashFile)"
        Lines="$(_ResolvedUserAssembliesHash)"
        Overwrite="true"
        WriteOnlyWhenDifferent="true"
    />
    <ItemGroup>
      <FileWrites Include="$(_ResolvedUserAssembliesHashFile)" />
    </ItemGroup>
  </Target>

  <Target Name="_CheckGoogleSdkRequirements"
      Condition="Exists('$(IntermediateOutputPath)android\AndroidManifest.xml') And '$(AndroidEnableGooglePlayStoreChecks)' == 'true' ">
    <CheckGoogleSdkRequirements
        TargetFrameworkVersion="$(TargetFrameworkVersion)"
        ManifestFile="$(IntermediateOutputPath)android\AndroidManifest.xml"
    />
  </Target>

</Project>
