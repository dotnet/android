<!--
***********************************************************************************************
Microsoft.Android.Sdk.ILLink.targets

This file contains the .NET 5-specific targets to customize ILLink

***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="_PrepareLinking"
      Condition=" '$(PublishTrimmed)' == 'true' "
      AfterTargets="ComputeResolvedFilesToPublishList"
      DependsOnTargets="GetReferenceAssemblyPaths;_CreatePropertiesCache">
    <PropertyGroup>
      <_TrimmerDumpDependencies Condition=" '$(LinkerDumpDependencies)' == 'true' ">true</_TrimmerDumpDependencies>
      <!-- make the output verbose to see what the linker is doing. FIXME: make dependent upon verbosity level -->
      <_ExtraTrimmerArgs>$(_ExtraTrimmerArgs) --verbose</_ExtraTrimmerArgs>
      <_CustomStepDll>$(MSBuildThisFileDirectory)..\tools\Microsoft.Android.Sdk.ILLink.dll</_CustomStepDll>
    </PropertyGroup>
    <ItemGroup>
      <RuntimeHostConfigurationOption Include="Android.Runtime.AndroidEnvironment.VSAndroidDesignerIsEnabled"
          Condition="'$(VSAndroidDesigner)' != ''"
          Value="$(VSAndroidDesigner)"
          Trim="true" />
      <!-- Mark all assemblies to be linked for AndroidLinkMode=Full -->
      <ResolvedFileToPublish
          Update="@(ResolvedFileToPublish)"
          Condition=" '$(AndroidLinkMode)' == 'Full' and '%(ResolvedFileToPublish.Extension)' == '.dll' and '%(ResolvedFileToPublish.AssetType)' != 'native' "
          TrimMode="link"
      />
      <!-- TODO: remove setting the trim mode here, once the support packages are updated to NET6 and compatability packages not needed -->
      <ResolvedFileToPublish
          Condition=" '$(AndroidLinkMode)' == 'SdkOnly' and ( $([System.String]::Copy(%(Filename)).StartsWith ('Xamarin.AndroidX.')) or $([System.String]::Copy(%(Filename)).StartsWith ('Xamarin.Android.Support.')) or $([System.String]::Copy(%(Filename)).StartsWith ('Xamarin.Google.')) or $([System.String]::Copy(%(Filename)).StartsWith ('Xamarin.GooglePlayServices.')) ) ">
        <TrimMode>link</TrimMode>
      </ResolvedFileToPublish>

      <_TrimmerCustomData Include="XATargetFrameworkDirectories" Value="$(_XATargetFrameworkDirectories)" />
      <_TrimmerCustomData Condition=" '$(_ProguardProjectConfiguration)' != '' " Include="ProguardConfiguration" Value="$(_ProguardProjectConfiguration)" />

      <!-- add our custom steps -->
      <!-- Custom steps that run before MarkStep -->
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" BeforeStep="MarkStep" Type="Microsoft.Android.Sdk.ILLink.SetupStep" />
      <!-- Custom MarkHandlers that run during MarkStep -->
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" Type="Microsoft.Android.Sdk.ILLink.PreserveSubStepDispatcher" />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" Type="MonoDroid.Tuner.MarkJavaObjects" />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" Type="MonoDroid.Tuner.PreserveJavaExceptions" />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" Type="MonoDroid.Tuner.PreserveApplications" />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" Type="Microsoft.Android.Sdk.ILLink.PreserveRegistrations" />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" Type="Microsoft.Android.Sdk.ILLink.PreserveJavaInterfaces" />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" Type="MonoDroid.Tuner.FixAbstractMethodsStep" />
      <!-- Custom steps that run after MarkStep -->
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" AfterStep="CleanStep" Type="Mono.Linker.Steps.GenerateProguardConfiguration"
                           Condition=" '$(_ProguardProjectConfiguration)' != '' " />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" AfterStep="CleanStep" Type="MonoDroid.Tuner.AddKeepAlivesStep"
                           Condition=" '$(AndroidAddKeepAlives)' == 'true' " />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" AfterStep="CleanStep" Type="MonoDroid.Tuner.RemoveResourceDesignerStep"
                           Condition=" '$(AndroidLinkResources)' == 'true' " />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" AfterStep="CleanStep" Type="MonoDroid.Tuner.GetAssembliesStep"
                           Condition=" '$(AndroidLinkResources)' == 'true' " />
      <_TrimmerCustomSteps Include="$(_CustomStepDll)" AfterStep="CleanStep" Type="MonoDroid.Tuner.StripEmbeddedLibraries" />

      <_PreserveLists Include="$(MSBuildThisFileDirectory)..\PreserveLists\*.xml" />
      <TrimmerRootDescriptor
          Condition=" '@(ResolvedFileToPublish->Count())' != '0' and '%(Filename)' != '' "
          Include="@(_PreserveLists)" />
      <TrimmerRootDescriptor Include="@(LinkDescription)" />
    </ItemGroup>
  </Target>

  <Target Name="_LinkAssemblies"
      DependsOnTargets="_ResolveAssemblies;_CreatePackageWorkspace;$(_BeforeLinkAssemblies);_GenerateJniMarshalMethods;_LinkAssembliesNoShrink"
  />

  <Target Name="_TouchAndroidLinkFlag"
      AfterTargets="ILLink"
      Condition=" '$(PublishTrimmed)' == 'true' and Exists('$(_LinkSemaphore)') "
      Inputs="$(_LinkSemaphore)"
      Outputs="$(_AndroidLinkFlag)">
    <!-- This file is an input for _RemoveRegisterAttribute -->
    <Touch Files="$(_AndroidLinkFlag)" AlwaysCreate="true" />
  </Target>

</Project>
