<!--
***********************************************************************************************
Microsoft.Android.Sdk.Application.targets

This file contains targets specific for Android application projects.

***********************************************************************************************
-->
<Project>
  <UsingTask TaskName="Xamarin.Android.Tasks.GetAndroidActivityName" AssemblyFile="$(_XamarinAndroidBuildTasksAssembly)" />
  <UsingTask TaskName="Xamarin.Android.BuildTools.PrepTasks.XASleepInternal" AssemblyFile="$(_XamarinAndroidBuildTasksAssembly)" />

  <PropertyGroup>
    <UseAppHost>false</UseAppHost>
    <!-- see: https://github.com/xamarin/xamarin-macios/blob/a6eb528197854c074d9dd5847328c096890337be/dotnet/targets/Xamarin.Shared.Sdk.props#L38-L52 -->
    <_RuntimeIdentifierUsesAppHost>false</_RuntimeIdentifierUsesAppHost>
    <RunCommand>dotnet</RunCommand>
    <RunArguments>build &quot;$(MSBuildProjectFullPath)&quot; -target:Run --configuration &quot;$(Configuration)&quot;</RunArguments>

    <!-- If Xamarin.Android.Common.Debugging.targets exists, we can rely on _Run for debugging. -->
    <_RunDependsOn Condition=" '$(_XASupportsFastDev)' == 'true' ">
      Install;
      _Run;
    </_RunDependsOn>
    <_RunDependsOn Condition=" '$(_XASupportsFastDev)' != 'true' ">
      Install;
      StartAndroidActivity;
    </_RunDependsOn>
  </PropertyGroup>

  <Target Name="Run" DependsOnTargets="$(_RunDependsOn)" />

  <PropertyGroup>
    <_RunWithLoggingDependsOn>
      Install;
    </_RunWithLoggingDependsOn>

    <_RunLogFilePath Condition=" '$(_RunLogFilePath)' == '' ">$(IntermediateOutputPath)logcat.txt</_RunLogFilePath>
    <RunLogVerbose Condition=" '$(RunLogVerbose)' == '' ">false</RunLogVerbose>
  </PropertyGroup>

  <Target Name="RunWithLogging"
          DependsOnTargets="$(_RunWithLoggingDependsOn)">
    <GetAndroidActivityName
        Condition=" '$(AndroidLaunchActivity)' == '' "
        ManifestFile="$(IntermediateOutputPath)android\AndroidManifest.xml">
      <Output TaskParameter="ActivityName" PropertyName="AndroidLaunchActivity" />
    </GetAndroidActivityName>

    <PropertyGroup>
      <_MonoLog>default,assembly,timing=bare</_MonoLog>
      <_MonoLog Condition=" '$(RunLogVerbose)' != 'false' ">$(_MonoLog),mono_log_level=debug,mono_log_mask=all</_MonoLog>
      <RunLogDelayInMS>1000</RunLogDelayInMS> <!-- milliseconds -->
    </PropertyGroup>

    <Message Text="Preparing application to log more information" Importance="High" />
    <Message Text="Setting the debug.mono.log property to: $(_MonoLog)" Importance="High" />
    <Exec Command="&quot;$(AdbToolPath)adb&quot; $(AdbTarget) shell setprop debug.mono.log $(_MonoLog)" />
    <Exec Command="&quot;$(AdbToolPath)adb&quot; $(AdbTarget) logcat -G 16M" />
    <Exec Command="&quot;$(AdbToolPath)adb&quot; $(AdbTarget) logcat -c" />

    <Message Text="Running the application and waiting for it to fully start" Importance="High" />
    <Exec Command="&quot;$(AdbToolPath)adb&quot; $(AdbTarget) shell am start -S -W -n &quot;$(_AndroidPackage)/$(AndroidLaunchActivity)&quot;" />

    <Message Text="Sleeping for $(RunLogDelayInMS)ms to give logcat a chance to log all the messages" Importance="High" />
    <XASleepInternal Milliseconds="$(RunLogDelayInMS)" />

    <Exec Command="&quot;$(AdbToolPath)adb&quot; $(AdbTarget) logcat -d > &quot;$(_RunLogFilePath)&quot;" />
    <Message Text="Logcat output is available in $(_RunLogFilePath)" Importance="High" />
  </Target>
</Project>
