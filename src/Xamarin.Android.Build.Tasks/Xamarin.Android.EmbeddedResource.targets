<!--
***********************************************************************************************
Xamarin.Android.EmbeddedResource.targets

This file contains MSBuild targets related to the creation or
extraction of `__AndroidLibraryProjects__.zip` or
`__AndroidNativeLibraries__.zip`. These are packaged as
`EmbeddedResource` files in Xamarin.Android assemblies. The actual
creation of these files has moved to Xamarin.Android.Legacy.targets.

This file is used by all project types, including binding projects.

***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="Xamarin.Android.Tasks.GetImportedLibraries"                AssemblyFile="Xamarin.Android.Build.Tasks.dll" />
  <UsingTask TaskName="Xamarin.Android.Tasks.ReadImportedLibrariesCache"          AssemblyFile="Xamarin.Android.Build.Tasks.dll" />
  <UsingTask TaskName="Xamarin.Android.Tasks.ReadLibraryProjectImportsCache"      AssemblyFile="Xamarin.Android.Build.Tasks.dll" />
  <UsingTask TaskName="Xamarin.Android.Tasks.ResolveLibraryProjectImports"        AssemblyFile="Xamarin.Android.Build.Tasks.dll" />

  <PropertyGroup>
    <_LibraryProjectImportsDirectoryName Condition=" '$(_LibraryProjectImportsDirectoryName)' == '' ">jl</_LibraryProjectImportsDirectoryName>
    <_NativeLibraryImportsDirectoryName  Condition=" '$(_NativeLibraryImportsDirectoryName)' == '' ">nl</_NativeLibraryImportsDirectoryName>
    <_AndroidLibraryImportsCache>$(IntermediateOutputPath)libraryimports.cache</_AndroidLibraryImportsCache>
    <_AndroidLibraryProjectImportsCache>$(IntermediateOutputPath)libraryprojectimports.cache</_AndroidLibraryProjectImportsCache>
    <_AndroidLibrayProjectIntermediatePath Condition=" '$(_AndroidLibrayProjectIntermediatePath)' == '' ">$(IntermediateOutputPath)lp\</_AndroidLibrayProjectIntermediatePath>
    <_AndroidLibrayProjectAssemblyMapFile>$(_AndroidLibrayProjectIntermediatePath)map.cache</_AndroidLibrayProjectAssemblyMapFile>
  </PropertyGroup>

  <Target Name="_ResolveLibraryProjectImports"
      DependsOnTargets="$(CoreResolveReferencesDependsOn)"
      Inputs="$(ProjectAssetsFile);$(MSBuildProjectFullPath);@(_MonoAndroidReferencePath);@(_MonoAndroidReferenceDependencyPaths);@(AndroidAarLibrary);$(_AndroidBuildPropertiesCache)"
      Outputs="$(_AndroidStampDirectory)_ResolveLibraryProjectImports.stamp">
    <ResolveLibraryProjectImports
        ContinueOnError="$(DesignTimeBuild)"
        CacheFile="$(_AndroidLibraryProjectImportsCache)"
        DesignTimeBuild="$(DesignTimeBuild)"
        Assemblies="@(_MonoAndroidReferencePath);@(_MonoAndroidReferenceDependencyPaths)"
        AarLibraries="@(AndroidAarLibrary)"
        ImportsDirectory="$(_LibraryProjectImportsDirectoryName)"
        NativeImportsDirectory="$(_NativeLibraryImportsDirectoryName)"
        OutputDirectory="$(IntermediateOutputPath)"
        AssemblyIdentityMapFile="$(_AndroidLibrayProjectAssemblyMapFile)"
        OutputImportDirectory="$(_AndroidLibrayProjectIntermediatePath)"
    />
    <Touch Files="$(_AndroidStampDirectory)_ResolveLibraryProjectImports.stamp" AlwaysCreate="true" />
  </Target>

  <Target Name="_ExtractLibraryProjectImports" DependsOnTargets="_ResolveLibraryProjectImports">
    <ReadLibraryProjectImportsCache
        CacheFile="$(_AndroidLibraryProjectImportsCache)">
      <Output TaskParameter="ResolvedResourceDirectories" ItemName="LibraryResourceDirectories" />
      <Output TaskParameter="ResolvedAssetDirectories" ItemName="LibraryAssetDirectories" />
      <Output TaskParameter="ResolvedEnvironmentFiles" ItemName="LibraryEnvironments" />
      <Output TaskParameter="ResolvedResourceDirectoryStamps" ItemName="_LibraryResourceDirectoryStamps" />
      <Output TaskParameter="ProguardConfigFiles" ItemName="ProguardConfiguration" />
    </ReadLibraryProjectImportsCache>
    <ItemGroup>
      <FileWrites Include="@(ResolvedResourceDirectories->'%(ResourceDirectoryArchive)')"
          Condition=" '%(ResolvedResourceDirectories.ResourceDirectoryArchive)' != '' And Exists ('%(ResolvedResourceDirectories.ResourceDirectoryArchive)')" />
    </ItemGroup>
  </Target>

  <Target Name="_BuildLibraryImportsCache"
      Inputs="$(_AndroidLibraryProjectImportsCache)"
      Outputs="$(_AndroidStampDirectory)_BuildLibraryImportsCache.stamp">
    <GetImportedLibraries
        TargetDirectory="$(_AndroidLibrayProjectIntermediatePath)"
        CacheFile="$(_AndroidLibraryImportsCache)"
    />
    <Touch Files="$(_AndroidStampDirectory)_BuildLibraryImportsCache.stamp" AlwaysCreate="true" />
    <ItemGroup>
      <FileWrites Include="$(_AndroidStampDirectory)_BuildLibraryImportsCache.stamp" />
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <_GetLibraryImportsDependsOnTargets Condition=" '$(_AndroidIsBindingProject)' == 'true' ">
      _ExtractLibraryProjectImports;
      _BuildLibraryImportsCache;
    </_GetLibraryImportsDependsOnTargets>
    <_GetLibraryImportsDependsOnTargets Condition=" '$(_AndroidIsBindingProject)' != 'true' ">
      _ExtractLibraryProjectImports;
      _AddMultiDexDependencyJars;
      _BuildLibraryImportsCache;
    </_GetLibraryImportsDependsOnTargets>
  </PropertyGroup>

  <Target Name="_GetLibraryImports" DependsOnTargets="$(_GetLibraryImportsDependsOnTargets)">
    <ReadImportedLibrariesCache CacheFile="$(_AndroidLibraryImportsCache)">
      <Output TaskParameter="Jars"              ItemName="ExtractedJarImports" />
      <Output TaskParameter="NativeLibraries"   ItemName="ExtractedNativeLibraryImports" />
      <Output TaskParameter="NativeLibraries"   ItemName="AndroidNativeLibrary" />
      <Output TaskParameter="ManifestDocuments" ItemName="ExtractedManifestDocuments" />
    </ReadImportedLibrariesCache>
  </Target>

</Project>
