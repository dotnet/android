<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\external\Java.Interop\bin\Build$(Configuration)\JdkInfo.props" Condition="Exists('..\..\external\Java.Interop\bin\Build$(Configuration)\JdkInfo.props')"/>
  <Import Project="monodroid.props" />
  <Import Project="monodroid.projitems" />
  <Import Project="..\..\build-tools\scripts\JavaInteropDllConfigs.targets" />
  <UsingTask AssemblyFile="$(BootstrapTasksAssembly)" TaskName="Xamarin.Android.Tools.BootstrapTasks.GenerateMonoDroidIncludes" />
  <UsingTask AssemblyFile="$(BootstrapTasksAssembly)" TaskName="Xamarin.Android.Tools.BootstrapTasks.RunParallelCmds" />
  <UsingTask AssemblyFile="$(PrepTasksAssembly)" TaskName="Xamarin.Android.BuildTools.PrepTasks.ReplaceFileContents" />
  <ItemGroup>
    <_EmbeddedBlobSource Include="config.xml" />
    <_EmbeddedBlobDestination Include="jni\config.include" />
    <_EmbeddedBlobSource Include="machine.config.xml" />
    <_EmbeddedBlobDestination Include="jni\machine.config.include" />
  </ItemGroup>
  <Target Name="_BuildRuntimes" BeforeTargets="Build"
      DependsOnTargets="_GenerateIncludeFiles;_ConfigureRuntimes;_BuildAndroidRuntimes;_BuildHostRuntimes">
  </Target>
  <Target Name="_GenerateIncludeFiles"
      Inputs="@(_EmbeddedBlobSource);jni\config.h"
      Outputs="@(_EmbeddedBlobDestination);$(MSBuildThisFileDirectory)bin\$(Configuration)\include\config.h">
    <Copy SourceFiles="jni/config.h" DestinationFiles="$(MSBuildThisFileDirectory)bin\$(Configuration)\include\config.h" />
    <GenerateMonoDroidIncludes SourceFiles="@(_EmbeddedBlobSource)" DestinationFiles="@(_EmbeddedBlobDestination)" />
  </Target>

  <Target Name="RunStaticAnalysis"
      Condition=" '$(HostOS)' != 'Windows' "
      Inputs="jni\*.cc;jni\**\*.c"
      Outputs="@(AndroidSupportedTargetJitAbi->'$(MSBuildThisFileDirectory)static-analysis.%(Identity).txt')">
    <Exec
        Command="clang-check -analyze -p=$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Debug jni\*.cc jni\**\*.c > @(AndroidSupportedTargetJitAbi->'$(MSBuildThisFileDirectory)static-analysis.%(Identity).txt 2>&amp;1')"
        WorkingDirectory="$(MSBuildThisFileDirectory)"
    />
  </Target>

  <Target Name="_PrepareConfigureRuntimeCommands"
      DependsOnTargets="_GetBuildHostRuntimes">
    <MakeDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Debug" />
    <ItemGroup>
      <_ConfigureRuntimeCommands
          Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>--debug-output $(_CmakeAndroidFlags) -DCONFIGURATION=Release -DCMAKE_BUILD_TYPE=Debug -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) $(MSBuildThisFileDirectory)</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Debug</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>

    <MakeDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-asan-Debug" />
    <ItemGroup>
      <_ConfigureRuntimeCommands
          Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>--debug-output $(_CmakeAndroidFlags) -DENABLE_CLANG_ASAN=ON -DCONFIGURATION=Release -DCMAKE_BUILD_TYPE=Debug -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) $(MSBuildThisFileDirectory)</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-asan-Debug</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>

    <MakeDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-ubsan-Debug" />
    <ItemGroup>
      <_ConfigureRuntimeCommands
          Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>--debug-output $(_CmakeAndroidFlags) -DENABLE_CLANG_UBSAN=ON -DCONFIGURATION=Release -DCMAKE_BUILD_TYPE=Debug -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) $(MSBuildThisFileDirectory)</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-ubsan-Debug</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>

    <MakeDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Release" />
    <ItemGroup>
      <_ConfigureRuntimeCommands
          Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>--debug-output $(_CmakeAndroidFlags) -DSTRIP_DEBUG=ON -DCONFIGURATION=Debug -DCMAKE_BUILD_TYPE=Release -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) $(MSBuildThisFileDirectory)</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Release</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>

    <MakeDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-asan-Release" />
    <ItemGroup>
      <_ConfigureRuntimeCommands
          Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>--debug-output $(_CmakeAndroidFlags) -DENABLE_CLANG_ASAN=ON -DSTRIP_DEBUG=ON -DCONFIGURATION=Debug -DCMAKE_BUILD_TYPE=Release -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) $(MSBuildThisFileDirectory)</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-asan-Release</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>

    <MakeDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-ubsan-Release" />
    <ItemGroup>
      <_ConfigureRuntimeCommands
          Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>--debug-output $(_CmakeAndroidFlags) -DENABLE_CLANG_UBSAN=ON -DSTRIP_DEBUG=ON -DCONFIGURATION=Debug -DCMAKE_BUILD_TYPE=Release -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevel) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(OutputPath)%(AndroidSupportedTargetJitAbi.Identity) $(MSBuildThisFileDirectory)</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-ubsan-Release</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>

    <MakeDir Directories="$(IntermediateOutputPath)%(_HostRuntime.OutputDirectory)-Debug" />
    <!-- CMAKE_RUNTIME_OUTPUT_DIRECTORY is provided for the mingw cross builds. DLL outputs are treated as _runtime_ objects (as opposed to _library_ ones for .so, .dylib etc) by cmake
         and so in order to put libmono-android.*.dll in the output dir we need to set this property. Since we build no executables here, it won't affect the non-DLL outputs.  -->
    <ItemGroup>
      <_ConfigureRuntimeCommands
          Include="@(_HostRuntime)">
        <Command>$(CmakePath)</Command>
        <Arguments>--debug-output %(_HostRuntime.CmakeFlags) -DCONFIGURATION=Release -DCMAKE_BUILD_TYPE=Debug -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=$(OutputPath)/%(_HostRuntime.OutputDirectory) -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(OutputPath)/%(_HostRuntime.OutputDirectory) -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=$(OutputPath)/%(_HostRuntime.OutputDirectory) $(MSBuildThisFileDirectory)</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(_HostRuntime.OutputDirectory)-Debug</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>

    <MakeDir Directories="$(IntermediateOutputPath)%(_HostRuntime.OutputDirectory)-Release" />
    <ItemGroup>
      <_ConfigureRuntimeCommands
          Include="@(_HostRuntime)">
        <Command>$(CmakePath)</Command>
        <Arguments>--debug-output %(_HostRuntime.CmakeFlags) -DSTRIP_DEBUG=ON -DCONFIGURATION=Debug -DCMAKE_BUILD_TYPE=Release -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=$(OutputPath)/%(_HostRuntime.OutputDirectory) -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(OutputPath)/%(_HostRuntime.OutputDirectory) -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=$(OutputPath)/%(_HostRuntime.OutputDirectory) $(MSBuildThisFileDirectory)</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(_HostRuntime.OutputDirectory)-Release</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>
  </Target>

  <Target Name="_ConfigureRuntimesInputs">
    <ItemGroup>
      <_ConfigureRuntimesInputs  Include="CMakeLists.txt" />
      <_ConfigureRuntimesInputs  Include="..\..\build-tools\scripts\cmake-common.props" />
      <_ConfigureRuntimesInputs  Include="..\..\build-tools\scripts\Ndk.targets" />
      <_ConfigureRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(IntermediateOutputPath)\%(Identity)-Debug\CMakeCache.txt')" />
      <_ConfigureRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(IntermediateOutputPath)\%(Identity)-Release\CMakeCache.txt')" />
      <_ConfigureRuntimesOutputs Include="@(_HostRuntime->'$(IntermediateOutputPath)%(OutputDirectory)-Debug\CMakeCache.txt')" />
      <_ConfigureRuntimesOutputs Include="@(_HostRuntime->'$(IntermediateOutputPath)%(OutputDirectory)-Release\CMakeCache.txt')" />
    </ItemGroup>
  </Target>

  <Target Name="_ConfigureRuntimes"
      DependsOnTargets="_PrepareConfigureRuntimeCommands;_ConfigureRuntimesInputs"
      Inputs="@(_ConfigureRuntimesInputs)"
      Outputs="@(_ConfigureRuntimesOutputs)">
    <RunParallelCmds Commands="@(_ConfigureRuntimeCommands)" />
    <Touch Files="@(_ConfigureRuntimesOutputs)" />
  </Target>

  <Target Name="_FindMonoDroidSources">
    <ItemGroup>
      <_MonoDroidSources Include="jni\*.cc;jni\*.h;jni\*.hh;jni\**\*.c;" />
    </ItemGroup>
  </Target>

  <Target Name="_BuildAndroidRuntimesInputs"
      DependsOnTargets="_FindMonoDroidSources">
    <ItemGroup>
      <_BuildAndroidRuntimesInputs  Include="@(AndroidSupportedTargetJitAbi->'$(IntermediateOutputPath)\%(Identity)-Debug\CMakeCache.txt')" />
      <_BuildAndroidRuntimesInputs  Include="@(AndroidSupportedTargetJitAbi->'$(IntermediateOutputPath)\%(Identity)-Release\CMakeCache.txt')" />
      <_BuildAndroidRuntimesInputs  Include="@(_MonoDroidSources)" />
      <_BuildAndroidRuntimesInputs  Include="..\..\build-tools\scripts\Ndk.targets" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android.debug.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android-checked+ubsan.debug.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android-checked+asan.debug.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android.release.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android-checked+asan.release.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android-checked+ubsan.release.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\Debug\libxamarin-app.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\Release\libxamarin-app.so')" />
    </ItemGroup>
  </Target>

  <Target Name="_BuildAndroidRuntimes"
      DependsOnTargets="_BuildAndroidRuntimesInputs"
      Inputs="@(_BuildAndroidRuntimesInputs)"
      Outputs="@(_BuildAndroidRuntimesOutputs)">
    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Debug"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-asan-Debug"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-ubsan-Debug"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Release"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-asan-Release"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-ubsan-Release"
    />

    <Touch Files="@(_BuildAndroidRuntimesOutputs)" />
  </Target>

  <Target Name="_BuildHostRuntimesInputs"
      DependsOnTargets="_FindMonoDroidSources">
    <ItemGroup>
      <_BuildHostRuntimesInputs  Include="@(_HostRuntime->'$(IntermediateOutputPath)%(OutputDirectory)-Debug\CMakeCache.txt')" />
      <_BuildHostRuntimesInputs  Include="@(_HostRuntime->'$(IntermediateOutputPath)%(OutputDirectory)-Release\CMakeCache.txt')" />
      <_BuildHostRuntimesInputs  Include="@(_MonoDroidSources)" />
      <_BuildHostRuntimesOutputs Include="@(_HostRuntime->'$(OutputPath)%(OutputDirectory)\libmono-android.debug.%(NativeLibraryExtension)')" />
      <_BuildHostRuntimesOutputs Include="@(_HostRuntime->'$(OutputPath)%(OutputDirectory)\libmono-android.release.%(NativeLibraryExtension)')" />
      <_BuildHostRuntimesOutputs Include="@(_HostRuntime->'$(OutputPath)%(OutputDirectory)\libxamarin-app.%(NativeLibraryExtension)')" />
    </ItemGroup>
  </Target>

  <Target Name="_BuildHostRuntimes"
      DependsOnTargets="_CreateJavaInteropDllConfigs;_BuildHostRuntimesInputs"
      Inputs="@(_BuildHostRuntimesInputs)"
      Outputs="@(_BuildHostRuntimesOutputs)">
    <Message Text="Building host runtime %(_HostRuntime.Identity) in $(OutputPath)%(_HostRuntime.OutputDirectory)"/>
    <MakeDir Directories="$(OutputPath)%(_HostRuntime.OutputDirectory)" />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(_HostRuntime.OutputDirectory)-Debug"
    />
    <Copy
        SourceFiles="@(_HostRuntime->'$(OutputPath)%(OutputDirectory)\libmono-android.debug.%(NativeLibraryExtension)')"
        DestinationFiles="@(_HostRuntime->'$(OutputPath)%(OutputDirectory)\libmono-android.debug.d.%(NativeLibraryExtension)')"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(_HostRuntime.OutputDirectory)-Release"
    />
    <Copy
        SourceFiles="@(_HostRuntime->'$(OutputPath)%(OutputDirectory)\libmono-android.release.%(NativeLibraryExtension)')"
        DestinationFiles="@(_HostRuntime->'$(OutputPath)%(OutputDirectory)\libmono-android.release.d.%(NativeLibraryExtension)')"
    />

    <Touch Files="@(_BuildHostRuntimesOutputs)" />
  </Target>
  <Target Name="_CleanRuntimes"
      DependsOnTargets="_GetBuildHostRuntimes"
      AfterTargets="Clean">
    <Exec
        Command="$(NinjaPath) -v clean"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Debug"
    />
    <Exec
        Command="$(NinjaPath) -v clean"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Release"
    />
    <RemoveDir Directories="obj\local;libs" />
    <RemoveDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Debug" />
    <RemoveDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Release" />
    <Delete Files="jni\config.include;jni\machine.config.include;jni\Application.mk" />
    <Delete Files="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android.debug.so')" />
    <Delete Files="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android.debug.d.so')" />
    <Delete Files="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android.release.so')" />
    <Delete Files="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(Identity)\libmono-android.release.d.so')" />
    <Delete Files="%(_EmbeddedBlob.Include)" />
    <Delete
        Files="@(_OutputDebugPath);@(_OutputDebugStripPath);@(_OutputReleasePath);@(_OutputReleaseStripPath)"
    />
  </Target>
  <Target Name="_GetBuildHostRuntimes">
    <ItemGroup>
      <_OutputDebugPath         Include="$(OutputPath)%(_HostRuntime.OutputDirectory)\libmono-android.debug.d.%(_HostRuntime.NativeLibraryExtension)" />
      <_OutputDebugStripPath    Include="$(OutputPath)%(_HostRuntime.OutputDirectory)\libmono-android.debug.%(_HostRuntime.NativeLibraryExtension)" />
      <_OutputReleasePath       Include="$(OutputPath)%(_HostRuntime.OutputDirectory)\libmono-android.release.d.%(_HostRuntime.NativeLibraryExtension)" />
      <_OutputReleaseStripPath  Include="$(OutputPath)%(_HostRuntime.OutputDirectory)\libmono-android.release.%(_HostRuntime.NativeLibraryExtension)" />
    </ItemGroup>
  </Target>

  <Target Name="CoreCompile"
      DependsOnTargets="Build">
  </Target>

  <Target Name="_GetCompileCommandsDirs"
          DependsOnTargets="_BuildHostRuntimes;_BuildAndroidRuntimes">
    <ItemGroup>
      <_CompileCommandsDir Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Debug">
        <LogTag>%(AndroidSupportedTargetJitAbi.Identity)-Debug</LogTag>
      </_CompileCommandsDir>
      <_CompileCommandsDir Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.Identity)-Release">
        <LogTag>%(AndroidSupportedTargetJitAbi.Identity)-Release</LogTag>
      </_CompileCommandsDir>

      <!-- clang-tidy won't work with mingw builds, we need to disable them -->
      <_CompileCommandsDir Include="$(IntermediateOutputPath)%(_HostRuntime.OutputDirectory)-Debug" Condition=" '%(_HostRuntime.Identity)' != 'host-mxe-Win64' And '%(_HostRuntime.Identity)' != 'host-mxe-Win32' ">
        <LogTag>%(_HostRuntime.OutputDirectory)-Debug</LogTag>
      </_CompileCommandsDir>
      <_CompileCommandsDir Include="$(IntermediateOutputPath)%(_HostRuntime.OutputDirectory)-Release" Condition=" '%(_HostRuntime.Identity)' != 'host-mxe-Win64' And '%(_HostRuntime.Identity)' != 'host-mxe-Win32' ">
        <LogTag>%(_HostRuntime.OutputDirectory)-Release</LogTag>
      </_CompileCommandsDir>
    </ItemGroup>
  </Target>

  <Target Name="ClangTidyCheck"
          DependsOnTargets="_GetCompileCommandsDirs">
    <PropertyGroup>
      <ClangTidy>$(AndroidNdkDirectory)\toolchains\llvm\prebuilt\$(NdkLlvmTag)\bin\clang-tidy</ClangTidy>
    </PropertyGroup>

    <Exec
        ContinueOnError="ErrorAndContinue"
        Command="$(ClangTidy) -p $(MSBuildThisFileDirectory)%(_CompileCommandsDir.Identity) *.cc > ..\..\..\bin\Build$(Configuration)\clang-tidy.%(_CompileCommandsDir.LogTag).log"
        WorkingDirectory="$(MSBuildThisFileDirectory)\jni"
    />
  </Target>
</Project>
