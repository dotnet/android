<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\external\Java.Interop\bin\Build$(Configuration)\JdkInfo.props" Condition="Exists('..\..\external\Java.Interop\bin\Build$(Configuration)\JdkInfo.props')"/>
  <UsingTask AssemblyFile="$(BootstrapTasksAssembly)" TaskName="Xamarin.Android.Tools.BootstrapTasks.GenerateMonoDroidIncludes" />
  <UsingTask AssemblyFile="$(BootstrapTasksAssembly)" TaskName="Xamarin.Android.Tools.BootstrapTasks.RunParallelCmds" />
  <UsingTask AssemblyFile="$(PrepTasksAssembly)" TaskName="Xamarin.Android.BuildTools.PrepTasks.ReplaceFileContents" />
  <ItemGroup>
    <_EmbeddedBlobSource Include="config.xml" />
    <_EmbeddedBlobDestination Include="jni\config.include" />
    <_EmbeddedBlobSource Include="machine.config.xml" />
    <_EmbeddedBlobDestination Include="jni\machine.config.include" />
  </ItemGroup>

  <PropertyGroup>
    <PinvokeGeneratorSource>jni\generate-pinvoke-tables.cc</PinvokeGeneratorSource>
    <PinvokeTablesFile>jni\pinvoke-tables.include</PinvokeTablesFile>
  </PropertyGroup>

  <Target Name="_BuildRuntimes" BeforeTargets="Build"
      DependsOnTargets="_GenerateIncludeFiles;_ConfigureRuntimes;_BuildAndroidRuntimes;_BuildAndroidAnalyzerRuntimes;_CopyToPackDirs">
  </Target>
  <Target Name="_TestPinvokeTables" Condition=" '$(HostOS)' == 'Linux' And '$(RunningOnCI)' == 'true' ">
    <Exec
        Command="..\..\build-tools\scripts\generate-pinvoke-tables.sh --test-only --ci"
        WorkingDirectory="$(MSBuildThisFileDirectory)"
    />
  </Target>

  <Target Name="_GenerateIncludeFiles"
      Inputs="@(_EmbeddedBlobSource);jni\config.h"
      Outputs="@(_EmbeddedBlobDestination);$(MSBuildThisFileDirectory)bin\$(Configuration)\include\config.h"
      DependsOnTargets="_TestPinvokeTables;_GetMonoAndroidRuntimeH">
    <Copy SourceFiles="jni/config.h" DestinationFiles="$(MSBuildThisFileDirectory)bin\$(Configuration)\include\config.h" />
    <GenerateMonoDroidIncludes SourceFiles="@(_EmbeddedBlobSource)" DestinationFiles="@(_EmbeddedBlobDestination)" />
  </Target>

  <Target Name="_GetMonoAndroidRuntimeH"
      Inputs="$(OutputPath)..\mono_android_Runtime.h"
      Outputs="jni/mono_android_Runtime.h">
    <Copy
        SourceFiles="$(OutputPath)..\mono_android_Runtime.h"
        DestinationFiles="jni/mono_android_Runtime.h"
        SkipUnchangedFiles="True"
    />
    <Touch Files="jni/mono_android_Runtime.h" />
  </Target>

  <Target Name="RunStaticAnalysis"
      Condition=" '$(HostOS)' != 'Windows' "
      Inputs="jni\*.cc;jni\**\*.c"
      Outputs="@(AndroidSupportedTargetJitAbi->'$(MSBuildThisFileDirectory)static-analysis.%(Identity).txt')">
    <Exec
        Command="clang-check -analyze -p=$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Debug jni\*.cc jni\**\*.c > @(AndroidSupportedTargetJitAbi->'$(MSBuildThisFileDirectory)static-analysis.%(Identity).txt 2>&amp;1')"
        WorkingDirectory="$(MSBuildThisFileDirectory)"
    />
  </Target>

  <Target Name="_ConfigureRuntimesInputs">
    <ItemGroup>
      <_ConfigureRuntimesInputs  Include="CMakeLists.txt" />
      <_ConfigureRuntimesInputs  Include="..\..\build-tools\scripts\Ndk.targets" />
      <_ConfigureRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(IntermediateOutputPath)\%(AndroidRID)-Debug\CMakeCache.txt')" />
      <_ConfigureRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(IntermediateOutputPath)\%(AndroidRID)-Release\CMakeCache.txt')" />
      <_OutputDirsToCreate       Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Debug" />
      <_OutputDirsToCreate       Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Release" />
      <_OutputDirsToCreate       Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-asan-Debug"     Condition="'$(EnableNativeAnalyzers)' == 'true'" />
      <_OutputDirsToCreate       Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-ubsan-Debug"    Condition="'$(EnableNativeAnalyzers)' == 'true'" />
      <_OutputDirsToCreate       Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-asan-Release"   Condition="'$(EnableNativeAnalyzers)' == 'true'" />
      <_OutputDirsToCreate       Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-ubsan-Release"  Condition="'$(EnableNativeAnalyzers)' == 'true'" />
    </ItemGroup>
  </Target>

  <Target Name="_ConfigureRuntimes"
      DependsOnTargets="_ConfigureRuntimesInputs"
      Inputs="@(_ConfigureRuntimesInputs)"
      Outputs="@(_ConfigureRuntimesOutputs)">
    <PropertyGroup>
      <_NoInline Condition=" '$(DoNotInlineMonodroid)' == 'true' ">-DDONT_INLINE=ON</_NoInline>
      <_NoStrip Condition=" '$(DoNotStripMonodroid)' == 'true' ">-DSTRIP_DEBUG=OFF</_NoStrip>
      <_CmakeAndroidFlags>$(_NoInline) $(_NoStrip) --debug-output -GNinja -DCMAKE_MAKE_PROGRAM="$(NinjaPath)" -DXA_BUILD_CONFIGURATION=$(Configuration) -DXA_LIB_TOP_DIR=$(MicrosoftAndroidSdkOutDir) -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DMONO_PATH="$(MonoSourceFullPath)" -DANDROID_STL="none" -DANDROID_CPP_FEATURES="no-rtti no-exceptions" -DANDROID_TOOLCHAIN=clang -DCMAKE_TOOLCHAIN_FILE="$(AndroidNdkDirectory)/build/cmake/android.toolchain.cmake" -DANDROID_NDK=$(AndroidNdkDirectory)</_CmakeAndroidFlags>
    </PropertyGroup>
    <MakeDir Directories="@(_OutputDirsToCreate)"/>
    <ItemGroup>
      <_ConfigureRuntimeCommands Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>$(_CmakeAndroidFlags) -DCONFIGURATION=Release -DCMAKE_BUILD_TYPE=Debug -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DANDROID_RID=%(AndroidSupportedTargetJitAbi.AndroidRID) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" -DCMAKE_LIBRARY_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" "$(MSBuildThisFileDirectory)"</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Debug</WorkingDirectory>
      </_ConfigureRuntimeCommands>
      <_ConfigureRuntimeCommands Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>$(_CmakeAndroidFlags) -DCONFIGURATION=Debug -DCMAKE_BUILD_TYPE=Release -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DANDROID_RID=%(AndroidSupportedTargetJitAbi.AndroidRID) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" -DCMAKE_LIBRARY_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" "$(MSBuildThisFileDirectory)"</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Release</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>
    <ItemGroup Condition="'$(EnableNativeAnalyzers)' == 'true'" >
      <_ConfigureRuntimeCommands Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>$(_CmakeAndroidFlags) -DCONFIGURATION=Release -DCMAKE_BUILD_TYPE=Debug -DENABLE_CLANG_ASAN=ON -DANDROID_STL="c++_static" -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DANDROID_RID=%(AndroidSupportedTargetJitAbi.AndroidRID) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" -DCMAKE_LIBRARY_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" "$(MSBuildThisFileDirectory)"</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-asan-Debug</WorkingDirectory>
      </_ConfigureRuntimeCommands>
      <_ConfigureRuntimeCommands Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>$(_CmakeAndroidFlags) -DCONFIGURATION=Release -DCMAKE_BUILD_TYPE=Debug -DENABLE_CLANG_UBSAN=ON -DANDROID_STL="c++_static" -DANDROID_CPP_FEATURES="rtti exceptions" -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DANDROID_RID=%(AndroidSupportedTargetJitAbi.AndroidRID) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" -DCMAKE_LIBRARY_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" "$(MSBuildThisFileDirectory)"</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-ubsan-Debug</WorkingDirectory>
      </_ConfigureRuntimeCommands>
      <_ConfigureRuntimeCommands Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>$(_CmakeAndroidFlags) -DCONFIGURATION=Debug -DCMAKE_BUILD_TYPE=Release  -DENABLE_CLANG_ASAN=ON -DANDROID_STL="c++_static" -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DANDROID_RID=%(AndroidSupportedTargetJitAbi.AndroidRID) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" -DCMAKE_LIBRARY_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" "$(MSBuildThisFileDirectory)"</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-asan-Release</WorkingDirectory>
      </_ConfigureRuntimeCommands>
      <_ConfigureRuntimeCommands Include="@(AndroidSupportedTargetJitAbi)">
        <Command>$(CmakePath)</Command>
        <Arguments>$(_CmakeAndroidFlags) -DCONFIGURATION=Debug -DCMAKE_BUILD_TYPE=Release -DENABLE_CLANG_UBSAN=ON -DANDROID_STL="c++_static" -DANDROID_CPP_FEATURES="rtti exceptions" -DANDROID_NATIVE_API_LEVEL=%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_PLATFORM=android-%(AndroidSupportedTargetJitAbi.ApiLevelNET) -DANDROID_ABI=%(AndroidSupportedTargetJitAbi.Identity) -DANDROID_RID=%(AndroidSupportedTargetJitAbi.AndroidRID) -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" -DCMAKE_LIBRARY_OUTPUT_DIRECTORY="$(OutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)" "$(MSBuildThisFileDirectory)"</Arguments>
        <WorkingDirectory>$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-ubsan-Release</WorkingDirectory>
      </_ConfigureRuntimeCommands>
    </ItemGroup>
    <RunParallelCmds Commands="@(_ConfigureRuntimeCommands)" />
    <Touch Files="@(_ConfigureRuntimesOutputs)" />
  </Target>

  <Target Name="_FindMonoDroidSources">
    <ItemGroup>
      <_MonoDroidSources Include="jni\*.cc;jni\*.h;jni\*.hh;jni\**\*.c;" />
    </ItemGroup>
  </Target>

  <Target Name="_BuildAndroidRuntimesInputs"
      DependsOnTargets="_FindMonoDroidSources">
    <ItemGroup>
      <_BuildAndroidRuntimesInputs  Include="@(AndroidSupportedTargetJitAbi->'$(IntermediateOutputPath)\%(AndroidRID)-Debug\CMakeCache.txt')" />
      <_BuildAndroidRuntimesInputs  Include="@(AndroidSupportedTargetJitAbi->'$(IntermediateOutputPath)\%(AndroidRID)-Release\CMakeCache.txt')" />
      <_BuildAndroidRuntimesInputs  Include="@(_MonoDroidSources)" />
      <_BuildAndroidRuntimesInputs  Include="..\..\build-tools\scripts\Ndk.targets" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android.debug.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android.release.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\Debug\libxamarin-app.so')" />
      <_BuildAndroidRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\Release\libxamarin-app.so')" />
    </ItemGroup>
    <ItemGroup  Condition=" '$(EnableNativeAnalyzers)' == 'true' ">
      <_BuildAndroidAnalyzerRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android-checked+ubsan.debug.so')" />
      <_BuildAndroidAnalyzerRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android-checked+asan.debug.so')" />
      <_BuildAndroidAnalyzerRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android-checked+asan.release.so')" />
      <_BuildAndroidAnalyzerRuntimesOutputs Include="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android-checked+ubsan.release.so')" />
    </ItemGroup>
  </Target>

  <Target Name="_BuildAndroidRuntimes"
      DependsOnTargets="_BuildAndroidRuntimesInputs"
      Inputs="@(_BuildAndroidRuntimesInputs)"
      Outputs="@(_BuildAndroidRuntimesOutputs)">
    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Debug"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Release"
    />

    <Touch Files="@(_BuildAndroidRuntimesOutputs)" />
  </Target>

  <Target Name="_BuildAndroidAnalyzerRuntimes"
      Condition=" '$(EnableNativeAnalyzers)' == 'true' "
      DependsOnTargets="_BuildAndroidRuntimesInputs"
      Inputs="@(_BuildAndroidRuntimesInputs)"
      Outputs="@(_BuildAndroidAnalyzerRuntimesOutputs)">
    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-asan-Debug"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-ubsan-Debug"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-asan-Release"
    />

    <Exec
        Command="$(NinjaPath) -v"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-ubsan-Release"
    />

    <Touch Files="@(_BuildAndroidAnalyzerRuntimesOutputs)" />
  </Target>

  <Target Name="_CleanRuntimes"
      AfterTargets="Clean">
    <Exec
        Command="$(NinjaPath) -v clean"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Debug"
    />
    <Exec
        Command="$(NinjaPath) -v clean"
        WorkingDirectory="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Release"
    />
    <RemoveDir Directories="obj\local;libs" />
    <RemoveDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Debug" />
    <RemoveDir Directories="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Release" />
    <Delete Files="jni\config.include;jni\machine.config.include;jni\Application.mk" />
    <Delete Files="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android.debug.so')" />
    <Delete Files="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android.debug.d.so')" />
    <Delete Files="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android.release.so')" />
    <Delete Files="@(AndroidSupportedTargetJitAbi->'$(OutputPath)\%(AndroidRID)\libmono-android.release.d.so')" />
    <Delete Files="%(_EmbeddedBlob.Include)" />

  </Target>

  <Target Name="CoreCompile"
      DependsOnTargets="Build">
  </Target>

  <Target Name="_GetCompileCommandsDirs"
          DependsOnTargets="_BuildAndroidRuntimes">
    <ItemGroup>
      <_CompileCommandsDir Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Debug">
        <LogTag>%(AndroidSupportedTargetJitAbi.AndroidRID)-Debug</LogTag>
      </_CompileCommandsDir>
      <_CompileCommandsDir Include="$(IntermediateOutputPath)%(AndroidSupportedTargetJitAbi.AndroidRID)-Release">
        <LogTag>%(AndroidSupportedTargetJitAbi.AndroidRID)-Release</LogTag>
      </_CompileCommandsDir>
    </ItemGroup>
  </Target>

  <Target Name="ClangTidyCheck"
      Condition=" '$(EnableNativeAnalyzers)' == 'true' "
      DependsOnTargets="_GetCompileCommandsDirs">
    <PropertyGroup>
      <ClangTidy>$(AndroidNdkDirectory)\toolchains\llvm\prebuilt\$(NdkLlvmTag)\bin\clang-tidy</ClangTidy>
    </PropertyGroup>

    <Exec
        ContinueOnError="ErrorAndContinue"
        Command="$(ClangTidy) -p $(MSBuildThisFileDirectory)%(_CompileCommandsDir.Identity) *.cc > ..\..\..\bin\Build$(Configuration)\clang-tidy.%(_CompileCommandsDir.LogTag).log"
        WorkingDirectory="$(MSBuildThisFileDirectory)\jni"
    />
  </Target>

  <Target Name="_CopyToPackDirs">
    <ItemGroup>
      <_ArmRuntimePackFiles   Include="$(OutputPath)\android-arm\*.*" />
      <_Arm64RuntimePackFiles Include="$(OutputPath)\android-arm64\*.*" />
      <_x86RuntimePackFiles   Include="$(OutputPath)\android-x86\*.*" />
      <_x64RuntimePackFiles   Include="$(OutputPath)\android-x64\*.*" />
    </ItemGroup>
    <Copy
        SourceFiles="@(_ArmRuntimePackFiles)"
        DestinationFolder="$(MicrosoftAndroidArmPackDir)native"
        SkipUnchangedFiles="true"
    />
    <Copy
        SourceFiles="@(_Arm64RuntimePackFiles)"
        DestinationFolder="$(MicrosoftAndroidArm64PackDir)native"
        SkipUnchangedFiles="true"
    />
    <Copy
        SourceFiles="@(_x86RuntimePackFiles)"
        DestinationFolder="$(MicrosoftAndroidx86PackDir)native"
        SkipUnchangedFiles="true"
    />
    <Copy
        SourceFiles="@(_x64RuntimePackFiles)"
        DestinationFolder="$(MicrosoftAndroidx64PackDir)native"
        SkipUnchangedFiles="true"
    />
  </Target>
</Project>
