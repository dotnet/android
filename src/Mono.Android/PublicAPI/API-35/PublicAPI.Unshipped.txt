#nullable enable
abstract Android.AdServices.OnDevicePersonalization.IsolatedService.OnRequest(Android.AdServices.OnDevicePersonalization.RequestToken! requestToken) -> Android.AdServices.OnDevicePersonalization.IIsolatedWorker!
abstract Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup.CreateCaptureRequest(int templateType) -> Android.Hardware.Camera2.CaptureRequest.Builder!
abstract Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup.GetSessionCharacteristics(Android.Hardware.Camera2.Params.SessionConfiguration! sessionConfig) -> Android.Hardware.Camera2.CameraCharacteristics!
abstract Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup.Id.get -> string!
abstract Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup.IsSessionConfigurationSupported(Android.Hardware.Camera2.Params.SessionConfiguration! config) -> bool
abstract Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup.OpenCamera(Java.Util.Concurrent.IExecutor! executor, Android.Hardware.Camera2.CameraDevice.StateCallback! callback) -> void
abstract Android.Media.Midi.MidiUmpDeviceService.OnGetInputPortReceivers() -> System.Collections.Generic.IList<Android.Media.Midi.MidiReceiver!>!
abstract Android.Net.Wifi.WifiManager.WpsCallback.OnFailed(Android.Net.Wifi.WpsFailureReason reason) -> void
Android.AccessibilityServices.AccessibilityService.BrailleDisplayController.get -> Android.AccessibilityServices.IBrailleDisplayController!
Android.AccessibilityServices.BrailleDisplayCallbackError
Android.AccessibilityServices.BrailleDisplayCallbackError.BrailleDisplayNotFound = 2 -> Android.AccessibilityServices.BrailleDisplayCallbackError
Android.AccessibilityServices.BrailleDisplayCallbackError.CannotAccess = 1 -> Android.AccessibilityServices.BrailleDisplayCallbackError
Android.AccessibilityServices.IBrailleDisplayController
Android.AccessibilityServices.IBrailleDisplayController.Connect(Android.Bluetooth.BluetoothDevice! bluetoothDevice, Android.AccessibilityServices.IBrailleDisplayController.IBrailleDisplayCallback! callback) -> void
Android.AccessibilityServices.IBrailleDisplayController.Connect(Android.Bluetooth.BluetoothDevice! bluetoothDevice, Java.Util.Concurrent.IExecutor! callbackExecutor, Android.AccessibilityServices.IBrailleDisplayController.IBrailleDisplayCallback! callback) -> void
Android.AccessibilityServices.IBrailleDisplayController.Connect(Android.Hardware.Usb.UsbDevice! usbDevice, Android.AccessibilityServices.IBrailleDisplayController.IBrailleDisplayCallback! callback) -> void
Android.AccessibilityServices.IBrailleDisplayController.Connect(Android.Hardware.Usb.UsbDevice! usbDevice, Java.Util.Concurrent.IExecutor! callbackExecutor, Android.AccessibilityServices.IBrailleDisplayController.IBrailleDisplayCallback! callback) -> void
Android.AccessibilityServices.IBrailleDisplayController.Disconnect() -> void
Android.AccessibilityServices.IBrailleDisplayController.IBrailleDisplayCallback
Android.AccessibilityServices.IBrailleDisplayController.IBrailleDisplayCallback.OnConnected(byte[]! hidDescriptor) -> void
Android.AccessibilityServices.IBrailleDisplayController.IBrailleDisplayCallback.OnConnectionFailed(int errorFlags) -> void
Android.AccessibilityServices.IBrailleDisplayController.IBrailleDisplayCallback.OnDisconnected() -> void
Android.AccessibilityServices.IBrailleDisplayController.IBrailleDisplayCallback.OnInput(byte[]! input) -> void
Android.AccessibilityServices.IBrailleDisplayController.IsConnected.get -> bool
Android.AccessibilityServices.IBrailleDisplayController.Write(byte[]! buffer) -> void
Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest
Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest.AddAdSelectionFromOutcomesOverrideRequest(Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig! adSelectionFromOutcomesConfig, string! outcomeSelectionLogicJs, Android.AdServices.Common.AdSelectionSignals! outcomeSelectionTrustedSignals) -> void
Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest.AddAdSelectionFromOutcomesOverrideRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.AdSelection.AddAdSelectionOverrideRequest.AddAdSelectionOverrideRequest(Android.AdServices.AdSelection.AdSelectionConfig! adSelectionConfig, string! decisionLogicJs, Android.AdServices.Common.AdSelectionSignals! trustedScoringSignals, Android.AdServices.AdSelection.PerBuyerDecisionLogic! perBuyerDecisionLogic) -> void
Android.AdServices.AdSelection.AdSelectionConfig.Builder.SetPerBuyerSignedContextualAds(System.Collections.Generic.IDictionary<Android.AdServices.Common.AdTechIdentifier!, Android.AdServices.AdSelection.SignedContextualAds!>! buyerSignedContextualAds) -> Android.AdServices.AdSelection.AdSelectionConfig.Builder!
Android.AdServices.AdSelection.AdSelectionConfig.PerBuyerSignedContextualAds.get -> System.Collections.Generic.IDictionary<Android.AdServices.Common.AdTechIdentifier!, Android.AdServices.AdSelection.SignedContextualAds!>!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.AdSelectionIds.get -> System.Collections.Generic.IList<Java.Lang.Long!>!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder.Build() -> Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder.Builder() -> void
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder.SetAdSelectionIds(System.Collections.Generic.IList<Java.Lang.Long!>! adSelectionIds) -> Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder.SetSelectionLogicUri(Android.Net.Uri! selectionLogicUri) -> Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder.SetSelectionSignals(Android.AdServices.Common.AdSelectionSignals! selectionSignals) -> Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder.SetSeller(Android.AdServices.Common.AdTechIdentifier! seller) -> Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.DescribeContents() -> int
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.InterfaceConsts
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.SelectionLogicUri.get -> Android.Net.Uri!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.SelectionSignals.get -> Android.AdServices.Common.AdSelectionSignals!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Seller.get -> Android.AdServices.Common.AdTechIdentifier!
Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.AdSelection.AdWithBid
Android.AdServices.AdSelection.AdWithBid.AdData.get -> Android.AdServices.Common.AdData!
Android.AdServices.AdSelection.AdWithBid.AdWithBid(Android.AdServices.Common.AdData! adData, double bid) -> void
Android.AdServices.AdSelection.AdWithBid.Bid.get -> double
Android.AdServices.AdSelection.AdWithBid.DescribeContents() -> int
Android.AdServices.AdSelection.AdWithBid.InterfaceConsts
Android.AdServices.AdSelection.AdWithBid.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.AdSelection.DecisionLogic
Android.AdServices.AdSelection.DecisionLogic.DecisionLogic(string! buyerDecisionLogic) -> void
Android.AdServices.AdSelection.DecisionLogic.DescribeContents() -> int
Android.AdServices.AdSelection.DecisionLogic.InterfaceConsts
Android.AdServices.AdSelection.DecisionLogic.Logic.get -> string!
Android.AdServices.AdSelection.DecisionLogic.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.AdSelection.GetAdSelectionDataOutcome
Android.AdServices.AdSelection.GetAdSelectionDataOutcome.AdSelectionDataId.get -> long
Android.AdServices.AdSelection.GetAdSelectionDataOutcome.AdSelectionId.get -> long
Android.AdServices.AdSelection.GetAdSelectionDataOutcome.GetAdSelectionData() -> byte[]?
Android.AdServices.AdSelection.GetAdSelectionDataRequest
Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder
Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder.Build() -> Android.AdServices.AdSelection.GetAdSelectionDataRequest!
Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder.Builder() -> void
Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder.SetCoordinatorOriginUri(Android.Net.Uri? coordinatorOriginUri) -> Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder!
Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder.SetSeller(Android.AdServices.Common.AdTechIdentifier? seller) -> Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder!
Android.AdServices.AdSelection.GetAdSelectionDataRequest.CoordinatorOriginUri.get -> Android.Net.Uri?
Android.AdServices.AdSelection.GetAdSelectionDataRequest.Seller.get -> Android.AdServices.Common.AdTechIdentifier?
Android.AdServices.AdSelection.PerBuyerDecisionLogic
Android.AdServices.AdSelection.PerBuyerDecisionLogic.DescribeContents() -> int
Android.AdServices.AdSelection.PerBuyerDecisionLogic.InterfaceConsts
Android.AdServices.AdSelection.PerBuyerDecisionLogic.PerBuyerDecisionLogic(System.Collections.Generic.IDictionary<Android.AdServices.Common.AdTechIdentifier!, Android.AdServices.AdSelection.DecisionLogic!>! perBuyerLogicMap) -> void
Android.AdServices.AdSelection.PerBuyerDecisionLogic.PerBuyerLogicMap.get -> System.Collections.Generic.IDictionary<Android.AdServices.Common.AdTechIdentifier!, Android.AdServices.AdSelection.DecisionLogic!>!
Android.AdServices.AdSelection.PerBuyerDecisionLogic.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.AdSelection.PersistAdSelectionResultRequest
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.AdSelectionDataId.get -> long
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.AdSelectionId.get -> long
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder.Build() -> Android.AdServices.AdSelection.PersistAdSelectionResultRequest!
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder.Builder() -> void
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder.SetAdSelectionDataId(long adSelectionDataId) -> Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder!
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder.SetAdSelectionId(long adSelectionId) -> Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder!
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder.SetAdSelectionResult(byte[]? adSelectionResult) -> Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder!
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder.SetSeller(Android.AdServices.Common.AdTechIdentifier? seller) -> Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder!
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.GetAdSelectionResult() -> byte[]?
Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Seller.get -> Android.AdServices.Common.AdTechIdentifier?
Android.AdServices.AdSelection.RemoveAdSelectionFromOutcomesOverrideRequest
Android.AdServices.AdSelection.RemoveAdSelectionFromOutcomesOverrideRequest.RemoveAdSelectionFromOutcomesOverrideRequest(Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig! config) -> void
Android.AdServices.AdSelection.RemoveAdSelectionFromOutcomesOverrideRequest.RemoveAdSelectionFromOutcomesOverrideRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.AdSelection.ReportEventRequest
Android.AdServices.AdSelection.ReportEventRequest.Builder
Android.AdServices.AdSelection.ReportEventRequest.Builder.Build() -> Android.AdServices.AdSelection.ReportEventRequest!
Android.AdServices.AdSelection.ReportEventRequest.Builder.Builder(long adSelectionId, string! eventKey, string! eventData, int reportingDestinations) -> void
Android.AdServices.AdSelection.ReportEventRequest.Builder.SetAdSelectionId(long adSelectionId) -> Android.AdServices.AdSelection.ReportEventRequest.Builder!
Android.AdServices.AdSelection.ReportEventRequest.Builder.SetData(string! eventData) -> Android.AdServices.AdSelection.ReportEventRequest.Builder!
Android.AdServices.AdSelection.ReportEventRequest.Builder.SetInputEvent(Android.Views.InputEvent? inputEvent) -> Android.AdServices.AdSelection.ReportEventRequest.Builder!
Android.AdServices.AdSelection.ReportEventRequest.Builder.SetKey(string! eventKey) -> Android.AdServices.AdSelection.ReportEventRequest.Builder!
Android.AdServices.AdSelection.ReportEventRequest.Builder.SetReportingDestinations(int reportingDestinations) -> Android.AdServices.AdSelection.ReportEventRequest.Builder!
Android.AdServices.AdSelection.ReportEventRequest.ReportEventRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.AdSelection.ReportImpressionRequest.ReportImpressionRequest(long adSelectionId) -> void
Android.AdServices.AdSelection.ReportingDestination
Android.AdServices.AdSelection.ReportingDestination.Buyer = 2 -> Android.AdServices.AdSelection.ReportingDestination
Android.AdServices.AdSelection.ReportingDestination.Seller = 1 -> Android.AdServices.AdSelection.ReportingDestination
Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest
Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.Builder
Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.Builder.Build() -> Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest!
Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.Builder.Builder() -> void
Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.Builder.SetAdvertisers(System.Collections.Generic.ICollection<Android.AdServices.Common.AdTechIdentifier!>! advertisers) -> Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.Builder!
Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.SetAppInstallAdvertisersRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.AdSelection.SignedContextualAds
Android.AdServices.AdSelection.SignedContextualAds.AdsWithBid.get -> System.Collections.Generic.IList<Android.AdServices.AdSelection.AdWithBid!>!
Android.AdServices.AdSelection.SignedContextualAds.Builder
Android.AdServices.AdSelection.SignedContextualAds.Builder.Build() -> Android.AdServices.AdSelection.SignedContextualAds!
Android.AdServices.AdSelection.SignedContextualAds.Builder.Builder() -> void
Android.AdServices.AdSelection.SignedContextualAds.Builder.Builder(Android.AdServices.AdSelection.SignedContextualAds! signedContextualAds) -> void
Android.AdServices.AdSelection.SignedContextualAds.Builder.SetAdsWithBid(System.Collections.Generic.IList<Android.AdServices.AdSelection.AdWithBid!>! adsWithBid) -> Android.AdServices.AdSelection.SignedContextualAds.Builder!
Android.AdServices.AdSelection.SignedContextualAds.Builder.SetBuyer(Android.AdServices.Common.AdTechIdentifier! buyer) -> Android.AdServices.AdSelection.SignedContextualAds.Builder!
Android.AdServices.AdSelection.SignedContextualAds.Builder.SetDecisionLogicUri(Android.Net.Uri! decisionLogicUri) -> Android.AdServices.AdSelection.SignedContextualAds.Builder!
Android.AdServices.AdSelection.SignedContextualAds.Builder.SetSignature(byte[]! signature) -> Android.AdServices.AdSelection.SignedContextualAds.Builder!
Android.AdServices.AdSelection.SignedContextualAds.Buyer.get -> Android.AdServices.Common.AdTechIdentifier!
Android.AdServices.AdSelection.SignedContextualAds.DecisionLogicUri.get -> Android.Net.Uri!
Android.AdServices.AdSelection.SignedContextualAds.DescribeContents() -> int
Android.AdServices.AdSelection.SignedContextualAds.GetSignature() -> byte[]!
Android.AdServices.AdSelection.SignedContextualAds.InterfaceConsts
Android.AdServices.AdSelection.SignedContextualAds.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest
Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder
Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder.Build() -> Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest!
Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder.Builder(long adSelectionId, int adEventType, Android.AdServices.Common.AdTechIdentifier! callerAdTech) -> void
Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder.SetAdEventType(int adEventType) -> Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder!
Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder.SetAdSelectionId(long adSelectionId) -> Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder!
Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder.SetCallerAdTech(Android.AdServices.Common.AdTechIdentifier! callerAdTech) -> Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder!
Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.UpdateAdCounterHistogramRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.Common.AdData.AdCounterKeys.get -> System.Collections.Generic.ICollection<Java.Lang.Integer!>!
Android.AdServices.Common.AdData.AdFilters.get -> Android.AdServices.Common.AdFilters?
Android.AdServices.Common.AdData.AdRenderId.get -> string?
Android.AdServices.Common.AdData.Builder.SetAdCounterKeys(System.Collections.Generic.ICollection<Java.Lang.Integer!>! adCounterKeys) -> Android.AdServices.Common.AdData.Builder!
Android.AdServices.Common.AdData.Builder.SetAdFilters(Android.AdServices.Common.AdFilters? adFilters) -> Android.AdServices.Common.AdData.Builder!
Android.AdServices.Common.AdData.Builder.SetAdRenderId(string? adRenderId) -> Android.AdServices.Common.AdData.Builder!
Android.AdServices.Common.AdEventType
Android.AdServices.Common.AdEventType.Click = 3 -> Android.AdServices.Common.AdEventType
Android.AdServices.Common.AdEventType.Impression = 1 -> Android.AdServices.Common.AdEventType
Android.AdServices.Common.AdEventType.View = 2 -> Android.AdServices.Common.AdEventType
Android.AdServices.Common.AdEventType.Win = 0 -> Android.AdServices.Common.AdEventType
Android.AdServices.Common.AdFilters
Android.AdServices.Common.AdFilters.AppInstallFilters.get -> Android.AdServices.Common.AppInstallFilters?
Android.AdServices.Common.AdFilters.Builder
Android.AdServices.Common.AdFilters.Builder.Build() -> Android.AdServices.Common.AdFilters!
Android.AdServices.Common.AdFilters.Builder.Builder() -> void
Android.AdServices.Common.AdFilters.Builder.SetAppInstallFilters(Android.AdServices.Common.AppInstallFilters? appInstallFilters) -> Android.AdServices.Common.AdFilters.Builder!
Android.AdServices.Common.AdFilters.Builder.SetFrequencyCapFilters(Android.AdServices.Common.FrequencyCapFilters? frequencyCapFilters) -> Android.AdServices.Common.AdFilters.Builder!
Android.AdServices.Common.AdFilters.DescribeContents() -> int
Android.AdServices.Common.AdFilters.FrequencyCapFilters.get -> Android.AdServices.Common.FrequencyCapFilters?
Android.AdServices.Common.AdFilters.InterfaceConsts
Android.AdServices.Common.AdFilters.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.Common.AppInstallFilters
Android.AdServices.Common.AppInstallFilters.Builder
Android.AdServices.Common.AppInstallFilters.Builder.Build() -> Android.AdServices.Common.AppInstallFilters!
Android.AdServices.Common.AppInstallFilters.Builder.Builder() -> void
Android.AdServices.Common.AppInstallFilters.Builder.SetPackageNames(System.Collections.Generic.ICollection<string!>! packageNames) -> Android.AdServices.Common.AppInstallFilters.Builder!
Android.AdServices.Common.AppInstallFilters.DescribeContents() -> int
Android.AdServices.Common.AppInstallFilters.InterfaceConsts
Android.AdServices.Common.AppInstallFilters.PackageNames.get -> System.Collections.Generic.ICollection<string!>!
Android.AdServices.Common.AppInstallFilters.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.Common.FrequencyCapFilters
Android.AdServices.Common.FrequencyCapFilters.Builder
Android.AdServices.Common.FrequencyCapFilters.Builder.Build() -> Android.AdServices.Common.FrequencyCapFilters!
Android.AdServices.Common.FrequencyCapFilters.Builder.Builder() -> void
Android.AdServices.Common.FrequencyCapFilters.Builder.SetKeyedFrequencyCapsForClickEvents(System.Collections.Generic.IList<Android.AdServices.Common.KeyedFrequencyCap!>! keyedFrequencyCapsForClickEvents) -> Android.AdServices.Common.FrequencyCapFilters.Builder!
Android.AdServices.Common.FrequencyCapFilters.Builder.SetKeyedFrequencyCapsForImpressionEvents(System.Collections.Generic.IList<Android.AdServices.Common.KeyedFrequencyCap!>! keyedFrequencyCapsForImpressionEvents) -> Android.AdServices.Common.FrequencyCapFilters.Builder!
Android.AdServices.Common.FrequencyCapFilters.Builder.SetKeyedFrequencyCapsForViewEvents(System.Collections.Generic.IList<Android.AdServices.Common.KeyedFrequencyCap!>! keyedFrequencyCapsForViewEvents) -> Android.AdServices.Common.FrequencyCapFilters.Builder!
Android.AdServices.Common.FrequencyCapFilters.Builder.SetKeyedFrequencyCapsForWinEvents(System.Collections.Generic.IList<Android.AdServices.Common.KeyedFrequencyCap!>! keyedFrequencyCapsForWinEvents) -> Android.AdServices.Common.FrequencyCapFilters.Builder!
Android.AdServices.Common.FrequencyCapFilters.DescribeContents() -> int
Android.AdServices.Common.FrequencyCapFilters.InterfaceConsts
Android.AdServices.Common.FrequencyCapFilters.KeyedFrequencyCapsForClickEvents.get -> System.Collections.Generic.IList<Android.AdServices.Common.KeyedFrequencyCap!>!
Android.AdServices.Common.FrequencyCapFilters.KeyedFrequencyCapsForImpressionEvents.get -> System.Collections.Generic.IList<Android.AdServices.Common.KeyedFrequencyCap!>!
Android.AdServices.Common.FrequencyCapFilters.KeyedFrequencyCapsForViewEvents.get -> System.Collections.Generic.IList<Android.AdServices.Common.KeyedFrequencyCap!>!
Android.AdServices.Common.FrequencyCapFilters.KeyedFrequencyCapsForWinEvents.get -> System.Collections.Generic.IList<Android.AdServices.Common.KeyedFrequencyCap!>!
Android.AdServices.Common.FrequencyCapFilters.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.Common.IAdServicesOutcomeReceiver
Android.AdServices.Common.IAdServicesOutcomeReceiver.OnError(Java.Lang.Object! error) -> void
Android.AdServices.Common.IAdServicesOutcomeReceiver.OnResult(Java.Lang.Object? result) -> void
Android.AdServices.Common.KeyedFrequencyCap
Android.AdServices.Common.KeyedFrequencyCap.AdCounterKey.get -> int
Android.AdServices.Common.KeyedFrequencyCap.Builder
Android.AdServices.Common.KeyedFrequencyCap.Builder.Build() -> Android.AdServices.Common.KeyedFrequencyCap!
Android.AdServices.Common.KeyedFrequencyCap.Builder.Builder(int adCounterKey, int maxCount, Java.Time.Duration! interval) -> void
Android.AdServices.Common.KeyedFrequencyCap.Builder.SetAdCounterKey(int adCounterKey) -> Android.AdServices.Common.KeyedFrequencyCap.Builder!
Android.AdServices.Common.KeyedFrequencyCap.Builder.SetInterval(Java.Time.Duration! interval) -> Android.AdServices.Common.KeyedFrequencyCap.Builder!
Android.AdServices.Common.KeyedFrequencyCap.Builder.SetMaxCount(int maxCount) -> Android.AdServices.Common.KeyedFrequencyCap.Builder!
Android.AdServices.Common.KeyedFrequencyCap.DescribeContents() -> int
Android.AdServices.Common.KeyedFrequencyCap.InterfaceConsts
Android.AdServices.Common.KeyedFrequencyCap.Interval.get -> Java.Time.Duration!
Android.AdServices.Common.KeyedFrequencyCap.MaxCount.get -> int
Android.AdServices.Common.KeyedFrequencyCap.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.CustomAudiences.AddCustomAudienceOverrideRequest.Builder.SetBiddingLogicJsVersion(long biddingLogicJsVersion) -> Android.AdServices.CustomAudiences.AddCustomAudienceOverrideRequest.Builder!
Android.AdServices.CustomAudiences.AuctionServerRequest
Android.AdServices.CustomAudiences.AuctionServerRequest.Ads = 1 -> Android.AdServices.CustomAudiences.AuctionServerRequest
Android.AdServices.CustomAudiences.CustomAudience.AuctionServerRequestFlags.get -> Android.AdServices.CustomAudiences.AuctionServerRequest
Android.AdServices.CustomAudiences.CustomAudience.Builder.SetAuctionServerRequestFlags(int auctionServerRequestFlags) -> Android.AdServices.CustomAudiences.CustomAudience.Builder!
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.ActivationTime.get -> Java.Time.Instant?
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder.Build() -> Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest!
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder.Builder(Android.Net.Uri! fetchUri) -> void
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder.SetActivationTime(Java.Time.Instant? activationTime) -> Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder!
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder.SetExpirationTime(Java.Time.Instant? expirationTime) -> Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder!
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder.SetFetchUri(Android.Net.Uri! fetchUri) -> Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder!
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder.SetName(string? name) -> Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder!
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder.SetUserBiddingSignals(Android.AdServices.Common.AdSelectionSignals? userBiddingSignals) -> Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder!
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.ExpirationTime.get -> Java.Time.Instant?
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.FetchUri.get -> Android.Net.Uri!
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Name.get -> string?
Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.UserBiddingSignals.get -> Android.AdServices.Common.AdSelectionSignals?
Android.AdServices.CustomAudiences.PartialCustomAudience
Android.AdServices.CustomAudiences.PartialCustomAudience.ActivationTime.get -> Java.Time.Instant?
Android.AdServices.CustomAudiences.PartialCustomAudience.Builder
Android.AdServices.CustomAudiences.PartialCustomAudience.Builder.Build() -> Android.AdServices.CustomAudiences.PartialCustomAudience!
Android.AdServices.CustomAudiences.PartialCustomAudience.Builder.Builder(string! name) -> void
Android.AdServices.CustomAudiences.PartialCustomAudience.Builder.SetActivationTime(Java.Time.Instant? activationTime) -> Android.AdServices.CustomAudiences.PartialCustomAudience.Builder!
Android.AdServices.CustomAudiences.PartialCustomAudience.Builder.SetExpirationTime(Java.Time.Instant? expirationTime) -> Android.AdServices.CustomAudiences.PartialCustomAudience.Builder!
Android.AdServices.CustomAudiences.PartialCustomAudience.Builder.SetUserBiddingSignals(Android.AdServices.Common.AdSelectionSignals? userBiddingSignals) -> Android.AdServices.CustomAudiences.PartialCustomAudience.Builder!
Android.AdServices.CustomAudiences.PartialCustomAudience.DescribeContents() -> int
Android.AdServices.CustomAudiences.PartialCustomAudience.ExpirationTime.get -> Java.Time.Instant?
Android.AdServices.CustomAudiences.PartialCustomAudience.InterfaceConsts
Android.AdServices.CustomAudiences.PartialCustomAudience.Name.get -> string!
Android.AdServices.CustomAudiences.PartialCustomAudience.UserBiddingSignals.get -> Android.AdServices.Common.AdSelectionSignals?
Android.AdServices.CustomAudiences.PartialCustomAudience.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder.Build() -> Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest!
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder.Builder(Android.Net.Uri! updateUri, Java.Time.Duration! minDelay, System.Collections.Generic.IList<Android.AdServices.CustomAudiences.PartialCustomAudience!>! partialCustomAudienceList) -> void
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder.SetMinDelay(Java.Time.Duration! minDelay) -> Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder!
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder.SetPartialCustomAudienceList(System.Collections.Generic.IList<Android.AdServices.CustomAudiences.PartialCustomAudience!>! partialCustomAudiences) -> Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder!
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder.SetUpdateUri(Android.Net.Uri! updateUri) -> Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder!
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.MinDelay.get -> Java.Time.Duration!
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.PartialCustomAudienceList.get -> System.Collections.Generic.IList<Android.AdServices.CustomAudiences.PartialCustomAudience!>!
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.UpdateUri.get -> Android.Net.Uri!
Android.AdServices.Measurement.SourceRegistrationRequest
Android.AdServices.Measurement.SourceRegistrationRequest.Builder
Android.AdServices.Measurement.SourceRegistrationRequest.Builder.Build() -> Android.AdServices.Measurement.SourceRegistrationRequest!
Android.AdServices.Measurement.SourceRegistrationRequest.Builder.Builder(System.Collections.Generic.IList<Android.Net.Uri!>! registrationUris) -> void
Android.AdServices.Measurement.SourceRegistrationRequest.Builder.SetInputEvent(Android.Views.InputEvent? inputEvent) -> Android.AdServices.Measurement.SourceRegistrationRequest.Builder!
Android.AdServices.Measurement.SourceRegistrationRequest.DescribeContents() -> int
Android.AdServices.Measurement.SourceRegistrationRequest.InputEvent.get -> Android.Views.InputEvent?
Android.AdServices.Measurement.SourceRegistrationRequest.InterfaceConsts
Android.AdServices.Measurement.SourceRegistrationRequest.RegistrationUris.get -> System.Collections.Generic.IList<Android.Net.Uri!>!
Android.AdServices.Measurement.SourceRegistrationRequest.WriteToParcel(Android.OS.Parcel! out, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.OnDevicePersonalization.AppInfo
Android.AdServices.OnDevicePersonalization.AppInfo.DescribeContents() -> int
Android.AdServices.OnDevicePersonalization.AppInfo.InterfaceConsts
Android.AdServices.OnDevicePersonalization.AppInfo.IsInstalled.get -> bool
Android.AdServices.OnDevicePersonalization.AppInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.OnDevicePersonalization.DelegateType
Android.AdServices.OnDevicePersonalization.DelegateType.Cpu = 1 -> Android.AdServices.OnDevicePersonalization.DelegateType
Android.AdServices.OnDevicePersonalization.DownloadCompletedInput
Android.AdServices.OnDevicePersonalization.DownloadCompletedInput.DownloadedContents.get -> Android.AdServices.OnDevicePersonalization.IKeyValueStore!
Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput
Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.Builder
Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.Builder.AddRetainedKey(string! value) -> Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.Builder!
Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.Builder.Build() -> Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput!
Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.Builder.SetRetainedKeys(System.Collections.Generic.IList<string!>! value) -> Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.Builder!
Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.RetainedKeys.get -> System.Collections.Generic.IList<string!>!
Android.AdServices.OnDevicePersonalization.EventInput
Android.AdServices.OnDevicePersonalization.EventInput.Parameters.get -> Android.OS.PersistableBundle!
Android.AdServices.OnDevicePersonalization.EventInput.RequestLogRecord.get -> Android.AdServices.OnDevicePersonalization.RequestLogRecord?
Android.AdServices.OnDevicePersonalization.EventLogRecord
Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder
Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder.Build() -> Android.AdServices.OnDevicePersonalization.EventLogRecord!
Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder.SetData(Android.Content.ContentValues? value) -> Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder!
Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder.SetRequestLogRecord(Android.AdServices.OnDevicePersonalization.RequestLogRecord? value) -> Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder!
Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder.SetRowIndex(int value) -> Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder!
Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder.SetType(int value) -> Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder!
Android.AdServices.OnDevicePersonalization.EventLogRecord.Data.get -> Android.Content.ContentValues?
Android.AdServices.OnDevicePersonalization.EventLogRecord.DescribeContents() -> int
Android.AdServices.OnDevicePersonalization.EventLogRecord.InterfaceConsts
Android.AdServices.OnDevicePersonalization.EventLogRecord.RequestLogRecord.get -> Android.AdServices.OnDevicePersonalization.RequestLogRecord?
Android.AdServices.OnDevicePersonalization.EventLogRecord.RowIndex.get -> int
Android.AdServices.OnDevicePersonalization.EventLogRecord.Time.get -> Java.Time.Instant!
Android.AdServices.OnDevicePersonalization.EventLogRecord.Type.get -> int
Android.AdServices.OnDevicePersonalization.EventLogRecord.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.OnDevicePersonalization.EventOutput
Android.AdServices.OnDevicePersonalization.EventOutput.Builder
Android.AdServices.OnDevicePersonalization.EventOutput.Builder.Build() -> Android.AdServices.OnDevicePersonalization.EventOutput!
Android.AdServices.OnDevicePersonalization.EventOutput.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.EventOutput.Builder.SetEventLogRecord(Android.AdServices.OnDevicePersonalization.EventLogRecord? value) -> Android.AdServices.OnDevicePersonalization.EventOutput.Builder!
Android.AdServices.OnDevicePersonalization.EventOutput.EventLogRecord.get -> Android.AdServices.OnDevicePersonalization.EventLogRecord?
Android.AdServices.OnDevicePersonalization.EventUrlProvider
Android.AdServices.OnDevicePersonalization.EventUrlProvider.EventUrlProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.ExecuteInput
Android.AdServices.OnDevicePersonalization.ExecuteInput.AppPackageName.get -> string!
Android.AdServices.OnDevicePersonalization.ExecuteInput.AppParams.get -> Android.OS.PersistableBundle!
Android.AdServices.OnDevicePersonalization.ExecuteOutput
Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder
Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder.AddEventLogRecord(Android.AdServices.OnDevicePersonalization.EventLogRecord! value) -> Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder!
Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder.Build() -> Android.AdServices.OnDevicePersonalization.ExecuteOutput!
Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder.SetEventLogRecords(System.Collections.Generic.IList<Android.AdServices.OnDevicePersonalization.EventLogRecord!>! value) -> Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder!
Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder.SetOutputData(params byte[]? value) -> Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder!
Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder.SetRenderingConfig(Android.AdServices.OnDevicePersonalization.RenderingConfig? value) -> Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder!
Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder.SetRequestLogRecord(Android.AdServices.OnDevicePersonalization.RequestLogRecord? value) -> Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder!
Android.AdServices.OnDevicePersonalization.ExecuteOutput.EventLogRecords.get -> System.Collections.Generic.IList<Android.AdServices.OnDevicePersonalization.EventLogRecord!>!
Android.AdServices.OnDevicePersonalization.ExecuteOutput.GetOutputData() -> byte[]?
Android.AdServices.OnDevicePersonalization.ExecuteOutput.RenderingConfig.get -> Android.AdServices.OnDevicePersonalization.RenderingConfig?
Android.AdServices.OnDevicePersonalization.ExecuteOutput.RequestLogRecord.get -> Android.AdServices.OnDevicePersonalization.RequestLogRecord?
Android.AdServices.OnDevicePersonalization.FederatedComputeInput
Android.AdServices.OnDevicePersonalization.FederatedComputeInput.Builder
Android.AdServices.OnDevicePersonalization.FederatedComputeInput.Builder.Build() -> Android.AdServices.OnDevicePersonalization.FederatedComputeInput!
Android.AdServices.OnDevicePersonalization.FederatedComputeInput.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.FederatedComputeInput.Builder.SetPopulationName(string! value) -> Android.AdServices.OnDevicePersonalization.FederatedComputeInput.Builder!
Android.AdServices.OnDevicePersonalization.FederatedComputeInput.PopulationName.get -> string!
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.FederatedComputeScheduler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params.Params(Android.AdServices.OnDevicePersonalization.TrainingInterval! trainingInterval) -> void
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params.Params(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.IIsolatedWorker
Android.AdServices.OnDevicePersonalization.IIsolatedWorker.OnDownloadCompleted(Android.AdServices.OnDevicePersonalization.DownloadCompletedInput! input, Android.OS.IOutcomeReceiver! receiver) -> void
Android.AdServices.OnDevicePersonalization.IIsolatedWorker.OnEvent(Android.AdServices.OnDevicePersonalization.EventInput! input, Android.OS.IOutcomeReceiver! receiver) -> void
Android.AdServices.OnDevicePersonalization.IIsolatedWorker.OnExecute(Android.AdServices.OnDevicePersonalization.ExecuteInput! input, Android.OS.IOutcomeReceiver! receiver) -> void
Android.AdServices.OnDevicePersonalization.IIsolatedWorker.OnRender(Android.AdServices.OnDevicePersonalization.RenderInput! input, Android.OS.IOutcomeReceiver! receiver) -> void
Android.AdServices.OnDevicePersonalization.IIsolatedWorker.OnTrainingExamples(Android.AdServices.OnDevicePersonalization.TrainingExamplesInput! input, Android.OS.IOutcomeReceiver! receiver) -> void
Android.AdServices.OnDevicePersonalization.IIsolatedWorker.OnWebTrigger(Android.AdServices.OnDevicePersonalization.WebTriggerInput! input, Android.OS.IOutcomeReceiver! receiver) -> void
Android.AdServices.OnDevicePersonalization.IKeyValueStore
Android.AdServices.OnDevicePersonalization.IKeyValueStore.Get(string! key) -> byte[]?
Android.AdServices.OnDevicePersonalization.IKeyValueStore.KeySet() -> System.Collections.Generic.ICollection<string!>!
Android.AdServices.OnDevicePersonalization.IMutableKeyValueStore
Android.AdServices.OnDevicePersonalization.IMutableKeyValueStore.Put(string! key, byte[]! value) -> byte[]?
Android.AdServices.OnDevicePersonalization.IMutableKeyValueStore.Remove(string! key) -> byte[]?
Android.AdServices.OnDevicePersonalization.InferenceInput
Android.AdServices.OnDevicePersonalization.InferenceInput.BatchSize.get -> int
Android.AdServices.OnDevicePersonalization.InferenceInput.Builder
Android.AdServices.OnDevicePersonalization.InferenceInput.Builder.Build() -> Android.AdServices.OnDevicePersonalization.InferenceInput!
Android.AdServices.OnDevicePersonalization.InferenceInput.Builder.Builder(Android.AdServices.OnDevicePersonalization.InferenceInput.Params! params, Java.Lang.Object![]! inputData, Android.AdServices.OnDevicePersonalization.InferenceOutput! expectedOutputStructure) -> void
Android.AdServices.OnDevicePersonalization.InferenceInput.Builder.SetBatchSize(int value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.Builder.SetExpectedOutputStructure(Android.AdServices.OnDevicePersonalization.InferenceOutput! value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.Builder.SetInputData(params Java.Lang.Object![]! value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.Builder.SetParams(Android.AdServices.OnDevicePersonalization.InferenceInput.Params! value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.ExpectedOutputStructure.get -> Android.AdServices.OnDevicePersonalization.InferenceOutput!
Android.AdServices.OnDevicePersonalization.InferenceInput.GetInputData() -> Java.Lang.Object![]!
Android.AdServices.OnDevicePersonalization.InferenceInput.GetParams() -> Android.AdServices.OnDevicePersonalization.InferenceInput.Params!
Android.AdServices.OnDevicePersonalization.InferenceInput.Params
Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder
Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder.Build() -> Android.AdServices.OnDevicePersonalization.InferenceInput.Params!
Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder.Builder(Android.AdServices.OnDevicePersonalization.IKeyValueStore! keyValueStore, string! modelKey) -> void
Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder.SetDelegateType(int value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder.SetKeyValueStore(Android.AdServices.OnDevicePersonalization.IKeyValueStore! value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder.SetModelKey(string! value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder.SetModelType(int value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder.SetRecommendedNumThreads(int value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Params(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.InferenceOutput
Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder
Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder.AddDataOutput(int key, Java.Lang.Object! value) -> Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder!
Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder.Build() -> Android.AdServices.OnDevicePersonalization.InferenceOutput!
Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder.SetDataOutputs(System.Collections.Generic.IDictionary<Java.Lang.Integer!, Java.Lang.Object!>! value) -> Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder!
Android.AdServices.OnDevicePersonalization.InferenceOutput.DataOutputs.get -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, Java.Lang.Object!>!
Android.AdServices.OnDevicePersonalization.IsolatedService
Android.AdServices.OnDevicePersonalization.IsolatedService.GetEventUrlProvider(Android.AdServices.OnDevicePersonalization.RequestToken! requestToken) -> Android.AdServices.OnDevicePersonalization.EventUrlProvider!
Android.AdServices.OnDevicePersonalization.IsolatedService.GetFederatedComputeScheduler(Android.AdServices.OnDevicePersonalization.RequestToken! requestToken) -> Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler!
Android.AdServices.OnDevicePersonalization.IsolatedService.GetLocalData(Android.AdServices.OnDevicePersonalization.RequestToken! requestToken) -> Android.AdServices.OnDevicePersonalization.IMutableKeyValueStore!
Android.AdServices.OnDevicePersonalization.IsolatedService.GetLogReader(Android.AdServices.OnDevicePersonalization.RequestToken! requestToken) -> Android.AdServices.OnDevicePersonalization.LogReader!
Android.AdServices.OnDevicePersonalization.IsolatedService.GetModelManager(Android.AdServices.OnDevicePersonalization.RequestToken! requestToken) -> Android.AdServices.OnDevicePersonalization.ModelManager!
Android.AdServices.OnDevicePersonalization.IsolatedService.GetRemoteData(Android.AdServices.OnDevicePersonalization.RequestToken! requestToken) -> Android.AdServices.OnDevicePersonalization.IKeyValueStore!
Android.AdServices.OnDevicePersonalization.IsolatedService.GetUserData(Android.AdServices.OnDevicePersonalization.RequestToken! requestToken) -> Android.AdServices.OnDevicePersonalization.UserData?
Android.AdServices.OnDevicePersonalization.IsolatedService.IsolatedService() -> void
Android.AdServices.OnDevicePersonalization.IsolatedService.IsolatedService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.IsolatedServiceException
Android.AdServices.OnDevicePersonalization.IsolatedServiceException.IsolatedServiceException(int errorCode) -> void
Android.AdServices.OnDevicePersonalization.LogReader
Android.AdServices.OnDevicePersonalization.LogReader.LogReader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.ModelManager
Android.AdServices.OnDevicePersonalization.ModelManager.ModelManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.ModelType
Android.AdServices.OnDevicePersonalization.ModelType.Lite = 1 -> Android.AdServices.OnDevicePersonalization.ModelType
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.IsolatedServiceFailed = 1 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.PersonalizationDisabled = 2 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.OnDevicePersonalizationException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ExecuteResult
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ExecuteResult.ExecuteResult(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.OnDevicePersonalizationManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.RenderingConfig
Android.AdServices.OnDevicePersonalization.RenderingConfig.Builder
Android.AdServices.OnDevicePersonalization.RenderingConfig.Builder.AddKey(string! value) -> Android.AdServices.OnDevicePersonalization.RenderingConfig.Builder!
Android.AdServices.OnDevicePersonalization.RenderingConfig.Builder.Build() -> Android.AdServices.OnDevicePersonalization.RenderingConfig!
Android.AdServices.OnDevicePersonalization.RenderingConfig.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.RenderingConfig.Builder.SetKeys(System.Collections.Generic.IList<string!>! value) -> Android.AdServices.OnDevicePersonalization.RenderingConfig.Builder!
Android.AdServices.OnDevicePersonalization.RenderingConfig.DescribeContents() -> int
Android.AdServices.OnDevicePersonalization.RenderingConfig.InterfaceConsts
Android.AdServices.OnDevicePersonalization.RenderingConfig.Keys.get -> System.Collections.Generic.IList<string!>!
Android.AdServices.OnDevicePersonalization.RenderingConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.OnDevicePersonalization.RenderInput
Android.AdServices.OnDevicePersonalization.RenderInput.Height.get -> int
Android.AdServices.OnDevicePersonalization.RenderInput.RenderingConfig.get -> Android.AdServices.OnDevicePersonalization.RenderingConfig?
Android.AdServices.OnDevicePersonalization.RenderInput.Width.get -> int
Android.AdServices.OnDevicePersonalization.RenderOutput
Android.AdServices.OnDevicePersonalization.RenderOutput.Builder
Android.AdServices.OnDevicePersonalization.RenderOutput.Builder.Build() -> Android.AdServices.OnDevicePersonalization.RenderOutput!
Android.AdServices.OnDevicePersonalization.RenderOutput.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.RenderOutput.Builder.SetContent(string? value) -> Android.AdServices.OnDevicePersonalization.RenderOutput.Builder!
Android.AdServices.OnDevicePersonalization.RenderOutput.Builder.SetTemplateId(string? value) -> Android.AdServices.OnDevicePersonalization.RenderOutput.Builder!
Android.AdServices.OnDevicePersonalization.RenderOutput.Builder.SetTemplateParams(Android.OS.PersistableBundle! value) -> Android.AdServices.OnDevicePersonalization.RenderOutput.Builder!
Android.AdServices.OnDevicePersonalization.RenderOutput.Content.get -> string?
Android.AdServices.OnDevicePersonalization.RenderOutput.TemplateId.get -> string?
Android.AdServices.OnDevicePersonalization.RenderOutput.TemplateParams.get -> Android.OS.PersistableBundle!
Android.AdServices.OnDevicePersonalization.RequestLogRecord
Android.AdServices.OnDevicePersonalization.RequestLogRecord.Builder
Android.AdServices.OnDevicePersonalization.RequestLogRecord.Builder.AddRow(Android.Content.ContentValues! value) -> Android.AdServices.OnDevicePersonalization.RequestLogRecord.Builder!
Android.AdServices.OnDevicePersonalization.RequestLogRecord.Builder.Build() -> Android.AdServices.OnDevicePersonalization.RequestLogRecord!
Android.AdServices.OnDevicePersonalization.RequestLogRecord.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.RequestLogRecord.Builder.SetRows(System.Collections.Generic.IList<Android.Content.ContentValues!>! value) -> Android.AdServices.OnDevicePersonalization.RequestLogRecord.Builder!
Android.AdServices.OnDevicePersonalization.RequestLogRecord.DescribeContents() -> int
Android.AdServices.OnDevicePersonalization.RequestLogRecord.InterfaceConsts
Android.AdServices.OnDevicePersonalization.RequestLogRecord.Rows.get -> System.Collections.Generic.IList<Android.Content.ContentValues!>!
Android.AdServices.OnDevicePersonalization.RequestLogRecord.Time.get -> Java.Time.Instant!
Android.AdServices.OnDevicePersonalization.RequestLogRecord.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.OnDevicePersonalization.RequestToken
Android.AdServices.OnDevicePersonalization.RequestToken.RequestToken(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.SurfacePackageToken
Android.AdServices.OnDevicePersonalization.SurfacePackageToken.SurfacePackageToken(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.Builder
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.Builder.Build() -> Android.AdServices.OnDevicePersonalization.TrainingExampleRecord!
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.Builder.SetResumptionToken(params byte[]? value) -> Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.Builder!
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.Builder.SetTrainingExample(params byte[]? value) -> Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.Builder!
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.DescribeContents() -> int
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.GetResumptionToken() -> byte[]?
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.GetTrainingExample() -> byte[]?
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.InterfaceConsts
Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.OnDevicePersonalization.TrainingExamplesInput
Android.AdServices.OnDevicePersonalization.TrainingExamplesInput.GetResumptionToken() -> byte[]?
Android.AdServices.OnDevicePersonalization.TrainingExamplesInput.PopulationName.get -> string!
Android.AdServices.OnDevicePersonalization.TrainingExamplesInput.TaskName.get -> string!
Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput
Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.Builder
Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.Builder.AddTrainingExampleRecord(Android.AdServices.OnDevicePersonalization.TrainingExampleRecord! value) -> Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.Builder!
Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.Builder.Build() -> Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput!
Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.Builder.SetTrainingExampleRecords(System.Collections.Generic.IList<Android.AdServices.OnDevicePersonalization.TrainingExampleRecord!>! value) -> Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.Builder!
Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.TrainingExampleRecords.get -> System.Collections.Generic.IList<Android.AdServices.OnDevicePersonalization.TrainingExampleRecord!>!
Android.AdServices.OnDevicePersonalization.TrainingInterval
Android.AdServices.OnDevicePersonalization.TrainingInterval.Builder
Android.AdServices.OnDevicePersonalization.TrainingInterval.Builder.Build() -> Android.AdServices.OnDevicePersonalization.TrainingInterval!
Android.AdServices.OnDevicePersonalization.TrainingInterval.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.TrainingInterval.Builder.SetMinimumInterval(Java.Time.Duration! value) -> Android.AdServices.OnDevicePersonalization.TrainingInterval.Builder!
Android.AdServices.OnDevicePersonalization.TrainingInterval.Builder.SetSchedulingMode(int value) -> Android.AdServices.OnDevicePersonalization.TrainingInterval.Builder!
Android.AdServices.OnDevicePersonalization.TrainingInterval.MinimumInterval.get -> Java.Time.Duration!
Android.AdServices.OnDevicePersonalization.TrainingInterval.SchedulingMode.get -> Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode
Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode
Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode.OneTime = 1 -> Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode
Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode.Recurrent = 2 -> Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode
Android.AdServices.OnDevicePersonalization.UserData
Android.AdServices.OnDevicePersonalization.UserData.AppInfos.get -> System.Collections.Generic.IDictionary<string!, Android.AdServices.OnDevicePersonalization.AppInfo!>!
Android.AdServices.OnDevicePersonalization.UserData.AvailableStorageBytes.get -> long
Android.AdServices.OnDevicePersonalization.UserData.BatteryPercentage.get -> int
Android.AdServices.OnDevicePersonalization.UserData.Carrier.get -> string!
Android.AdServices.OnDevicePersonalization.UserData.DataNetworkType.get -> Android.Telephony.NetworkType
Android.AdServices.OnDevicePersonalization.UserData.DescribeContents() -> int
Android.AdServices.OnDevicePersonalization.UserData.InterfaceConsts
Android.AdServices.OnDevicePersonalization.UserData.NetworkCapabilities.get -> Android.Net.NetworkCapabilities?
Android.AdServices.OnDevicePersonalization.UserData.Orientation.get -> Android.Content.Res.Orientation
Android.AdServices.OnDevicePersonalization.UserData.TimezoneUtcOffset.get -> Java.Time.Duration!
Android.AdServices.OnDevicePersonalization.UserData.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.OnDevicePersonalization.WebTriggerInput
Android.AdServices.OnDevicePersonalization.WebTriggerInput.AppPackageName.get -> string!
Android.AdServices.OnDevicePersonalization.WebTriggerInput.DestinationUrl.get -> Android.Net.Uri!
Android.AdServices.OnDevicePersonalization.WebTriggerInput.GetData() -> byte[]!
Android.AdServices.OnDevicePersonalization.WebTriggerOutput
Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder
Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder.AddEventLogRecord(Android.AdServices.OnDevicePersonalization.EventLogRecord! value) -> Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder!
Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder.Build() -> Android.AdServices.OnDevicePersonalization.WebTriggerOutput!
Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder.Builder() -> void
Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder.SetEventLogRecords(System.Collections.Generic.IList<Android.AdServices.OnDevicePersonalization.EventLogRecord!>! value) -> Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder!
Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder.SetRequestLogRecord(Android.AdServices.OnDevicePersonalization.RequestLogRecord? value) -> Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder!
Android.AdServices.OnDevicePersonalization.WebTriggerOutput.EventLogRecords.get -> System.Collections.Generic.IList<Android.AdServices.OnDevicePersonalization.EventLogRecord!>!
Android.AdServices.OnDevicePersonalization.WebTriggerOutput.RequestLogRecord.get -> Android.AdServices.OnDevicePersonalization.RequestLogRecord?
Android.AdServices.Signals.ProtectedSignalsManager
Android.AdServices.Signals.ProtectedSignalsManager.ProtectedSignalsManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.Signals.UpdateSignalsRequest
Android.AdServices.Signals.UpdateSignalsRequest.Builder
Android.AdServices.Signals.UpdateSignalsRequest.Builder.Build() -> Android.AdServices.Signals.UpdateSignalsRequest!
Android.AdServices.Signals.UpdateSignalsRequest.Builder.Builder(Android.Net.Uri! updateUri) -> void
Android.AdServices.Signals.UpdateSignalsRequest.Builder.SetUpdateUri(Android.Net.Uri! updateUri) -> Android.AdServices.Signals.UpdateSignalsRequest.Builder!
Android.AdServices.Signals.UpdateSignalsRequest.UpdateUri.get -> Android.Net.Uri!
Android.AdServices.Topics.EncryptedTopic
Android.AdServices.Topics.EncryptedTopic.EncryptedTopic(byte[]! encryptedTopic, string! keyIdentifier, byte[]! encapsulatedKey) -> void
Android.AdServices.Topics.EncryptedTopic.GetEncapsulatedKey() -> byte[]!
Android.AdServices.Topics.EncryptedTopic.GetEncryptedTopic() -> byte[]!
Android.AdServices.Topics.EncryptedTopic.KeyIdentifier.get -> string!
Android.AdServices.Topics.GetTopicsResponse.Builder.Builder(System.Collections.Generic.IList<Android.AdServices.Topics.Topic!>! topics, System.Collections.Generic.IList<Android.AdServices.Topics.EncryptedTopic!>! encryptedTopics) -> void
Android.AdServices.Topics.GetTopicsResponse.EncryptedTopics.get -> System.Collections.Generic.IList<Android.AdServices.Topics.EncryptedTopic!>!
Android.App.Activity.RequestPermissions(string![]! permissions, int requestCode, int deviceId) -> void
Android.App.Admin.ContentProtectionPolicy
Android.App.Admin.ContentProtectionPolicy.Disabled = 1 -> Android.App.Admin.ContentProtectionPolicy
Android.App.Admin.ContentProtectionPolicy.Enabled = 2 -> Android.App.Admin.ContentProtectionPolicy
Android.App.Admin.ContentProtectionPolicy.NotControlledByPolicy = 0 -> Android.App.Admin.ContentProtectionPolicy
Android.App.Admin.HeadlessDeviceOwnerMode.SingleUser = 2 -> Android.App.Admin.HeadlessDeviceOwnerMode
Android.App.Admin.SecurityLogTags.BackupServiceToggled = 210044 -> Android.App.Admin.SecurityLogTags
Android.App.ApplicationStartInfo
Android.App.ApplicationStartInfo.DefiningUid.get -> int
Android.App.ApplicationStartInfo.DescribeContents() -> int
Android.App.ApplicationStartInfo.Intent.get -> Android.Content.Intent?
Android.App.ApplicationStartInfo.InterfaceConsts
Android.App.ApplicationStartInfo.LaunchMode.get -> Android.App.ApplicationStartInfoLaunchMode
Android.App.ApplicationStartInfo.PackageUid.get -> int
Android.App.ApplicationStartInfo.Pid.get -> int
Android.App.ApplicationStartInfo.ProcessName.get -> string!
Android.App.ApplicationStartInfo.RealUid.get -> int
Android.App.ApplicationStartInfo.Reason.get -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfo.StartType.get -> Android.App.ApplicationStartInfoStartType
Android.App.ApplicationStartInfo.StartupState.get -> Android.App.ApplicationStartInfoStartupState
Android.App.ApplicationStartInfo.StartupTimestamps.get -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, Java.Lang.Long!>!
Android.App.ApplicationStartInfo.WasForceStopped() -> bool
Android.App.ApplicationStartInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.ApplicationStartInfoLaunchMode
Android.App.ApplicationStartInfoLaunchMode.SingleInstance = 2 -> Android.App.ApplicationStartInfoLaunchMode
Android.App.ApplicationStartInfoLaunchMode.SingleInstancePerTask = 4 -> Android.App.ApplicationStartInfoLaunchMode
Android.App.ApplicationStartInfoLaunchMode.SingleTask = 3 -> Android.App.ApplicationStartInfoLaunchMode
Android.App.ApplicationStartInfoLaunchMode.SingleTop = 1 -> Android.App.ApplicationStartInfoLaunchMode
Android.App.ApplicationStartInfoLaunchMode.Standard = 0 -> Android.App.ApplicationStartInfoLaunchMode
Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.Alarm = 0 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.Backup = 1 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.BootComplete = 2 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.Broadcast = 3 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.ContentProvider = 4 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.Job = 5 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.Launcher = 6 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.LauncherRecents = 7 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.Other = 8 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.Push = 9 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.Service = 10 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartReason.StartActivity = 11 -> Android.App.ApplicationStartInfoStartReason
Android.App.ApplicationStartInfoStartTimestamp
Android.App.ApplicationStartInfoStartTimestamp.ApplicationOncreate = 2 -> Android.App.ApplicationStartInfoStartTimestamp
Android.App.ApplicationStartInfoStartTimestamp.BindApplication = 3 -> Android.App.ApplicationStartInfoStartTimestamp
Android.App.ApplicationStartInfoStartTimestamp.FirstFrame = 4 -> Android.App.ApplicationStartInfoStartTimestamp
Android.App.ApplicationStartInfoStartTimestamp.Fork = 1 -> Android.App.ApplicationStartInfoStartTimestamp
Android.App.ApplicationStartInfoStartTimestamp.FullyDrawn = 5 -> Android.App.ApplicationStartInfoStartTimestamp
Android.App.ApplicationStartInfoStartTimestamp.InitialRenderthreadFrame = 6 -> Android.App.ApplicationStartInfoStartTimestamp
Android.App.ApplicationStartInfoStartTimestamp.Launch = 0 -> Android.App.ApplicationStartInfoStartTimestamp
Android.App.ApplicationStartInfoStartTimestamp.SurfaceFlingerCompositionComplete = 7 -> Android.App.ApplicationStartInfoStartTimestamp
Android.App.ApplicationStartInfoStartType
Android.App.ApplicationStartInfoStartType.Cold = 1 -> Android.App.ApplicationStartInfoStartType
Android.App.ApplicationStartInfoStartType.Hot = 3 -> Android.App.ApplicationStartInfoStartType
Android.App.ApplicationStartInfoStartType.Unset = 0 -> Android.App.ApplicationStartInfoStartType
Android.App.ApplicationStartInfoStartType.Warm = 2 -> Android.App.ApplicationStartInfoStartType
Android.App.ApplicationStartInfoStartupState
Android.App.ApplicationStartInfoStartupState.Error = 1 -> Android.App.ApplicationStartInfoStartupState
Android.App.ApplicationStartInfoStartupState.FirstFrameDrawn = 2 -> Android.App.ApplicationStartInfoStartupState
Android.App.ApplicationStartInfoStartupState.Started = 0 -> Android.App.ApplicationStartInfoStartupState
Android.App.AppOpsManager.IOnOpActiveChangedListener.OnOpActiveChanged2(string! op, int uid, string! packageName, string? attributionTag, int virtualDeviceId, bool active, int attributionFlags, int attributionChainId) -> void
Android.App.AppOpsManager.IOnOpChangedListener.OnOpChanged2(string! op, string! packageName, int userId, string! persistentDeviceId) -> void
Android.App.AppOpsManager.OpActiveChanged2EventArgs
Android.App.AppOpsManager.OpActiveChanged2EventArgs.Active.get -> bool
Android.App.AppOpsManager.OpActiveChanged2EventArgs.AttributionChainId.get -> int
Android.App.AppOpsManager.OpActiveChanged2EventArgs.AttributionFlags.get -> int
Android.App.AppOpsManager.OpActiveChanged2EventArgs.AttributionTag.get -> string?
Android.App.AppOpsManager.OpActiveChanged2EventArgs.Op.get -> string!
Android.App.AppOpsManager.OpActiveChanged2EventArgs.OpActiveChanged2EventArgs(string! op, int uid, string! packageName, string? attributionTag, int virtualDeviceId, bool active, int attributionFlags, int attributionChainId) -> void
Android.App.AppOpsManager.OpActiveChanged2EventArgs.PackageName.get -> string!
Android.App.AppOpsManager.OpActiveChanged2EventArgs.Uid.get -> int
Android.App.AppOpsManager.OpActiveChanged2EventArgs.VirtualDeviceId.get -> int
Android.App.AppOpsManager.OpChanged2EventArgs
Android.App.AppOpsManager.OpChanged2EventArgs.Op.get -> string!
Android.App.AppOpsManager.OpChanged2EventArgs.OpChanged2EventArgs(string! op, string! packageName, int userId, string! persistentDeviceId) -> void
Android.App.AppOpsManager.OpChanged2EventArgs.PackageName.get -> string!
Android.App.AppOpsManager.OpChanged2EventArgs.PersistentDeviceId.get -> string!
Android.App.AppOpsManager.OpChanged2EventArgs.UserId.get -> int
Android.App.AppSearch.AppSearchResultCode.Denied = 9 -> Android.App.AppSearch.AppSearchResultCode
Android.App.AppSearch.AppSearchResultCode.RateLimited = 10 -> Android.App.AppSearch.AppSearchResultCode
Android.App.AppSearch.AppSearchSchema.Builder.AddParentType(string! parentSchemaType) -> Android.App.AppSearch.AppSearchSchema.Builder!
Android.App.AppSearch.AppSearchSchema.DescribeContents() -> int
Android.App.AppSearch.AppSearchSchema.DocumentPropertyConfig.Builder.AddIndexableNestedProperties(params string![]! indexableNestedProperties) -> Android.App.AppSearch.AppSearchSchema.DocumentPropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.DocumentPropertyConfig.Builder.AddIndexableNestedProperties(System.Collections.Generic.ICollection<string!>! indexableNestedProperties) -> Android.App.AppSearch.AppSearchSchema.DocumentPropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.DocumentPropertyConfig.Builder.AddIndexableNestedPropertyPaths(params Android.App.AppSearch.PropertyPath![]! indexableNestedPropertyPaths) -> Android.App.AppSearch.AppSearchSchema.DocumentPropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.DocumentPropertyConfig.Builder.AddIndexableNestedPropertyPaths(System.Collections.Generic.ICollection<Android.App.AppSearch.PropertyPath!>! indexableNestedPropertyPaths) -> Android.App.AppSearch.AppSearchSchema.DocumentPropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.DocumentPropertyConfig.IndexableNestedProperties.get -> System.Collections.Generic.IList<string!>!
Android.App.AppSearch.AppSearchSchema.InterfaceConsts
Android.App.AppSearch.AppSearchSchema.ParentTypes.get -> System.Collections.Generic.IList<string!>!
Android.App.AppSearch.AppSearchSchema.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.EnterpriseGlobalSearchSession
Android.App.AppSearch.EnterpriseGlobalSearchSession.EnterpriseGlobalSearchSession(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.App.AppSearch.GenericDocument.Builder.Builder(Android.App.AppSearch.GenericDocument! document) -> void
Android.App.AppSearch.GetByDocumentIdRequest.DescribeContents() -> int
Android.App.AppSearch.GetByDocumentIdRequest.InterfaceConsts
Android.App.AppSearch.GetByDocumentIdRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.GetSchemaResponse.Builder.SetPubliclyVisibleSchema(string! schemaType, Android.App.AppSearch.PackageIdentifier! packageIdentifier) -> Android.App.AppSearch.GetSchemaResponse.Builder!
Android.App.AppSearch.GetSchemaResponse.Builder.SetSchemaTypeVisibleToConfigs(string! schemaType, System.Collections.Generic.ICollection<Android.App.AppSearch.SchemaVisibilityConfig!>! visibleToConfigs) -> Android.App.AppSearch.GetSchemaResponse.Builder!
Android.App.AppSearch.GetSchemaResponse.DescribeContents() -> int
Android.App.AppSearch.GetSchemaResponse.InterfaceConsts
Android.App.AppSearch.GetSchemaResponse.PubliclyVisibleSchemas.get -> System.Collections.Generic.IDictionary<string!, Android.App.AppSearch.PackageIdentifier!>!
Android.App.AppSearch.GetSchemaResponse.SchemaTypesVisibleToConfigs.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.ICollection<Android.App.AppSearch.SchemaVisibilityConfig!>!>!
Android.App.AppSearch.GetSchemaResponse.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.GroupingType.PerSchema = 4 -> Android.App.AppSearch.GroupingType
Android.App.AppSearch.JoinSpec.DescribeContents() -> int
Android.App.AppSearch.JoinSpec.InterfaceConsts
Android.App.AppSearch.JoinSpec.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.Observers.ObserverSpec.DescribeContents() -> int
Android.App.AppSearch.Observers.ObserverSpec.InterfaceConsts
Android.App.AppSearch.Observers.ObserverSpec.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.PutDocumentsRequest.Builder.AddTakenActionGenericDocuments(params Android.App.AppSearch.GenericDocument![]! takenActionGenericDocuments) -> Android.App.AppSearch.PutDocumentsRequest.Builder!
Android.App.AppSearch.PutDocumentsRequest.Builder.AddTakenActionGenericDocuments(System.Collections.Generic.ICollection<Android.App.AppSearch.GenericDocument!>! takenActionGenericDocuments) -> Android.App.AppSearch.PutDocumentsRequest.Builder!
Android.App.AppSearch.PutDocumentsRequest.TakenActionGenericDocuments.get -> System.Collections.Generic.IList<Android.App.AppSearch.GenericDocument!>!
Android.App.AppSearch.RemoveByDocumentIdRequest.DescribeContents() -> int
Android.App.AppSearch.RemoveByDocumentIdRequest.InterfaceConsts
Android.App.AppSearch.RemoveByDocumentIdRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.ReportUsageRequest.DescribeContents() -> int
Android.App.AppSearch.ReportUsageRequest.InterfaceConsts
Android.App.AppSearch.ReportUsageRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.SchemaVisibilityConfig
Android.App.AppSearch.SchemaVisibilityConfig.AllowedPackages.get -> System.Collections.Generic.IList<Android.App.AppSearch.PackageIdentifier!>!
Android.App.AppSearch.SchemaVisibilityConfig.Builder
Android.App.AppSearch.SchemaVisibilityConfig.Builder.AddAllowedPackage(Android.App.AppSearch.PackageIdentifier! packageIdentifier) -> Android.App.AppSearch.SchemaVisibilityConfig.Builder!
Android.App.AppSearch.SchemaVisibilityConfig.Builder.AddRequiredPermissions(System.Collections.Generic.ICollection<Java.Lang.Integer!>! visibleToPermissions) -> Android.App.AppSearch.SchemaVisibilityConfig.Builder!
Android.App.AppSearch.SchemaVisibilityConfig.Builder.Build() -> Android.App.AppSearch.SchemaVisibilityConfig!
Android.App.AppSearch.SchemaVisibilityConfig.Builder.Builder() -> void
Android.App.AppSearch.SchemaVisibilityConfig.Builder.ClearAllowedPackages() -> Android.App.AppSearch.SchemaVisibilityConfig.Builder!
Android.App.AppSearch.SchemaVisibilityConfig.Builder.ClearRequiredPermissions() -> Android.App.AppSearch.SchemaVisibilityConfig.Builder!
Android.App.AppSearch.SchemaVisibilityConfig.Builder.SetPubliclyVisibleTargetPackage(Android.App.AppSearch.PackageIdentifier? packageIdentifier) -> Android.App.AppSearch.SchemaVisibilityConfig.Builder!
Android.App.AppSearch.SchemaVisibilityConfig.DescribeContents() -> int
Android.App.AppSearch.SchemaVisibilityConfig.InterfaceConsts
Android.App.AppSearch.SchemaVisibilityConfig.PubliclyVisibleTargetPackage.get -> Android.App.AppSearch.PackageIdentifier?
Android.App.AppSearch.SchemaVisibilityConfig.RequiredPermissions.get -> System.Collections.Generic.ICollection<System.Collections.Generic.ICollection<Java.Lang.Integer!>!>!
Android.App.AppSearch.SchemaVisibilityConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.SearchResult.DescribeContents() -> int
Android.App.AppSearch.SearchResult.InterfaceConsts
Android.App.AppSearch.SearchResult.MatchInfo.DescribeContents() -> int
Android.App.AppSearch.SearchResult.MatchInfo.InterfaceConsts
Android.App.AppSearch.SearchResult.MatchInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.SearchResult.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.SearchSpec.Builder.AddFilterProperties(string! schema, System.Collections.Generic.ICollection<string!>! propertyPaths) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.AddFilterPropertyPaths(string! schema, System.Collections.Generic.ICollection<Android.App.AppSearch.PropertyPath!>! propertyPaths) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.SetListFilterHasPropertyFunctionEnabled(bool enabled) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.SetSearchSourceLogTag(string! searchSourceLogTag) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.DescribeContents() -> int
Android.App.AppSearch.SearchSpec.FilterProperties.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IList<string!>!>!
Android.App.AppSearch.SearchSpec.InterfaceConsts
Android.App.AppSearch.SearchSpec.IsListFilterHasPropertyFunctionEnabled.get -> bool
Android.App.AppSearch.SearchSpec.SearchSourceLogTag.get -> string?
Android.App.AppSearch.SearchSpec.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.SearchSuggestionResult.DescribeContents() -> int
Android.App.AppSearch.SearchSuggestionResult.InterfaceConsts
Android.App.AppSearch.SearchSuggestionResult.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.SearchSuggestionSpec.Builder.AddFilterProperties(string! schema, System.Collections.Generic.ICollection<string!>! propertyPaths) -> Android.App.AppSearch.SearchSuggestionSpec.Builder!
Android.App.AppSearch.SearchSuggestionSpec.Builder.AddFilterPropertyPaths(string! schema, System.Collections.Generic.ICollection<Android.App.AppSearch.PropertyPath!>! propertyPaths) -> Android.App.AppSearch.SearchSuggestionSpec.Builder!
Android.App.AppSearch.SearchSuggestionSpec.DescribeContents() -> int
Android.App.AppSearch.SearchSuggestionSpec.FilterProperties.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IList<string!>!>!
Android.App.AppSearch.SearchSuggestionSpec.InterfaceConsts
Android.App.AppSearch.SearchSuggestionSpec.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.SetSchemaRequest.Builder.AddSchemaTypeVisibleToConfig(string! schemaType, Android.App.AppSearch.SchemaVisibilityConfig! schemaVisibilityConfig) -> Android.App.AppSearch.SetSchemaRequest.Builder!
Android.App.AppSearch.SetSchemaRequest.Builder.ClearSchemaTypeVisibleToConfigs(string! schemaType) -> Android.App.AppSearch.SetSchemaRequest.Builder!
Android.App.AppSearch.SetSchemaRequest.Builder.SetPubliclyVisibleSchema(string! schema, Android.App.AppSearch.PackageIdentifier? packageIdentifier) -> Android.App.AppSearch.SetSchemaRequest.Builder!
Android.App.AppSearch.SetSchemaRequest.PubliclyVisibleSchemas.get -> System.Collections.Generic.IDictionary<string!, Android.App.AppSearch.PackageIdentifier!>!
Android.App.AppSearch.SetSchemaRequest.SchemasVisibleToConfigs.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.ICollection<Android.App.AppSearch.SchemaVisibilityConfig!>!>!
Android.App.AppSearch.SetSchemaResponse.DescribeContents() -> int
Android.App.AppSearch.SetSchemaResponse.InterfaceConsts
Android.App.AppSearch.SetSchemaResponse.MigrationFailure.DescribeContents() -> int
Android.App.AppSearch.SetSchemaResponse.MigrationFailure.InterfaceConsts
Android.App.AppSearch.StorageInfo.DescribeContents() -> int
Android.App.AppSearch.StorageInfo.InterfaceConsts
Android.App.AutomaticRuleStatus.Activated = 4 -> Android.App.AutomaticRuleStatus
Android.App.AutomaticRuleStatus.Deactivated = 5 -> Android.App.AutomaticRuleStatus
Android.App.AutomaticZenRule.Builder
Android.App.AutomaticZenRule.Builder.Build() -> Android.App.AutomaticZenRule!
Android.App.AutomaticZenRule.Builder.Builder(Android.App.AutomaticZenRule! rule) -> void
Android.App.AutomaticZenRule.Builder.Builder(string! name, Android.Net.Uri! conditionId) -> void
Android.App.AutomaticZenRule.Builder.SetConditionId(Android.Net.Uri! conditionId) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetConfigurationActivity(Android.Content.ComponentName? configurationActivity) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetDeviceEffects(Android.Service.Notification.ZenDeviceEffects? deviceEffects) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetEnabled(bool enabled) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetIconResId(int iconResId) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetInterruptionFilter(int interruptionFilter) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetManualInvocationAllowed(bool allowManualInvocation) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetName(string! name) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetOwner(Android.Content.ComponentName? owner) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetTriggerDescription(string? description) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetType(int type) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.Builder.SetZenPolicy(Android.Service.Notification.ZenPolicy? policy) -> Android.App.AutomaticZenRule.Builder!
Android.App.AutomaticZenRule.DeviceEffects.get -> Android.Service.Notification.ZenDeviceEffects?
Android.App.AutomaticZenRule.DeviceEffects.set -> void
Android.App.AutomaticZenRule.IconResId.get -> int
Android.App.AutomaticZenRule.IsManualInvocationAllowed.get -> bool
Android.App.AutomaticZenRule.TriggerDescription.get -> string?
Android.App.AutomaticZenRule.Type.get -> Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType.Bedtime = 3 -> Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType.Driving = 4 -> Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType.Immersive = 5 -> Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType.Managed = 7 -> Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType.Other = 0 -> Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType.ScheduleCalendar = 2 -> Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType.ScheduleTime = 1 -> Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType.Theater = 6 -> Android.App.AutomaticZenRuleType
Android.App.AutomaticZenRuleType.Unknown = -1 -> Android.App.AutomaticZenRuleType
Android.App.ComponentCaller
Android.App.ComponentCaller.CheckContentUriPermission(Android.Net.Uri! uri, Android.Content.ActivityFlags modeFlags) -> Android.Content.PM.Permission
Android.App.ComponentCaller.Package.get -> string?
Android.App.ComponentCaller.Uid.get -> int
Android.App.Job.JobInfo.Builder.AddDebugTag(string! tag) -> Android.App.Job.JobInfo.Builder!
Android.App.Job.JobInfo.Builder.RemoveDebugTag(string! tag) -> Android.App.Job.JobInfo.Builder!
Android.App.Job.JobInfo.Builder.SetTraceTag(string? traceTag) -> Android.App.Job.JobInfo.Builder!
Android.App.Notification.TvExtender
Android.App.Notification.TvExtender.ChannelId.get -> string?
Android.App.Notification.TvExtender.ContentIntent.get -> Android.App.PendingIntent?
Android.App.Notification.TvExtender.DeleteIntent.get -> Android.App.PendingIntent?
Android.App.Notification.TvExtender.Extend(Android.App.Notification.Builder! builder) -> Android.App.Notification.Builder!
Android.App.Notification.TvExtender.IsAvailableOnTv.get -> bool
Android.App.Notification.TvExtender.IsSuppressShowOverApps.get -> bool
Android.App.Notification.TvExtender.SetChannelId(string? channelId) -> Android.App.Notification.TvExtender!
Android.App.Notification.TvExtender.SetContentIntent(Android.App.PendingIntent? intent) -> Android.App.Notification.TvExtender!
Android.App.Notification.TvExtender.SetDeleteIntent(Android.App.PendingIntent? intent) -> Android.App.Notification.TvExtender!
Android.App.Notification.TvExtender.SetSuppressShowOverApps(bool suppress) -> Android.App.Notification.TvExtender!
Android.App.Notification.TvExtender.TvExtender() -> void
Android.App.Notification.TvExtender.TvExtender(Android.App.Notification! notif) -> void
Android.App.NotificationChannel.VibrationEffect.get -> Android.OS.VibrationEffect?
Android.App.NotificationChannel.VibrationEffect.set -> void
Android.App.PictureInPictureUiState.IsTransitioningToPip.get -> bool
Android.App.SdkSandbox.AppOwnedSdkSandboxInterface
Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.AppOwnedSdkSandboxInterface(string! name, long version, Android.OS.IBinder! binder) -> void
Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.DescribeContents() -> int
Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.Interface.get -> Android.OS.IBinder!
Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.InterfaceConsts
Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.Name.get -> string!
Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.Version.get -> long
Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.SdkSandbox.SdkSandboxManager.AppOwnedSdkSandboxInterfaces.get -> System.Collections.Generic.IList<Android.App.SdkSandbox.AppOwnedSdkSandboxInterface!>!
Android.App.SdkSandbox.SdkSandboxManager.RegisterAppOwnedSdkSandboxInterface(Android.App.SdkSandbox.AppOwnedSdkSandboxInterface! appOwnedSdkSandboxInterface) -> void
Android.App.SdkSandbox.SdkSandboxManager.UnregisterAppOwnedSdkSandboxInterface(string! name) -> void
Android.App.Usage.StorageStats.GetAppBytesByDataType(Android.App.Usage.StorageStatsAppDataType dataType) -> long
Android.App.Usage.StorageStatsAppDataType
Android.App.Usage.StorageStatsAppDataType.FileTypeApk = 3 -> Android.App.Usage.StorageStatsAppDataType
Android.App.Usage.StorageStatsAppDataType.FileTypeCurrentProfile = 2 -> Android.App.Usage.StorageStatsAppDataType
Android.App.Usage.StorageStatsAppDataType.FileTypeDexoptArtifact = 0 -> Android.App.Usage.StorageStatsAppDataType
Android.App.Usage.StorageStatsAppDataType.FileTypeDm = 4 -> Android.App.Usage.StorageStatsAppDataType
Android.App.Usage.StorageStatsAppDataType.FileTypeReferenceProfile = 1 -> Android.App.Usage.StorageStatsAppDataType
Android.App.Usage.StorageStatsAppDataType.Lib = 5 -> Android.App.Usage.StorageStatsAppDataType
Android.App.Usage.UsageEvents.Event.Extras.get -> Android.OS.PersistableBundle!
Android.App.Usage.UsageEventsQuery
Android.App.Usage.UsageEventsQuery.BeginTimeMillis.get -> long
Android.App.Usage.UsageEventsQuery.Builder
Android.App.Usage.UsageEventsQuery.Builder.Build() -> Android.App.Usage.UsageEventsQuery!
Android.App.Usage.UsageEventsQuery.Builder.Builder(long beginTimeMillis, long endTimeMillis) -> void
Android.App.Usage.UsageEventsQuery.Builder.SetEventTypes(params int[]! eventTypes) -> Android.App.Usage.UsageEventsQuery.Builder!
Android.App.Usage.UsageEventsQuery.Builder.SetPackageNames(params string![]! pkgNames) -> Android.App.Usage.UsageEventsQuery.Builder!
Android.App.Usage.UsageEventsQuery.DescribeContents() -> int
Android.App.Usage.UsageEventsQuery.EndTimeMillis.get -> long
Android.App.Usage.UsageEventsQuery.GetEventTypes() -> int[]!
Android.App.Usage.UsageEventsQuery.InterfaceConsts
Android.App.Usage.UsageEventsQuery.PackageNames.get -> System.Collections.Generic.ICollection<string!>!
Android.App.Usage.UsageEventsQuery.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.Usage.UsageStatsManager.QueryEvents(Android.App.Usage.UsageEventsQuery! query) -> Android.App.Usage.UsageEvents?
Android.Appwidget.AppWidgetProviderInfo.GeneratedPreviewCategories.get -> int
Android.Appwidget.AppWidgetProviderInfo.GeneratedPreviewCategories.set -> void
Android.Bluetooth.AddressType.Anonymous = 255 -> Android.Bluetooth.AddressType
Android.Bluetooth.BluetoothA2dp.SupportedCodecTypes.get -> System.Collections.Generic.ICollection<Android.Bluetooth.BluetoothCodecType!>!
Android.Bluetooth.BluetoothCodecConfig.Builder.SetExtendedCodecType(Android.Bluetooth.BluetoothCodecType? codecType) -> Android.Bluetooth.BluetoothCodecConfig.Builder!
Android.Bluetooth.BluetoothCodecConfig.ExtendedCodecType.get -> Android.Bluetooth.BluetoothCodecType?
Android.Bluetooth.BluetoothCodecType
Android.Bluetooth.BluetoothCodecType.CodecId.get -> long
Android.Bluetooth.BluetoothCodecType.CodecName.get -> string!
Android.Bluetooth.BluetoothCodecType.DescribeContents() -> int
Android.Bluetooth.BluetoothCodecType.InterfaceConsts
Android.Bluetooth.BluetoothCodecType.IsMandatoryCodec.get -> bool
Android.Bluetooth.BluetoothCodecType.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Bluetooth.BluetoothDevice.AddressType.get -> Android.Bluetooth.AddressType
Android.Bluetooth.BluetoothLeSampleRate.SampleRate11025 = 2 -> Android.Bluetooth.BluetoothLeSampleRate
Android.Bluetooth.BluetoothLeSampleRate.SampleRate176400 = 1024 -> Android.Bluetooth.BluetoothLeSampleRate
Android.Bluetooth.BluetoothLeSampleRate.SampleRate192000 = 2048 -> Android.Bluetooth.BluetoothLeSampleRate
Android.Bluetooth.BluetoothLeSampleRate.SampleRate22050 = 8 -> Android.Bluetooth.BluetoothLeSampleRate
Android.Bluetooth.BluetoothLeSampleRate.SampleRate384000 = 4096 -> Android.Bluetooth.BluetoothLeSampleRate
Android.Bluetooth.BluetoothLeSampleRate.SampleRate88200 = 256 -> Android.Bluetooth.BluetoothLeSampleRate
Android.Bluetooth.BluetoothLeSampleRate.SampleRate96000 = 512 -> Android.Bluetooth.BluetoothLeSampleRate
Android.Bluetooth.BluetoothSocketExceptionReason.UnixFileSocketCreationFailure = 21 -> Android.Bluetooth.BluetoothSocketExceptionReason
Android.Bluetooth.GattStatus.ConnectionTimeout = 147 -> Android.Bluetooth.GattStatus
Android.Companion.AssociationInfo.IsSelfManaged.get -> bool
Android.Companion.CompanionDeviceManager.IsPermissionTransferUserConsented(int associationId) -> bool
Android.Companion.Virtual.VirtualDevice.DisplayName.get -> string?
Android.Companion.Virtual.VirtualDevice.DisplayNameFormatted.get -> Java.Lang.ICharSequence?
Android.Companion.Virtual.VirtualDevice.GetDisplayIds() -> int[]!
Android.Companion.Virtual.VirtualDevice.HasCustomSensorSupport.get -> bool
Android.Companion.Virtual.VirtualDevice.PersistentDeviceId.get -> string?
Android.Companion.Virtual.VirtualDeviceManager.GetVirtualDevice(int deviceId) -> Android.Companion.Virtual.VirtualDevice?
Android.Companion.Virtual.VirtualDeviceManager.IVirtualDeviceListener
Android.Companion.Virtual.VirtualDeviceManager.IVirtualDeviceListener.OnVirtualDeviceClosed(int deviceId) -> void
Android.Companion.Virtual.VirtualDeviceManager.IVirtualDeviceListener.OnVirtualDeviceCreated(int deviceId) -> void
Android.Companion.Virtual.VirtualDeviceManager.RegisterVirtualDeviceListener(Java.Util.Concurrent.IExecutor! executor, Android.Companion.Virtual.VirtualDeviceManager.IVirtualDeviceListener! listener) -> void
Android.Companion.Virtual.VirtualDeviceManager.UnregisterVirtualDeviceListener(Android.Companion.Virtual.VirtualDeviceManager.IVirtualDeviceListener! listener) -> void
Android.Companion.Virtual.VirtualDeviceManager.VirtualDeviceClosedEventArgs
Android.Companion.Virtual.VirtualDeviceManager.VirtualDeviceClosedEventArgs.DeviceId.get -> int
Android.Companion.Virtual.VirtualDeviceManager.VirtualDeviceClosedEventArgs.VirtualDeviceClosedEventArgs(int deviceId) -> void
Android.Companion.Virtual.VirtualDeviceManager.VirtualDeviceCreatedEventArgs
Android.Companion.Virtual.VirtualDeviceManager.VirtualDeviceCreatedEventArgs.DeviceId.get -> int
Android.Companion.Virtual.VirtualDeviceManager.VirtualDeviceCreatedEventArgs.VirtualDeviceCreatedEventArgs(int deviceId) -> void
Android.Content.AttributionSource.Builder.SetDeviceId(int deviceId) -> Android.Content.AttributionSource.Builder!
Android.Content.AttributionSource.DeviceId.get -> int
Android.Content.Bind.PackageIsolatedProcess = 16384 -> Android.Content.Bind
Android.Content.ClipData.Item.Builder
Android.Content.ClipData.Item.Builder.Build() -> Android.Content.ClipData.Item!
Android.Content.ClipData.Item.Builder.Builder() -> void
Android.Content.ClipData.Item.Builder.SetHtmlText(string? htmlText) -> Android.Content.ClipData.Item.Builder!
Android.Content.ClipData.Item.Builder.SetIntent(Android.Content.Intent? intent) -> Android.Content.ClipData.Item.Builder!
Android.Content.ClipData.Item.Builder.SetIntentSender(Android.Content.IntentSender? intentSender) -> Android.Content.ClipData.Item.Builder!
Android.Content.ClipData.Item.Builder.SetText(Java.Lang.ICharSequence? text) -> Android.Content.ClipData.Item.Builder!
Android.Content.ClipData.Item.Builder.SetText(string? text) -> Android.Content.ClipData.Item.Builder!
Android.Content.ClipData.Item.Builder.SetUri(Android.Net.Uri? uri) -> Android.Content.ClipData.Item.Builder!
Android.Content.ContextParams.Builder.SetShouldRegisterAttributionSource(bool shouldRegister) -> Android.Content.ContextParams.Builder!
Android.Content.ContextParams.ShouldRegisterAttributionSource() -> bool
Android.Content.IntentChooserContentType
Android.Content.IntentChooserContentType.Album = 1 -> Android.Content.IntentChooserContentType
Android.Content.IntentFilter.AddUriRelativeFilterGroup(Android.Content.UriRelativeFilterGroup! group) -> void
Android.Content.IntentFilter.ClearUriRelativeFilterGroups() -> void
Android.Content.IntentFilter.CountUriRelativeFilterGroups() -> int
Android.Content.IntentFilter.GetUriRelativeFilterGroup(int index) -> Android.Content.UriRelativeFilterGroup!
Android.Content.PM.ArchivedActivityInfo
Android.Content.PM.ArchivedActivityInfo.ArchivedActivityInfo(Java.Lang.ICharSequence! label, Android.Content.ComponentName! componentName) -> void
Android.Content.PM.ArchivedActivityInfo.ArchivedActivityInfo(string! label, Android.Content.ComponentName! componentName) -> void
Android.Content.PM.ArchivedActivityInfo.ComponentName.get -> Android.Content.ComponentName!
Android.Content.PM.ArchivedActivityInfo.Icon.get -> Android.Graphics.Drawables.Drawable?
Android.Content.PM.ArchivedActivityInfo.Label.get -> string?
Android.Content.PM.ArchivedActivityInfo.LabelFormatted.get -> Java.Lang.ICharSequence!
Android.Content.PM.ArchivedActivityInfo.MonochromeIcon.get -> Android.Graphics.Drawables.Drawable?
Android.Content.PM.ArchivedActivityInfo.SetComponentName(Android.Content.ComponentName! value) -> Android.Content.PM.ArchivedActivityInfo!
Android.Content.PM.ArchivedActivityInfo.SetIcon(Android.Graphics.Drawables.Drawable! value) -> Android.Content.PM.ArchivedActivityInfo!
Android.Content.PM.ArchivedActivityInfo.SetLabel(Java.Lang.ICharSequence! value) -> Android.Content.PM.ArchivedActivityInfo!
Android.Content.PM.ArchivedActivityInfo.SetLabel(string! value) -> Android.Content.PM.ArchivedActivityInfo!
Android.Content.PM.ArchivedActivityInfo.SetMonochromeIcon(Android.Graphics.Drawables.Drawable! value) -> Android.Content.PM.ArchivedActivityInfo!
Android.Content.PM.ArchivedPackageInfo
Android.Content.PM.ArchivedPackageInfo.ArchivedPackageInfo(string! packageName, Android.Content.PM.SigningInfo! signingInfo, System.Collections.Generic.IList<Android.Content.PM.ArchivedActivityInfo!>! launcherActivities) -> void
Android.Content.PM.ArchivedPackageInfo.DefaultToDeviceProtectedStorage.get -> string?
Android.Content.PM.ArchivedPackageInfo.LauncherActivities.get -> System.Collections.Generic.IList<Android.Content.PM.ArchivedActivityInfo!>!
Android.Content.PM.ArchivedPackageInfo.PackageName.get -> string!
Android.Content.PM.ArchivedPackageInfo.RequestLegacyExternalStorage.get -> string?
Android.Content.PM.ArchivedPackageInfo.SetDefaultToDeviceProtectedStorage(string! value) -> Android.Content.PM.ArchivedPackageInfo!
Android.Content.PM.ArchivedPackageInfo.SetLauncherActivities(System.Collections.Generic.IList<Android.Content.PM.ArchivedActivityInfo!>! value) -> Android.Content.PM.ArchivedPackageInfo!
Android.Content.PM.ArchivedPackageInfo.SetPackageName(string! value) -> Android.Content.PM.ArchivedPackageInfo!
Android.Content.PM.ArchivedPackageInfo.SetRequestLegacyExternalStorage(string! value) -> Android.Content.PM.ArchivedPackageInfo!
Android.Content.PM.ArchivedPackageInfo.SetSigningInfo(Android.Content.PM.SigningInfo! value) -> Android.Content.PM.ArchivedPackageInfo!
Android.Content.PM.ArchivedPackageInfo.SetTargetSdkVersion(int value) -> Android.Content.PM.ArchivedPackageInfo!
Android.Content.PM.ArchivedPackageInfo.SetUserDataFragile(string! value) -> Android.Content.PM.ArchivedPackageInfo!
Android.Content.PM.ArchivedPackageInfo.SetVersionCode(int value) -> Android.Content.PM.ArchivedPackageInfo!
Android.Content.PM.ArchivedPackageInfo.SetVersionCodeMajor(int value) -> Android.Content.PM.ArchivedPackageInfo!
Android.Content.PM.ArchivedPackageInfo.SigningInfo.get -> Android.Content.PM.SigningInfo!
Android.Content.PM.ArchivedPackageInfo.TargetSdkVersion.get -> int
Android.Content.PM.ArchivedPackageInfo.UserDataFragile.get -> string?
Android.Content.PM.ArchivedPackageInfo.VersionCode.get -> int
Android.Content.PM.ArchivedPackageInfo.VersionCodeMajor.get -> int
Android.Content.PM.ForegroundService.TypeMediaProcessing = 8192 -> Android.Content.PM.ForegroundService
Android.Content.PM.LauncherApps.ArchiveCompatibilityParams
Android.Content.PM.LauncherApps.ArchiveCompatibilityParams.ArchiveCompatibilityParams() -> void
Android.Content.PM.LauncherApps.ArchiveCompatibilityParams.ArchiveCompatibilityParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Content.PM.LauncherApps.GetLauncherUserInfo(Android.OS.UserHandle! userHandle) -> Android.Content.PM.LauncherUserInfo?
Android.Content.PM.LauncherUserInfo
Android.Content.PM.LauncherUserInfo.DescribeContents() -> int
Android.Content.PM.LauncherUserInfo.InterfaceConsts
Android.Content.PM.LauncherUserInfo.UserSerialNumber.get -> int
Android.Content.PM.LauncherUserInfo.UserType.get -> string!
Android.Content.PM.LauncherUserInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Content.PM.PackageInstaller.UnarchivalState
Android.Content.PM.PackageInstallerUnarchival
Android.Content.PM.PackageInstallerUnarchival.ErrorInstallerDisabled = 4 -> Android.Content.PM.PackageInstallerUnarchival
Android.Content.PM.PackageInstallerUnarchival.ErrorInstallerUninstalled = 5 -> Android.Content.PM.PackageInstallerUnarchival
Android.Content.PM.PackageInstallerUnarchival.ErrorInsufficientStorage = 2 -> Android.Content.PM.PackageInstallerUnarchival
Android.Content.PM.PackageInstallerUnarchival.ErrorNoConnectivity = 3 -> Android.Content.PM.PackageInstallerUnarchival
Android.Content.PM.PackageInstallerUnarchival.ErrorUserActionNeeded = 1 -> Android.Content.PM.PackageInstallerUnarchival
Android.Content.PM.PackageInstallerUnarchival.GenericError = 100 -> Android.Content.PM.PackageInstallerUnarchival
Android.Content.PM.PackageInstallerUnarchival.Ok = 0 -> Android.Content.PM.PackageInstallerUnarchival
Android.Content.PM.PackageItemInfo.IsArchived.get -> bool
Android.Content.PM.PackageItemInfo.IsArchived.set -> void
Android.Content.PM.PackageManagerUninstallFlags
Android.Content.PM.PackageManagerUninstallFlags.DeleteArchive = 16 -> Android.Content.PM.PackageManagerUninstallFlags
Android.Content.PM.SigningInfo.PublicKeys.get -> System.Collections.Generic.ICollection<Java.Security.IPublicKey!>!
Android.Content.PM.SigningInfo.SchemeVersion.get -> int
Android.Content.PM.SigningInfo.SigningInfo(int schemeVersion, System.Collections.Generic.ICollection<Android.Content.PM.Signature!>? apkContentsSigners, System.Collections.Generic.ICollection<Java.Security.IPublicKey!>? publicKeys, System.Collections.Generic.ICollection<Android.Content.PM.Signature!>? signingCertificateHistory) -> void
Android.Content.Res.IFontScaleConverter
Android.Content.Res.IFontScaleConverter.ConvertDpToSp(float dp) -> float
Android.Content.Res.IFontScaleConverter.ConvertSpToDp(float sp) -> float
Android.Content.Res.IFontScaleConverter.ForScale(float fontScale) -> Android.Content.Res.IFontScaleConverter?
Android.Content.Res.IFontScaleConverter.IsNonLinearFontScalingActive(float fontScale) -> bool
Android.Content.UriRelativeFilter
Android.Content.UriRelativeFilter.Filter.get -> string!
Android.Content.UriRelativeFilter.MatchData(Android.Net.Uri! data) -> bool
Android.Content.UriRelativeFilter.PatternType.get -> Android.OS.Pattern
Android.Content.UriRelativeFilter.UriPart.get -> Android.Content.UriRelativeFilterPart
Android.Content.UriRelativeFilter.UriRelativeFilter(Android.Content.UriRelativeFilterPart uriPart, Android.OS.Pattern patternType, string! filter) -> void
Android.Content.UriRelativeFilterGroup
Android.Content.UriRelativeFilterGroup.Action.get -> Android.Content.UriRelativeFilterGroupAction
Android.Content.UriRelativeFilterGroup.AddUriRelativeFilter(Android.Content.UriRelativeFilter! uriRelativeFilter) -> void
Android.Content.UriRelativeFilterGroup.MatchData(Android.Net.Uri! data) -> bool
Android.Content.UriRelativeFilterGroup.UriRelativeFilterGroup(Android.Content.UriRelativeFilterGroupAction action) -> void
Android.Content.UriRelativeFilterGroup.UriRelativeFilters.get -> System.Collections.Generic.ICollection<Android.Content.UriRelativeFilter!>!
Android.Content.UriRelativeFilterGroupAction
Android.Content.UriRelativeFilterGroupAction.Allow = 0 -> Android.Content.UriRelativeFilterGroupAction
Android.Content.UriRelativeFilterGroupAction.Block = 1 -> Android.Content.UriRelativeFilterGroupAction
Android.Content.UriRelativeFilterPart
Android.Content.UriRelativeFilterPart.Fragment = 2 -> Android.Content.UriRelativeFilterPart
Android.Content.UriRelativeFilterPart.Path = 0 -> Android.Content.UriRelativeFilterPart
Android.Content.UriRelativeFilterPart.Query = 1 -> Android.Content.UriRelativeFilterPart
Android.Crypto.Hpke.IHpkeSpi
Android.Crypto.Hpke.IHpkeSpi.EngineExport(int length, byte[]? context) -> byte[]!
Android.Crypto.Hpke.IHpkeSpi.EngineInitRecipient(byte[]! encapsulated, Java.Security.IPrivateKey! recipientKey, byte[]? info, Java.Security.IPublicKey? senderKey, byte[]? psk, byte[]? psk_id) -> void
Android.Crypto.Hpke.IHpkeSpi.EngineInitSender(Java.Security.IPublicKey! recipientKey, byte[]? info, Java.Security.IPrivateKey? senderKey, byte[]? psk, byte[]? psk_id) -> void
Android.Crypto.Hpke.IHpkeSpi.EngineInitSenderWithSeed(Java.Security.IPublicKey! recipientKey, byte[]? info, Java.Security.IPrivateKey? senderKey, byte[]? psk, byte[]? psk_id, byte[]! sKe) -> void
Android.Crypto.Hpke.IHpkeSpi.EngineOpen(byte[]! ciphertext, byte[]? aad) -> byte[]!
Android.Crypto.Hpke.IHpkeSpi.EngineSeal(byte[]! plaintext, byte[]? aad) -> byte[]!
Android.Crypto.Hpke.IHpkeSpi.GetEncapsulated() -> byte[]!
Android.Crypto.Hpke.XdhKeySpec
Android.Crypto.Hpke.XdhKeySpec.GetKey() -> byte[]!
Android.Crypto.Hpke.XdhKeySpec.XdhKeySpec(byte[]! encoded) -> void
Android.Database.Sqlite.SqliteDataType
Android.Database.Sqlite.SqliteDataType.Blob = 4 -> Android.Database.Sqlite.SqliteDataType
Android.Database.Sqlite.SqliteDataType.Float = 2 -> Android.Database.Sqlite.SqliteDataType
Android.Database.Sqlite.SqliteDataType.Integer = 1 -> Android.Database.Sqlite.SqliteDataType
Android.Database.Sqlite.SqliteDataType.Null = 5 -> Android.Database.Sqlite.SqliteDataType
Android.Database.Sqlite.SqliteDataType.Text = 3 -> Android.Database.Sqlite.SqliteDataType
Android.Database.Sqlite.SQLiteRawStatement
Android.Database.Sqlite.SQLiteRawStatement.BindBlob(int parameterIndex, byte[]! value) -> void
Android.Database.Sqlite.SQLiteRawStatement.BindBlob(int parameterIndex, byte[]! value, int offset, int length) -> void
Android.Database.Sqlite.SQLiteRawStatement.BindDouble(int parameterIndex, double value) -> void
Android.Database.Sqlite.SQLiteRawStatement.BindInt(int parameterIndex, int value) -> void
Android.Database.Sqlite.SQLiteRawStatement.BindLong(int parameterIndex, long value) -> void
Android.Database.Sqlite.SQLiteRawStatement.BindNull(int parameterIndex) -> void
Android.Database.Sqlite.SQLiteRawStatement.BindText(int parameterIndex, string! value) -> void
Android.Database.Sqlite.SQLiteRawStatement.ClearBindings() -> void
Android.Database.Sqlite.SQLiteRawStatement.Close() -> void
Android.Database.Sqlite.SQLiteRawStatement.GetColumnBlob(int columnIndex) -> byte[]?
Android.Database.Sqlite.SQLiteRawStatement.GetColumnDouble(int columnIndex) -> double
Android.Database.Sqlite.SQLiteRawStatement.GetColumnInt(int columnIndex) -> int
Android.Database.Sqlite.SQLiteRawStatement.GetColumnLength(int columnIndex) -> int
Android.Database.Sqlite.SQLiteRawStatement.GetColumnLong(int columnIndex) -> long
Android.Database.Sqlite.SQLiteRawStatement.GetColumnName(int columnIndex) -> string!
Android.Database.Sqlite.SQLiteRawStatement.GetColumnText(int columnIndex) -> string!
Android.Database.Sqlite.SQLiteRawStatement.GetColumnType(int columnIndex) -> Android.Database.Sqlite.SqliteDataType
Android.Database.Sqlite.SQLiteRawStatement.GetParameterIndex(string! name) -> int
Android.Database.Sqlite.SQLiteRawStatement.GetParameterName(int parameterIndex) -> string?
Android.Database.Sqlite.SQLiteRawStatement.IsOpen.get -> bool
Android.Database.Sqlite.SQLiteRawStatement.ParameterCount.get -> int
Android.Database.Sqlite.SQLiteRawStatement.ReadColumnBlob(int columnIndex, byte[]! buffer, int offset, int length, int srcOffset) -> int
Android.Database.Sqlite.SQLiteRawStatement.Reset() -> void
Android.Database.Sqlite.SQLiteRawStatement.ResultColumnCount.get -> int
Android.Database.Sqlite.SQLiteRawStatement.Step() -> bool
Android.Graphics.Fonts.FontFamily.Builder.BuildVariableFamily() -> Android.Graphics.Fonts.FontFamily?
Android.Graphics.Gainmap.Gainmap(Android.Graphics.Gainmap! gainmap, Android.Graphics.Bitmap! gainmapContents) -> void
Android.Graphics.ImageDecoder.Allocator.get -> Android.Graphics.ImageDecoderAllocator
Android.Graphics.ImageDecoder.Allocator.set -> void
Android.Graphics.Matrix44
Android.Graphics.Matrix44.Matrix44() -> void
Android.Graphics.Matrix44.Matrix44(Android.Graphics.Matrix! mat) -> void
Android.Graphics.Matrix44.Matrix44(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Bounds.get -> System.Collections.Generic.IList<Android.Graphics.RectF!>!
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.DescribeContents() -> int
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.DescribeContents() -> int
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.Destination(int pageNumber, float xCoordinate, float yCoordinate, float zoom) -> void
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.InterfaceConsts
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.PageNumber.get -> int
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.XCoordinate.get -> float
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.YCoordinate.get -> float
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.Zoom.get -> float
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.GetDestination() -> Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination!
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.InterfaceConsts
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.PdfPageGotoLinkContent(System.Collections.Generic.IList<Android.Graphics.RectF!>! bounds, Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination! destination) -> void
Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.Content.PdfPageImageContent
Android.Graphics.Pdf.Content.PdfPageImageContent.AltText.get -> string!
Android.Graphics.Pdf.Content.PdfPageImageContent.DescribeContents() -> int
Android.Graphics.Pdf.Content.PdfPageImageContent.InterfaceConsts
Android.Graphics.Pdf.Content.PdfPageImageContent.PdfPageImageContent(string! altText) -> void
Android.Graphics.Pdf.Content.PdfPageImageContent.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.Content.PdfPageLinkContent
Android.Graphics.Pdf.Content.PdfPageLinkContent.Bounds.get -> System.Collections.Generic.IList<Android.Graphics.RectF!>!
Android.Graphics.Pdf.Content.PdfPageLinkContent.DescribeContents() -> int
Android.Graphics.Pdf.Content.PdfPageLinkContent.InterfaceConsts
Android.Graphics.Pdf.Content.PdfPageLinkContent.PdfPageLinkContent(System.Collections.Generic.IList<Android.Graphics.RectF!>! bounds, Android.Net.Uri! uri) -> void
Android.Graphics.Pdf.Content.PdfPageLinkContent.Uri.get -> Android.Net.Uri!
Android.Graphics.Pdf.Content.PdfPageLinkContent.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.Content.PdfPageTextContent
Android.Graphics.Pdf.Content.PdfPageTextContent.Bounds.get -> System.Collections.Generic.IList<Android.Graphics.RectF!>!
Android.Graphics.Pdf.Content.PdfPageTextContent.DescribeContents() -> int
Android.Graphics.Pdf.Content.PdfPageTextContent.InterfaceConsts
Android.Graphics.Pdf.Content.PdfPageTextContent.PdfPageTextContent(string! text) -> void
Android.Graphics.Pdf.Content.PdfPageTextContent.PdfPageTextContent(string! text, System.Collections.Generic.IList<Android.Graphics.RectF!>! bounds) -> void
Android.Graphics.Pdf.Content.PdfPageTextContent.Text.get -> string!
Android.Graphics.Pdf.Content.PdfPageTextContent.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.LoadParams
Android.Graphics.Pdf.LoadParams.Builder
Android.Graphics.Pdf.LoadParams.Builder.Build() -> Android.Graphics.Pdf.LoadParams!
Android.Graphics.Pdf.LoadParams.Builder.Builder() -> void
Android.Graphics.Pdf.LoadParams.Builder.SetPassword(string? password) -> Android.Graphics.Pdf.LoadParams.Builder!
Android.Graphics.Pdf.LoadParams.Password.get -> string?
Android.Graphics.Pdf.Models.FormEditRecord
Android.Graphics.Pdf.Models.FormEditRecord.Builder
Android.Graphics.Pdf.Models.FormEditRecord.Builder.Build() -> Android.Graphics.Pdf.Models.FormEditRecord!
Android.Graphics.Pdf.Models.FormEditRecord.Builder.Builder(int type, int pageNumber, int widgetIndex) -> void
Android.Graphics.Pdf.Models.FormEditRecord.Builder.SetClickPoint(Android.Graphics.Point? clickPoint) -> Android.Graphics.Pdf.Models.FormEditRecord.Builder!
Android.Graphics.Pdf.Models.FormEditRecord.Builder.SetSelectedIndices(int[]? selectedIndices) -> Android.Graphics.Pdf.Models.FormEditRecord.Builder!
Android.Graphics.Pdf.Models.FormEditRecord.Builder.SetText(string? text) -> Android.Graphics.Pdf.Models.FormEditRecord.Builder!
Android.Graphics.Pdf.Models.FormEditRecord.ClickPoint.get -> Android.Graphics.Point?
Android.Graphics.Pdf.Models.FormEditRecord.DescribeContents() -> int
Android.Graphics.Pdf.Models.FormEditRecord.GetSelectedIndices() -> int[]!
Android.Graphics.Pdf.Models.FormEditRecord.InterfaceConsts
Android.Graphics.Pdf.Models.FormEditRecord.PageNumber.get -> int
Android.Graphics.Pdf.Models.FormEditRecord.Text.get -> string?
Android.Graphics.Pdf.Models.FormEditRecord.Type.get -> Android.Graphics.Pdf.Models.FormEditRecordEditType
Android.Graphics.Pdf.Models.FormEditRecord.WidgetIndex.get -> int
Android.Graphics.Pdf.Models.FormEditRecord.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.Models.FormEditRecordEditType
Android.Graphics.Pdf.Models.FormEditRecordEditType.Click = 0 -> Android.Graphics.Pdf.Models.FormEditRecordEditType
Android.Graphics.Pdf.Models.FormEditRecordEditType.SetIndices = 1 -> Android.Graphics.Pdf.Models.FormEditRecordEditType
Android.Graphics.Pdf.Models.FormEditRecordEditType.SetText = 2 -> Android.Graphics.Pdf.Models.FormEditRecordEditType
Android.Graphics.Pdf.Models.FormWidgetInfo
Android.Graphics.Pdf.Models.FormWidgetInfo.AccessibilityLabel.get -> string?
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.Build() -> Android.Graphics.Pdf.Models.FormWidgetInfo!
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.Builder(int widgetType, int widgetIndex, Android.Graphics.Rect! widgetRect, string! textValue, string! accessibilityLabel) -> void
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.SetEditableText(bool editableText) -> Android.Graphics.Pdf.Models.FormWidgetInfo.Builder!
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.SetFontSize(float fontSize) -> Android.Graphics.Pdf.Models.FormWidgetInfo.Builder!
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.SetListItems(System.Collections.Generic.IList<Android.Graphics.Pdf.Models.ListItem!>! listItems) -> Android.Graphics.Pdf.Models.FormWidgetInfo.Builder!
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.SetMaxLength(int maxLength) -> Android.Graphics.Pdf.Models.FormWidgetInfo.Builder!
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.SetMultiLineText(bool multiLineText) -> Android.Graphics.Pdf.Models.FormWidgetInfo.Builder!
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.SetMultiSelect(bool multiSelect) -> Android.Graphics.Pdf.Models.FormWidgetInfo.Builder!
Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.SetReadOnly(bool readOnly) -> Android.Graphics.Pdf.Models.FormWidgetInfo.Builder!
Android.Graphics.Pdf.Models.FormWidgetInfo.DescribeContents() -> int
Android.Graphics.Pdf.Models.FormWidgetInfo.FontSize.get -> float
Android.Graphics.Pdf.Models.FormWidgetInfo.InterfaceConsts
Android.Graphics.Pdf.Models.FormWidgetInfo.IsEditableText.get -> bool
Android.Graphics.Pdf.Models.FormWidgetInfo.IsMultiLineText.get -> bool
Android.Graphics.Pdf.Models.FormWidgetInfo.IsMultiSelect.get -> bool
Android.Graphics.Pdf.Models.FormWidgetInfo.IsReadOnly.get -> bool
Android.Graphics.Pdf.Models.FormWidgetInfo.ListItems.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Models.ListItem!>!
Android.Graphics.Pdf.Models.FormWidgetInfo.MaxLength.get -> int
Android.Graphics.Pdf.Models.FormWidgetInfo.TextValue.get -> string?
Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetIndex.get -> int
Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetRect.get -> Android.Graphics.Rect!
Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetType.get -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.FormWidgetInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.CheckBox = 2 -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.ComboBox = 4 -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.ListBox = 5 -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.PushButton = 1 -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.RadioButton = 3 -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.Signature = 7 -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.TextField = 6 -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.Unknown = 0 -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
Android.Graphics.Pdf.Models.ListItem
Android.Graphics.Pdf.Models.ListItem.DescribeContents() -> int
Android.Graphics.Pdf.Models.ListItem.InterfaceConsts
Android.Graphics.Pdf.Models.ListItem.IsSelected.get -> bool
Android.Graphics.Pdf.Models.ListItem.Label.get -> string!
Android.Graphics.Pdf.Models.ListItem.ListItem(string! label, bool selected) -> void
Android.Graphics.Pdf.Models.ListItem.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.Models.PageMatchBounds
Android.Graphics.Pdf.Models.PageMatchBounds.Bounds.get -> System.Collections.Generic.IList<Android.Graphics.RectF!>!
Android.Graphics.Pdf.Models.PageMatchBounds.DescribeContents() -> int
Android.Graphics.Pdf.Models.PageMatchBounds.InterfaceConsts
Android.Graphics.Pdf.Models.PageMatchBounds.PageMatchBounds(System.Collections.Generic.IList<Android.Graphics.RectF!>! bounds, int textStartIndex) -> void
Android.Graphics.Pdf.Models.PageMatchBounds.TextStartIndex.get -> int
Android.Graphics.Pdf.Models.PageMatchBounds.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.Models.Selection.PageSelection
Android.Graphics.Pdf.Models.Selection.PageSelection.DescribeContents() -> int
Android.Graphics.Pdf.Models.Selection.PageSelection.InterfaceConsts
Android.Graphics.Pdf.Models.Selection.PageSelection.Page.get -> int
Android.Graphics.Pdf.Models.Selection.PageSelection.PageSelection(int page, Android.Graphics.Pdf.Models.Selection.SelectionBoundary! start, Android.Graphics.Pdf.Models.Selection.SelectionBoundary! stop, System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageTextContent!>! selectedContents) -> void
Android.Graphics.Pdf.Models.Selection.PageSelection.SelectedTextContents.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageTextContent!>!
Android.Graphics.Pdf.Models.Selection.PageSelection.Start.get -> Android.Graphics.Pdf.Models.Selection.SelectionBoundary!
Android.Graphics.Pdf.Models.Selection.PageSelection.Stop.get -> Android.Graphics.Pdf.Models.Selection.SelectionBoundary!
Android.Graphics.Pdf.Models.Selection.PageSelection.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.Models.Selection.SelectionBoundary
Android.Graphics.Pdf.Models.Selection.SelectionBoundary.DescribeContents() -> int
Android.Graphics.Pdf.Models.Selection.SelectionBoundary.Index.get -> int
Android.Graphics.Pdf.Models.Selection.SelectionBoundary.InterfaceConsts
Android.Graphics.Pdf.Models.Selection.SelectionBoundary.IsRtl.get -> bool
Android.Graphics.Pdf.Models.Selection.SelectionBoundary.Point.get -> Android.Graphics.Point?
Android.Graphics.Pdf.Models.Selection.SelectionBoundary.SelectionBoundary(Android.Graphics.Point! point) -> void
Android.Graphics.Pdf.Models.Selection.SelectionBoundary.SelectionBoundary(int index) -> void
Android.Graphics.Pdf.Models.Selection.SelectionBoundary.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Pdf.PdfRenderer.DocumentLinearizationType.get -> Android.Graphics.Pdf.PdfRendererDocumentLinearizedType
Android.Graphics.Pdf.PdfRenderer.Page.ApplyEdit(Android.Graphics.Pdf.Models.FormEditRecord! editRecord) -> System.Collections.Generic.IList<Android.Graphics.Rect!>!
Android.Graphics.Pdf.PdfRenderer.Page.FormWidgetInfos.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Models.FormWidgetInfo!>!
Android.Graphics.Pdf.PdfRenderer.Page.GetFormWidgetInfoAtIndex(int widgetIndex) -> Android.Graphics.Pdf.Models.FormWidgetInfo!
Android.Graphics.Pdf.PdfRenderer.Page.GetFormWidgetInfoAtPosition(int x, int y) -> Android.Graphics.Pdf.Models.FormWidgetInfo!
Android.Graphics.Pdf.PdfRenderer.Page.GetFormWidgetInfos(int[]! types) -> System.Collections.Generic.IList<Android.Graphics.Pdf.Models.FormWidgetInfo!>!
Android.Graphics.Pdf.PdfRenderer.Page.GotoLinks.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageGotoLinkContent!>!
Android.Graphics.Pdf.PdfRenderer.Page.ImageContents.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageImageContent!>!
Android.Graphics.Pdf.PdfRenderer.Page.LinkContents.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageLinkContent!>!
Android.Graphics.Pdf.PdfRenderer.Page.Render(Android.Graphics.Bitmap! destination, Android.Graphics.Rect? destClip, Android.Graphics.Matrix? transform, Android.Graphics.Pdf.RenderParams! params) -> void
Android.Graphics.Pdf.PdfRenderer.Page.SearchText(string! query) -> System.Collections.Generic.IList<Android.Graphics.Pdf.Models.PageMatchBounds!>!
Android.Graphics.Pdf.PdfRenderer.Page.SelectContent(Android.Graphics.Pdf.Models.Selection.SelectionBoundary! start, Android.Graphics.Pdf.Models.Selection.SelectionBoundary! stop) -> Android.Graphics.Pdf.Models.Selection.PageSelection?
Android.Graphics.Pdf.PdfRenderer.Page.TextContents.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageTextContent!>!
Android.Graphics.Pdf.PdfRenderer.PdfFormType.get -> Android.Graphics.Pdf.PdfRendererPdfFormType
Android.Graphics.Pdf.PdfRenderer.PdfRenderer(Android.OS.ParcelFileDescriptor! fileDescriptor, Android.Graphics.Pdf.LoadParams! params) -> void
Android.Graphics.Pdf.PdfRenderer.Write(Android.OS.ParcelFileDescriptor! destination, bool removePasswordProtection) -> void
Android.Graphics.Pdf.PdfRendererDocumentLinearizedType
Android.Graphics.Pdf.PdfRendererDocumentLinearizedType.Linearized = 1 -> Android.Graphics.Pdf.PdfRendererDocumentLinearizedType
Android.Graphics.Pdf.PdfRendererDocumentLinearizedType.NonLinearized = 0 -> Android.Graphics.Pdf.PdfRendererDocumentLinearizedType
Android.Graphics.Pdf.PdfRendererPdfFormType
Android.Graphics.Pdf.PdfRendererPdfFormType.AcroForm = 1 -> Android.Graphics.Pdf.PdfRendererPdfFormType
Android.Graphics.Pdf.PdfRendererPdfFormType.None = 0 -> Android.Graphics.Pdf.PdfRendererPdfFormType
Android.Graphics.Pdf.PdfRendererPdfFormType.XfaForeground = 3 -> Android.Graphics.Pdf.PdfRendererPdfFormType
Android.Graphics.Pdf.PdfRendererPdfFormType.XfaFull = 2 -> Android.Graphics.Pdf.PdfRendererPdfFormType
Android.Graphics.Pdf.PdfRendererPreV
Android.Graphics.Pdf.PdfRendererPreV.Close() -> void
Android.Graphics.Pdf.PdfRendererPreV.DocumentLinearizationType.get -> Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType
Android.Graphics.Pdf.PdfRendererPreV.OpenPage(int index) -> Android.Graphics.Pdf.PdfRendererPreV.Page!
Android.Graphics.Pdf.PdfRendererPreV.Page
Android.Graphics.Pdf.PdfRendererPreV.Page.ApplyEdit(Android.Graphics.Pdf.Models.FormEditRecord! editRecord) -> System.Collections.Generic.IList<Android.Graphics.Rect!>!
Android.Graphics.Pdf.PdfRendererPreV.Page.Close() -> void
Android.Graphics.Pdf.PdfRendererPreV.Page.FormWidgetInfos.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Models.FormWidgetInfo!>!
Android.Graphics.Pdf.PdfRendererPreV.Page.GetFormWidgetInfoAtIndex(int annotationIndex) -> Android.Graphics.Pdf.Models.FormWidgetInfo!
Android.Graphics.Pdf.PdfRendererPreV.Page.GetFormWidgetInfoAtPosition(int x, int y) -> Android.Graphics.Pdf.Models.FormWidgetInfo!
Android.Graphics.Pdf.PdfRendererPreV.Page.GetFormWidgetInfos(int[]! types) -> System.Collections.Generic.IList<Android.Graphics.Pdf.Models.FormWidgetInfo!>!
Android.Graphics.Pdf.PdfRendererPreV.Page.GotoLinks.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageGotoLinkContent!>!
Android.Graphics.Pdf.PdfRendererPreV.Page.Height.get -> int
Android.Graphics.Pdf.PdfRendererPreV.Page.ImageContents.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageImageContent!>!
Android.Graphics.Pdf.PdfRendererPreV.Page.Index.get -> int
Android.Graphics.Pdf.PdfRendererPreV.Page.LinkContents.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageLinkContent!>!
Android.Graphics.Pdf.PdfRendererPreV.Page.Render(Android.Graphics.Bitmap! destination, Android.Graphics.Rect? destClip, Android.Graphics.Matrix? transform, Android.Graphics.Pdf.RenderParams! params) -> void
Android.Graphics.Pdf.PdfRendererPreV.Page.SearchText(string! query) -> System.Collections.Generic.IList<Android.Graphics.Pdf.Models.PageMatchBounds!>!
Android.Graphics.Pdf.PdfRendererPreV.Page.SelectContent(Android.Graphics.Pdf.Models.Selection.SelectionBoundary! start, Android.Graphics.Pdf.Models.Selection.SelectionBoundary! stop) -> Android.Graphics.Pdf.Models.Selection.PageSelection?
Android.Graphics.Pdf.PdfRendererPreV.Page.TextContents.get -> System.Collections.Generic.IList<Android.Graphics.Pdf.Content.PdfPageTextContent!>!
Android.Graphics.Pdf.PdfRendererPreV.Page.Width.get -> int
Android.Graphics.Pdf.PdfRendererPreV.PageCount.get -> int
Android.Graphics.Pdf.PdfRendererPreV.PdfFormType.get -> Android.Graphics.Pdf.PdfRendererPreVPdfFormType
Android.Graphics.Pdf.PdfRendererPreV.PdfRendererPreV(Android.OS.ParcelFileDescriptor! fileDescriptor) -> void
Android.Graphics.Pdf.PdfRendererPreV.PdfRendererPreV(Android.OS.ParcelFileDescriptor! fileDescriptor, Android.Graphics.Pdf.LoadParams! params) -> void
Android.Graphics.Pdf.PdfRendererPreV.Write(Android.OS.ParcelFileDescriptor! destination, bool removePasswordProtection) -> void
Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType
Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType.Linearized = 1 -> Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType
Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType.NonLinearized = 0 -> Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType
Android.Graphics.Pdf.PdfRendererPreVPdfFormType
Android.Graphics.Pdf.PdfRendererPreVPdfFormType.AcroForm = 1 -> Android.Graphics.Pdf.PdfRendererPreVPdfFormType
Android.Graphics.Pdf.PdfRendererPreVPdfFormType.None = 0 -> Android.Graphics.Pdf.PdfRendererPreVPdfFormType
Android.Graphics.Pdf.PdfRendererPreVPdfFormType.XfaForeground = 3 -> Android.Graphics.Pdf.PdfRendererPreVPdfFormType
Android.Graphics.Pdf.PdfRendererPreVPdfFormType.XfaFull = 2 -> Android.Graphics.Pdf.PdfRendererPreVPdfFormType
Android.Graphics.Pdf.RenderParams
Android.Graphics.Pdf.RenderParams.Builder
Android.Graphics.Pdf.RenderParams.Builder.Build() -> Android.Graphics.Pdf.RenderParams!
Android.Graphics.Pdf.RenderParams.Builder.Builder(int renderMode) -> void
Android.Graphics.Pdf.RenderParams.Builder.SetRenderFlags(int renderFlags) -> Android.Graphics.Pdf.RenderParams.Builder!
Android.Graphics.Pdf.RenderParams.Builder.SetRenderFlags(int renderFlags, int mask) -> Android.Graphics.Pdf.RenderParams.Builder!
Android.Graphics.Pdf.RenderParams.RenderFlags.get -> Android.Graphics.Pdf.RenderParamsRenderFlag
Android.Graphics.Pdf.RenderParams.RenderMode.get -> Android.Graphics.Pdf.RenderParamsRenderMode
Android.Graphics.Pdf.RenderParamsRenderFlag
Android.Graphics.Pdf.RenderParamsRenderFlag.HighlightAnnotations = 4 -> Android.Graphics.Pdf.RenderParamsRenderFlag
Android.Graphics.Pdf.RenderParamsRenderFlag.TextAnnotations = 2 -> Android.Graphics.Pdf.RenderParamsRenderFlag
Android.Graphics.Pdf.RenderParamsRenderMode
Android.Graphics.Pdf.RenderParamsRenderMode.ForDisplay = 1 -> Android.Graphics.Pdf.RenderParamsRenderMode
Android.Graphics.Pdf.RenderParamsRenderMode.ForPrint = 2 -> Android.Graphics.Pdf.RenderParamsRenderMode
Android.Graphics.RecordingCanvas.DrawRegion(Android.Graphics.Region! region, Android.Graphics.Paint! paint) -> void
Android.Graphics.Text.JustificationMode.InterCharacter = 2 -> Android.Graphics.Text.JustificationMode
Android.Graphics.Text.LineBreakConfig.Builder.Merge(Android.Graphics.Text.LineBreakConfig! config) -> Android.Graphics.Text.LineBreakConfig.Builder!
Android.Graphics.Text.LineBreakConfig.Builder.SetHyphenation(int hyphenation) -> Android.Graphics.Text.LineBreakConfig.Builder!
Android.Graphics.Text.LineBreakConfig.DescribeContents() -> int
Android.Graphics.Text.LineBreakConfig.Hyphenation.get -> Android.Graphics.Text.LineBreakHyphenation
Android.Graphics.Text.LineBreakConfig.InterfaceConsts
Android.Graphics.Text.LineBreakConfig.Merge(Android.Graphics.Text.LineBreakConfig! config) -> Android.Graphics.Text.LineBreakConfig!
Android.Graphics.Text.LineBreakConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Graphics.Text.LineBreaker.Builder.SetUseBoundsForWidth(bool useBoundsForWidth) -> Android.Graphics.Text.LineBreaker.Builder!
Android.Graphics.Text.LineBreakHyphenation
Android.Graphics.Text.LineBreakHyphenation.Disabled = 0 -> Android.Graphics.Text.LineBreakHyphenation
Android.Graphics.Text.LineBreakHyphenation.Enabled = 1 -> Android.Graphics.Text.LineBreakHyphenation
Android.Graphics.Text.LineBreakHyphenation.Unspecified = -1 -> Android.Graphics.Text.LineBreakHyphenation
Android.Graphics.Text.LineBreakStyle.Auto = 5 -> Android.Graphics.Text.LineBreakStyle
Android.Graphics.Text.LineBreakStyle.NoBreak = 4 -> Android.Graphics.Text.LineBreakStyle
Android.Graphics.Text.LineBreakStyle.Unspecified = -1 -> Android.Graphics.Text.LineBreakStyle
Android.Graphics.Text.LineBreakWordStyle.Auto = 2 -> Android.Graphics.Text.LineBreakWordStyle
Android.Graphics.Text.LineBreakWordStyle.Unspecified = -1 -> Android.Graphics.Text.LineBreakWordStyle
Android.Graphics.Text.PositionedGlyphs.GetFakeBold(int index) -> bool
Android.Graphics.Text.PositionedGlyphs.GetFakeItalic(int index) -> bool
Android.Graphics.Text.PositionedGlyphs.GetItalicOverride(int index) -> float
Android.Graphics.Text.PositionedGlyphs.GetWeightOverride(int index) -> float
Android.Hardware.Biometrics.BiometricPrompt.CryptoObject.CryptoObject(long operationHandle) -> void
Android.Hardware.Biometrics.BiometricPrompt.CryptoObject.OperationHandle.get -> long
Android.Hardware.Biometrics.IPromptContentItem
Android.Hardware.Biometrics.IPromptContentView
Android.Hardware.Biometrics.PromptContentItemBulletedText
Android.Hardware.Biometrics.PromptContentItemBulletedText.DescribeContents() -> int
Android.Hardware.Biometrics.PromptContentItemBulletedText.InterfaceConsts
Android.Hardware.Biometrics.PromptContentItemBulletedText.PromptContentItemBulletedText(string! text) -> void
Android.Hardware.Biometrics.PromptContentItemBulletedText.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Hardware.Biometrics.PromptContentItemPlainText
Android.Hardware.Biometrics.PromptContentItemPlainText.DescribeContents() -> int
Android.Hardware.Biometrics.PromptContentItemPlainText.InterfaceConsts
Android.Hardware.Biometrics.PromptContentItemPlainText.PromptContentItemPlainText(string! text) -> void
Android.Hardware.Biometrics.PromptContentItemPlainText.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Builder
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Builder.Build() -> Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton!
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Builder.Builder() -> void
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Builder.SetDescription(string! description) -> Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Builder!
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Builder.SetMoreOptionsButtonListener(Java.Util.Concurrent.IExecutor! executor, Android.Content.IDialogInterfaceOnClickListener! listener) -> Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Builder!
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.DescribeContents() -> int
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Description.get -> string?
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.InterfaceConsts
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.MoreOptionsButtonListener.get -> Android.Content.IDialogInterfaceOnClickListener!
Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Hardware.Biometrics.PromptVerticalListContentView
Android.Hardware.Biometrics.PromptVerticalListContentView.Builder
Android.Hardware.Biometrics.PromptVerticalListContentView.Builder.AddListItem(Android.Hardware.Biometrics.IPromptContentItem! listItem) -> Android.Hardware.Biometrics.PromptVerticalListContentView.Builder!
Android.Hardware.Biometrics.PromptVerticalListContentView.Builder.AddListItem(Android.Hardware.Biometrics.IPromptContentItem! listItem, int index) -> Android.Hardware.Biometrics.PromptVerticalListContentView.Builder!
Android.Hardware.Biometrics.PromptVerticalListContentView.Builder.Build() -> Android.Hardware.Biometrics.PromptVerticalListContentView!
Android.Hardware.Biometrics.PromptVerticalListContentView.Builder.Builder() -> void
Android.Hardware.Biometrics.PromptVerticalListContentView.Builder.SetDescription(string! description) -> Android.Hardware.Biometrics.PromptVerticalListContentView.Builder!
Android.Hardware.Biometrics.PromptVerticalListContentView.DescribeContents() -> int
Android.Hardware.Biometrics.PromptVerticalListContentView.Description.get -> string?
Android.Hardware.Biometrics.PromptVerticalListContentView.InterfaceConsts
Android.Hardware.Biometrics.PromptVerticalListContentView.ListItems.get -> System.Collections.Generic.IList<Android.Hardware.Biometrics.IPromptContentItem!>!
Android.Hardware.Biometrics.PromptVerticalListContentView.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Hardware.Camera2.CameraCharacteristics.AvailableSessionCharacteristicsKeys.get -> System.Collections.Generic.IList<Android.Hardware.Camera2.CameraCharacteristics.Key!>!
Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup
Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup.CameraDeviceSetup(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Hardware.Camera2.CameraExtensionCharacteristics.Get(Android.Hardware.Camera2.CameraExtensionTypes extension, Android.Hardware.Camera2.CameraCharacteristics.Key! key) -> Java.Lang.Object?
Android.Hardware.Camera2.CameraExtensionCharacteristics.GetKeys(Android.Hardware.Camera2.CameraExtensionTypes extension) -> System.Collections.Generic.ICollection<Android.Hardware.Camera2.CameraCharacteristics.Key!>!
Android.Hardware.Camera2.CameraManager.GetCameraDeviceSetup(string! cameraId) -> Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup!
Android.Hardware.Camera2.CameraManager.IsCameraDeviceSetupSupported(string! cameraId) -> bool
Android.Hardware.Camera2.ControlAEMode.OnLowLightBoostBrightnessPriority = 6 -> Android.Hardware.Camera2.ControlAEMode
Android.Hardware.Camera2.ControlLowLightBoostState
Android.Hardware.Camera2.ControlLowLightBoostState.Active = 1 -> Android.Hardware.Camera2.ControlLowLightBoostState
Android.Hardware.Camera2.ControlLowLightBoostState.Inactive = 0 -> Android.Hardware.Camera2.ControlLowLightBoostState
Android.Hardware.Camera2.Params.ExtensionSessionConfiguration.ClearColorSpace() -> void
Android.Hardware.Camera2.Params.ExtensionSessionConfiguration.ColorSpace.get -> Android.Graphics.ColorSpace?
Android.Hardware.Camera2.Params.ExtensionSessionConfiguration.SetColorSpace(Android.Graphics.ColorSpace.Named! colorSpace) -> void
Android.Hardware.Camera2.Params.LensIntrinsicsSample
Android.Hardware.Camera2.Params.LensIntrinsicsSample.GetLensIntrinsics() -> float[]!
Android.Hardware.Camera2.Params.LensIntrinsicsSample.LensIntrinsicsSample(long timestampNs, float[]! lensIntrinsics) -> void
Android.Hardware.Camera2.Params.LensIntrinsicsSample.TimestampNanos.get -> long
Android.Hardware.Camera2.Params.OutputConfiguration.OutputConfiguration(Android.Graphics.ImageFormatType format, Android.Util.Size! surfaceSize) -> void
Android.Hardware.Camera2.Params.OutputConfiguration.OutputConfiguration(Android.Graphics.ImageFormatType format, Android.Util.Size! surfaceSize, long usage) -> void
Android.Hardware.Camera2.Params.OutputConfiguration.OutputConfiguration(int surfaceGroupId, Android.Graphics.ImageFormatType format, Android.Util.Size! surfaceSize) -> void
Android.Hardware.Camera2.Params.OutputConfiguration.OutputConfiguration(int surfaceGroupId, Android.Graphics.ImageFormatType format, Android.Util.Size! surfaceSize, long usage) -> void
Android.Hardware.Camera2.Params.SessionConfiguration.SessionConfiguration(int sessionType, System.Collections.Generic.IList<Android.Hardware.Camera2.Params.OutputConfiguration!>! outputs) -> void
Android.Hardware.Camera2.Params.SessionConfiguration.SetStateCallback(Java.Util.Concurrent.IExecutor! executor, Android.Hardware.Camera2.CameraCaptureSession.StateCallback! cb) -> void
Android.Hardware.HardwareBuffer.Usage.get -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferFormat.R16 = 57 -> Android.Hardware.HardwareBufferFormat
Android.Hardware.HardwareBufferFormat.R8 = 56 -> Android.Hardware.HardwareBufferFormat
Android.Hardware.HardwareBufferFormat.Rg1616 = 58 -> Android.Hardware.HardwareBufferFormat
Android.Hardware.HardwareBufferFormat.Rgba10101010 = 59 -> Android.Hardware.HardwareBufferFormat
Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.None = 0 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageComposerOverlay = 2048 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageCpuReadOften = 3 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageCpuReadRarely = 2 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageCpuWriteOften = 48 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageCpuWriteRarely = 32 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageFrontBuffer = 4294967296 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageGpuColorOutput = 512 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageGpuCubeMap = 33554432 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageGpuDataBuffer = 16777216 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageGpuMipmapComplete = 67108864 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageGpuSampledImage = 256 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageProtectedContent = 16384 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageSensorDirectData = 8388608 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.HardwareBufferUsage.UsageVideoEncode = 65536 -> Android.Hardware.HardwareBufferUsage
Android.Hardware.Input.InputManager.GetInputDeviceViewBehavior(int deviceId) -> Android.Views.InputDevice.ViewBehavior?
Android.Hardware.OverlayProperties
Android.Hardware.OverlayProperties.DescribeContents() -> int
Android.Hardware.OverlayProperties.InterfaceConsts
Android.Hardware.OverlayProperties.IsCombinationSupported(Android.Hardware.DataSpaceType dataspace, Android.Hardware.HardwareBufferFormat format) -> bool
Android.Hardware.OverlayProperties.IsMixedColorSpacesSupported.get -> bool
Android.Hardware.OverlayProperties.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Hardware.SyncFence.SyncFence(Android.Hardware.SyncFence! other) -> void
Android.Health.Connect.AggregateRecordsGroupedByDurationResponse.GetDataOrigins(Android.Health.Connect.DataTypes.AggregationType! aggregationType) -> System.Collections.Generic.ICollection<Android.Health.Connect.DataTypes.DataOrigin!>!
Android.Health.Connect.AggregateRecordsGroupedByPeriodResponse.GetDataOrigins(Android.Health.Connect.DataTypes.AggregationType! aggregationType) -> System.Collections.Generic.ICollection<Android.Health.Connect.DataTypes.DataOrigin!>!
Android.Health.Connect.DataTypes.ExerciseCompletionGoal
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.ActiveCaloriesBurnedGoal
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.ActiveCaloriesBurnedGoal.ActiveCalories.get -> Android.Health.Connect.DataTypes.Units.Energy!
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.ActiveCaloriesBurnedGoal.ActiveCaloriesBurnedGoal(Android.Health.Connect.DataTypes.Units.Energy! activeCalories) -> void
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DistanceGoal
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DistanceGoal.Distance.get -> Android.Health.Connect.DataTypes.Units.Length!
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DistanceGoal.DistanceGoal(Android.Health.Connect.DataTypes.Units.Length! distance) -> void
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DistanceWithVariableRestGoal
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DistanceWithVariableRestGoal.Distance.get -> Android.Health.Connect.DataTypes.Units.Length!
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DistanceWithVariableRestGoal.DistanceWithVariableRestGoal(Android.Health.Connect.DataTypes.Units.Length! distance, Java.Time.Duration! duration) -> void
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DistanceWithVariableRestGoal.Duration.get -> Java.Time.Duration!
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DurationGoal
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DurationGoal.Duration.get -> Java.Time.Duration!
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DurationGoal.DurationGoal(Java.Time.Duration! duration) -> void
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.ExerciseCompletionGoal(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.RepetitionsGoal
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.RepetitionsGoal.Repetitions.get -> int
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.RepetitionsGoal.RepetitionsGoal(int repetitions) -> void
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.StepsGoal
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.StepsGoal.Steps.get -> int
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.StepsGoal.StepsGoal(int steps) -> void
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.TotalCaloriesBurnedGoal
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.TotalCaloriesBurnedGoal.TotalCalories.get -> Android.Health.Connect.DataTypes.Units.Energy!
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.TotalCaloriesBurnedGoal.TotalCaloriesBurnedGoal(Android.Health.Connect.DataTypes.Units.Energy! totalCalories) -> void
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.UnknownGoal
Android.Health.Connect.DataTypes.ExerciseCompletionGoal.UnspecifiedGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.AmrapGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.CadenceGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.CadenceGoal.CadenceGoal(double minRpm, double maxRpm) -> void
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.CadenceGoal.MaxRpm.get -> double
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.CadenceGoal.MinRpm.get -> double
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.ExercisePerformanceGoal(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.HeartRateGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.HeartRateGoal.HeartRateGoal(int minBpm, int maxBpm) -> void
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.HeartRateGoal.MaxBpm.get -> int
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.HeartRateGoal.MinBpm.get -> int
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.PowerGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.PowerGoal.MaxPower.get -> Android.Health.Connect.DataTypes.Units.Power!
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.PowerGoal.MinPower.get -> Android.Health.Connect.DataTypes.Units.Power!
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.PowerGoal.PowerGoal(Android.Health.Connect.DataTypes.Units.Power! minPower, Android.Health.Connect.DataTypes.Units.Power! maxPower) -> void
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.RateOfPerceivedExertionGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.RateOfPerceivedExertionGoal.RateOfPerceivedExertionGoal(int rpe) -> void
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.RateOfPerceivedExertionGoal.Rpe.get -> int
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.SpeedGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.SpeedGoal.MaxSpeed.get -> Android.Health.Connect.DataTypes.Units.Velocity!
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.SpeedGoal.MinSpeed.get -> Android.Health.Connect.DataTypes.Units.Velocity!
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.SpeedGoal.SpeedGoal(Android.Health.Connect.DataTypes.Units.Velocity! minSpeed, Android.Health.Connect.DataTypes.Units.Velocity! maxSpeed) -> void
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.UnknownGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.WeightGoal
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.WeightGoal.Mass.get -> Android.Health.Connect.DataTypes.Units.Mass!
Android.Health.Connect.DataTypes.ExercisePerformanceGoal.WeightGoal.WeightGoal(Android.Health.Connect.DataTypes.Units.Mass! mass) -> void
Android.Health.Connect.DataTypes.ExerciseSessionRecord.Builder.SetPlannedExerciseSessionId(string? id) -> Android.Health.Connect.DataTypes.ExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.ExerciseSessionRecord.PlannedExerciseSessionId.get -> string?
Android.Health.Connect.DataTypes.PlannedExerciseBlock
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder.AddStep(Android.Health.Connect.DataTypes.PlannedExerciseStep! step) -> Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder.Build() -> Android.Health.Connect.DataTypes.PlannedExerciseBlock!
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder.Builder(int repetitions) -> void
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder.ClearSteps() -> Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder.SetDescription(Java.Lang.ICharSequence? description) -> Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder.SetDescription(string? description) -> Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder.SetRepetitions(int repetitions) -> Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder.SetSteps(System.Collections.Generic.IList<Android.Health.Connect.DataTypes.PlannedExerciseStep!>! steps) -> Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Description.get -> string?
Android.Health.Connect.DataTypes.PlannedExerciseBlock.DescriptionFormatted.get -> Java.Lang.ICharSequence?
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Repetitions.get -> int
Android.Health.Connect.DataTypes.PlannedExerciseBlock.Steps.get -> System.Collections.Generic.IList<Android.Health.Connect.DataTypes.PlannedExerciseStep!>!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Blocks.get -> System.Collections.Generic.IList<Android.Health.Connect.DataTypes.PlannedExerciseBlock!>!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.AddBlock(Android.Health.Connect.DataTypes.PlannedExerciseBlock! block) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.Build() -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.Builder(Android.Health.Connect.DataTypes.Metadata! metadata, int exerciseType, Java.Time.Instant! startTime, Java.Time.Instant! endTime) -> void
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.Builder(Android.Health.Connect.DataTypes.Metadata! metadata, int exerciseType, Java.Time.LocalDate! startDate, Java.Time.Duration! duration) -> void
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.ClearBlocks() -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.ClearEndZoneOffset() -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.ClearStartZoneOffset() -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetBlocks(System.Collections.Generic.IList<Android.Health.Connect.DataTypes.PlannedExerciseBlock!>! blocks) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetEndTime(Java.Time.Instant! endTime) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetEndZoneOffset(Java.Time.ZoneOffset! endZoneOffset) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetExerciseType(int exerciseType) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetMetadata(Android.Health.Connect.DataTypes.Metadata! metadata) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetNotes(Java.Lang.ICharSequence? notes) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetNotes(string? notes) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetStartTime(Java.Time.Instant! startTime) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetStartZoneOffset(Java.Time.ZoneOffset! startZoneOffset) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetTitle(Java.Lang.ICharSequence? title) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.SetTitle(string? title) -> Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.CompletedExerciseSessionId.get -> string?
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Duration.get -> Java.Time.Duration!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.ExerciseType.get -> Android.Health.Connect.DataTypes.ExerciseSessionTypeEnum
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.HasExplicitTime.get -> bool
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Notes.get -> string?
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.NotesFormatted.get -> Java.Lang.ICharSequence?
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.StartDate.get -> Java.Time.LocalDate!
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Title.get -> string?
Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.TitleFormatted.get -> Java.Lang.ICharSequence?
Android.Health.Connect.DataTypes.PlannedExerciseStep
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.AddPerformanceGoal(Android.Health.Connect.DataTypes.ExercisePerformanceGoal! performanceGoal) -> Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.Build() -> Android.Health.Connect.DataTypes.PlannedExerciseStep!
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.Builder(int exerciseType, int exerciseCategory, Android.Health.Connect.DataTypes.ExerciseCompletionGoal! completionGoal) -> void
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.ClearPerformanceGoals() -> Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.SetCompletionGoal(Android.Health.Connect.DataTypes.ExerciseCompletionGoal! completionGoal) -> Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.SetDescription(Java.Lang.ICharSequence? description) -> Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.SetDescription(string? description) -> Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.SetExerciseCategory(int category) -> Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.SetExerciseType(int exerciseType) -> Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.SetPerformanceGoals(System.Collections.Generic.IList<Android.Health.Connect.DataTypes.ExercisePerformanceGoal!>! performanceGoals) -> Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder!
Android.Health.Connect.DataTypes.PlannedExerciseStep.CompletionGoal.get -> Android.Health.Connect.DataTypes.ExerciseCompletionGoal!
Android.Health.Connect.DataTypes.PlannedExerciseStep.Description.get -> string?
Android.Health.Connect.DataTypes.PlannedExerciseStep.DescriptionFormatted.get -> Java.Lang.ICharSequence?
Android.Health.Connect.DataTypes.PlannedExerciseStep.ExerciseCategory.get -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
Android.Health.Connect.DataTypes.PlannedExerciseStep.ExerciseType.get -> Android.Health.Connect.DataTypes.ExerciseSegmentTypeEnum
Android.Health.Connect.DataTypes.PlannedExerciseStep.PerformanceGoals.get -> System.Collections.Generic.IList<Android.Health.Connect.DataTypes.ExercisePerformanceGoal!>!
Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Active = 3 -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Cooldown = 4 -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Recovery = 5 -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Rest = 2 -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Unknown = 0 -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Warmup = 1 -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
Android.Health.Connect.DataTypes.SkinTemperatureRecord
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Baseline.get -> Android.Health.Connect.DataTypes.Units.Temperature?
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.Build() -> Android.Health.Connect.DataTypes.SkinTemperatureRecord!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.Builder(Android.Health.Connect.DataTypes.Metadata! metadata, Java.Time.Instant! startTime, Java.Time.Instant! endTime) -> void
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.ClearEndZoneOffset() -> Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.ClearStartZoneOffset() -> Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.SetBaseline(Android.Health.Connect.DataTypes.Units.Temperature? baseline) -> Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.SetDeltas(System.Collections.Generic.IList<Android.Health.Connect.DataTypes.SkinTemperatureRecord.Delta!>! deltas) -> Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.SetEndZoneOffset(Java.Time.ZoneOffset! endZoneOffset) -> Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.SetMeasurementLocation(int measurementLocation) -> Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.SetStartZoneOffset(Java.Time.ZoneOffset! startZoneOffset) -> Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Delta
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Delta.Delta(Android.Health.Connect.DataTypes.Units.TemperatureDelta! delta, Java.Time.Instant! time) -> void
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Delta.GetDelta() -> Android.Health.Connect.DataTypes.Units.TemperatureDelta!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Delta.Time.get -> Java.Time.Instant!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.Deltas.get -> System.Collections.Generic.IList<Android.Health.Connect.DataTypes.SkinTemperatureRecord.Delta!>!
Android.Health.Connect.DataTypes.SkinTemperatureRecord.MeasurementLocation.get -> Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation.Finger = 1 -> Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation.Toe = 2 -> Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation.Unknown = 0 -> Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation.Wrist = 3 -> Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
Android.Health.Connect.DataTypes.Units.TemperatureDelta
Android.Health.Connect.DataTypes.Units.TemperatureDelta.CompareTo(Android.Health.Connect.DataTypes.Units.TemperatureDelta! other) -> int
Android.Health.Connect.DataTypes.Units.TemperatureDelta.InCelsius.get -> double
Android.Icu.Text.DisplayOptions
Android.Icu.Text.DisplayOptions.Builder
Android.Icu.Text.DisplayOptions.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Icu.Text.DisplayOptions.Capitalization
Android.Icu.Text.DisplayOptions.CopyToBuilder() -> Android.Icu.Text.DisplayOptions.Builder?
Android.Icu.Text.DisplayOptions.DisplayLength
Android.Icu.Text.DisplayOptions.GetCapitalization() -> Android.Icu.Text.DisplayOptions.Capitalization?
Android.Icu.Text.DisplayOptions.GetDisplayLength() -> Android.Icu.Text.DisplayOptions.DisplayLength?
Android.Icu.Text.DisplayOptions.GetGrammaticalCase() -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
Android.Icu.Text.DisplayOptions.GetNameStyle() -> Android.Icu.Text.DisplayOptions.NameStyle?
Android.Icu.Text.DisplayOptions.GetNounClass() -> Android.Icu.Text.DisplayOptions.NounClass?
Android.Icu.Text.DisplayOptions.GetPluralCategory() -> Android.Icu.Text.DisplayOptions.PluralCategory?
Android.Icu.Text.DisplayOptions.GetSubstituteHandling() -> Android.Icu.Text.DisplayOptions.SubstituteHandling?
Android.Icu.Text.DisplayOptions.GrammaticalCase
Android.Icu.Text.DisplayOptions.GrammaticalCase.Identifier.get -> string?
Android.Icu.Text.DisplayOptions.NameStyle
Android.Icu.Text.DisplayOptions.NounClass
Android.Icu.Text.DisplayOptions.NounClass.Identifier.get -> string?
Android.Icu.Text.DisplayOptions.PluralCategory
Android.Icu.Text.DisplayOptions.PluralCategory.Identifier.get -> string?
Android.Icu.Text.DisplayOptions.SubstituteHandling
Android.InputMethodServices.InputMethodService.FinishConnectionlessStylusHandwriting(Java.Lang.ICharSequence? text) -> void
Android.InputMethodServices.InputMethodService.FinishConnectionlessStylusHandwriting(string? text) -> void
Android.Locations.Altitude.AltitudeConverter.TryAddMslAltitudeToLocation(Android.Locations.Location! location) -> bool
Android.Locations.GnssNavigationType.IrnL1 = 1795 -> Android.Locations.GnssNavigationType
Android.Locations.GnssNavigationType.IrnL5 = 1794 -> Android.Locations.GnssNavigationType
Android.Media.LoudnessCodecController
Android.Media.LoudnessCodecController.IOnLoudnessCodecUpdateListener
Android.Media.LoudnessCodecController.IOnLoudnessCodecUpdateListener.OnLoudnessCodecUpdate(Android.Media.MediaCodec! mediaCodec, Android.OS.Bundle! codecValues) -> Android.OS.Bundle!
Android.Media.LoudnessCodecController.LoudnessCodecController(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.LoudnessCodecController.LoudnessCodecUpdateHandler
Android.Media.MediaCodec.DetachOutputSurface() -> void
Android.Media.MediaCodec.OutputFrame.BufferInfos.get -> Java.Util.ArrayDeque!
Android.Media.MediaCodec.QueueInputBuffers(int index, Java.Util.ArrayDeque! bufferInfos) -> void
Android.Media.MediaCodec.QueueRequest.SetMultiFrameEncryptedLinearBlock(Android.Media.MediaCodec.LinearBlock! block, Java.Util.ArrayDeque! bufferInfos, Java.Util.ArrayDeque! cryptoInfos) -> Android.Media.MediaCodec.QueueRequest!
Android.Media.MediaCodec.QueueRequest.SetMultiFrameLinearBlock(Android.Media.MediaCodec.LinearBlock! block, Java.Util.ArrayDeque! infos) -> Android.Media.MediaCodec.QueueRequest!
Android.Media.MediaCodec.QueueSecureInputBuffers(int index, Java.Util.ArrayDeque! bufferInfos, Java.Util.ArrayDeque! cryptoInfos) -> void
Android.Media.MediaCodecConfigFlags.DetachedSurface = 8 -> Android.Media.MediaCodecConfigFlags
Android.Media.MediaFormat.QpOffsetRect
Android.Media.MediaFormat.QpOffsetRect.FlattenToString() -> string!
Android.Media.MediaFormat.QpOffsetRect.QpOffsetRect(Android.Graphics.Rect! contour, int qpOffset) -> void
Android.Media.MediaFormat.QpOffsetRect.Set(Android.Graphics.Rect! contour, int qpOffset) -> void
Android.Media.MediaRoute2Info.Builder.SetSuitabilityStatus(int suitabilityStatus) -> Android.Media.MediaRoute2Info.Builder!
Android.Media.MediaRoute2Info.SuitabilityStatus.get -> Android.Media.MediaRoute2InfoSuitabilityStatus
Android.Media.MediaRoute2InfoSuitabilityStatus
Android.Media.MediaRoute2InfoSuitabilityStatus.NotSuitableForTransfer = 2 -> Android.Media.MediaRoute2InfoSuitabilityStatus
Android.Media.MediaRoute2InfoSuitabilityStatus.SuitableForDefaultTransfer = 0 -> Android.Media.MediaRoute2InfoSuitabilityStatus
Android.Media.MediaRoute2InfoSuitabilityStatus.SuitableForManualTransfer = 1 -> Android.Media.MediaRoute2InfoSuitabilityStatus
Android.Media.MediaRoute2Type.HdmiArc = 10 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.HdmiEarc = 29 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.RemoteCar = 1008 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.RemoteComputer = 1006 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.RemoteGameConsole = 1007 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.RemoteSmartphone = 1010 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.RemoteSmartwatch = 1009 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.RemoteTablet = 1004 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.RemoteTabletDocked = 1005 -> Android.Media.MediaRoute2Type
Android.Media.MediaRouter2.CancelScanRequest(Android.Media.MediaRouter2.ScanToken! token) -> void
Android.Media.MediaRouter2.GetRouteListingPreference() -> Android.Media.RouteListingPreference?
Android.Media.MediaRouter2.RegisterRouteListingPreferenceUpdatedCallback(Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! routeListingPreferenceCallback) -> void
Android.Media.MediaRouter2.RequestScan(Android.Media.MediaRouter2.ScanRequest! scanRequest) -> Android.Media.MediaRouter2.ScanToken!
Android.Media.MediaRouter2.ScanRequest
Android.Media.MediaRouter2.ScanRequest.Builder
Android.Media.MediaRouter2.ScanRequest.Builder.Build() -> Android.Media.MediaRouter2.ScanRequest!
Android.Media.MediaRouter2.ScanRequest.Builder.Builder() -> void
Android.Media.MediaRouter2.ScanRequest.Builder.SetScreenOffScan(bool isScreenOffScan) -> Android.Media.MediaRouter2.ScanRequest.Builder!
Android.Media.MediaRouter2.ScanRequest.IsScreenOffScan.get -> bool
Android.Media.MediaRouter2.ScanToken
Android.Media.MediaRouter2.SetRouteVolume(Android.Media.MediaRoute2Info! route, int volume) -> void
Android.Media.MediaRouter2.UnregisterRouteListingPreferenceUpdatedCallback(Java.Util.Functions.IConsumer! callback) -> void
Android.Media.Metrics.EditingEndedEvent
Android.Media.Metrics.EditingEndedEvent.Builder
Android.Media.Metrics.EditingEndedEvent.Builder.AddInputMediaItemInfo(Android.Media.Metrics.MediaItemInfo! mediaItemInfo) -> Android.Media.Metrics.EditingEndedEvent.Builder!
Android.Media.Metrics.EditingEndedEvent.Builder.AddOperationType(long operationType) -> Android.Media.Metrics.EditingEndedEvent.Builder!
Android.Media.Metrics.EditingEndedEvent.Builder.Build() -> Android.Media.Metrics.EditingEndedEvent!
Android.Media.Metrics.EditingEndedEvent.Builder.Builder(int finalState) -> void
Android.Media.Metrics.EditingEndedEvent.Builder.SetErrorCode(int value) -> Android.Media.Metrics.EditingEndedEvent.Builder!
Android.Media.Metrics.EditingEndedEvent.Builder.SetExporterName(string! exporterName) -> Android.Media.Metrics.EditingEndedEvent.Builder!
Android.Media.Metrics.EditingEndedEvent.Builder.SetFinalProgressPercent(float finalProgressPercent) -> Android.Media.Metrics.EditingEndedEvent.Builder!
Android.Media.Metrics.EditingEndedEvent.Builder.SetMetricsBundle(Android.OS.Bundle! metricsBundle) -> Android.Media.Metrics.EditingEndedEvent.Builder!
Android.Media.Metrics.EditingEndedEvent.Builder.SetMuxerName(string! muxerName) -> Android.Media.Metrics.EditingEndedEvent.Builder!
Android.Media.Metrics.EditingEndedEvent.Builder.SetOutputMediaItemInfo(Android.Media.Metrics.MediaItemInfo! mediaItemInfo) -> Android.Media.Metrics.EditingEndedEvent.Builder!
Android.Media.Metrics.EditingEndedEvent.Builder.SetTimeSinceCreatedMillis(long timeSinceCreatedMillis) -> Android.Media.Metrics.EditingEndedEvent.Builder!
Android.Media.Metrics.EditingEndedEvent.DescribeContents() -> int
Android.Media.Metrics.EditingEndedEvent.ErrorCode.get -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEvent.ExporterName.get -> string?
Android.Media.Metrics.EditingEndedEvent.FinalProgressPercent.get -> float
Android.Media.Metrics.EditingEndedEvent.FinalState.get -> Android.Media.Metrics.EditingEndedEventFinalState
Android.Media.Metrics.EditingEndedEvent.InputMediaItemInfos.get -> System.Collections.Generic.IList<Android.Media.Metrics.MediaItemInfo!>!
Android.Media.Metrics.EditingEndedEvent.InterfaceConsts
Android.Media.Metrics.EditingEndedEvent.MuxerName.get -> string?
Android.Media.Metrics.EditingEndedEvent.OperationTypes.get -> long
Android.Media.Metrics.EditingEndedEvent.OutputMediaItemInfo.get -> Android.Media.Metrics.MediaItemInfo?
Android.Media.Metrics.EditingEndedEvent.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.AudioProcessingFailed = 18 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.DecoderInitFailed = 11 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.DecodingFailed = 12 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.DecodingFormatUnsupported = 13 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.EncoderInitFailed = 14 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.EncodingFailed = 15 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.EncodingFormatUnsupported = 16 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.FailedRuntimeCheck = 2 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.IoBadHttpStatus = 6 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.IoCleartextNotPermitted = 9 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.IoFileNotFound = 7 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.IoNetworkConnectionFailed = 4 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.IoNetworkConnectionTimeout = 5 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.IoNoPermission = 8 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.IoReadPositionOutOfRange = 10 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.IoUnspecified = 3 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.MuxingFailed = 19 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.None = 1 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventErrorCode.VideoFrameProcessingFailed = 17 -> Android.Media.Metrics.EditingEndedEventErrorCode
Android.Media.Metrics.EditingEndedEventFinalState
Android.Media.Metrics.EditingEndedEventFinalState.Canceled = 2 -> Android.Media.Metrics.EditingEndedEventFinalState
Android.Media.Metrics.EditingEndedEventFinalState.Error = 3 -> Android.Media.Metrics.EditingEndedEventFinalState
Android.Media.Metrics.EditingEndedEventFinalState.Succeeded = 1 -> Android.Media.Metrics.EditingEndedEventFinalState
Android.Media.Metrics.EditingSession.ReportEditingEndedEvent(Android.Media.Metrics.EditingEndedEvent! editingEndedEvent) -> void
Android.Media.Metrics.MediaItemInfo
Android.Media.Metrics.MediaItemInfo.AudioChannelCount.get -> int
Android.Media.Metrics.MediaItemInfo.AudioSampleCount.get -> long
Android.Media.Metrics.MediaItemInfo.AudioSampleRateHz.get -> int
Android.Media.Metrics.MediaItemInfo.Builder
Android.Media.Metrics.MediaItemInfo.Builder.AddCodecName(string! codecName) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.AddDataType(long dataType) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.AddSampleMimeType(string! mimeType) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.Build() -> Android.Media.Metrics.MediaItemInfo!
Android.Media.Metrics.MediaItemInfo.Builder.Builder() -> void
Android.Media.Metrics.MediaItemInfo.Builder.SetAudioChannelCount(int audioChannelCount) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetAudioSampleCount(long audioSampleCount) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetAudioSampleRateHz(int audioSampleRateHz) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetClipDurationMillis(long clipDurationMillis) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetContainerMimeType(string! containerMimeType) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetDurationMillis(long durationMillis) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetSourceType(int sourceType) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetVideoDataSpace(int videoDataSpace) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetVideoFrameRate(float videoFrameRate) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetVideoSampleCount(long videoSampleCount) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.Builder.SetVideoSize(Android.Util.Size! videoSize) -> Android.Media.Metrics.MediaItemInfo.Builder!
Android.Media.Metrics.MediaItemInfo.ClipDurationMillis.get -> long
Android.Media.Metrics.MediaItemInfo.CodecNames.get -> System.Collections.Generic.IList<string!>!
Android.Media.Metrics.MediaItemInfo.ContainerMimeType.get -> string?
Android.Media.Metrics.MediaItemInfo.DataTypes.get -> long
Android.Media.Metrics.MediaItemInfo.DescribeContents() -> int
Android.Media.Metrics.MediaItemInfo.DurationMillis.get -> long
Android.Media.Metrics.MediaItemInfo.InterfaceConsts
Android.Media.Metrics.MediaItemInfo.SampleMimeTypes.get -> System.Collections.Generic.IList<string!>!
Android.Media.Metrics.MediaItemInfo.SourceType.get -> Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Metrics.MediaItemInfo.VideoDataSpace.get -> int
Android.Media.Metrics.MediaItemInfo.VideoFrameRate.get -> float
Android.Media.Metrics.MediaItemInfo.VideoSampleCount.get -> long
Android.Media.Metrics.MediaItemInfo.VideoSize.get -> Android.Util.Size!
Android.Media.Metrics.MediaItemInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Metrics.MediaItemInfoSourceType.Camera = 2 -> Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Metrics.MediaItemInfoSourceType.EditingSession = 3 -> Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Metrics.MediaItemInfoSourceType.Gallery = 1 -> Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Metrics.MediaItemInfoSourceType.Generated = 7 -> Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Metrics.MediaItemInfoSourceType.LocalFile = 4 -> Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Metrics.MediaItemInfoSourceType.RemoteFile = 5 -> Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Metrics.MediaItemInfoSourceType.RemoteLiveStream = 6 -> Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Metrics.MediaItemInfoSourceType.Unspecified = 0 -> Android.Media.Metrics.MediaItemInfoSourceType
Android.Media.Midi.MidiUmpDeviceService
Android.Media.Midi.MidiUmpDeviceService.DeviceInfo.get -> Android.Media.Midi.MidiDeviceInfo?
Android.Media.Midi.MidiUmpDeviceService.MidiUmpDeviceService() -> void
Android.Media.Midi.MidiUmpDeviceService.MidiUmpDeviceService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.Midi.MidiUmpDeviceService.OutputPortReceivers.get -> System.Collections.Generic.IList<Android.Media.Midi.MidiReceiver!>!
Android.Media.RoutingSessionInfo.Builder.SetTransferInitiator(Android.OS.UserHandle? transferInitiatorUserHandle, string? transferInitiatorPackageName) -> Android.Media.RoutingSessionInfo.Builder!
Android.Media.RoutingSessionInfo.Builder.SetTransferReason(int transferReason) -> Android.Media.RoutingSessionInfo.Builder!
Android.Media.RoutingSessionInfo.TransferReason.get -> Android.Media.RoutingSessionInfoTransferReason
Android.Media.RoutingSessionInfoTransferReason
Android.Media.RoutingSessionInfoTransferReason.App = 2 -> Android.Media.RoutingSessionInfoTransferReason
Android.Media.RoutingSessionInfoTransferReason.Fallback = 0 -> Android.Media.RoutingSessionInfoTransferReason
Android.Media.RoutingSessionInfoTransferReason.SystemRequest = 1 -> Android.Media.RoutingSessionInfoTransferReason
Android.Net.IpSec.Ike.IkeSession.Dump(Java.IO.PrintWriter! pw) -> void
Android.Net.IpSec.Ike.IkeSessionParams.IkeOptions.get -> System.Collections.Generic.ICollection<Java.Lang.Integer!>!
Android.Net.IpSecTransform.RequestIpSecTransformState(Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
Android.Net.IpSecTransformState
Android.Net.IpSecTransformState.Builder
Android.Net.IpSecTransformState.Builder.Build() -> Android.Net.IpSecTransformState!
Android.Net.IpSecTransformState.Builder.Builder() -> void
Android.Net.IpSecTransformState.Builder.SetByteCount(long byteCount) -> Android.Net.IpSecTransformState.Builder!
Android.Net.IpSecTransformState.Builder.SetPacketCount(long packetCount) -> Android.Net.IpSecTransformState.Builder!
Android.Net.IpSecTransformState.Builder.SetReplayBitmap(byte[]! bitMap) -> Android.Net.IpSecTransformState.Builder!
Android.Net.IpSecTransformState.Builder.SetRxHighestSequenceNumber(long seqNum) -> Android.Net.IpSecTransformState.Builder!
Android.Net.IpSecTransformState.Builder.SetTimestampMillis(long timestamp) -> Android.Net.IpSecTransformState.Builder!
Android.Net.IpSecTransformState.Builder.SetTxHighestSequenceNumber(long seqNum) -> Android.Net.IpSecTransformState.Builder!
Android.Net.IpSecTransformState.ByteCount.get -> long
Android.Net.IpSecTransformState.DescribeContents() -> int
Android.Net.IpSecTransformState.GetReplayBitmap() -> byte[]!
Android.Net.IpSecTransformState.InterfaceConsts
Android.Net.IpSecTransformState.PacketCount.get -> long
Android.Net.IpSecTransformState.RxHighestSequenceNumber.get -> long
Android.Net.IpSecTransformState.TimestampMillis.get -> long
Android.Net.IpSecTransformState.TxHighestSequenceNumber.get -> long
Android.Net.IpSecTransformState.WriteToParcel(Android.OS.Parcel! out, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.NetCapability.LocalNetwork = 36 -> Android.Net.NetCapability
Android.Net.NetworkCapabilities.SubscriptionIds.get -> System.Collections.Generic.ICollection<Java.Lang.Integer!>!
Android.Net.Nsd.DiscoveryRequest
Android.Net.Nsd.DiscoveryRequest.Builder
Android.Net.Nsd.DiscoveryRequest.Builder.Build() -> Android.Net.Nsd.DiscoveryRequest!
Android.Net.Nsd.DiscoveryRequest.Builder.Builder(string! serviceType) -> void
Android.Net.Nsd.DiscoveryRequest.Builder.SetNetwork(Android.Net.Network? network) -> Android.Net.Nsd.DiscoveryRequest.Builder!
Android.Net.Nsd.DiscoveryRequest.Builder.SetSubtype(string? subtype) -> Android.Net.Nsd.DiscoveryRequest.Builder!
Android.Net.Nsd.DiscoveryRequest.DescribeContents() -> int
Android.Net.Nsd.DiscoveryRequest.InterfaceConsts
Android.Net.Nsd.DiscoveryRequest.Network.get -> Android.Net.Network?
Android.Net.Nsd.DiscoveryRequest.ServiceType.get -> string!
Android.Net.Nsd.DiscoveryRequest.Subtype.get -> string?
Android.Net.Nsd.DiscoveryRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Nsd.NsdManager.DiscoverServices(Android.Net.Nsd.DiscoveryRequest! discoveryRequest, Java.Util.Concurrent.IExecutor! executor, Android.Net.Nsd.NsdManager.IDiscoveryListener! listener) -> void
Android.Net.Nsd.NsdServiceInfo.Subtypes.get -> System.Collections.Generic.ICollection<string!>!
Android.Net.Nsd.NsdServiceInfo.Subtypes.set -> void
Android.Net.TransportType.Satellite = 10 -> Android.Net.TransportType
Android.Net.Vcn.VcnGatewayConnectionConfig.Builder.SetSafeModeEnabled(bool enabled) -> Android.Net.Vcn.VcnGatewayConnectionConfig.Builder!
Android.Net.Vcn.VcnGatewayConnectionConfig.IsSafeModeEnabled.get -> bool
Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.ConnectionCancelled = 0 -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.GroupRemoved = 4 -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.InvitationFailed = 5 -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.ProvisionDiscoveryFailed = 3 -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.TimedOut = 1 -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.UserRejected = 2 -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.Builder
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.Builder.Build() -> Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig!
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.Builder.Builder(int scanType) -> void
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.Builder.SetFrequencyMhz(int frequencyMhz) -> Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.Builder!
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.DescribeContents() -> int
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.FrequencyMhz.get -> int
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.InterfaceConsts
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.ScanType.get -> Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan
Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.P2p.WifiP2pDiscoveryState
Android.Net.Wifi.P2p.WifiP2pDiscoveryState.Started = 2 -> Android.Net.Wifi.P2p.WifiP2pDiscoveryState
Android.Net.Wifi.P2p.WifiP2pDiscoveryState.Stopped = 1 -> Android.Net.Wifi.P2p.WifiP2pDiscoveryState
Android.Net.Wifi.P2p.WifiP2pManager.DeviceConfigurationChangedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.DeviceConfigurationChangedEventArgs.DeviceConfigurationChangedEventArgs(Android.Net.Wifi.P2p.WifiP2pDevice? p2pDevice) -> void
Android.Net.Wifi.P2p.WifiP2pManager.DeviceConfigurationChangedEventArgs.P2pDevice.get -> Android.Net.Wifi.P2p.WifiP2pDevice?
Android.Net.Wifi.P2p.WifiP2pManager.DiscoveryStateChangedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.DiscoveryStateChangedEventArgs.DiscoveryStateChangedEventArgs(int state) -> void
Android.Net.Wifi.P2p.WifiP2pManager.DiscoveryStateChangedEventArgs.State.get -> int
Android.Net.Wifi.P2p.WifiP2pManager.FrequencyChangedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.FrequencyChangedEventArgs.FrequencyChangedEventArgs(Android.Net.Wifi.P2p.WifiP2pInfo! p2pInfo, Android.Net.Wifi.P2p.WifiP2pGroup! p2pGroup) -> void
Android.Net.Wifi.P2p.WifiP2pManager.FrequencyChangedEventArgs.P2pGroup.get -> Android.Net.Wifi.P2p.WifiP2pGroup!
Android.Net.Wifi.P2p.WifiP2pManager.FrequencyChangedEventArgs.P2pInfo.get -> Android.Net.Wifi.P2p.WifiP2pInfo!
Android.Net.Wifi.P2p.WifiP2pManager.GroupCreatedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.GroupCreatedEventArgs.GroupCreatedEventArgs(Android.Net.Wifi.P2p.WifiP2pInfo! p2pInfo, Android.Net.Wifi.P2p.WifiP2pGroup! p2pGroup) -> void
Android.Net.Wifi.P2p.WifiP2pManager.GroupCreatedEventArgs.P2pGroup.get -> Android.Net.Wifi.P2p.WifiP2pGroup!
Android.Net.Wifi.P2p.WifiP2pManager.GroupCreatedEventArgs.P2pInfo.get -> Android.Net.Wifi.P2p.WifiP2pInfo!
Android.Net.Wifi.P2p.WifiP2pManager.GroupCreationFailedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.GroupCreationFailedEventArgs.GroupCreationFailedEventArgs(int reason) -> void
Android.Net.Wifi.P2p.WifiP2pManager.GroupCreationFailedEventArgs.Reason.get -> int
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnDeviceConfigurationChanged(Android.Net.Wifi.P2p.WifiP2pDevice? p2pDevice) -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnDiscoveryStateChanged(int state) -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnFrequencyChanged(Android.Net.Wifi.P2p.WifiP2pInfo! p2pInfo, Android.Net.Wifi.P2p.WifiP2pGroup! p2pGroup) -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnGroupCreated(Android.Net.Wifi.P2p.WifiP2pInfo! p2pInfo, Android.Net.Wifi.P2p.WifiP2pGroup! p2pGroup) -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnGroupCreating() -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnGroupCreationFailed(int reason) -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnGroupNegotiationRejectedByUser() -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnGroupRemoved() -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnListenStateChanged(int state) -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnP2pStateChanged(int state) -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnPeerClientDisconnected(Android.Net.Wifi.P2p.WifiP2pInfo! p2pInfo, Android.Net.Wifi.P2p.WifiP2pGroup! p2pGroup) -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnPeerClientJoined(Android.Net.Wifi.P2p.WifiP2pInfo! p2pInfo, Android.Net.Wifi.P2p.WifiP2pGroup! p2pGroup) -> void
Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener.OnPeerListChanged(Android.Net.Wifi.P2p.WifiP2pDeviceList! p2pDeviceList) -> void
Android.Net.Wifi.P2p.WifiP2pManager.ListenStateChangedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.ListenStateChangedEventArgs.ListenStateChangedEventArgs(int state) -> void
Android.Net.Wifi.P2p.WifiP2pManager.ListenStateChangedEventArgs.State.get -> int
Android.Net.Wifi.P2p.WifiP2pManager.P2pStateChangedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.P2pStateChangedEventArgs.P2pStateChangedEventArgs(int state) -> void
Android.Net.Wifi.P2p.WifiP2pManager.P2pStateChangedEventArgs.State.get -> int
Android.Net.Wifi.P2p.WifiP2pManager.PeerClientDisconnectedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.PeerClientDisconnectedEventArgs.P2pGroup.get -> Android.Net.Wifi.P2p.WifiP2pGroup!
Android.Net.Wifi.P2p.WifiP2pManager.PeerClientDisconnectedEventArgs.P2pInfo.get -> Android.Net.Wifi.P2p.WifiP2pInfo!
Android.Net.Wifi.P2p.WifiP2pManager.PeerClientDisconnectedEventArgs.PeerClientDisconnectedEventArgs(Android.Net.Wifi.P2p.WifiP2pInfo! p2pInfo, Android.Net.Wifi.P2p.WifiP2pGroup! p2pGroup) -> void
Android.Net.Wifi.P2p.WifiP2pManager.PeerClientJoinedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.PeerClientJoinedEventArgs.P2pGroup.get -> Android.Net.Wifi.P2p.WifiP2pGroup!
Android.Net.Wifi.P2p.WifiP2pManager.PeerClientJoinedEventArgs.P2pInfo.get -> Android.Net.Wifi.P2p.WifiP2pInfo!
Android.Net.Wifi.P2p.WifiP2pManager.PeerClientJoinedEventArgs.PeerClientJoinedEventArgs(Android.Net.Wifi.P2p.WifiP2pInfo! p2pInfo, Android.Net.Wifi.P2p.WifiP2pGroup! p2pGroup) -> void
Android.Net.Wifi.P2p.WifiP2pManager.PeerListChangedEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.PeerListChangedEventArgs.P2pDeviceList.get -> Android.Net.Wifi.P2p.WifiP2pDeviceList!
Android.Net.Wifi.P2p.WifiP2pManager.PeerListChangedEventArgs.PeerListChangedEventArgs(Android.Net.Wifi.P2p.WifiP2pDeviceList! p2pDeviceList) -> void
Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan
Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan.Full = 0 -> Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan
Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan.SingleFreq = 2 -> Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan
Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan.Social = 1 -> Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan
Android.Net.Wifi.RoamingMode
Android.Net.Wifi.RoamingMode.Aggressive = 2 -> Android.Net.Wifi.RoamingMode
Android.Net.Wifi.RoamingMode.None = 0 -> Android.Net.Wifi.RoamingMode
Android.Net.Wifi.RoamingMode.Normal = 1 -> Android.Net.Wifi.RoamingMode
Android.Net.Wifi.Rtt.RangingResult.Builder
Android.Net.Wifi.Rtt.RangingResult.Builder.Build() -> Android.Net.Wifi.Rtt.RangingResult!
Android.Net.Wifi.Rtt.RangingResult.Builder.Builder() -> void
Android.Net.Wifi.Rtt.RangingResult.Builder.Set80211azInitiatorTxLtfRepetitionsCount(int i2rTxLtfRepetitions) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.Set80211azNtbMeasurement(bool is80211azNtbMeasurement) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.Set80211azNumberOfRxSpatialStreams(int numRxSpatialStreams) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.Set80211azNumberOfTxSpatialStreams(int numTxSpatialStreams) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.Set80211azResponderTxLtfRepetitionsCount(int r2iTxLtfRepetitions) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.Set80211mcMeasurement(bool is80211mcMeasurement) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetDistanceMm(int distanceMm) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetDistanceStdDevMm(int distanceStdDevMm) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetLci(byte[]? lci) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetLcr(byte[]? lcr) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetMacAddress(Android.Net.MacAddress? macAddress) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetMaxTimeBetweenNtbMeasurementsMicros(long ntbMaxMeasurementTime) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetMeasurementBandwidth(int measurementBandwidth) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetMeasurementChannelFrequencyMHz(int frequencyMHz) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetMinTimeBetweenNtbMeasurementsMicros(long ntbMinMeasurementTime) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetNumAttemptedMeasurements(int numAttemptedMeasurements) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetNumSuccessfulMeasurements(int numSuccessfulMeasurements) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetPeerHandle(Android.Net.Wifi.Aware.PeerHandle? peerHandle) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetRangingTimestampMillis(long timestamp) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetRssi(int rssi) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetStatus(int status) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetUnverifiedResponderLocation(Android.Net.Wifi.Rtt.ResponderLocation? responderLocation) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Get80211azInitiatorTxLtfRepetitionsCount() -> int
Android.Net.Wifi.Rtt.RangingResult.Get80211azNumberOfRxSpatialStreams() -> int
Android.Net.Wifi.Rtt.RangingResult.Get80211azNumberOfTxSpatialStreams() -> int
Android.Net.Wifi.Rtt.RangingResult.Get80211azResponderTxLtfRepetitionsCount() -> int
Android.Net.Wifi.Rtt.RangingResult.GetLci() -> byte[]!
Android.Net.Wifi.Rtt.RangingResult.GetLcr() -> byte[]!
Android.Net.Wifi.Rtt.RangingResult.Is80211azNtbMeasurement() -> bool
Android.Net.Wifi.Rtt.RangingResult.MaxTimeBetweenNtbMeasurementsMicros.get -> long
Android.Net.Wifi.Rtt.RangingResult.MinTimeBetweenNtbMeasurementsMicros.get -> long
Android.Net.Wifi.Rtt.ResponderConfig.Builder.Set80211azNtbSupported(bool supports80211azNtb) -> Android.Net.Wifi.Rtt.ResponderConfig.Builder!
Android.Net.Wifi.Rtt.ResponderConfig.Is80211azNtbSupported() -> bool
Android.Net.Wifi.SendDhcpHostnameRestriction
Android.Net.Wifi.SendDhcpHostnameRestriction.Open = 1 -> Android.Net.Wifi.SendDhcpHostnameRestriction
Android.Net.Wifi.SendDhcpHostnameRestriction.Secure = 2 -> Android.Net.Wifi.SendDhcpHostnameRestriction
Android.Net.Wifi.WifiInfo.Builder.SetSubscriptionId(int subId) -> Android.Net.Wifi.WifiInfo.Builder!
Android.Net.Wifi.WifiNetworkSuggestion.Builder.SetWifi7Enabled(bool enabled) -> Android.Net.Wifi.WifiNetworkSuggestion.Builder!
Android.Net.Wifi.WifiNetworkSuggestion.IsWifi7Enabled.get -> bool
Android.Nfc.CardEmulators.CardEmulation.RegisterPollingLoopFilterForService(Android.Content.ComponentName! service, string! pollingLoopFilter, bool autoTransact) -> bool
Android.Nfc.CardEmulators.CardEmulation.RegisterPollingLoopPatternFilterForService(Android.Content.ComponentName! service, string! pollingLoopPatternFilter, bool autoTransact) -> bool
Android.Nfc.CardEmulators.CardEmulation.RemovePollingLoopFilterForService(Android.Content.ComponentName! service, string! pollingLoopFilter) -> bool
Android.Nfc.CardEmulators.CardEmulation.RemovePollingLoopPatternFilterForService(Android.Content.ComponentName! service, string! pollingLoopPatternFilter) -> bool
Android.Nfc.CardEmulators.CardEmulation.SetShouldDefaultToObserveModeForService(Android.Content.ComponentName! service, bool enable) -> bool
Android.Nfc.CardEmulators.PollingFrame
Android.Nfc.CardEmulators.PollingFrame.DescribeContents() -> int
Android.Nfc.CardEmulators.PollingFrame.GetData() -> byte[]!
Android.Nfc.CardEmulators.PollingFrame.InterfaceConsts
Android.Nfc.CardEmulators.PollingFrame.Timestamp.get -> long
Android.Nfc.CardEmulators.PollingFrame.TriggeredAutoTransact.get -> bool
Android.Nfc.CardEmulators.PollingFrame.Type.get -> Android.Nfc.CardEmulators.PollingLoopType
Android.Nfc.CardEmulators.PollingFrame.VendorSpecificGain.get -> int
Android.Nfc.CardEmulators.PollingFrame.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Nfc.CardEmulators.PollingLoopType
Android.Nfc.CardEmulators.PollingLoopType.A = 65 -> Android.Nfc.CardEmulators.PollingLoopType
Android.Nfc.CardEmulators.PollingLoopType.B = 66 -> Android.Nfc.CardEmulators.PollingLoopType
Android.Nfc.CardEmulators.PollingLoopType.F = 70 -> Android.Nfc.CardEmulators.PollingLoopType
Android.Nfc.CardEmulators.PollingLoopType.Off = 88 -> Android.Nfc.CardEmulators.PollingLoopType
Android.Nfc.CardEmulators.PollingLoopType.On = 79 -> Android.Nfc.CardEmulators.PollingLoopType
Android.Nfc.CardEmulators.PollingLoopType.Unknown = 85 -> Android.Nfc.CardEmulators.PollingLoopType
Android.Nfc.NfcAdapter.IsObserveModeEnabled.get -> bool
Android.Nfc.NfcAdapter.IsObserveModeSupported.get -> bool
Android.Nfc.NfcAdapter.IsReaderOptionEnabled.get -> bool
Android.Nfc.NfcAdapter.IsReaderOptionSupported.get -> bool
Android.Nfc.NfcAdapter.ResetDiscoveryTechnology(Android.App.Activity! activity) -> void
Android.Nfc.NfcAdapter.SetDiscoveryTechnology(Android.App.Activity! activity, Android.Nfc.NfcReaderFlags pollTechnology, Android.Nfc.NfcListenFlags listenTechnology) -> void
Android.Nfc.NfcAdapter.SetObserveModeEnabled(bool enabled) -> bool
Android.Nfc.NfcListenFlags
Android.Nfc.NfcListenFlags.Disable = 0 -> Android.Nfc.NfcListenFlags
Android.Nfc.NfcListenFlags.Keep = -2147483648 -> Android.Nfc.NfcListenFlags
Android.Nfc.NfcListenFlags.NfcPassiveA = 1 -> Android.Nfc.NfcListenFlags
Android.Nfc.NfcListenFlags.NfcPassiveB = 2 -> Android.Nfc.NfcListenFlags
Android.Nfc.NfcListenFlags.NfcPassiveF = 4 -> Android.Nfc.NfcListenFlags
Android.Nfc.NfcReaderFlags.Disable = 0 -> Android.Nfc.NfcReaderFlags
Android.Nfc.NfcReaderFlags.Keep = -2147483648 -> Android.Nfc.NfcReaderFlags
Android.OS.BuildVersionCodes.VanillaIceCream = 35 -> Android.OS.BuildVersionCodes
Android.OS.PowerMonitor
Android.OS.PowerMonitor.DescribeContents() -> int
Android.OS.PowerMonitor.InterfaceConsts
Android.OS.PowerMonitor.Name.get -> string!
Android.OS.PowerMonitor.Type.get -> Android.OS.PowerMonitorType
Android.OS.PowerMonitor.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.OS.PowerMonitorReadings
Android.OS.PowerMonitorReadings.GetConsumedEnergy(Android.OS.PowerMonitor! powerMonitor) -> long
Android.OS.PowerMonitorReadings.GetTimestampMillis(Android.OS.PowerMonitor! powerMonitor) -> long
Android.OS.PowerMonitorType
Android.OS.PowerMonitorType.Consumer = 0 -> Android.OS.PowerMonitorType
Android.OS.PowerMonitorType.Measurement = 1 -> Android.OS.PowerMonitorType
Android.OS.ProfilingManager
Android.OS.ProfilingManager.RegisterForAllProfilingResults(Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! listener) -> void
Android.OS.ProfilingManager.RequestProfiling(Android.OS.ProfilingType profilingType, Android.OS.Bundle? parameters, string? tag, Android.OS.CancellationSignal? cancellationSignal, Java.Util.Concurrent.IExecutor? executor, Java.Util.Functions.IConsumer? listener) -> void
Android.OS.ProfilingManager.UnregisterForAllProfilingResults(Java.Util.Functions.IConsumer? listener) -> void
Android.OS.ProfilingResult
Android.OS.ProfilingResult.DescribeContents() -> int
Android.OS.ProfilingResult.ErrorCode.get -> Android.OS.ProfilingResultError
Android.OS.ProfilingResult.ErrorMessage.get -> string?
Android.OS.ProfilingResult.InterfaceConsts
Android.OS.ProfilingResult.ResultFilePath.get -> string?
Android.OS.ProfilingResult.Tag.get -> string?
Android.OS.ProfilingResult.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.OS.ProfilingResultError
Android.OS.ProfilingResultError.FailedExecuting = 4 -> Android.OS.ProfilingResultError
Android.OS.ProfilingResultError.FailedInvalidRequest = 7 -> Android.OS.ProfilingResultError
Android.OS.ProfilingResultError.FailedNoDiskSpace = 6 -> Android.OS.ProfilingResultError
Android.OS.ProfilingResultError.FailedPostProcessing = 5 -> Android.OS.ProfilingResultError
Android.OS.ProfilingResultError.FailedProfilingInProgress = 3 -> Android.OS.ProfilingResultError
Android.OS.ProfilingResultError.FailedRateLimitProcess = 2 -> Android.OS.ProfilingResultError
Android.OS.ProfilingResultError.FailedRateLimitSystem = 1 -> Android.OS.ProfilingResultError
Android.OS.ProfilingResultError.None = 0 -> Android.OS.ProfilingResultError
Android.OS.ProfilingResultError.Unknown = 8 -> Android.OS.ProfilingResultError
Android.OS.ProfilingType
Android.OS.ProfilingType.HeapProfile = 2 -> Android.OS.ProfilingType
Android.OS.ProfilingType.JavaHeapDump = 1 -> Android.OS.ProfilingType
Android.OS.ProfilingType.StackSampling = 3 -> Android.OS.ProfilingType
Android.OS.ProfilingType.SystemTrace = 4 -> Android.OS.ProfilingType
Android.OS.SecurityStateManager
Android.OS.SecurityStateManager.SecurityStateManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.OS.WorkDuration
Android.OS.WorkDuration.ActualCpuDurationNanos.get -> long
Android.OS.WorkDuration.ActualCpuDurationNanos.set -> void
Android.OS.WorkDuration.ActualGpuDurationNanos.get -> long
Android.OS.WorkDuration.ActualGpuDurationNanos.set -> void
Android.OS.WorkDuration.ActualTotalDurationNanos.get -> long
Android.OS.WorkDuration.ActualTotalDurationNanos.set -> void
Android.OS.WorkDuration.WorkDuration() -> void
Android.OS.WorkDuration.WorkPeriodStartTimestampNanos.get -> long
Android.OS.WorkDuration.WorkPeriodStartTimestampNanos.set -> void
Android.Provider.E2eeContactKeysManager
Android.Provider.E2eeContactKeysManager.AllE2eeSelfKeys.get -> System.Collections.Generic.IList<Android.Provider.E2eeContactKeysManager.E2eeSelfKey!>!
Android.Provider.E2eeContactKeysManager.E2eeContactKey
Android.Provider.E2eeContactKeysManager.E2eeContactKey.AccountId.get -> string!
Android.Provider.E2eeContactKeysManager.E2eeContactKey.DescribeContents() -> int
Android.Provider.E2eeContactKeysManager.E2eeContactKey.DeviceId.get -> string?
Android.Provider.E2eeContactKeysManager.E2eeContactKey.DisplayName.get -> string?
Android.Provider.E2eeContactKeysManager.E2eeContactKey.EmailAddress.get -> string?
Android.Provider.E2eeContactKeysManager.E2eeContactKey.GetKeyValue() -> byte[]?
Android.Provider.E2eeContactKeysManager.E2eeContactKey.InterfaceConsts
Android.Provider.E2eeContactKeysManager.E2eeContactKey.LocalVerificationState.get -> int
Android.Provider.E2eeContactKeysManager.E2eeContactKey.OwnerPackageName.get -> string!
Android.Provider.E2eeContactKeysManager.E2eeContactKey.PhoneNumber.get -> string?
Android.Provider.E2eeContactKeysManager.E2eeContactKey.RemoteVerificationState.get -> int
Android.Provider.E2eeContactKeysManager.E2eeContactKey.TimeUpdated.get -> long
Android.Provider.E2eeContactKeysManager.E2eeContactKey.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Provider.E2eeContactKeysManager.E2eeSelfKey
Android.Provider.E2eeContactKeysManager.E2eeSelfKey.AccountId.get -> string!
Android.Provider.E2eeContactKeysManager.E2eeSelfKey.DescribeContents() -> int
Android.Provider.E2eeContactKeysManager.E2eeSelfKey.DeviceId.get -> string?
Android.Provider.E2eeContactKeysManager.E2eeSelfKey.GetKeyValue() -> byte[]?
Android.Provider.E2eeContactKeysManager.E2eeSelfKey.InterfaceConsts
Android.Provider.E2eeContactKeysManager.E2eeSelfKey.OwnerPackageName.get -> string!
Android.Provider.E2eeContactKeysManager.E2eeSelfKey.RemoteVerificationState.get -> int
Android.Provider.E2eeContactKeysManager.E2eeSelfKey.TimeUpdated.get -> long
Android.Provider.E2eeContactKeysManager.E2eeSelfKey.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Provider.E2eeContactKeysManager.GetAllE2eeContactKeys(string! lookupKey) -> System.Collections.Generic.IList<Android.Provider.E2eeContactKeysManager.E2eeContactKey!>!
Android.Provider.E2eeContactKeysManager.GetE2eeContactKey(string! lookupKey, string! deviceId, string! accountId) -> Android.Provider.E2eeContactKeysManager.E2eeContactKey?
Android.Provider.E2eeContactKeysManager.GetE2eeSelfKey(string! deviceId, string! accountId) -> Android.Provider.E2eeContactKeysManager.E2eeSelfKey?
Android.Provider.E2eeContactKeysManager.GetOwnerE2eeContactKeys(string! lookupKey) -> System.Collections.Generic.IList<Android.Provider.E2eeContactKeysManager.E2eeContactKey!>!
Android.Provider.E2eeContactKeysManager.OwnerE2eeSelfKeys.get -> System.Collections.Generic.IList<Android.Provider.E2eeContactKeysManager.E2eeSelfKey!>!
Android.Provider.E2eeContactKeysManager.RemoveE2eeContactKey(string! lookupKey, string! deviceId, string! accountId) -> bool
Android.Provider.E2eeContactKeysManager.RemoveE2eeSelfKey(string! deviceId, string! accountId) -> bool
Android.Provider.E2eeContactKeysManager.UpdateE2eeContactKeyLocalVerificationState(string! lookupKey, string! deviceId, string! accountId, Android.Provider.E2eeContactKeysManagerVerificationState localVerificationState) -> bool
Android.Provider.E2eeContactKeysManager.UpdateE2eeContactKeyRemoteVerificationState(string! lookupKey, string! deviceId, string! accountId, Android.Provider.E2eeContactKeysManagerVerificationState remoteVerificationState) -> bool
Android.Provider.E2eeContactKeysManager.UpdateE2eeSelfKeyRemoteVerificationState(string! deviceId, string! accountId, Android.Provider.E2eeContactKeysManagerVerificationState remoteVerificationState) -> bool
Android.Provider.E2eeContactKeysManager.UpdateOrInsertE2eeContactKey(string! lookupKey, string! deviceId, string! accountId, byte[]! keyValue) -> void
Android.Provider.E2eeContactKeysManager.UpdateOrInsertE2eeSelfKey(string! deviceId, string! accountId, byte[]! keyValue) -> bool
Android.Provider.E2eeContactKeysManagerVerificationState
Android.Provider.E2eeContactKeysManagerVerificationState.Unverified = 0 -> Android.Provider.E2eeContactKeysManagerVerificationState
Android.Provider.E2eeContactKeysManagerVerificationState.VerificationFailed = 1 -> Android.Provider.E2eeContactKeysManagerVerificationState
Android.Provider.E2eeContactKeysManagerVerificationState.Verified = 2 -> Android.Provider.E2eeContactKeysManagerVerificationState
Android.Provider.MediaStorePickImagesTab
Android.Provider.MediaStorePickImagesTab.Albums = 0 -> Android.Provider.MediaStorePickImagesTab
Android.Provider.MediaStorePickImagesTab.Images = 1 -> Android.Provider.MediaStorePickImagesTab
Android.Security.Keystore.KeyGenParameterSpec.Builder.SetMgf1Digests(params string![]! mgf1Digests) -> Android.Security.Keystore.KeyGenParameterSpec.Builder!
Android.Security.Keystore.KeyGenParameterSpec.IsMgf1DigestsSpecified.get -> bool
Android.Security.Keystore.KeyGenParameterSpec.Mgf1Digests.get -> System.Collections.Generic.ICollection<string!>!
Android.Security.Keystore.KeyProtection.Builder.SetMgf1Digests(params string![]? mgf1Digests) -> Android.Security.Keystore.KeyProtection.Builder!
Android.Security.Keystore.KeyProtection.IsMgf1DigestsSpecified.get -> bool
Android.Security.Keystore.KeyProtection.Mgf1Digests.get -> System.Collections.Generic.ICollection<string!>!
Android.Service.Chooser.ChooserResult
Android.Service.Chooser.ChooserResult.DescribeContents() -> int
Android.Service.Chooser.ChooserResult.InterfaceConsts
Android.Service.Chooser.ChooserResult.IsShortcut.get -> bool
Android.Service.Chooser.ChooserResult.SelectedComponent.get -> Android.Content.ComponentName?
Android.Service.Chooser.ChooserResult.Type.get -> Android.Service.Chooser.ChooserResultValue
Android.Service.Chooser.ChooserResult.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Chooser.ChooserResultValue
Android.Service.Chooser.ChooserResultValue.Copy = 1 -> Android.Service.Chooser.ChooserResultValue
Android.Service.Chooser.ChooserResultValue.Edit = 2 -> Android.Service.Chooser.ChooserResultValue
Android.Service.Chooser.ChooserResultValue.SelectedComponent = 0 -> Android.Service.Chooser.ChooserResultValue
Android.Service.Chooser.ChooserResultValue.Unknown = -1 -> Android.Service.Chooser.ChooserResultValue
Android.Service.Chooser.IAdditionalContentContract
Android.Service.Chooser.IAdditionalContentContract.IColumns
Android.Service.Chooser.IAdditionalContentContract.ICursorExtraKeys
Android.Service.Chooser.IAdditionalContentContract.IMethodNames
Android.Service.Controls.ControlsSurface
Android.Service.Controls.ControlsSurface.ActivityPanel = 0 -> Android.Service.Controls.ControlsSurface
Android.Service.Controls.ControlsSurface.Dream = 1 -> Android.Service.Controls.ControlsSurface
Android.Service.Notification.Condition.Condition(Android.Net.Uri? id, string? summary, Android.Service.Notification.ConditionState state, Android.Service.Notification.ConditionSource source) -> void
Android.Service.Notification.Condition.Condition(Android.Net.Uri? id, string? summary, string? line1, string? line2, int icon, Android.Service.Notification.ConditionState state, Android.Service.Notification.ConditionSource source, Android.Service.Notification.ConditionFlags flags) -> void
Android.Service.Notification.Condition.Source.get -> int
Android.Service.Notification.Condition.Source.set -> void
Android.Service.Notification.ConditionSource
Android.Service.Notification.ConditionSource.Context = 3 -> Android.Service.Notification.ConditionSource
Android.Service.Notification.ConditionSource.Schedule = 2 -> Android.Service.Notification.ConditionSource
Android.Service.Notification.ConditionSource.Unknown = 0 -> Android.Service.Notification.ConditionSource
Android.Service.Notification.ConditionSource.UserAction = 1 -> Android.Service.Notification.ConditionSource
Android.Service.Notification.ZenDeviceEffects
Android.Service.Notification.ZenDeviceEffects.Builder
Android.Service.Notification.ZenDeviceEffects.Builder.Build() -> Android.Service.Notification.ZenDeviceEffects!
Android.Service.Notification.ZenDeviceEffects.Builder.Builder() -> void
Android.Service.Notification.ZenDeviceEffects.Builder.Builder(Android.Service.Notification.ZenDeviceEffects! zenDeviceEffects) -> void
Android.Service.Notification.ZenDeviceEffects.Builder.SetShouldDimWallpaper(bool dimWallpaper) -> Android.Service.Notification.ZenDeviceEffects.Builder!
Android.Service.Notification.ZenDeviceEffects.Builder.SetShouldDisplayGrayscale(bool grayscale) -> Android.Service.Notification.ZenDeviceEffects.Builder!
Android.Service.Notification.ZenDeviceEffects.Builder.SetShouldSuppressAmbientDisplay(bool suppressAmbientDisplay) -> Android.Service.Notification.ZenDeviceEffects.Builder!
Android.Service.Notification.ZenDeviceEffects.Builder.SetShouldUseNightMode(bool nightMode) -> Android.Service.Notification.ZenDeviceEffects.Builder!
Android.Service.Notification.ZenDeviceEffects.DescribeContents() -> int
Android.Service.Notification.ZenDeviceEffects.InterfaceConsts
Android.Service.Notification.ZenDeviceEffects.ShouldDimWallpaper() -> bool
Android.Service.Notification.ZenDeviceEffects.ShouldDisplayGrayscale() -> bool
Android.Service.Notification.ZenDeviceEffects.ShouldSuppressAmbientDisplay() -> bool
Android.Service.Notification.ZenDeviceEffects.ShouldUseNightMode() -> bool
Android.Service.Notification.ZenDeviceEffects.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Notification.ZenPolicy.Builder.AllowPriorityChannels(bool allow) -> Android.Service.Notification.ZenPolicy.Builder!
Android.Service.Notification.ZenPolicy.PriorityChannelsAllowed.get -> Android.Service.Notification.StateType
Android.Service.PersistentData.PersistentDataBlockManager
Android.Service.PersistentData.PersistentDataBlockManager.PersistentDataBlockManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Telecom.CallCapabilities.VideoCalling = 16 -> Android.Telecom.CallCapabilities
Android.Telecom.CallControl.RequestMuteState(bool isMuted, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
Android.Telecom.CallControl.RequestVideoState(Android.Telecom.CallType videoState, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
Android.Telecom.CallProperty.IsTransactional = 32768 -> Android.Telecom.CallProperty
Android.Telecom.ICallEventCallback.OnVideoStateChanged(int videoState) -> void
Android.Telecom.PhoneAccount.HasSimultaneousCallingRestriction.get -> bool
Android.Telecom.PhoneAccount.SimultaneousCallingRestriction.get -> System.Collections.Generic.ICollection<Android.Telecom.PhoneAccountHandle!>!
Android.Telephony.CallComposerStatus.BusinessOnly = 2 -> Android.Telephony.CallComposerStatus
Android.Telephony.CallDisconnectCause.SatelliteEnabled = 82 -> Android.Telephony.CallDisconnectCause
Android.Telephony.Data.ApnType.Rcs = 32768 -> Android.Telephony.Data.ApnType
Android.Telephony.Ims.Feature.MmTelCapabilityType.CallComposerBusinessOnly = 32 -> Android.Telephony.Ims.Feature.MmTelCapabilityType
Android.Telephony.ImsEmergencyDomain
Android.Telephony.ImsEmergencyDomain.Cs = 1 -> Android.Telephony.ImsEmergencyDomain
Android.Telephony.ImsEmergencyDomain.Ps3gpp = 2 -> Android.Telephony.ImsEmergencyDomain
Android.Telephony.ImsEmergencyDomain.PsNon3gpp = 3 -> Android.Telephony.ImsEmergencyDomain
Android.Telephony.ImsEmergencyScanType
Android.Telephony.ImsEmergencyScanType.FullService = 1 -> Android.Telephony.ImsEmergencyScanType
Android.Telephony.ImsEmergencyScanType.FullServiceFollowedByLimitedService = 2 -> Android.Telephony.ImsEmergencyScanType
Android.Telephony.ImsEmergencyScanType.NoPreference = 0 -> Android.Telephony.ImsEmergencyScanType
Android.Telephony.ImsEmergencyVoWifiRequires
Android.Telephony.ImsEmergencyVoWifiRequires.None = 0 -> Android.Telephony.ImsEmergencyVoWifiRequires
Android.Telephony.ImsEmergencyVoWifiRequires.SettingEnabled = 1 -> Android.Telephony.ImsEmergencyVoWifiRequires
Android.Telephony.ImsEmergencyVoWifiRequires.ValidEid = 2 -> Android.Telephony.ImsEmergencyVoWifiRequires
Android.Telephony.Mbms.DownloadStatus
Android.Telephony.Mbms.DownloadStatus.ActivelyDownloading = 1 -> Android.Telephony.Mbms.DownloadStatus
Android.Telephony.Mbms.DownloadStatus.PendingDownload = 2 -> Android.Telephony.Mbms.DownloadStatus
Android.Telephony.Mbms.DownloadStatus.PendingDownloadWindow = 4 -> Android.Telephony.Mbms.DownloadStatus
Android.Telephony.Mbms.DownloadStatus.PendingRepair = 3 -> Android.Telephony.Mbms.DownloadStatus
Android.Telephony.Mbms.DownloadStatus.Unknown = 0 -> Android.Telephony.Mbms.DownloadStatus
Android.Telephony.MmsError.MmsDisabledByCarrier = 12 -> Android.Telephony.MmsError
Android.Telephony.NetworkRegistrationInfo.IsNonTerrestrialNetwork.get -> bool
Android.Telephony.NetworkRegistrationInfo.RejectCause.get -> int
Android.Telephony.NetworkRegistrationInfoServiceType.Mms = 6 -> Android.Telephony.NetworkRegistrationInfoServiceType
Android.Telephony.PreciseDataConnectionState.NetworkValidationStatus.get -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
Android.Telephony.PreciseDataConnectionStateNetworkValidation
Android.Telephony.PreciseDataConnectionStateNetworkValidation.Failure = 4 -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
Android.Telephony.PreciseDataConnectionStateNetworkValidation.InProgress = 2 -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
Android.Telephony.PreciseDataConnectionStateNetworkValidation.NotRequested = 1 -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
Android.Telephony.PreciseDataConnectionStateNetworkValidation.Success = 3 -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
Android.Telephony.PreciseDataConnectionStateNetworkValidation.Unsupported = 0 -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
Android.Telephony.PurchasePremiumCapabilityResult.UserDisabled = 16 -> Android.Telephony.PurchasePremiumCapabilityResult
Android.Telephony.ServiceCapabilityType
Android.Telephony.ServiceCapabilityType.Data = 3 -> Android.Telephony.ServiceCapabilityType
Android.Telephony.ServiceCapabilityType.Sms = 2 -> Android.Telephony.ServiceCapabilityType
Android.Telephony.ServiceCapabilityType.Voice = 1 -> Android.Telephony.ServiceCapabilityType
Android.Telephony.StreamingState
Android.Telephony.StreamingState.Stalled = 3 -> Android.Telephony.StreamingState
Android.Telephony.StreamingState.Started = 2 -> Android.Telephony.StreamingState
Android.Telephony.StreamingState.Stopped = 1 -> Android.Telephony.StreamingState
Android.Text.DynamicLayout.Builder.SetLineBreakConfig(Android.Graphics.Text.LineBreakConfig! lineBreakConfig) -> Android.Text.DynamicLayout.Builder!
Android.Text.DynamicLayout.Builder.SetMinimumFontMetrics(Android.Graphics.Paint.FontMetrics? minimumFontMetrics) -> Android.Text.DynamicLayout.Builder!
Android.Text.DynamicLayout.Builder.SetShiftDrawingOffsetForStartOverhang(bool shiftDrawingOffsetForStartOverhang) -> Android.Text.DynamicLayout.Builder!
Android.Text.DynamicLayout.Builder.SetUseBoundsForWidth(bool useBoundsForWidth) -> Android.Text.DynamicLayout.Builder!
Android.Text.JustificationMode.InterCharacter = 2 -> Android.Text.JustificationMode
Android.Text.Layout.BreakStrategy.get -> Android.Graphics.Text.BreakStrategy
Android.Text.Layout.Builder
Android.Text.Layout.Builder.Build() -> Android.Text.Layout!
Android.Text.Layout.Builder.Builder(Java.Lang.ICharSequence! text, int start, int end, Android.Text.TextPaint! paint, int width) -> void
Android.Text.Layout.Builder.Builder(string! text, int start, int end, Android.Text.TextPaint! paint, int width) -> void
Android.Text.Layout.Builder.SetAlignment(Android.Text.Layout.Alignment! alignment) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetBreakStrategy(int breakStrategy) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetEllipsize(Android.Text.TextUtils.TruncateAt? ellipsize) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetEllipsizedWidth(int ellipsizeWidth) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetFallbackLineSpacingEnabled(bool fallbackLineSpacing) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetFontPaddingIncluded(bool includeFontPadding) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetHyphenationFrequency(int hyphenationFrequency) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetJustificationMode(int justificationMode) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetLeftIndents(int[]? leftIndents) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetLineBreakConfig(Android.Graphics.Text.LineBreakConfig! lineBreakConfig) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetLineSpacingAmount(float amount) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetLineSpacingMultiplier(float multiplier) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetMaxLines(int maxLines) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetMinimumFontMetrics(Android.Graphics.Paint.FontMetrics? minimumFontMetrics) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetRightIndents(int[]? rightIndents) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetShiftDrawingOffsetForStartOverhang(bool shiftDrawingOffsetForStartOverhang) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetTextDirectionHeuristic(Android.Text.ITextDirectionHeuristic! textDirection) -> Android.Text.Layout.Builder!
Android.Text.Layout.Builder.SetUseBoundsForWidth(bool useBoundsForWidth) -> Android.Text.Layout.Builder!
Android.Text.Layout.Ellipsize.get -> Android.Text.TextUtils.TruncateAt?
Android.Text.Layout.GetLeftIndents() -> int[]?
Android.Text.Layout.GetRightIndents() -> int[]?
Android.Text.Layout.HyphenationFrequency.get -> Android.Text.HyphenationFrequency
Android.Text.Layout.IsFontPaddingIncluded.get -> bool
Android.Text.Layout.JustificationMode.get -> Android.Graphics.Text.JustificationMode
Android.Text.Layout.LineSpacingAmount.get -> float
Android.Text.Layout.LineSpacingMultiplier.get -> float
Android.Text.Layout.MaxLines.get -> int
Android.Text.Layout.TextDirectionHeuristic.get -> Android.Text.ITextDirectionHeuristic!
Android.Text.StaticLayout.Builder.SetMinimumFontMetrics(Android.Graphics.Paint.FontMetrics? minimumFontMetrics) -> Android.Text.StaticLayout.Builder!
Android.Text.StaticLayout.Builder.SetShiftDrawingOffsetForStartOverhang(bool shiftDrawingOffsetForStartOverhang) -> Android.Text.StaticLayout.Builder!
Android.Text.StaticLayout.Builder.SetUseBoundsForWidth(bool useBoundsForWidth) -> Android.Text.StaticLayout.Builder!
Android.Text.Style.LineBreakConfigSpan
Android.Text.Style.LineBreakConfigSpan.DescribeContents() -> int
Android.Text.Style.LineBreakConfigSpan.InterfaceConsts
Android.Text.Style.LineBreakConfigSpan.LineBreakConfig.get -> Android.Graphics.Text.LineBreakConfig!
Android.Text.Style.LineBreakConfigSpan.LineBreakConfigSpan(Android.Graphics.Text.LineBreakConfig! lineBreakConfig) -> void
Android.Text.Style.LineBreakConfigSpan.SpanTypeId.get -> int
Android.Text.Style.LineBreakConfigSpan.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Util.DisplayMetricsDensity.D390 = 390 -> Android.Util.DisplayMetricsDensity
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder.Build() -> Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo!
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder.Builder() -> void
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder.SetColumnCount(int columnCount) -> Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder!
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder.SetHierarchical(bool hierarchical) -> Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder!
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder.SetImportantForAccessibilityItemCount(int importantForAccessibilityItemCount) -> Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder!
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder.SetItemCount(int itemCount) -> Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder!
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder.SetRowCount(int rowCount) -> Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder!
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder.SetSelectionMode(int selectionMode) -> Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder!
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.ImportantForAccessibilityItemCount.get -> int
Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.ItemCount.get -> int
Android.Views.CompatSmallCoverScreen
Android.Views.CompatSmallCoverScreen.OptIn = 1 -> Android.Views.CompatSmallCoverScreen
Android.Views.DragFlags.GlobalSameApplication = 4096 -> Android.Views.DragFlags
Android.Views.DragFlags.StartIntentSenderOnUnhandledDrag = 8192 -> Android.Views.DragFlags
Android.Views.IAttachedSurfaceControl.InputTransferToken.get -> Android.Window.InputTransferToken!
Android.Views.InputDevice.ViewBehavior
Android.Views.InputDevice.ViewBehavior.ShouldSmoothScroll(int axis, int source) -> bool
Android.Views.InputMethods.ConnectionlessHandwritingError
Android.Views.InputMethods.ConnectionlessHandwritingError.NoTextRecognized = 0 -> Android.Views.InputMethods.ConnectionlessHandwritingError
Android.Views.InputMethods.ConnectionlessHandwritingError.Other = 2 -> Android.Views.InputMethods.ConnectionlessHandwritingError
Android.Views.InputMethods.ConnectionlessHandwritingError.Unsupported = 1 -> Android.Views.InputMethods.ConnectionlessHandwritingError
Android.Views.InputMethods.HandwritingDelegateFlag
Android.Views.InputMethods.HandwritingDelegateFlag.HomeDelegatorAllowed = 1 -> Android.Views.InputMethods.HandwritingDelegateFlag
Android.Views.InputMethods.IConnectionlessHandwritingCallback
Android.Views.InputMethods.IConnectionlessHandwritingCallback.OnError(int errorCode) -> void
Android.Views.InputMethods.IConnectionlessHandwritingCallback.OnResult(Java.Lang.ICharSequence! text) -> void
Android.Views.InputMethods.IConnectionlessHandwritingCallbackExtensions
Android.Views.InputMethods.InputMethodInfo.SupportsConnectionlessStylusHandwriting() -> bool
Android.Views.InputMethods.InputMethodManager.AcceptStylusHandwritingDelegation(Android.Views.View! delegateView, string! delegatorPackageName, Android.Views.InputMethods.HandwritingDelegateFlag flags, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
Android.Views.InputMethods.InputMethodManager.AcceptStylusHandwritingDelegation(Android.Views.View! delegateView, string! delegatorPackageName, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
Android.Views.InputMethods.InputMethodManager.IsConnectionlessStylusHandwritingAvailable.get -> bool
Android.Views.InputMethods.InputMethodManager.StartConnectionlessStylusHandwriting(Android.Views.View! view, Android.Views.InputMethods.CursorAnchorInfo? cursorAnchorInfo, Java.Util.Concurrent.IExecutor! callbackExecutor, Android.Views.InputMethods.IConnectionlessHandwritingCallback! callback) -> void
Android.Views.InputMethods.InputMethodManager.StartConnectionlessStylusHandwritingForDelegation(Android.Views.View! delegatorView, Android.Views.InputMethods.CursorAnchorInfo? cursorAnchorInfo, Java.Util.Concurrent.IExecutor! callbackExecutor, Android.Views.InputMethods.IConnectionlessHandwritingCallback! callback) -> void
Android.Views.InputMethods.InputMethodManager.StartConnectionlessStylusHandwritingForDelegation(Android.Views.View! delegatorView, Android.Views.InputMethods.CursorAnchorInfo? cursorAnchorInfo, string! delegatePackageName, Java.Util.Concurrent.IExecutor! callbackExecutor, Android.Views.InputMethods.IConnectionlessHandwritingCallback! callback) -> void
Android.Views.IScrollFeedbackProvider
Android.Views.IScrollFeedbackProvider.CreateProvider(Android.Views.View! view) -> Android.Views.IScrollFeedbackProvider!
Android.Views.IScrollFeedbackProvider.OnScrollLimit(int inputDeviceId, int source, int axis, bool isStart) -> void
Android.Views.IScrollFeedbackProvider.OnScrollProgress(int inputDeviceId, int source, int axis, int deltaInPixels) -> void
Android.Views.IScrollFeedbackProvider.OnSnapToItem(int inputDeviceId, int source, int axis) -> void
Android.Views.ISurfaceControlInputReceiver
Android.Views.ISurfaceControlInputReceiver.OnInputEvent(Android.Views.InputEvent! e) -> bool
Android.Views.IWindowManager.AddScreenRecordingCallback(Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> int
Android.Views.IWindowManager.RegisterBatchedSurfaceControlInputReceiver(Android.Window.InputTransferToken! hostInputTransferToken, Android.Views.SurfaceControl! surfaceControl, Android.Views.Choreographer! choreographer, Android.Views.ISurfaceControlInputReceiver! receiver) -> Android.Window.InputTransferToken!
Android.Views.IWindowManager.RegisterTrustedPresentationListener(Android.OS.IBinder! window, Android.Window.TrustedPresentationThresholds! thresholds, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! listener) -> void
Android.Views.IWindowManager.RegisterUnbatchedSurfaceControlInputReceiver(Android.Window.InputTransferToken! hostInputTransferToken, Android.Views.SurfaceControl! surfaceControl, Android.OS.Looper! looper, Android.Views.ISurfaceControlInputReceiver! receiver) -> Android.Window.InputTransferToken!
Android.Views.IWindowManager.RemoveScreenRecordingCallback(Java.Util.Functions.IConsumer! callback) -> void
Android.Views.IWindowManager.TransferTouchGesture(Android.Window.InputTransferToken! transferFromToken, Android.Window.InputTransferToken! transferToToken) -> bool
Android.Views.IWindowManager.UnregisterSurfaceControlInputReceiver(Android.Views.SurfaceControl! surfaceControl) -> void
Android.Views.IWindowManager.UnregisterTrustedPresentationListener(Java.Util.Functions.IConsumer! listener) -> void
Android.Views.Keycode.EmojiPicker = 317 -> Android.Views.Keycode
Android.Views.Keycode.Screenshot = 318 -> Android.Views.Keycode
Android.Views.MotionEvent.PointerCoords.IsResampled.get -> bool
Android.Views.ScreenRecordingState
Android.Views.ScreenRecordingState.NotVisible = 0 -> Android.Views.ScreenRecordingState
Android.Views.ScreenRecordingState.Visible = 1 -> Android.Views.ScreenRecordingState
Android.Views.SurfaceControl.TransactionStats
Android.Views.SurfaceControl.TransactionStats.LatchTimeNanos.get -> long
Android.Views.SurfaceControl.TransactionStats.PresentFence.get -> Android.Hardware.SyncFence!
Android.Views.SurfaceControlViewHost.SurfaceControlViewHost(Android.Content.Context! context, Android.Views.Display! display, Android.Window.InputTransferToken? hostInputTransferToken) -> void
Android.Views.SurfaceControlViewHost.SurfacePackage.InputTransferToken.get -> Android.Window.InputTransferToken?
Android.Views.View.ContentSensitivity.get -> Android.Views.ViewContentSensitivity
Android.Views.View.ContentSensitivity.set -> void
Android.Views.View.IsContentSensitive.get -> bool
Android.Views.View.PendingCredentialCallback.get -> Android.OS.IOutcomeReceiver?
Android.Views.View.PendingCredentialRequest.get -> Android.Credentials.GetCredentialRequest?
Android.Views.ViewContentSensitivity
Android.Views.ViewContentSensitivity.Auto = 0 -> Android.Views.ViewContentSensitivity
Android.Views.ViewContentSensitivity.NotSensitive = 2 -> Android.Views.ViewContentSensitivity
Android.Views.ViewContentSensitivity.Sensitive = 1 -> Android.Views.ViewContentSensitivity
Android.Views.WindowInsets.Builder.SetBoundingRects(int typeMask, System.Collections.Generic.IList<Android.Graphics.Rect!>! rects) -> Android.Views.WindowInsets.Builder!
Android.Views.WindowInsets.Builder.SetBoundingRectsIgnoringVisibility(int typeMask, System.Collections.Generic.IList<Android.Graphics.Rect!>! rects) -> Android.Views.WindowInsets.Builder!
Android.Views.WindowInsets.Builder.SetFrame(int width, int height) -> Android.Views.WindowInsets.Builder!
Android.Views.WindowInsets.Frame.get -> Android.Util.Size!
Android.Views.WindowInsets.GetBoundingRects(int typeMask) -> System.Collections.Generic.IList<Android.Graphics.Rect!>!
Android.Views.WindowInsets.GetBoundingRectsIgnoringVisibility(int typeMask) -> System.Collections.Generic.IList<Android.Graphics.Rect!>!
Android.Views.WindowInsetsControllerAppearance.LightCaptionBars = 256 -> Android.Views.WindowInsetsControllerAppearance
Android.Views.WindowInsetsControllerAppearance.TransparentCaptionBarBackground = 128 -> Android.Views.WindowInsetsControllerAppearance
Android.Widget.RemoteViews.DrawInstructions
Android.Widget.RemoteViews.DrawInstructions.Builder
Android.Widget.RemoteViews.DrawInstructions.Builder.Build() -> Android.Widget.RemoteViews.DrawInstructions!
Android.Widget.RemoteViews.DrawInstructions.Builder.Builder(System.Collections.Generic.IList<byte[]!>! instructions) -> void
Android.Widget.RemoteViews.RemoteViews(Android.Widget.RemoteViews.DrawInstructions! drawInstructions) -> void
Android.Window.InputTransferToken
Android.Window.InputTransferToken.DescribeContents() -> int
Android.Window.InputTransferToken.InterfaceConsts
Android.Window.InputTransferToken.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Window.TrustedPresentationThresholds
Android.Window.TrustedPresentationThresholds.DescribeContents() -> int
Android.Window.TrustedPresentationThresholds.InterfaceConsts
Android.Window.TrustedPresentationThresholds.MinAlpha.get -> float
Android.Window.TrustedPresentationThresholds.MinFractionRendered.get -> float
Android.Window.TrustedPresentationThresholds.StabilityRequirementMillis.get -> int
Android.Window.TrustedPresentationThresholds.TrustedPresentationThresholds(float minAlpha, float minFractionRendered, int stabilityRequirementMs) -> void
Android.Window.TrustedPresentationThresholds.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
const Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.AdSelection.AdWithBid.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.AdSelection.AdWithBid.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.AdSelection.DecisionLogic.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.AdSelection.DecisionLogic.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.AdSelection.PerBuyerDecisionLogic.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.AdSelection.PerBuyerDecisionLogic.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.AdSelection.ReportEventRequest.FlagReportingDestinationBuyer = Android.AdServices.AdSelection.ReportingDestination.Buyer -> Android.AdServices.AdSelection.ReportingDestination
const Android.AdServices.AdSelection.ReportEventRequest.FlagReportingDestinationSeller = Android.AdServices.AdSelection.ReportingDestination.Seller -> Android.AdServices.AdSelection.ReportingDestination
const Android.AdServices.AdSelection.SignedContextualAds.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.AdSelection.SignedContextualAds.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.Common.AdFilters.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.Common.AdFilters.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.Common.AdServicesPermissions.AccessAdservicesAdSelection = "android.permission.ACCESS_ADSERVICES_AD_SELECTION" -> string!
const Android.AdServices.Common.AdServicesPermissions.AccessAdservicesProtectedSignals = "android.permission.ACCESS_ADSERVICES_PROTECTED_SIGNALS" -> string!
const Android.AdServices.Common.AppInstallFilters.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.Common.AppInstallFilters.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.Common.FrequencyCapFilters.AdEventTypeClick = Android.AdServices.Common.AdEventType.Click -> Android.AdServices.Common.AdEventType
const Android.AdServices.Common.FrequencyCapFilters.AdEventTypeImpression = Android.AdServices.Common.AdEventType.Impression -> Android.AdServices.Common.AdEventType
const Android.AdServices.Common.FrequencyCapFilters.AdEventTypeView = Android.AdServices.Common.AdEventType.View -> Android.AdServices.Common.AdEventType
const Android.AdServices.Common.FrequencyCapFilters.AdEventTypeWin = Android.AdServices.Common.AdEventType.Win -> Android.AdServices.Common.AdEventType
const Android.AdServices.Common.FrequencyCapFilters.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.Common.FrequencyCapFilters.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.Common.KeyedFrequencyCap.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.Common.KeyedFrequencyCap.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.CustomAudiences.CustomAudience.FlagAuctionServerRequestOmitAds = Android.AdServices.CustomAudiences.AuctionServerRequest.Ads -> Android.AdServices.CustomAudiences.AuctionServerRequest
const Android.AdServices.CustomAudiences.PartialCustomAudience.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.CustomAudiences.PartialCustomAudience.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.Measurement.SourceRegistrationRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.Measurement.SourceRegistrationRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.OnDevicePersonalization.AppInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.OnDevicePersonalization.AppInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.OnDevicePersonalization.EventLogRecord.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.OnDevicePersonalization.EventLogRecord.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.OnDevicePersonalization.InferenceInput.Params.DelegateCpu = Android.AdServices.OnDevicePersonalization.DelegateType.Cpu -> Android.AdServices.OnDevicePersonalization.DelegateType
const Android.AdServices.OnDevicePersonalization.InferenceInput.Params.ModelTypeTensorflowLite = Android.AdServices.OnDevicePersonalization.ModelType.Lite -> Android.AdServices.OnDevicePersonalization.ModelType
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorIsolatedServiceFailed = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.IsolatedServiceFailed -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorPersonalizationDisabled = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.PersonalizationDisabled -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
const Android.AdServices.OnDevicePersonalization.RenderingConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.OnDevicePersonalization.RenderingConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.OnDevicePersonalization.RequestLogRecord.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.OnDevicePersonalization.RequestLogRecord.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.OnDevicePersonalization.TrainingInterval.SchedulingModeOneTime = Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode.OneTime -> Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode
const Android.AdServices.OnDevicePersonalization.TrainingInterval.SchedulingModeRecurrent = Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode.Recurrent -> Android.AdServices.OnDevicePersonalization.TrainingIntervalSchedulingMode
const Android.AdServices.OnDevicePersonalization.UserData.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.OnDevicePersonalization.UserData.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.Admin.DeviceAdminInfo.HeadlessDeviceOwnerModeSingleUser = Android.App.Admin.HeadlessDeviceOwnerMode.SingleUser -> Android.App.Admin.HeadlessDeviceOwnerMode
const Android.App.Admin.DevicePolicyIdentifiers.ContentProtectionPolicy = "contentProtection" -> string!
const Android.App.Admin.DevicePolicyIdentifiers.PasswordComplexityPolicy = "passwordComplexity" -> string!
const Android.App.Admin.DevicePolicyIdentifiers.SecurityLoggingPolicy = "securityLogging" -> string!
const Android.App.Admin.DevicePolicyIdentifiers.UsbDataSignalingPolicy = "usbDataSignaling" -> string!
const Android.App.Admin.DevicePolicyManager.ContentProtectionDisabled = Android.App.Admin.ContentProtectionPolicy.Disabled -> Android.App.Admin.ContentProtectionPolicy
const Android.App.Admin.DevicePolicyManager.ContentProtectionEnabled = Android.App.Admin.ContentProtectionPolicy.Enabled -> Android.App.Admin.ContentProtectionPolicy
const Android.App.Admin.DevicePolicyManager.ContentProtectionNotControlledByPolicy = Android.App.Admin.ContentProtectionPolicy.NotControlledByPolicy -> Android.App.Admin.ContentProtectionPolicy
const Android.App.Admin.SecurityLog.TagBackupServiceToggled = Android.App.Admin.SecurityLogTags.BackupServiceToggled -> Android.App.Admin.SecurityLogTags
const Android.App.ApplicationStartInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.ApplicationStartInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.ApplicationStartInfo.LaunchModeSingleInstance = Android.App.ApplicationStartInfoLaunchMode.SingleInstance -> Android.App.ApplicationStartInfoLaunchMode
const Android.App.ApplicationStartInfo.LaunchModeSingleInstancePerTask = Android.App.ApplicationStartInfoLaunchMode.SingleInstancePerTask -> Android.App.ApplicationStartInfoLaunchMode
const Android.App.ApplicationStartInfo.LaunchModeSingleTask = Android.App.ApplicationStartInfoLaunchMode.SingleTask -> Android.App.ApplicationStartInfoLaunchMode
const Android.App.ApplicationStartInfo.LaunchModeSingleTop = Android.App.ApplicationStartInfoLaunchMode.SingleTop -> Android.App.ApplicationStartInfoLaunchMode
const Android.App.ApplicationStartInfo.LaunchModeStandard = Android.App.ApplicationStartInfoLaunchMode.Standard -> Android.App.ApplicationStartInfoLaunchMode
const Android.App.ApplicationStartInfo.StartReasonAlarm = Android.App.ApplicationStartInfoStartReason.Alarm -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonBackup = Android.App.ApplicationStartInfoStartReason.Backup -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonBootComplete = Android.App.ApplicationStartInfoStartReason.BootComplete -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonBroadcast = Android.App.ApplicationStartInfoStartReason.Broadcast -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonContentProvider = Android.App.ApplicationStartInfoStartReason.ContentProvider -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonJob = Android.App.ApplicationStartInfoStartReason.Job -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonLauncher = Android.App.ApplicationStartInfoStartReason.Launcher -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonLauncherRecents = Android.App.ApplicationStartInfoStartReason.LauncherRecents -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonOther = Android.App.ApplicationStartInfoStartReason.Other -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonPush = Android.App.ApplicationStartInfoStartReason.Push -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonService = Android.App.ApplicationStartInfoStartReason.Service -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartReasonStartActivity = Android.App.ApplicationStartInfoStartReason.StartActivity -> Android.App.ApplicationStartInfoStartReason
const Android.App.ApplicationStartInfo.StartTimestampApplicationOncreate = Android.App.ApplicationStartInfoStartTimestamp.ApplicationOncreate -> Android.App.ApplicationStartInfoStartTimestamp
const Android.App.ApplicationStartInfo.StartTimestampBindApplication = Android.App.ApplicationStartInfoStartTimestamp.BindApplication -> Android.App.ApplicationStartInfoStartTimestamp
const Android.App.ApplicationStartInfo.StartTimestampFirstFrame = Android.App.ApplicationStartInfoStartTimestamp.FirstFrame -> Android.App.ApplicationStartInfoStartTimestamp
const Android.App.ApplicationStartInfo.StartTimestampFork = Android.App.ApplicationStartInfoStartTimestamp.Fork -> Android.App.ApplicationStartInfoStartTimestamp
const Android.App.ApplicationStartInfo.StartTimestampFullyDrawn = Android.App.ApplicationStartInfoStartTimestamp.FullyDrawn -> Android.App.ApplicationStartInfoStartTimestamp
const Android.App.ApplicationStartInfo.StartTimestampInitialRenderthreadFrame = Android.App.ApplicationStartInfoStartTimestamp.InitialRenderthreadFrame -> Android.App.ApplicationStartInfoStartTimestamp
const Android.App.ApplicationStartInfo.StartTimestampLaunch = Android.App.ApplicationStartInfoStartTimestamp.Launch -> Android.App.ApplicationStartInfoStartTimestamp
const Android.App.ApplicationStartInfo.StartTimestampReservedRangeDeveloper = 30 -> int
const Android.App.ApplicationStartInfo.StartTimestampReservedRangeDeveloperStart = 21 -> int
const Android.App.ApplicationStartInfo.StartTimestampReservedRangeSystem = 20 -> int
const Android.App.ApplicationStartInfo.StartTimestampSurfaceflingerCompositionComplete = Android.App.ApplicationStartInfoStartTimestamp.SurfaceFlingerCompositionComplete -> Android.App.ApplicationStartInfoStartTimestamp
const Android.App.ApplicationStartInfo.StartTypeCold = Android.App.ApplicationStartInfoStartType.Cold -> Android.App.ApplicationStartInfoStartType
const Android.App.ApplicationStartInfo.StartTypeHot = Android.App.ApplicationStartInfoStartType.Hot -> Android.App.ApplicationStartInfoStartType
const Android.App.ApplicationStartInfo.StartTypeUnset = Android.App.ApplicationStartInfoStartType.Unset -> Android.App.ApplicationStartInfoStartType
const Android.App.ApplicationStartInfo.StartTypeWarm = Android.App.ApplicationStartInfoStartType.Warm -> Android.App.ApplicationStartInfoStartType
const Android.App.ApplicationStartInfo.StartupStateError = Android.App.ApplicationStartInfoStartupState.Error -> Android.App.ApplicationStartInfoStartupState
const Android.App.ApplicationStartInfo.StartupStateFirstFrameDrawn = Android.App.ApplicationStartInfoStartupState.FirstFrameDrawn -> Android.App.ApplicationStartInfoStartupState
const Android.App.ApplicationStartInfo.StartupStateStarted = Android.App.ApplicationStartInfoStartupState.Started -> Android.App.ApplicationStartInfoStartupState
const Android.App.AppSearch.AppSearchResult.ResultDenied = Android.App.AppSearch.AppSearchResultCode.Denied -> Android.App.AppSearch.AppSearchResultCode
const Android.App.AppSearch.AppSearchResult.ResultRateLimited = Android.App.AppSearch.AppSearchResultCode.RateLimited -> Android.App.AppSearch.AppSearchResultCode
const Android.App.AppSearch.AppSearchSchema.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.AppSearchSchema.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.GetByDocumentIdRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.GetByDocumentIdRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.GetSchemaResponse.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.GetSchemaResponse.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.JoinSpec.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.JoinSpec.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.Observers.ObserverSpec.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.Observers.ObserverSpec.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.RemoveByDocumentIdRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.RemoveByDocumentIdRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.ReportUsageRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.ReportUsageRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.SchemaVisibilityConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.SchemaVisibilityConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.SearchResult.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.SearchResult.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.SearchResult.MatchInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.SearchResult.MatchInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.SearchSpec.GroupingTypePerSchema = Android.App.AppSearch.GroupingType.PerSchema -> Android.App.AppSearch.GroupingType
const Android.App.AppSearch.SearchSpec.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.SearchSpec.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.SearchSpec.SchemaTypeWildcard = "*" -> string!
const Android.App.AppSearch.SearchSuggestionResult.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.SearchSuggestionResult.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.SearchSuggestionSpec.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.SearchSuggestionSpec.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.SetSchemaResponse.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.SetSchemaResponse.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.SetSchemaResponse.MigrationFailure.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.SetSchemaResponse.MigrationFailure.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.StorageInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.StorageInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AutomaticZenRule.TypeBedtime = Android.App.AutomaticZenRuleType.Bedtime -> Android.App.AutomaticZenRuleType
const Android.App.AutomaticZenRule.TypeDriving = Android.App.AutomaticZenRuleType.Driving -> Android.App.AutomaticZenRuleType
const Android.App.AutomaticZenRule.TypeImmersive = Android.App.AutomaticZenRuleType.Immersive -> Android.App.AutomaticZenRuleType
const Android.App.AutomaticZenRule.TypeManaged = Android.App.AutomaticZenRuleType.Managed -> Android.App.AutomaticZenRuleType
const Android.App.AutomaticZenRule.TypeOther = Android.App.AutomaticZenRuleType.Other -> Android.App.AutomaticZenRuleType
const Android.App.AutomaticZenRule.TypeScheduleCalendar = Android.App.AutomaticZenRuleType.ScheduleCalendar -> Android.App.AutomaticZenRuleType
const Android.App.AutomaticZenRule.TypeScheduleTime = Android.App.AutomaticZenRuleType.ScheduleTime -> Android.App.AutomaticZenRuleType
const Android.App.AutomaticZenRule.TypeTheater = Android.App.AutomaticZenRuleType.Theater -> Android.App.AutomaticZenRuleType
const Android.App.AutomaticZenRule.TypeUnknown = Android.App.AutomaticZenRuleType.Unknown -> Android.App.AutomaticZenRuleType
const Android.App.Notification.CategoryVoicemail = "voicemail" -> string!
const Android.App.NotificationManager.ActionConsolidatedNotificationPolicyChanged = "android.app.action.CONSOLIDATED_NOTIFICATION_POLICY_CHANGED" -> string!
const Android.App.NotificationManager.AutomaticRuleStatusActivated = Android.App.AutomaticRuleStatus.Activated -> Android.App.AutomaticRuleStatus
const Android.App.NotificationManager.AutomaticRuleStatusDeactivated = Android.App.AutomaticRuleStatus.Deactivated -> Android.App.AutomaticRuleStatus
const Android.App.NotificationManager.ExtraNotificationPolicy = "android.app.extra.NOTIFICATION_POLICY" -> string!
const Android.App.Roles.RoleManager.RoleWallet = "android.app.role.WALLET" -> string!
const Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.Usage.StorageStats.AppDataTypeFileTypeApk = Android.App.Usage.StorageStatsAppDataType.FileTypeApk -> Android.App.Usage.StorageStatsAppDataType
const Android.App.Usage.StorageStats.AppDataTypeFileTypeCurrentProfile = Android.App.Usage.StorageStatsAppDataType.FileTypeCurrentProfile -> Android.App.Usage.StorageStatsAppDataType
const Android.App.Usage.StorageStats.AppDataTypeFileTypeDexoptArtifact = Android.App.Usage.StorageStatsAppDataType.FileTypeDexoptArtifact -> Android.App.Usage.StorageStatsAppDataType
const Android.App.Usage.StorageStats.AppDataTypeFileTypeDm = Android.App.Usage.StorageStatsAppDataType.FileTypeDm -> Android.App.Usage.StorageStatsAppDataType
const Android.App.Usage.StorageStats.AppDataTypeFileTypeReferenceProfile = Android.App.Usage.StorageStatsAppDataType.FileTypeReferenceProfile -> Android.App.Usage.StorageStatsAppDataType
const Android.App.Usage.StorageStats.AppDataTypeLib = Android.App.Usage.StorageStatsAppDataType.Lib -> Android.App.Usage.StorageStatsAppDataType
const Android.App.Usage.UsageEventsQuery.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.Usage.UsageEventsQuery.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.Usage.UsageStatsManager.ExtraEventAction = "android.app.usage.extra.EVENT_ACTION" -> string!
const Android.App.Usage.UsageStatsManager.ExtraEventCategory = "android.app.usage.extra.EVENT_CATEGORY" -> string!
const Android.Bluetooth.BluetoothCodecType.CodecIdAac = 2 -> long
const Android.Bluetooth.BluetoothCodecType.CodecIdAptx = 16797695 -> long
const Android.Bluetooth.BluetoothCodecType.CodecIdAptxHd = 604035071 -> long
const Android.Bluetooth.BluetoothCodecType.CodecIdLdac = -1442763265 -> long
const Android.Bluetooth.BluetoothCodecType.CodecIdOpus = 16834815 -> long
const Android.Bluetooth.BluetoothCodecType.CodecIdSbc = 0 -> long
const Android.Bluetooth.BluetoothCodecType.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Bluetooth.BluetoothCodecType.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Bluetooth.BluetoothDevice.AddressTypeAnonymous = Android.Bluetooth.AddressType.Anonymous -> Android.Bluetooth.AddressType
const Android.Bluetooth.BluetoothGatt.GattConnectionTimeout = Android.Bluetooth.GattStatus.ConnectionTimeout -> Android.Bluetooth.GattStatus
const Android.Bluetooth.BluetoothLeAudioCodecConfig.SampleRate11025 = Android.Bluetooth.BluetoothLeSampleRate.SampleRate11025 -> Android.Bluetooth.BluetoothLeSampleRate
const Android.Bluetooth.BluetoothLeAudioCodecConfig.SampleRate176400 = Android.Bluetooth.BluetoothLeSampleRate.SampleRate176400 -> Android.Bluetooth.BluetoothLeSampleRate
const Android.Bluetooth.BluetoothLeAudioCodecConfig.SampleRate192000 = Android.Bluetooth.BluetoothLeSampleRate.SampleRate192000 -> Android.Bluetooth.BluetoothLeSampleRate
const Android.Bluetooth.BluetoothLeAudioCodecConfig.SampleRate22050 = Android.Bluetooth.BluetoothLeSampleRate.SampleRate22050 -> Android.Bluetooth.BluetoothLeSampleRate
const Android.Bluetooth.BluetoothLeAudioCodecConfig.SampleRate384000 = Android.Bluetooth.BluetoothLeSampleRate.SampleRate384000 -> Android.Bluetooth.BluetoothLeSampleRate
const Android.Bluetooth.BluetoothLeAudioCodecConfig.SampleRate88200 = Android.Bluetooth.BluetoothLeSampleRate.SampleRate88200 -> Android.Bluetooth.BluetoothLeSampleRate
const Android.Bluetooth.BluetoothLeAudioCodecConfig.SampleRate96000 = Android.Bluetooth.BluetoothLeSampleRate.SampleRate96000 -> Android.Bluetooth.BluetoothLeSampleRate
const Android.Bluetooth.BluetoothSocketException.UnixFileSocketCreationFailure = Android.Bluetooth.BluetoothSocketExceptionReason.UnixFileSocketCreationFailure -> Android.Bluetooth.BluetoothSocketExceptionReason
const Android.Content.Context.BindPackageIsolatedProcess = Android.Content.Bind.PackageIsolatedProcess -> Android.Content.Bind
const Android.Content.Context.ContactKeysService = "contact_keys" -> string!
const Android.Content.Context.PersistentDataBlockService = "persistent_data_block" -> string!
const Android.Content.Context.ProfilingService = "profiling" -> string!
const Android.Content.Context.SecurityStateService = "security_state" -> string!
const Android.Content.Intent.ActionPackageUnstopped = "android.intent.action.PACKAGE_UNSTOPPED" -> string!
const Android.Content.Intent.ActionProfileAvailable = "android.intent.action.PROFILE_AVAILABLE" -> string!
const Android.Content.Intent.ActionProfileUnavailable = "android.intent.action.PROFILE_UNAVAILABLE" -> string!
const Android.Content.Intent.ActionUnarchivePackage = "android.intent.action.UNARCHIVE_PACKAGE" -> string!
const Android.Content.Intent.ChooserContentTypeAlbum = Android.Content.IntentChooserContentType.Album -> Android.Content.IntentChooserContentType
const Android.Content.Intent.ExtraArchival = "android.intent.extra.ARCHIVAL" -> string!
const Android.Content.Intent.ExtraChooserAdditionalContentUri = "android.intent.extra.CHOOSER_ADDITIONAL_CONTENT_URI" -> string!
const Android.Content.Intent.ExtraChooserContentTypeHint = "android.intent.extra.CHOOSER_CONTENT_TYPE_HINT" -> string!
const Android.Content.Intent.ExtraChooserFocusedItemPosition = "android.intent.extra.CHOOSER_FOCUSED_ITEM_POSITION" -> string!
const Android.Content.Intent.ExtraChooserResult = "android.intent.extra.CHOOSER_RESULT" -> string!
const Android.Content.Intent.ExtraChooserResultIntentSender = "android.intent.extra.CHOOSER_RESULT_INTENT_SENDER" -> string!
const Android.Content.Intent.ExtraMetadataText = "android.intent.extra.METADATA_TEXT" -> string!
const Android.Content.PM.LauncherUserInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Content.PM.LauncherUserInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Content.PM.PackageInstaller.ExtraUnarchiveAllUsers = "android.content.pm.extra.UNARCHIVE_ALL_USERS" -> string!
const Android.Content.PM.PackageInstaller.ExtraUnarchiveId = "android.content.pm.extra.UNARCHIVE_ID" -> string!
const Android.Content.PM.PackageInstaller.ExtraUnarchivePackageName = "android.content.pm.extra.UNARCHIVE_PACKAGE_NAME" -> string!
const Android.Content.PM.PackageInstaller.ExtraUnarchiveStatus = "android.content.pm.extra.UNARCHIVE_STATUS" -> string!
const Android.Content.PM.PackageInstaller.UnarchivalErrorInstallerDisabled = Android.Content.PM.PackageInstallerUnarchival.ErrorInstallerDisabled -> Android.Content.PM.PackageInstallerUnarchival
const Android.Content.PM.PackageInstaller.UnarchivalErrorInstallerUninstalled = Android.Content.PM.PackageInstallerUnarchival.ErrorInstallerUninstalled -> Android.Content.PM.PackageInstallerUnarchival
const Android.Content.PM.PackageInstaller.UnarchivalErrorInsufficientStorage = Android.Content.PM.PackageInstallerUnarchival.ErrorInsufficientStorage -> Android.Content.PM.PackageInstallerUnarchival
const Android.Content.PM.PackageInstaller.UnarchivalErrorNoConnectivity = Android.Content.PM.PackageInstallerUnarchival.ErrorNoConnectivity -> Android.Content.PM.PackageInstallerUnarchival
const Android.Content.PM.PackageInstaller.UnarchivalErrorUserActionNeeded = Android.Content.PM.PackageInstallerUnarchival.ErrorUserActionNeeded -> Android.Content.PM.PackageInstallerUnarchival
const Android.Content.PM.PackageInstaller.UnarchivalGenericError = Android.Content.PM.PackageInstallerUnarchival.GenericError -> Android.Content.PM.PackageInstallerUnarchival
const Android.Content.PM.PackageInstaller.UnarchivalOk = Android.Content.PM.PackageInstallerUnarchival.Ok -> Android.Content.PM.PackageInstallerUnarchival
const Android.Content.PM.PackageManager.DeleteArchive = Android.Content.PM.PackageManagerUninstallFlags.DeleteArchive -> Android.Content.PM.PackageManagerUninstallFlags
const Android.Content.PM.PackageManager.MatchArchivedPackages = 4294967296 -> long
const Android.Content.PM.ServiceInfo.ForegroundServiceTypeMediaProcessing = Android.Content.PM.ForegroundService.TypeMediaProcessing -> Android.Content.PM.ForegroundService
const Android.Content.UriRelativeFilter.Fragment = Android.Content.UriRelativeFilterPart.Fragment -> Android.Content.UriRelativeFilterPart
const Android.Content.UriRelativeFilter.Path = Android.Content.UriRelativeFilterPart.Path -> Android.Content.UriRelativeFilterPart
const Android.Content.UriRelativeFilter.Query = Android.Content.UriRelativeFilterPart.Query -> Android.Content.UriRelativeFilterPart
const Android.Content.UriRelativeFilterGroup.ActionAllow = Android.Content.UriRelativeFilterGroupAction.Allow -> Android.Content.UriRelativeFilterGroupAction
const Android.Content.UriRelativeFilterGroup.ActionBlock = Android.Content.UriRelativeFilterGroupAction.Block -> Android.Content.UriRelativeFilterGroupAction
const Android.Database.Sqlite.SQLiteRawStatement.SqliteDataTypeBlob = Android.Database.Sqlite.SqliteDataType.Blob -> Android.Database.Sqlite.SqliteDataType
const Android.Database.Sqlite.SQLiteRawStatement.SqliteDataTypeFloat = Android.Database.Sqlite.SqliteDataType.Float -> Android.Database.Sqlite.SqliteDataType
const Android.Database.Sqlite.SQLiteRawStatement.SqliteDataTypeInteger = Android.Database.Sqlite.SqliteDataType.Integer -> Android.Database.Sqlite.SqliteDataType
const Android.Database.Sqlite.SQLiteRawStatement.SqliteDataTypeNull = Android.Database.Sqlite.SqliteDataType.Null -> Android.Database.Sqlite.SqliteDataType
const Android.Database.Sqlite.SQLiteRawStatement.SqliteDataTypeText = Android.Database.Sqlite.SqliteDataType.Text -> Android.Database.Sqlite.SqliteDataType
const Android.Graphics.Paint.TextRunFlagLeftEdge = 8192 -> int
const Android.Graphics.Paint.TextRunFlagRightEdge = 16384 -> int
const Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Content.PdfPageImageContent.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Content.PdfPageImageContent.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Content.PdfPageLinkContent.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Content.PdfPageLinkContent.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Content.PdfPageTextContent.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Content.PdfPageTextContent.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Models.FormEditRecord.EditTypeClick = Android.Graphics.Pdf.Models.FormEditRecordEditType.Click -> Android.Graphics.Pdf.Models.FormEditRecordEditType
const Android.Graphics.Pdf.Models.FormEditRecord.EditTypeSetIndices = Android.Graphics.Pdf.Models.FormEditRecordEditType.SetIndices -> Android.Graphics.Pdf.Models.FormEditRecordEditType
const Android.Graphics.Pdf.Models.FormEditRecord.EditTypeSetText = Android.Graphics.Pdf.Models.FormEditRecordEditType.SetText -> Android.Graphics.Pdf.Models.FormEditRecordEditType
const Android.Graphics.Pdf.Models.FormEditRecord.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Models.FormEditRecord.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Models.FormWidgetInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Models.FormWidgetInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetTypeCheckbox = Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.CheckBox -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
const Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetTypeCombobox = Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.ComboBox -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
const Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetTypeListbox = Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.ListBox -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
const Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetTypePushbutton = Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.PushButton -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
const Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetTypeRadiobutton = Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.RadioButton -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
const Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetTypeSignature = Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.Signature -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
const Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetTypeTextfield = Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.TextField -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
const Android.Graphics.Pdf.Models.FormWidgetInfo.WidgetTypeUnknown = Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType.Unknown -> Android.Graphics.Pdf.Models.FormWidgetInfoWidgetType
const Android.Graphics.Pdf.Models.ListItem.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Models.ListItem.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Models.PageMatchBounds.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Models.PageMatchBounds.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Models.Selection.PageSelection.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Models.Selection.PageSelection.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.Models.Selection.SelectionBoundary.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Pdf.Models.Selection.SelectionBoundary.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Pdf.PdfRenderer.DocumentLinearizedTypeLinearized = Android.Graphics.Pdf.PdfRendererDocumentLinearizedType.Linearized -> Android.Graphics.Pdf.PdfRendererDocumentLinearizedType
const Android.Graphics.Pdf.PdfRenderer.DocumentLinearizedTypeNonLinearized = Android.Graphics.Pdf.PdfRendererDocumentLinearizedType.NonLinearized -> Android.Graphics.Pdf.PdfRendererDocumentLinearizedType
const Android.Graphics.Pdf.PdfRenderer.PdfFormTypeAcroForm = Android.Graphics.Pdf.PdfRendererPdfFormType.AcroForm -> Android.Graphics.Pdf.PdfRendererPdfFormType
const Android.Graphics.Pdf.PdfRenderer.PdfFormTypeNone = Android.Graphics.Pdf.PdfRendererPdfFormType.None -> Android.Graphics.Pdf.PdfRendererPdfFormType
const Android.Graphics.Pdf.PdfRenderer.PdfFormTypeXfaForeground = Android.Graphics.Pdf.PdfRendererPdfFormType.XfaForeground -> Android.Graphics.Pdf.PdfRendererPdfFormType
const Android.Graphics.Pdf.PdfRenderer.PdfFormTypeXfaFull = Android.Graphics.Pdf.PdfRendererPdfFormType.XfaFull -> Android.Graphics.Pdf.PdfRendererPdfFormType
const Android.Graphics.Pdf.PdfRendererPreV.DocumentLinearizedTypeLinearized = Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType.Linearized -> Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType
const Android.Graphics.Pdf.PdfRendererPreV.DocumentLinearizedTypeNonLinearized = Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType.NonLinearized -> Android.Graphics.Pdf.PdfRendererPreVDocumentLinearizedType
const Android.Graphics.Pdf.PdfRendererPreV.PdfFormTypeAcroForm = Android.Graphics.Pdf.PdfRendererPreVPdfFormType.AcroForm -> Android.Graphics.Pdf.PdfRendererPreVPdfFormType
const Android.Graphics.Pdf.PdfRendererPreV.PdfFormTypeNone = Android.Graphics.Pdf.PdfRendererPreVPdfFormType.None -> Android.Graphics.Pdf.PdfRendererPreVPdfFormType
const Android.Graphics.Pdf.PdfRendererPreV.PdfFormTypeXfaForeground = Android.Graphics.Pdf.PdfRendererPreVPdfFormType.XfaForeground -> Android.Graphics.Pdf.PdfRendererPreVPdfFormType
const Android.Graphics.Pdf.PdfRendererPreV.PdfFormTypeXfaFull = Android.Graphics.Pdf.PdfRendererPreVPdfFormType.XfaFull -> Android.Graphics.Pdf.PdfRendererPreVPdfFormType
const Android.Graphics.Pdf.RenderParams.FlagRenderHighlightAnnotations = Android.Graphics.Pdf.RenderParamsRenderFlag.HighlightAnnotations -> Android.Graphics.Pdf.RenderParamsRenderFlag
const Android.Graphics.Pdf.RenderParams.FlagRenderTextAnnotations = Android.Graphics.Pdf.RenderParamsRenderFlag.TextAnnotations -> Android.Graphics.Pdf.RenderParamsRenderFlag
const Android.Graphics.Pdf.RenderParams.RenderModeForDisplay = Android.Graphics.Pdf.RenderParamsRenderMode.ForDisplay -> Android.Graphics.Pdf.RenderParamsRenderMode
const Android.Graphics.Pdf.RenderParams.RenderModeForPrint = Android.Graphics.Pdf.RenderParamsRenderMode.ForPrint -> Android.Graphics.Pdf.RenderParamsRenderMode
const Android.Graphics.Text.LineBreakConfig.HyphenationDisabled = Android.Graphics.Text.LineBreakHyphenation.Disabled -> Android.Graphics.Text.LineBreakHyphenation
const Android.Graphics.Text.LineBreakConfig.HyphenationEnabled = Android.Graphics.Text.LineBreakHyphenation.Enabled -> Android.Graphics.Text.LineBreakHyphenation
const Android.Graphics.Text.LineBreakConfig.HyphenationUnspecified = Android.Graphics.Text.LineBreakHyphenation.Unspecified -> Android.Graphics.Text.LineBreakHyphenation
const Android.Graphics.Text.LineBreakConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Graphics.Text.LineBreakConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Graphics.Text.LineBreakConfig.LineBreakStyleAuto = Android.Graphics.Text.LineBreakStyle.Auto -> Android.Graphics.Text.LineBreakStyle
const Android.Graphics.Text.LineBreakConfig.LineBreakStyleNoBreak = Android.Graphics.Text.LineBreakStyle.NoBreak -> Android.Graphics.Text.LineBreakStyle
const Android.Graphics.Text.LineBreakConfig.LineBreakStyleUnspecified = Android.Graphics.Text.LineBreakStyle.Unspecified -> Android.Graphics.Text.LineBreakStyle
const Android.Graphics.Text.LineBreakConfig.LineBreakWordStyleAuto = Android.Graphics.Text.LineBreakWordStyle.Auto -> Android.Graphics.Text.LineBreakWordStyle
const Android.Graphics.Text.LineBreakConfig.LineBreakWordStyleUnspecified = Android.Graphics.Text.LineBreakWordStyle.Unspecified -> Android.Graphics.Text.LineBreakWordStyle
const Android.Graphics.Text.LineBreaker.JustificationModeInterCharacter = Android.Graphics.Text.JustificationMode.InterCharacter -> Android.Graphics.Text.JustificationMode
const Android.Graphics.Text.PositionedGlyphs.NoOverride = 1E-45 -> float
const Android.Hardware.Biometrics.BiometricManager.BiometricNoAuthentication = -1 -> long
const Android.Hardware.Biometrics.BiometricPrompt.BiometricNoAuthentication = -1 -> long
const Android.Hardware.Biometrics.PromptContentItemBulletedText.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Hardware.Biometrics.PromptContentItemBulletedText.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Hardware.Biometrics.PromptContentItemPlainText.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Hardware.Biometrics.PromptContentItemPlainText.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Hardware.Biometrics.PromptVerticalListContentView.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Hardware.Biometrics.PromptVerticalListContentView.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Hardware.Camera2.CameraMetadata.ControlAeModeOnLowLightBoostBrightnessPriority = Android.Hardware.Camera2.ControlAEMode.OnLowLightBoostBrightnessPriority -> Android.Hardware.Camera2.ControlAEMode
const Android.Hardware.Camera2.CameraMetadata.ControlLowLightBoostStateActive = Android.Hardware.Camera2.ControlLowLightBoostState.Active -> Android.Hardware.Camera2.ControlLowLightBoostState
const Android.Hardware.Camera2.CameraMetadata.ControlLowLightBoostStateInactive = Android.Hardware.Camera2.ControlLowLightBoostState.Inactive -> Android.Hardware.Camera2.ControlLowLightBoostState
const Android.Hardware.HardwareBuffer.R16 = Android.Hardware.HardwareBufferFormat.R16 -> Android.Hardware.HardwareBufferFormat
const Android.Hardware.HardwareBuffer.R8 = Android.Hardware.HardwareBufferFormat.R8 -> Android.Hardware.HardwareBufferFormat
const Android.Hardware.HardwareBuffer.Rg1616 = Android.Hardware.HardwareBufferFormat.Rg1616 -> Android.Hardware.HardwareBufferFormat
const Android.Hardware.HardwareBuffer.Rgba10101010 = Android.Hardware.HardwareBufferFormat.Rgba10101010 -> Android.Hardware.HardwareBufferFormat
const Android.Hardware.OverlayProperties.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Hardware.OverlayProperties.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.DataTypes.PlannedExerciseStep.ExerciseCategoryActive = Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Active -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
const Android.Health.Connect.DataTypes.PlannedExerciseStep.ExerciseCategoryCooldown = Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Cooldown -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
const Android.Health.Connect.DataTypes.PlannedExerciseStep.ExerciseCategoryRecovery = Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Recovery -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
const Android.Health.Connect.DataTypes.PlannedExerciseStep.ExerciseCategoryRest = Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Rest -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
const Android.Health.Connect.DataTypes.PlannedExerciseStep.ExerciseCategoryUnknown = Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Unknown -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
const Android.Health.Connect.DataTypes.PlannedExerciseStep.ExerciseCategoryWarmup = Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory.Warmup -> Android.Health.Connect.DataTypes.PlannedExerciseStepExerciseCategory
const Android.Health.Connect.DataTypes.SkinTemperatureRecord.MeasurementLocationFinger = Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation.Finger -> Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
const Android.Health.Connect.DataTypes.SkinTemperatureRecord.MeasurementLocationToe = Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation.Toe -> Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
const Android.Health.Connect.DataTypes.SkinTemperatureRecord.MeasurementLocationUnknown = Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation.Unknown -> Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
const Android.Health.Connect.DataTypes.SkinTemperatureRecord.MeasurementLocationWrist = Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation.Wrist -> Android.Health.Connect.DataTypes.SkinTemperatureRecordMeasurementLocation
const Android.Health.Connect.HealthPermissions.ReadExerciseRoutes = "android.permission.health.READ_EXERCISE_ROUTES" -> string!
const Android.Health.Connect.HealthPermissions.ReadHealthDataHistory = "android.permission.health.READ_HEALTH_DATA_HISTORY" -> string!
const Android.Health.Connect.HealthPermissions.ReadHealthDataInBackground = "android.permission.health.READ_HEALTH_DATA_IN_BACKGROUND" -> string!
const Android.Health.Connect.HealthPermissions.ReadPlannedExercise = "android.permission.health.READ_PLANNED_EXERCISE" -> string!
const Android.Health.Connect.HealthPermissions.ReadSkinTemperature = "android.permission.health.READ_SKIN_TEMPERATURE" -> string!
const Android.Health.Connect.HealthPermissions.WritePlannedExercise = "android.permission.health.WRITE_PLANNED_EXERCISE" -> string!
const Android.Health.Connect.HealthPermissions.WriteSkinTemperature = "android.permission.health.WRITE_SKIN_TEMPERATURE" -> string!
const Android.Icu.Lang.UCharacter.ILineBreak.Aksara = 43 -> int
const Android.Icu.Lang.UCharacter.ILineBreak.AksaraPrebase = 44 -> int
const Android.Icu.Lang.UCharacter.ILineBreak.AksaraStart = 45 -> int
const Android.Icu.Lang.UCharacter.ILineBreak.Virama = 47 -> int
const Android.Icu.Lang.UCharacter.ILineBreak.ViramaFinal = 46 -> int
const Android.Icu.Lang.UCharacter.LineBreak.Aksara = 43 -> int
const Android.Icu.Lang.UCharacter.LineBreak.AksaraPrebase = 44 -> int
const Android.Icu.Lang.UCharacter.LineBreak.AksaraStart = 45 -> int
const Android.Icu.Lang.UCharacter.LineBreak.Virama = 47 -> int
const Android.Icu.Lang.UCharacter.LineBreak.ViramaFinal = 46 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.CjkUnifiedIdeographsExtensionIId = 328 -> int
const Android.Locations.GnssNavigationMessage.TypeIrnL1 = Android.Locations.GnssNavigationType.IrnL1 -> Android.Locations.GnssNavigationType
const Android.Locations.GnssNavigationMessage.TypeIrnL5 = Android.Locations.GnssNavigationType.IrnL5 -> Android.Locations.GnssNavigationType
const Android.Manifest.Permission.AccessHiddenProfiles = "android.permission.ACCESS_HIDDEN_PROFILES" -> string!
const Android.Manifest.Permission.DetectScreenRecording = "android.permission.DETECT_SCREEN_RECORDING" -> string!
const Android.Manifest.Permission.ForegroundServiceMediaProcessing = "android.permission.FOREGROUND_SERVICE_MEDIA_PROCESSING" -> string!
const Android.Manifest.Permission.ManageDevicePolicyAssistContent = "android.permission.MANAGE_DEVICE_POLICY_ASSIST_CONTENT" -> string!
const Android.Manifest.Permission.ManageDevicePolicyBlockUninstall = "android.permission.MANAGE_DEVICE_POLICY_BLOCK_UNINSTALL" -> string!
const Android.Manifest.Permission.ManageDevicePolicyCameraToggle = "android.permission.MANAGE_DEVICE_POLICY_CAMERA_TOGGLE" -> string!
const Android.Manifest.Permission.ManageDevicePolicyContentProtection = "android.permission.MANAGE_DEVICE_POLICY_CONTENT_PROTECTION" -> string!
const Android.Manifest.Permission.ManageDevicePolicyManagedSubscriptions = "android.permission.MANAGE_DEVICE_POLICY_MANAGED_SUBSCRIPTIONS" -> string!
const Android.Manifest.Permission.ManageDevicePolicyMicrophoneToggle = "android.permission.MANAGE_DEVICE_POLICY_MICROPHONE_TOGGLE" -> string!
const Android.Manifest.Permission.MediaRoutingControl = "android.permission.MEDIA_ROUTING_CONTROL" -> string!
const Android.Manifest.Permission.ReadDropboxData = "android.permission.READ_DROPBOX_DATA" -> string!
const Android.Manifest.Permission.SetBiometricDialogAdvanced = "android.permission.SET_BIOMETRIC_DIALOG_ADVANCED" -> string!
const Android.Media.MediaCodec.ConfigureFlagDetachedSurface = Android.Media.MediaCodecConfigFlags.DetachedSurface -> Android.Media.MediaCodecConfigFlags
const Android.Media.MediaCodec.ParameterKeyQpOffsetMap = "qp-offset-map" -> string!
const Android.Media.MediaCodec.ParameterKeyQpOffsetRects = "qp-offset-rects" -> string!
const Android.Media.MediaCodecInfo.CodecCapabilities.FEATUREDetachedSurface = "detached-surface" -> string!
const Android.Media.MediaCodecInfo.CodecCapabilities.FEATUREDynamicColorAspects = "dynamic-color-aspects" -> string!
const Android.Media.MediaCodecInfo.CodecCapabilities.FEATUREHlgEditing = "hlg-editing" -> string!
const Android.Media.MediaCodecInfo.CodecCapabilities.FEATURERoi = "region-of-interest" -> string!
const Android.Media.MediaFormat.KeyBufferBatchMaxOutputSize = "buffer-batch-max-output-size" -> string!
const Android.Media.MediaFormat.KeyBufferBatchThresholdOutputSize = "buffer-batch-threshold-output-size" -> string!
const Android.Media.MediaFormat.KeyImportance = "importance" -> string!
const Android.Media.MediaRoute2Info.SuitabilityStatusNotSuitableForTransfer = Android.Media.MediaRoute2InfoSuitabilityStatus.NotSuitableForTransfer -> Android.Media.MediaRoute2InfoSuitabilityStatus
const Android.Media.MediaRoute2Info.SuitabilityStatusSuitableForDefaultTransfer = Android.Media.MediaRoute2InfoSuitabilityStatus.SuitableForDefaultTransfer -> Android.Media.MediaRoute2InfoSuitabilityStatus
const Android.Media.MediaRoute2Info.SuitabilityStatusSuitableForManualTransfer = Android.Media.MediaRoute2InfoSuitabilityStatus.SuitableForManualTransfer -> Android.Media.MediaRoute2InfoSuitabilityStatus
const Android.Media.MediaRoute2Info.TypeHdmiArc = Android.Media.MediaRoute2Type.HdmiArc -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeHdmiEarc = Android.Media.MediaRoute2Type.HdmiEarc -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeRemoteCar = Android.Media.MediaRoute2Type.RemoteCar -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeRemoteComputer = Android.Media.MediaRoute2Type.RemoteComputer -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeRemoteGameConsole = Android.Media.MediaRoute2Type.RemoteGameConsole -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeRemoteSmartphone = Android.Media.MediaRoute2Type.RemoteSmartphone -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeRemoteSmartwatch = Android.Media.MediaRoute2Type.RemoteSmartwatch -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeRemoteTablet = Android.Media.MediaRoute2Type.RemoteTablet -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeRemoteTabletDocked = Android.Media.MediaRoute2Type.RemoteTabletDocked -> Android.Media.MediaRoute2Type
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeAudioProcessingFailed = Android.Media.Metrics.EditingEndedEventErrorCode.AudioProcessingFailed -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeDecoderInitFailed = Android.Media.Metrics.EditingEndedEventErrorCode.DecoderInitFailed -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeDecodingFailed = Android.Media.Metrics.EditingEndedEventErrorCode.DecodingFailed -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeDecodingFormatUnsupported = Android.Media.Metrics.EditingEndedEventErrorCode.DecodingFormatUnsupported -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeEncoderInitFailed = Android.Media.Metrics.EditingEndedEventErrorCode.EncoderInitFailed -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeEncodingFailed = Android.Media.Metrics.EditingEndedEventErrorCode.EncodingFailed -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeEncodingFormatUnsupported = Android.Media.Metrics.EditingEndedEventErrorCode.EncodingFormatUnsupported -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeFailedRuntimeCheck = Android.Media.Metrics.EditingEndedEventErrorCode.FailedRuntimeCheck -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeIoBadHttpStatus = Android.Media.Metrics.EditingEndedEventErrorCode.IoBadHttpStatus -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeIoCleartextNotPermitted = Android.Media.Metrics.EditingEndedEventErrorCode.IoCleartextNotPermitted -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeIoFileNotFound = Android.Media.Metrics.EditingEndedEventErrorCode.IoFileNotFound -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeIoNetworkConnectionFailed = Android.Media.Metrics.EditingEndedEventErrorCode.IoNetworkConnectionFailed -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeIoNetworkConnectionTimeout = Android.Media.Metrics.EditingEndedEventErrorCode.IoNetworkConnectionTimeout -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeIoNoPermission = Android.Media.Metrics.EditingEndedEventErrorCode.IoNoPermission -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeIoReadPositionOutOfRange = Android.Media.Metrics.EditingEndedEventErrorCode.IoReadPositionOutOfRange -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeIoUnspecified = Android.Media.Metrics.EditingEndedEventErrorCode.IoUnspecified -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeMuxingFailed = Android.Media.Metrics.EditingEndedEventErrorCode.MuxingFailed -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeNone = Android.Media.Metrics.EditingEndedEventErrorCode.None -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.ErrorCodeVideoFrameProcessingFailed = Android.Media.Metrics.EditingEndedEventErrorCode.VideoFrameProcessingFailed -> Android.Media.Metrics.EditingEndedEventErrorCode
const Android.Media.Metrics.EditingEndedEvent.FinalStateCanceled = Android.Media.Metrics.EditingEndedEventFinalState.Canceled -> Android.Media.Metrics.EditingEndedEventFinalState
const Android.Media.Metrics.EditingEndedEvent.FinalStateError = Android.Media.Metrics.EditingEndedEventFinalState.Error -> Android.Media.Metrics.EditingEndedEventFinalState
const Android.Media.Metrics.EditingEndedEvent.FinalStateSucceeded = Android.Media.Metrics.EditingEndedEventFinalState.Succeeded -> Android.Media.Metrics.EditingEndedEventFinalState
const Android.Media.Metrics.EditingEndedEvent.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Metrics.EditingEndedEvent.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Metrics.EditingEndedEvent.OperationTypeAudioEdit = 8 -> long
const Android.Media.Metrics.EditingEndedEvent.OperationTypeAudioTranscode = 2 -> long
const Android.Media.Metrics.EditingEndedEvent.OperationTypeAudioTransmux = 32 -> long
const Android.Media.Metrics.EditingEndedEvent.OperationTypePaused = 64 -> long
const Android.Media.Metrics.EditingEndedEvent.OperationTypeResumed = 128 -> long
const Android.Media.Metrics.EditingEndedEvent.OperationTypeVideoEdit = 4 -> long
const Android.Media.Metrics.EditingEndedEvent.OperationTypeVideoTranscode = 1 -> long
const Android.Media.Metrics.EditingEndedEvent.OperationTypeVideoTransmux = 16 -> long
const Android.Media.Metrics.EditingEndedEvent.ProgressPercentUnknown = -1 -> int
const Android.Media.Metrics.EditingEndedEvent.TimeSinceCreatedUnknown = -1 -> int
const Android.Media.Metrics.MediaItemInfo.DataTypeAudio = 4 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeDepth = 16 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeGainMap = 32 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeGapless = 256 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeHighDynamicRangeVideo = 1024 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeHighFrameRate = 64 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeImage = 1 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeMetadata = 8 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeSpatialAudio = 512 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeSpeedSettingCuePoints = 128 -> long
const Android.Media.Metrics.MediaItemInfo.DataTypeVideo = 2 -> long
const Android.Media.Metrics.MediaItemInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Metrics.MediaItemInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Metrics.MediaItemInfo.SourceTypeCamera = Android.Media.Metrics.MediaItemInfoSourceType.Camera -> Android.Media.Metrics.MediaItemInfoSourceType
const Android.Media.Metrics.MediaItemInfo.SourceTypeEditingSession = Android.Media.Metrics.MediaItemInfoSourceType.EditingSession -> Android.Media.Metrics.MediaItemInfoSourceType
const Android.Media.Metrics.MediaItemInfo.SourceTypeGallery = Android.Media.Metrics.MediaItemInfoSourceType.Gallery -> Android.Media.Metrics.MediaItemInfoSourceType
const Android.Media.Metrics.MediaItemInfo.SourceTypeGenerated = Android.Media.Metrics.MediaItemInfoSourceType.Generated -> Android.Media.Metrics.MediaItemInfoSourceType
const Android.Media.Metrics.MediaItemInfo.SourceTypeLocalFile = Android.Media.Metrics.MediaItemInfoSourceType.LocalFile -> Android.Media.Metrics.MediaItemInfoSourceType
const Android.Media.Metrics.MediaItemInfo.SourceTypeRemoteFile = Android.Media.Metrics.MediaItemInfoSourceType.RemoteFile -> Android.Media.Metrics.MediaItemInfoSourceType
const Android.Media.Metrics.MediaItemInfo.SourceTypeRemoteLiveStream = Android.Media.Metrics.MediaItemInfoSourceType.RemoteLiveStream -> Android.Media.Metrics.MediaItemInfoSourceType
const Android.Media.Metrics.MediaItemInfo.SourceTypeUnspecified = Android.Media.Metrics.MediaItemInfoSourceType.Unspecified -> Android.Media.Metrics.MediaItemInfoSourceType
const Android.Media.Metrics.MediaItemInfo.ValueUnspecified = -1 -> int
const Android.Media.Midi.MidiUmpDeviceService.ServiceInterface = "android.media.midi.MidiUmpDeviceService" -> string!
const Android.Media.RoutingSessionInfo.TransferReasonApp = Android.Media.RoutingSessionInfoTransferReason.App -> Android.Media.RoutingSessionInfoTransferReason
const Android.Media.RoutingSessionInfo.TransferReasonFallback = Android.Media.RoutingSessionInfoTransferReason.Fallback -> Android.Media.RoutingSessionInfoTransferReason
const Android.Media.RoutingSessionInfo.TransferReasonSystemRequest = Android.Media.RoutingSessionInfoTransferReason.SystemRequest -> Android.Media.RoutingSessionInfoTransferReason
const Android.Net.IpSec.Ike.IkeSessionParams.IkeDpdDelaySecDisabled = 2147483647 -> int
const Android.Net.IpSecTransformState.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.IpSecTransformState.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.NetworkCapabilities.NetCapabilityLocalNetwork = Android.Net.NetCapability.LocalNetwork -> Android.Net.NetCapability
const Android.Net.NetworkCapabilities.TransportSatellite = Android.Net.TransportType.Satellite -> Android.Net.TransportType
const Android.Net.Nsd.DiscoveryRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Nsd.DiscoveryRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.P2p.WifiP2pManager.GroupCreationFailureReasonConnectionCancelled = Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.ConnectionCancelled -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
const Android.Net.Wifi.P2p.WifiP2pManager.GroupCreationFailureReasonGroupRemoved = Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.GroupRemoved -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
const Android.Net.Wifi.P2p.WifiP2pManager.GroupCreationFailureReasonInvitationFailed = Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.InvitationFailed -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
const Android.Net.Wifi.P2p.WifiP2pManager.GroupCreationFailureReasonProvisionDiscoveryFailed = Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.ProvisionDiscoveryFailed -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
const Android.Net.Wifi.P2p.WifiP2pManager.GroupCreationFailureReasonTimedOut = Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.TimedOut -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
const Android.Net.Wifi.P2p.WifiP2pManager.GroupCreationFailureReasonUserRejected = Android.Net.Wifi.P2p.WifiP2pCreationFailureReason.UserRejected -> Android.Net.Wifi.P2p.WifiP2pCreationFailureReason
const Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pScanFull = Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan.Full -> Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan
const Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pScanSingleFreq = Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan.SingleFreq -> Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan
const Android.Net.Wifi.P2p.WifiP2pManager.WifiP2pScanSocial = Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan.Social -> Android.Net.Wifi.P2p.WifiP2pManagerWifiP2pScan
const Android.Net.Wifi.Rtt.WifiRttManager.CharacteristicsKeyBooleanNtbInitiator = "key_ntb_initiator" -> string!
const Android.Net.Wifi.WifiManager.FlagSendDhcpHostnameRestrictionOpen = Android.Net.Wifi.SendDhcpHostnameRestriction.Open -> Android.Net.Wifi.SendDhcpHostnameRestriction
const Android.Net.Wifi.WifiManager.FlagSendDhcpHostnameRestrictionSecure = Android.Net.Wifi.SendDhcpHostnameRestriction.Secure -> Android.Net.Wifi.SendDhcpHostnameRestriction
const Android.Net.Wifi.WifiManager.RoamingModeAggressive = Android.Net.Wifi.RoamingMode.Aggressive -> Android.Net.Wifi.RoamingMode
const Android.Net.Wifi.WifiManager.RoamingModeNone = Android.Net.Wifi.RoamingMode.None -> Android.Net.Wifi.RoamingMode
const Android.Net.Wifi.WifiManager.RoamingModeNormal = Android.Net.Wifi.RoamingMode.Normal -> Android.Net.Wifi.RoamingMode
const Android.Nfc.CardEmulators.PollingFrame.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Nfc.CardEmulators.PollingFrame.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Nfc.CardEmulators.PollingFrame.PollingLoopTypeA = Android.Nfc.CardEmulators.PollingLoopType.A -> Android.Nfc.CardEmulators.PollingLoopType
const Android.Nfc.CardEmulators.PollingFrame.PollingLoopTypeB = Android.Nfc.CardEmulators.PollingLoopType.B -> Android.Nfc.CardEmulators.PollingLoopType
const Android.Nfc.CardEmulators.PollingFrame.PollingLoopTypeF = Android.Nfc.CardEmulators.PollingLoopType.F -> Android.Nfc.CardEmulators.PollingLoopType
const Android.Nfc.CardEmulators.PollingFrame.PollingLoopTypeOff = Android.Nfc.CardEmulators.PollingLoopType.Off -> Android.Nfc.CardEmulators.PollingLoopType
const Android.Nfc.CardEmulators.PollingFrame.PollingLoopTypeOn = Android.Nfc.CardEmulators.PollingLoopType.On -> Android.Nfc.CardEmulators.PollingLoopType
const Android.Nfc.CardEmulators.PollingFrame.PollingLoopTypeUnknown = Android.Nfc.CardEmulators.PollingLoopType.Unknown -> Android.Nfc.CardEmulators.PollingLoopType
const Android.Nfc.NfcAdapter.FlagListenDisable = Android.Nfc.NfcListenFlags.Disable -> Android.Nfc.NfcListenFlags
const Android.Nfc.NfcAdapter.FlagListenKeep = Android.Nfc.NfcListenFlags.Keep -> Android.Nfc.NfcListenFlags
const Android.Nfc.NfcAdapter.FlagListenNfcPassiveA = Android.Nfc.NfcListenFlags.NfcPassiveA -> Android.Nfc.NfcListenFlags
const Android.Nfc.NfcAdapter.FlagListenNfcPassiveB = Android.Nfc.NfcListenFlags.NfcPassiveB -> Android.Nfc.NfcListenFlags
const Android.Nfc.NfcAdapter.FlagListenNfcPassiveF = Android.Nfc.NfcListenFlags.NfcPassiveF -> Android.Nfc.NfcListenFlags
const Android.Nfc.NfcAdapter.FlagReaderDisable = Android.Nfc.NfcReaderFlags.Disable -> Android.Nfc.NfcReaderFlags
const Android.Nfc.NfcAdapter.FlagReaderKeep = Android.Nfc.NfcReaderFlags.Keep -> Android.Nfc.NfcReaderFlags
const Android.Opengl.GLES10.GlClearConst = 5376 -> int
const Android.Opengl.GLES10.GlCullFaceConst = 2884 -> int
const Android.Opengl.GLES10.GlPointSizeConst = 2833 -> int
const Android.Opengl.GLES10.GlSampleCoverageConst = 32928 -> int
const Android.Opengl.GLES20.GlActiveTextureConst = 34016 -> int
const Android.Opengl.GLES20.GlBlendColorConst = 32773 -> int
const Android.Opengl.GLES20.GlBlendEquationConst = 32777 -> int
const Android.Opengl.GLES20.GlCullFaceConst = 2884 -> int
const Android.Opengl.GLES20.GlDepthFuncConst = 2932 -> int
const Android.Opengl.GLES20.GlFrontFaceConst = 2886 -> int
const Android.Opengl.GLES20.GlLineWidthConst = 2849 -> int
const Android.Opengl.GLES20.GlSampleCoverageConst = 32928 -> int
const Android.Opengl.GLES20.GlStencilFuncConst = 2962 -> int
const Android.Opengl.GLES20.GlViewPortConst = 2978 -> int
const Android.Opengl.GLES30.GlReadBufferConst = 3074 -> int
const Android.Opengl.GLES30.GlTransformFeedbackVaryingsConst = 35971 -> int
const Android.Opengl.GLES30.GlUniformBlockBindingConst = 35391 -> int
const Android.Opengl.GLES31.GlVertexAttribBindingConst = 33492 -> int
const Android.Opengl.GLES31.GlVertexBindingDivisorConst = 33494 -> int
const Android.Opengl.GLES32.GlPrimitiveBoundingBoxConst = 37566 -> int
const Android.OS.Build.VERSION_CODES.VanillaIceCream = Android.OS.BuildVersionCodes.VanillaIceCream -> Android.OS.BuildVersionCodes
const Android.OS.PowerMonitor.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.OS.PowerMonitor.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.OS.PowerMonitor.PowerMonitorTypeConsumer = Android.OS.PowerMonitorType.Consumer -> Android.OS.PowerMonitorType
const Android.OS.PowerMonitor.PowerMonitorTypeMeasurement = Android.OS.PowerMonitorType.Measurement -> Android.OS.PowerMonitorType
const Android.OS.PowerMonitorReadings.EnergyUnavailable = -1 -> int
const Android.OS.ProfilingManager.ProfilingTypeHeapProfile = Android.OS.ProfilingType.HeapProfile -> Android.OS.ProfilingType
const Android.OS.ProfilingManager.ProfilingTypeJavaHeapDump = Android.OS.ProfilingType.JavaHeapDump -> Android.OS.ProfilingType
const Android.OS.ProfilingManager.ProfilingTypeStackSampling = Android.OS.ProfilingType.StackSampling -> Android.OS.ProfilingType
const Android.OS.ProfilingManager.ProfilingTypeSystemTrace = Android.OS.ProfilingType.SystemTrace -> Android.OS.ProfilingType
const Android.OS.ProfilingResult.ErrorFailedExecuting = Android.OS.ProfilingResultError.FailedExecuting -> Android.OS.ProfilingResultError
const Android.OS.ProfilingResult.ErrorFailedInvalidRequest = Android.OS.ProfilingResultError.FailedInvalidRequest -> Android.OS.ProfilingResultError
const Android.OS.ProfilingResult.ErrorFailedNoDiskSpace = Android.OS.ProfilingResultError.FailedNoDiskSpace -> Android.OS.ProfilingResultError
const Android.OS.ProfilingResult.ErrorFailedPostProcessing = Android.OS.ProfilingResultError.FailedPostProcessing -> Android.OS.ProfilingResultError
const Android.OS.ProfilingResult.ErrorFailedProfilingInProgress = Android.OS.ProfilingResultError.FailedProfilingInProgress -> Android.OS.ProfilingResultError
const Android.OS.ProfilingResult.ErrorFailedRateLimitProcess = Android.OS.ProfilingResultError.FailedRateLimitProcess -> Android.OS.ProfilingResultError
const Android.OS.ProfilingResult.ErrorFailedRateLimitSystem = Android.OS.ProfilingResultError.FailedRateLimitSystem -> Android.OS.ProfilingResultError
const Android.OS.ProfilingResult.ErrorNone = Android.OS.ProfilingResultError.None -> Android.OS.ProfilingResultError
const Android.OS.ProfilingResult.ErrorUnknown = Android.OS.ProfilingResultError.Unknown -> Android.OS.ProfilingResultError
const Android.OS.ProfilingResult.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.OS.ProfilingResult.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.OS.SecurityStateManager.KeyKernelVersion = "kernel_version" -> string!
const Android.OS.SecurityStateManager.KeySystemSpl = "system_spl" -> string!
const Android.OS.SecurityStateManager.KeyVendorSpl = "vendor_spl" -> string!
const Android.OS.UserManager.DisallowAddPrivateProfile = "no_add_private_profile" -> string!
const Android.OS.UserManager.DisallowAssistContent = "no_assist_content" -> string!
const Android.OS.UserManager.DisallowNearFieldCommunicationRadio = "no_near_field_communication_radio" -> string!
const Android.OS.UserManager.DisallowSimGlobally = "no_sim_globally" -> string!
const Android.OS.UserManager.UserTypeProfileClone = "android.os.usertype.profile.CLONE" -> string!
const Android.OS.UserManager.UserTypeProfileManaged = "android.os.usertype.profile.MANAGED" -> string!
const Android.OS.UserManager.UserTypeProfilePrivate = "android.os.usertype.profile.PRIVATE" -> string!
const Android.Provider.CallLog.Calls.AssertedDisplayName = "asserted_display_name" -> string!
const Android.Provider.CallLog.Calls.IsBusinessCall = "is_business_call" -> string!
const Android.Provider.CloudMediaProviderContract.ExtraPageSize = "android.provider.extra.PAGE_SIZE" -> string!
const Android.Provider.E2eeContactKeysManager.E2eeContactKey.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Provider.E2eeContactKeysManager.E2eeContactKey.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Provider.E2eeContactKeysManager.E2eeSelfKey.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Provider.E2eeContactKeysManager.E2eeSelfKey.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Provider.E2eeContactKeysManager.VerificationStateUnverified = Android.Provider.E2eeContactKeysManagerVerificationState.Unverified -> Android.Provider.E2eeContactKeysManagerVerificationState
const Android.Provider.E2eeContactKeysManager.VerificationStateVerificationFailed = Android.Provider.E2eeContactKeysManagerVerificationState.VerificationFailed -> Android.Provider.E2eeContactKeysManagerVerificationState
const Android.Provider.E2eeContactKeysManager.VerificationStateVerified = Android.Provider.E2eeContactKeysManagerVerificationState.Verified -> Android.Provider.E2eeContactKeysManagerVerificationState
const Android.Provider.MediaStore.AccessMediaOwnerPackageNamePermission = "com.android.providers.media.permission.ACCESS_MEDIA_OWNER_PACKAGE_NAME" -> string!
const Android.Provider.MediaStore.ExtraPickImagesAccentColor = "android.provider.extra.PICK_IMAGES_ACCENT_COLOR" -> string!
const Android.Provider.MediaStore.ExtraPickImagesInOrder = "android.provider.extra.PICK_IMAGES_IN_ORDER" -> string!
const Android.Provider.MediaStore.ExtraPickImagesLaunchTab = "android.provider.extra.PICK_IMAGES_LAUNCH_TAB" -> string!
const Android.Provider.MediaStore.PickImagesTabAlbums = Android.Provider.MediaStorePickImagesTab.Albums -> Android.Provider.MediaStorePickImagesTab
const Android.Provider.MediaStore.PickImagesTabImages = Android.Provider.MediaStorePickImagesTab.Images -> Android.Provider.MediaStorePickImagesTab
const Android.Provider.MediaStore.QueryArgLatestSelectionOnly = "android:query-arg-latest-selection-only" -> string!
const Android.Provider.Settings.ActionAutomaticZenRuleSettings = "android.settings.AUTOMATIC_ZEN_RULE_SETTINGS" -> string!
const Android.Provider.Settings.ActionCredentialProvider = "android.settings.CREDENTIAL_PROVIDER" -> string!
const Android.Provider.Settings.ActionRequestMediaRoutingControl = "android.settings.REQUEST_MEDIA_ROUTING_CONTROL" -> string!
const Android.Provider.Settings.ActionSatelliteSetting = "android.settings.SATELLITE_SETTING" -> string!
const Android.Provider.Settings.ExtraAutomaticZenRuleId = "android.provider.extra.AUTOMATIC_ZEN_RULE_ID" -> string!
const Android.Provider.Telephony.Carriers.AlwaysOn = "always_on" -> string!
const Android.Provider.Telephony.Carriers.MtuV4 = "mtu_v4" -> string!
const Android.Provider.Telephony.Carriers.MtuV6 = "mtu_v6" -> string!
const Android.Provider.Telephony.Carriers.UserEditable = "user_editable" -> string!
const Android.Provider.Telephony.Carriers.UserVisible = "user_visible" -> string!
const Android.Resource.Attribute.Allow = 16844430 -> int
const Android.Resource.Attribute.AllowCrossUidActivitySwitchFromBelow = 16844449 -> int
const Android.Resource.Attribute.AutoTransact = 16844441 -> int
const Android.Resource.Attribute.ContentSensitivity = 16844446 -> int
const Android.Resource.Attribute.DefaultLocale = 16844424 -> int
const Android.Resource.Attribute.FragmentAdvancedPattern = 16844438 -> int
const Android.Resource.Attribute.FragmentPattern = 16844437 -> int
const Android.Resource.Attribute.FragmentPrefix = 16844436 -> int
const Android.Resource.Attribute.FragmentSuffix = 16844439 -> int
const Android.Resource.Attribute.Query = 16844431 -> int
const Android.Resource.Attribute.QueryAdvancedPattern = 16844434 -> int
const Android.Resource.Attribute.QueryPattern = 16844433 -> int
const Android.Resource.Attribute.QueryPrefix = 16844432 -> int
const Android.Resource.Attribute.QuerySuffix = 16844435 -> int
const Android.Resource.Attribute.RequireContentUriPermissionFromCaller = 16844443 -> int
const Android.Resource.Attribute.ShiftDrawingOffsetForStartOverhang = 16844450 -> int
const Android.Resource.Attribute.ShouldDefaultToObserveMode = 16844448 -> int
const Android.Resource.Attribute.SupportsConnectionlessStylusHandwriting = 16844447 -> int
const Android.Resource.Attribute.SystemUserOnly = 16844429 -> int
const Android.Resource.Attribute.UseBoundsForWidth = 16844440 -> int
const Android.Resource.Attribute.UseLocalePreferredLineHeightForMinimum = 16844445 -> int
const Android.Resource.Attribute.WindowIsFrameRatePowerSavingsBalanced = 16844451 -> int
const Android.Resource.Attribute.WindowOptOutEdgeToEdgeEnforcement = 16844442 -> int
const Android.Resource.Color.SystemError0 = 17170629 -> int
const Android.Resource.Color.SystemError10 = 17170630 -> int
const Android.Resource.Color.SystemError100 = 17170632 -> int
const Android.Resource.Color.SystemError1000 = 17170641 -> int
const Android.Resource.Color.SystemError200 = 17170633 -> int
const Android.Resource.Color.SystemError300 = 17170634 -> int
const Android.Resource.Color.SystemError400 = 17170635 -> int
const Android.Resource.Color.SystemError50 = 17170631 -> int
const Android.Resource.Color.SystemError500 = 17170636 -> int
const Android.Resource.Color.SystemError600 = 17170637 -> int
const Android.Resource.Color.SystemError700 = 17170638 -> int
const Android.Resource.Color.SystemError800 = 17170639 -> int
const Android.Resource.Color.SystemError900 = 17170640 -> int
const Android.Resource.Color.SystemOnSurfaceDisabled = 17170627 -> int
const Android.Resource.Color.SystemOutlineDisabled = 17170628 -> int
const Android.Resource.Color.SystemSurfaceDisabled = 17170626 -> int
const Android.Service.Chooser.ChooserResult.ChooserResultCopy = Android.Service.Chooser.ChooserResultValue.Copy -> Android.Service.Chooser.ChooserResultValue
const Android.Service.Chooser.ChooserResult.ChooserResultEdit = Android.Service.Chooser.ChooserResultValue.Edit -> Android.Service.Chooser.ChooserResultValue
const Android.Service.Chooser.ChooserResult.ChooserResultSelectedComponent = Android.Service.Chooser.ChooserResultValue.SelectedComponent -> Android.Service.Chooser.ChooserResultValue
const Android.Service.Chooser.ChooserResult.ChooserResultUnknown = Android.Service.Chooser.ChooserResultValue.Unknown -> Android.Service.Chooser.ChooserResultValue
const Android.Service.Chooser.ChooserResult.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Chooser.ChooserResult.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Chooser.IAdditionalContentContract.IColumns.Uri = "uri" -> string!
const Android.Service.Chooser.IAdditionalContentContract.ICursorExtraKeys.Position = "position" -> string!
const Android.Service.Chooser.IAdditionalContentContract.IMethodNames.OnSelectionChanged = "onSelectionChanged" -> string!
const Android.Service.Controls.ControlsProviderService.ControlsSurfaceActivityPanel = Android.Service.Controls.ControlsSurface.ActivityPanel -> Android.Service.Controls.ControlsSurface
const Android.Service.Controls.ControlsProviderService.ControlsSurfaceDream = Android.Service.Controls.ControlsSurface.Dream -> Android.Service.Controls.ControlsSurface
const Android.Service.Controls.ControlsProviderService.ExtraControlsSurface = "android.service.controls.extra.CONTROLS_SURFACE" -> string!
const Android.Service.Notification.Condition.SourceContext = Android.Service.Notification.ConditionSource.Context -> Android.Service.Notification.ConditionSource
const Android.Service.Notification.Condition.SourceSchedule = Android.Service.Notification.ConditionSource.Schedule -> Android.Service.Notification.ConditionSource
const Android.Service.Notification.Condition.SourceUnknown = Android.Service.Notification.ConditionSource.Unknown -> Android.Service.Notification.ConditionSource
const Android.Service.Notification.Condition.SourceUserAction = Android.Service.Notification.ConditionSource.UserAction -> Android.Service.Notification.ConditionSource
const Android.Service.Notification.ZenDeviceEffects.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Notification.ZenDeviceEffects.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Voice.VoiceInteractionSession.KeyForegroundActivities = "android.service.voice.FOREGROUND_ACTIVITIES" -> string!
const Android.Speech.RecognizerIntent.ExtraLanguageSwitchInitialActiveDurationTimeMillis = "android.speech.extra.LANGUAGE_SWITCH_INITIAL_ACTIVE_DURATION_TIME_MILLIS" -> string!
const Android.Speech.RecognizerIntent.ExtraLanguageSwitchMaxSwitches = "android.speech.extra.LANGUAGE_SWITCH_MAX_SWITCHES" -> string!
const Android.Telecom.Call.Details.PropertyIsTransactional = Android.Telecom.CallProperty.IsTransactional -> Android.Telecom.CallProperty
const Android.Telecom.Call.ExtraAssertedDisplayName = "android.telecom.extra.ASSERTED_DISPLAY_NAME" -> string!
const Android.Telecom.Call.ExtraIsBusinessCall = "android.telecom.extra.IS_BUSINESS_CALL" -> string!
const Android.Telecom.CallAttributes.SupportsVideoCalling = Android.Telecom.CallCapabilities.VideoCalling -> Android.Telecom.CallCapabilities
const Android.Telecom.TelecomManager.ExtraCallLogUri = "android.telecom.extra.CALL_LOG_URI" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.DomainCs = Android.Telephony.ImsEmergencyDomain.Cs -> Android.Telephony.ImsEmergencyDomain
const Android.Telephony.CarrierConfigManager.ImsEmergency.DomainPs3gpp = Android.Telephony.ImsEmergencyDomain.Ps3gpp -> Android.Telephony.ImsEmergencyDomain
const Android.Telephony.CarrierConfigManager.ImsEmergency.DomainPsNon3gpp = Android.Telephony.ImsEmergencyDomain.PsNon3gpp -> Android.Telephony.ImsEmergencyDomain
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyCrossStackRedialTimerSecInt = "imsemergency.cross_stack_redial_timer_sec_int" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyCallSetupTimerOnCurrentNetworkSecInt = "imsemergency.emergency_call_setup_timer_on_current_network_sec_int" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyCdmaPreferredNumbersStringArray = "imsemergency.emergency_cdma_preferred_numbers_string_array" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyDomainPreferenceIntArray = "imsemergency.emergency_domain_preference_int_array" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyDomainPreferenceRoamingIntArray = "imsemergency.emergency_domain_preference_roaming_int_array" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyLtePreferredAfterNrFailedBool = "imsemergency.emergency_lte_preferred_after_nr_failed_bool" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyNetworkScanTypeInt = "imsemergency.emergency_network_scan_type_int" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyOverCsRoamingSupportedAccessNetworkTypesIntArray = "imsemergency.emergency_over_cs_roaming_supported_access_network_types_int_array" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyOverCsSupportedAccessNetworkTypesIntArray = "imsemergency.emergency_over_cs_supported_access_network_types_int_array" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyOverImsRoamingSupported3gppNetworkTypesIntArray = "imsemergency.emergency_over_ims_roaming_supported_3gpp_network_types_int_array" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyOverImsSupported3gppNetworkTypesIntArray = "imsemergency.emergency_over_ims_supported_3gpp_network_types_int_array" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyRequiresImsRegistrationBool = "imsemergency.emergency_requires_ims_registration_bool" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyRequiresVolteEnabledBool = "imsemergency.emergency_requires_volte_enabled_bool" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyScanTimerSecInt = "imsemergency.emergency_scan_timer_sec_int" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyEmergencyVowifiRequiresConditionInt = "imsemergency.emergency_vowifi_requires_condition_int" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyMaximumCellularSearchTimerSecInt = "imsemergency.maximum_cellular_search_timer_sec_int" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyMaximumNumberOfEmergencyTriesOverVowifiInt = "imsemergency.maximum_number_of_emergency_tries_over_vowifi_int" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyPreferImsEmergencyWhenVoiceCallsOnCsBool = "imsemergency.prefer_ims_emergency_when_voice_calls_on_cs_bool" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyQuickCrossStackRedialTimerSecInt = "imsemergency.quick_cross_stack_redial_timer_sec_int" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyScanLimitedServiceAfterVolteFailureBool = "imsemergency.scan_limited_service_after_volte_failure_bool" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.KeyStartQuickCrossStackRedialTimerWhenRegisteredBool = "imsemergency.start_quick_cross_stack_redial_timer_when_registered_bool" -> string!
const Android.Telephony.CarrierConfigManager.ImsEmergency.RedialTimerDisabled = 0 -> int
const Android.Telephony.CarrierConfigManager.ImsEmergency.ScanTypeFullService = Android.Telephony.ImsEmergencyScanType.FullService -> Android.Telephony.ImsEmergencyScanType
const Android.Telephony.CarrierConfigManager.ImsEmergency.ScanTypeFullServiceFollowedByLimitedService = Android.Telephony.ImsEmergencyScanType.FullServiceFollowedByLimitedService -> Android.Telephony.ImsEmergencyScanType
const Android.Telephony.CarrierConfigManager.ImsEmergency.ScanTypeNoPreference = Android.Telephony.ImsEmergencyScanType.NoPreference -> Android.Telephony.ImsEmergencyScanType
const Android.Telephony.CarrierConfigManager.ImsEmergency.VowifiRequiresNone = Android.Telephony.ImsEmergencyVoWifiRequires.None -> Android.Telephony.ImsEmergencyVoWifiRequires
const Android.Telephony.CarrierConfigManager.ImsEmergency.VowifiRequiresSettingEnabled = Android.Telephony.ImsEmergencyVoWifiRequires.SettingEnabled -> Android.Telephony.ImsEmergencyVoWifiRequires
const Android.Telephony.CarrierConfigManager.ImsEmergency.VowifiRequiresValidEid = Android.Telephony.ImsEmergencyVoWifiRequires.ValidEid -> Android.Telephony.ImsEmergencyVoWifiRequires
const Android.Telephony.CarrierConfigManager.Iwlan.KeyChildSessionAesGcmKeySizeIntArray = "iwlan.child_session_aes_gcm_key_size_int_array" -> string!
const Android.Telephony.CarrierConfigManager.Iwlan.KeyIkeSessionAesGcmKeySizeIntArray = "iwlan.ike_session_encryption_aes_gcm_key_size_int_array" -> string!
const Android.Telephony.CarrierConfigManager.Iwlan.KeySupportedChildSessionAeadAlgorithmsIntArray = "iwlan.supported_child_session_aead_algorithms_int_array" -> string!
const Android.Telephony.CarrierConfigManager.Iwlan.KeySupportedIkeSessionAeadAlgorithmsIntArray = "iwlan.supported_ike_session_aead_algorithms_int_array" -> string!
const Android.Telephony.CarrierConfigManager.Iwlan.KeySupportsChildSessionMultipleSaProposalsBool = "iwlan.supports_child_session_multiple_sa_proposals_bool" -> string!
const Android.Telephony.CarrierConfigManager.Iwlan.KeySupportsIkeSessionMultipleSaProposalsBool = "iwlan.supports_ike_session_multiple_sa_proposals_bool" -> string!
const Android.Telephony.CarrierConfigManager.KeyCarrierSupportedSatelliteServicesPerProviderBundle = "carrier_supported_satellite_services_per_provider_bundle" -> string!
const Android.Telephony.CarrierConfigManager.KeyCellularServiceCapabilitiesIntArray = "cellular_service_capabilities_int_array" -> string!
const Android.Telephony.CarrierConfigManager.KeyNtnLteRsrpThresholdsIntArray = "ntn_lte_rsrp_thresholds_int_array" -> string!
const Android.Telephony.CarrierConfigManager.KeyNtnLteRsrqThresholdsIntArray = "ntn_lte_rsrq_thresholds_int_array" -> string!
const Android.Telephony.CarrierConfigManager.KeyNtnLteRssnrThresholdsIntArray = "ntn_lte_rssnr_thresholds_int_array" -> string!
const Android.Telephony.CarrierConfigManager.KeyParametersUsedForNtnLteSignalBarInt = "parameters_used_for_ntn_lte_signal_bar_int" -> string!
const Android.Telephony.CarrierConfigManager.KeyPrefer3gVisibilityBool = "prefer_3g_visibility_bool" -> string!
const Android.Telephony.CarrierConfigManager.KeySatelliteAttachSupportedBool = "satellite_attach_supported_bool" -> string!
const Android.Telephony.CarrierConfigManager.KeySatelliteConnectionHysteresisSecInt = "satellite_connection_hysteresis_sec_int" -> string!
const Android.Telephony.CarrierConfigManager.KeySatelliteEntitlementStatusRefreshDaysInt = "satellite_entitlement_status_refresh_days_int" -> string!
const Android.Telephony.CarrierConfigManager.KeySatelliteEntitlementSupportedBool = "satellite_entitlement_supported_bool" -> string!
const Android.Telephony.CarrierConfigManager.KeyShowRoamingIndicatorBool = "show_roaming_indicator_bool" -> string!
const Android.Telephony.CarrierConfigManager.KeySupportsBusinessCallComposerBool = "supports_business_call_composer_bool" -> string!
const Android.Telephony.Data.ApnSetting.TypeRcs = Android.Telephony.Data.ApnType.Rcs -> Android.Telephony.Data.ApnType
const Android.Telephony.DisconnectCause.SatelliteEnabled = Android.Telephony.CallDisconnectCause.SatelliteEnabled -> Android.Telephony.CallDisconnectCause
const Android.Telephony.Euicc.EuiccManager.EuiccMemoryFieldUnavailable = -1 -> long
const Android.Telephony.Ims.Feature.MmTelFeature.MmTelCapabilities.CapabilityTypeCallComposerBusinessOnly = Android.Telephony.Ims.Feature.MmTelCapabilityType.CallComposerBusinessOnly -> Android.Telephony.Ims.Feature.MmTelCapabilityType
const Android.Telephony.NetworkRegistrationInfo.ServiceTypeMms = Android.Telephony.NetworkRegistrationInfoServiceType.Mms -> Android.Telephony.NetworkRegistrationInfoServiceType
const Android.Telephony.PreciseDataConnectionState.NetworkValidationFailure = Android.Telephony.PreciseDataConnectionStateNetworkValidation.Failure -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
const Android.Telephony.PreciseDataConnectionState.NetworkValidationInProgress = Android.Telephony.PreciseDataConnectionStateNetworkValidation.InProgress -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
const Android.Telephony.PreciseDataConnectionState.NetworkValidationNotRequested = Android.Telephony.PreciseDataConnectionStateNetworkValidation.NotRequested -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
const Android.Telephony.PreciseDataConnectionState.NetworkValidationSuccess = Android.Telephony.PreciseDataConnectionStateNetworkValidation.Success -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
const Android.Telephony.PreciseDataConnectionState.NetworkValidationUnsupported = Android.Telephony.PreciseDataConnectionStateNetworkValidation.Unsupported -> Android.Telephony.PreciseDataConnectionStateNetworkValidation
const Android.Telephony.SmsManager.MmsErrorMmsDisabledByCarrier = Android.Telephony.MmsError.MmsDisabledByCarrier -> Android.Telephony.MmsError
const Android.Telephony.SubscriptionManager.ServiceCapabilityData = Android.Telephony.ServiceCapabilityType.Data -> Android.Telephony.ServiceCapabilityType
const Android.Telephony.SubscriptionManager.ServiceCapabilitySms = Android.Telephony.ServiceCapabilityType.Sms -> Android.Telephony.ServiceCapabilityType
const Android.Telephony.SubscriptionManager.ServiceCapabilityVoice = Android.Telephony.ServiceCapabilityType.Voice -> Android.Telephony.ServiceCapabilityType
const Android.Telephony.TelephonyManager.ActionResetMobileNetworkSettings = "android.telephony.action.RESET_MOBILE_NETWORK_SETTINGS" -> string!
const Android.Telephony.TelephonyManager.CallComposerStatusBusinessOnly = Android.Telephony.CallComposerStatus.BusinessOnly -> Android.Telephony.CallComposerStatus
const Android.Telephony.TelephonyManager.EventDisplayEmergencyMessage = "android.telephony.event.DISPLAY_EMERGENCY_MESSAGE" -> string!
const Android.Telephony.TelephonyManager.ExtraEmergencyCallToSatelliteHandoverType = "android.telephony.extra.EMERGENCY_CALL_TO_SATELLITE_HANDOVER_TYPE" -> string!
const Android.Telephony.TelephonyManager.ExtraEmergencyCallToSatelliteLaunchIntent = "android.telephony.extra.EMERGENCY_CALL_TO_SATELLITE_LAUNCH_INTENT" -> string!
const Android.Telephony.TelephonyManager.PurchasePremiumCapabilityResultUserDisabled = Android.Telephony.PurchasePremiumCapabilityResult.UserDisabled -> Android.Telephony.PurchasePremiumCapabilityResult
const Android.Text.Layout.JustificationModeInterCharacter = Android.Text.JustificationMode.InterCharacter -> Android.Text.JustificationMode
const Android.Text.Style.LineBreakConfigSpan.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Text.Style.LineBreakConfigSpan.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Util.DisplayMetrics.Density390 = Android.Util.DisplayMetricsDensity.D390 -> Android.Util.DisplayMetricsDensity
const Android.Views.Accessibility.AccessibilityNodeInfo.ActionArgumentScrollAmountFloat = "android.view.accessibility.action.ARGUMENT_SCROLL_AMOUNT_FLOAT" -> string!
const Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Undefined = -1 -> int
const Android.Views.InputMethods.InputMethodManager.HandwritingDelegateFlagHomeDelegatorAllowed = Android.Views.InputMethods.HandwritingDelegateFlag.HomeDelegatorAllowed -> Android.Views.InputMethods.HandwritingDelegateFlag
const Android.Views.IWindowManager.PropertyCompatAllowIgnoringOrientationRequestWhenLoopDetected = "android.window.PROPERTY_COMPAT_ALLOW_IGNORING_ORIENTATION_REQUEST_WHEN_LOOP_DETECTED" -> string!
const Android.Views.IWindowManager.PropertyCompatAllowMinAspectRatioOverride = "android.window.PROPERTY_COMPAT_ALLOW_MIN_ASPECT_RATIO_OVERRIDE" -> string!
const Android.Views.IWindowManager.PropertyCompatAllowResizeableActivityOverrides = "android.window.PROPERTY_COMPAT_ALLOW_RESIZEABLE_ACTIVITY_OVERRIDES" -> string!
const Android.Views.IWindowManager.PropertyCompatAllowSmallCoverScreen = "android.window.PROPERTY_COMPAT_ALLOW_SMALL_COVER_SCREEN" -> string!
const Android.Views.IWindowManager.PropertyCompatAllowUserAspectRatioFullscreenOverride = "android.window.PROPERTY_COMPAT_ALLOW_USER_ASPECT_RATIO_FULLSCREEN_OVERRIDE" -> string!
const Android.Views.IWindowManager.PropertyCompatAllowUserAspectRatioOverride = "android.window.PROPERTY_COMPAT_ALLOW_USER_ASPECT_RATIO_OVERRIDE" -> string!
const Android.Views.IWindowManager.PropertySupportsMultiInstanceSystemUi = "android.window.PROPERTY_SUPPORTS_MULTI_INSTANCE_SYSTEM_UI" -> string!
const Android.Views.KeyEvent.KeycodeEmojiPicker = Android.Views.Keycode.EmojiPicker -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeScreenshot = Android.Views.Keycode.Screenshot -> Android.Views.Keycode
const Android.Views.View.ContentSensitivityAuto = Android.Views.ViewContentSensitivity.Auto -> Android.Views.ViewContentSensitivity
const Android.Views.View.ContentSensitivityNotSensitive = Android.Views.ViewContentSensitivity.NotSensitive -> Android.Views.ViewContentSensitivity
const Android.Views.View.ContentSensitivitySensitive = Android.Views.ViewContentSensitivity.Sensitive -> Android.Views.ViewContentSensitivity
const Android.Views.View.DragFlagGlobalSameApplication = Android.Views.DragFlags.GlobalSameApplication -> Android.Views.DragFlags
const Android.Views.View.DragFlagStartIntentSenderOnUnhandledDrag = Android.Views.DragFlags.StartIntentSenderOnUnhandledDrag -> Android.Views.DragFlags
const Android.Views.View.RequestedFrameRateCategoryDefault = NaN -> float
const Android.Views.View.RequestedFrameRateCategoryHigh = -4 -> float
const Android.Views.View.RequestedFrameRateCategoryLow = -2 -> float
const Android.Views.View.RequestedFrameRateCategoryNoPreference = -1 -> float
const Android.Views.View.RequestedFrameRateCategoryNormal = -3 -> float
const Android.Views.WindowManager.CompatSmallCoverScreenOptIn = Android.Views.CompatSmallCoverScreen.OptIn -> Android.Views.CompatSmallCoverScreen
const Android.Views.WindowManager.PropertyCompatAllowIgnoringOrientationRequestWhenLoopDetected = "android.window.PROPERTY_COMPAT_ALLOW_IGNORING_ORIENTATION_REQUEST_WHEN_LOOP_DETECTED" -> string!
const Android.Views.WindowManager.PropertyCompatAllowMinAspectRatioOverride = "android.window.PROPERTY_COMPAT_ALLOW_MIN_ASPECT_RATIO_OVERRIDE" -> string!
const Android.Views.WindowManager.PropertyCompatAllowResizeableActivityOverrides = "android.window.PROPERTY_COMPAT_ALLOW_RESIZEABLE_ACTIVITY_OVERRIDES" -> string!
const Android.Views.WindowManager.PropertyCompatAllowSmallCoverScreen = "android.window.PROPERTY_COMPAT_ALLOW_SMALL_COVER_SCREEN" -> string!
const Android.Views.WindowManager.PropertyCompatAllowUserAspectRatioFullscreenOverride = "android.window.PROPERTY_COMPAT_ALLOW_USER_ASPECT_RATIO_FULLSCREEN_OVERRIDE" -> string!
const Android.Views.WindowManager.PropertyCompatAllowUserAspectRatioOverride = "android.window.PROPERTY_COMPAT_ALLOW_USER_ASPECT_RATIO_OVERRIDE" -> string!
const Android.Views.WindowManager.PropertySupportsMultiInstanceSystemUi = "android.window.PROPERTY_SUPPORTS_MULTI_INSTANCE_SYSTEM_UI" -> string!
const Android.Views.WindowManager.ScreenRecordingStateNotVisible = Android.Views.ScreenRecordingState.NotVisible -> Android.Views.ScreenRecordingState
const Android.Views.WindowManager.ScreenRecordingStateVisible = Android.Views.ScreenRecordingState.Visible -> Android.Views.ScreenRecordingState
const Android.Window.InputTransferToken.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Window.InputTransferToken.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Window.TrustedPresentationThresholds.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Window.TrustedPresentationThresholds.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Java.Lang.Double.Precision = 53 -> int
const Java.Lang.Float.Precision = 24 -> int
const Java.Lang.Math.Tau = 6.283185307179586 -> double
const Java.Lang.StrictMath.Tau = 6.283185307179586 -> double
const Java.Security.Spec.PSSParameterSpec.TrailerFieldBc = 1 -> int
Java.IO.Console.Charset() -> Java.Nio.Charset.Charset?
Java.Lang.ICharSequence.IsEmpty.get -> bool
Java.Nio.MappedByteBuffer.Force(int index, int length) -> Java.Nio.MappedByteBuffer?
Java.Nio.MappedByteBuffer.ForceAsync(int index, int length) -> System.Threading.Tasks.Task<Java.Nio.MappedByteBuffer?>!
Java.Security.DrbgParameters
Java.Security.DrbgParameters.Capability
Java.Security.DrbgParameters.Capability.SupportsPredictionResistance() -> bool
Java.Security.DrbgParameters.Capability.SupportsReseeding() -> bool
Java.Security.DrbgParameters.DrbgParameters(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Java.Security.DrbgParameters.Instantiation
Java.Security.DrbgParameters.Instantiation.Capability.get -> Java.Security.DrbgParameters.Capability?
Java.Security.DrbgParameters.Instantiation.GetPersonalizationString() -> byte[]?
Java.Security.DrbgParameters.Instantiation.Strength.get -> int
Java.Security.DrbgParameters.NextBytes
Java.Security.DrbgParameters.NextBytes.GetAdditionalInput() -> byte[]?
Java.Security.DrbgParameters.NextBytes.PredictionResistance.get -> bool
Java.Security.DrbgParameters.NextBytes.Strength.get -> int
Java.Security.DrbgParameters.Reseed
Java.Security.DrbgParameters.Reseed.GetAdditionalInput() -> byte[]?
Java.Security.DrbgParameters.Reseed.PredictionResistance.get -> bool
Java.Security.Interfaces.IRSAKey.Params.get -> Java.Security.Spec.IAlgorithmParameterSpec?
Java.Security.ISecureRandomParameters
Java.Security.SecureRandomSpi.SecureRandomSpi(Java.Security.ISecureRandomParameters? params) -> void
Java.Security.Spec.DSAGenParameterSpec
Java.Security.Spec.DSAGenParameterSpec.DSAGenParameterSpec(int primePLen, int subprimeQLen) -> void
Java.Security.Spec.DSAGenParameterSpec.DSAGenParameterSpec(int primePLen, int subprimeQLen, int seedLen) -> void
Java.Security.Spec.DSAGenParameterSpec.PrimePLength.get -> int
Java.Security.Spec.DSAGenParameterSpec.SeedLength.get -> int
Java.Security.Spec.DSAGenParameterSpec.SubprimeQLength.get -> int
Java.Security.Spec.EdDSAParameterSpec
Java.Security.Spec.EdDSAParameterSpec.EdDSAParameterSpec(bool prehash) -> void
Java.Security.Spec.EdDSAParameterSpec.EdDSAParameterSpec(bool prehash, byte[]? context) -> void
Java.Security.Spec.EdDSAParameterSpec.EdDSAParameterSpec(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Java.Security.Spec.EncodedKeySpec.EncodedKeySpec(byte[]? encodedKey, string? algorithm) -> void
Java.Security.Spec.PKCS8EncodedKeySpec.PKCS8EncodedKeySpec(byte[]? encodedKey, string? algorithm) -> void
Java.Security.Spec.RSAKeyGenParameterSpec.RSAKeyGenParameterSpec(int keysize, Java.Math.BigInteger? publicExponent, Java.Security.Spec.IAlgorithmParameterSpec? keyParams) -> void
Java.Security.Spec.RSAMultiPrimePrivateCrtKeySpec.RSAMultiPrimePrivateCrtKeySpec(Java.Math.BigInteger? modulus, Java.Math.BigInteger? publicExponent, Java.Math.BigInteger? privateExponent, Java.Math.BigInteger? primeP, Java.Math.BigInteger? primeQ, Java.Math.BigInteger? primeExponentP, Java.Math.BigInteger? primeExponentQ, Java.Math.BigInteger? crtCoefficient, Java.Security.Spec.RSAOtherPrimeInfo![]? otherPrimeInfo, Java.Security.Spec.IAlgorithmParameterSpec? keyParams) -> void
Java.Security.Spec.RSAPrivateCrtKeySpec.RSAPrivateCrtKeySpec(Java.Math.BigInteger? modulus, Java.Math.BigInteger? publicExponent, Java.Math.BigInteger? privateExponent, Java.Math.BigInteger? primeP, Java.Math.BigInteger? primeQ, Java.Math.BigInteger? primeExponentP, Java.Math.BigInteger? primeExponentQ, Java.Math.BigInteger? crtCoefficient, Java.Security.Spec.IAlgorithmParameterSpec? keyParams) -> void
Java.Security.Spec.RSAPrivateKeySpec.RSAPrivateKeySpec(Java.Math.BigInteger? modulus, Java.Math.BigInteger? privateExponent, Java.Security.Spec.IAlgorithmParameterSpec? params) -> void
Java.Security.Spec.RSAPublicKeySpec.RSAPublicKeySpec(Java.Math.BigInteger? modulus, Java.Math.BigInteger? publicExponent, Java.Security.Spec.IAlgorithmParameterSpec? params) -> void
Java.Security.Spec.X509EncodedKeySpec.X509EncodedKeySpec(byte[]? encodedKey, string? algorithm) -> void
Java.Util.IList.First.get -> Java.Lang.Object?
Java.Util.IList.Last.get -> Java.Lang.Object?
Java.Util.IMapEntry.CopyOf(Java.Util.IMapEntry! e) -> Java.Util.IMapEntry!
Java.Util.ISequencedCollection
Java.Util.ISequencedCollection.AddFirst(Java.Lang.Object? e) -> void
Java.Util.ISequencedCollection.AddLast(Java.Lang.Object? e) -> void
Java.Util.ISequencedCollection.GetFirst() -> Java.Lang.Object?
Java.Util.ISequencedCollection.GetLast() -> Java.Lang.Object?
Java.Util.ISequencedCollection.RemoveFirst() -> Java.Lang.Object?
Java.Util.ISequencedCollection.RemoveLast() -> Java.Lang.Object?
Java.Util.ISequencedCollection.Reversed() -> Java.Util.ISequencedCollection?
Java.Util.ISequencedMap
Java.Util.ISequencedMap.FirstEntry() -> Java.Util.IMapEntry?
Java.Util.ISequencedMap.LastEntry() -> Java.Util.IMapEntry?
Java.Util.ISequencedMap.PollFirstEntry() -> Java.Util.IMapEntry?
Java.Util.ISequencedMap.PollLastEntry() -> Java.Util.IMapEntry?
Java.Util.ISequencedMap.PutFirst(Java.Lang.Object? k, Java.Lang.Object? v) -> Java.Lang.Object?
Java.Util.ISequencedMap.PutLast(Java.Lang.Object? k, Java.Lang.Object? v) -> Java.Lang.Object?
Java.Util.ISequencedMap.Reversed() -> Java.Util.ISequencedMap?
Java.Util.ISequencedMap.SequencedEntrySet() -> Java.Util.ISequencedSet?
Java.Util.ISequencedMap.SequencedKeySet() -> Java.Util.ISequencedSet?
Java.Util.ISequencedMap.SequencedValues() -> Java.Util.ISequencedCollection?
Java.Util.ISequencedSet
Java.Util.Properties.Properties(int initialCapacity) -> void
Java.Util.RandomGenerators.IRandomGenerator
Java.Util.RandomGenerators.IRandomGenerator.Default.get -> Java.Util.RandomGenerators.IRandomGenerator?
Java.Util.RandomGenerators.IRandomGenerator.IsDeprecated.get -> bool
Java.Util.RandomGenerators.IRandomGenerator.NextBoolean() -> bool
Java.Util.RandomGenerators.IRandomGenerator.NextBytes(byte[]? bytes) -> void
Java.Util.RandomGenerators.IRandomGenerator.NextDouble() -> double
Java.Util.RandomGenerators.IRandomGenerator.NextDouble(double bound) -> double
Java.Util.RandomGenerators.IRandomGenerator.NextDouble(double origin, double bound) -> double
Java.Util.RandomGenerators.IRandomGenerator.NextExponential() -> double
Java.Util.RandomGenerators.IRandomGenerator.NextFloat() -> float
Java.Util.RandomGenerators.IRandomGenerator.NextFloat(float bound) -> float
Java.Util.RandomGenerators.IRandomGenerator.NextFloat(float origin, float bound) -> float
Java.Util.RandomGenerators.IRandomGenerator.NextGaussian() -> double
Java.Util.RandomGenerators.IRandomGenerator.NextGaussian(double mean, double stddev) -> double
Java.Util.RandomGenerators.IRandomGenerator.NextInt() -> int
Java.Util.RandomGenerators.IRandomGenerator.NextInt(int bound) -> int
Java.Util.RandomGenerators.IRandomGenerator.NextInt(int origin, int bound) -> int
Java.Util.RandomGenerators.IRandomGenerator.NextLong() -> long
Java.Util.RandomGenerators.IRandomGenerator.NextLong(long bound) -> long
Java.Util.RandomGenerators.IRandomGenerator.NextLong(long origin, long bound) -> long
Java.Util.RandomGenerators.IRandomGenerator.Of(string? name) -> Java.Util.RandomGenerators.IRandomGenerator?
Java.Util.RandomGenerators.RandomGeneratorFactory
Java.Util.RandomGenerators.RandomGeneratorFactory.Create() -> Java.Lang.Object?
Java.Util.RandomGenerators.RandomGeneratorFactory.Create(byte[]? seed) -> Java.Lang.Object?
Java.Util.RandomGenerators.RandomGeneratorFactory.Create(long seed) -> Java.Lang.Object?
Java.Util.RandomGenerators.RandomGeneratorFactory.Equidistribution() -> int
Java.Util.RandomGenerators.RandomGeneratorFactory.Group() -> string?
Java.Util.RandomGenerators.RandomGeneratorFactory.IsArbitrarilyJumpable.get -> bool
Java.Util.RandomGenerators.RandomGeneratorFactory.IsDeprecated.get -> bool
Java.Util.RandomGenerators.RandomGeneratorFactory.IsHardware.get -> bool
Java.Util.RandomGenerators.RandomGeneratorFactory.IsJumpable.get -> bool
Java.Util.RandomGenerators.RandomGeneratorFactory.IsLeapable.get -> bool
Java.Util.RandomGenerators.RandomGeneratorFactory.IsSplittable.get -> bool
Java.Util.RandomGenerators.RandomGeneratorFactory.IsStatistical.get -> bool
Java.Util.RandomGenerators.RandomGeneratorFactory.IsStochastic.get -> bool
Java.Util.RandomGenerators.RandomGeneratorFactory.IsStreamable.get -> bool
Java.Util.RandomGenerators.RandomGeneratorFactory.Name() -> string?
Java.Util.RandomGenerators.RandomGeneratorFactory.Period() -> Java.Math.BigInteger?
Java.Util.RandomGenerators.RandomGeneratorFactory.StateBits() -> int
Java.Util.ServiceLoader.IProvider
Java.Util.ServiceLoader.IProvider.Get() -> Java.Lang.Object?
Java.Util.ServiceLoader.IProvider.Type() -> Java.Lang.Class?
Java.Util.Zip.Deflater.DeflateAsync(Java.Nio.ByteBuffer? output) -> System.Threading.Tasks.Task<int>!
Java.Util.Zip.Deflater.DeflateAsync(Java.Nio.ByteBuffer? output, int flush) -> System.Threading.Tasks.Task<int>!
Java.Util.Zip.Inflater.InflateAsync(Java.Nio.ByteBuffer? output) -> System.Threading.Tasks.Task<int>!
Javax.Crypto.Spec.ChaCha20ParameterSpec
Javax.Crypto.Spec.ChaCha20ParameterSpec.ChaCha20ParameterSpec(byte[]? nonce, int counter) -> void
Javax.Crypto.Spec.ChaCha20ParameterSpec.Counter.get -> int
Javax.Crypto.Spec.ChaCha20ParameterSpec.GetNonce() -> byte[]?
Javax.Security.Auth.X500.X500PrivateCredential
Javax.Security.Auth.X500.X500PrivateCredential.Alias.get -> string?
Javax.Security.Auth.X500.X500PrivateCredential.Certificate.get -> Java.Security.Cert.X509Certificate?
Javax.Security.Auth.X500.X500PrivateCredential.Destroy() -> void
Javax.Security.Auth.X500.X500PrivateCredential.IsDestroyed.get -> bool
Javax.Security.Auth.X500.X500PrivateCredential.PrivateKey.get -> Java.Security.IPrivateKey?
Javax.Security.Auth.X500.X500PrivateCredential.X500PrivateCredential(Java.Security.Cert.X509Certificate? cert, Java.Security.IPrivateKey? key) -> void
Javax.Security.Auth.X500.X500PrivateCredential.X500PrivateCredential(Java.Security.Cert.X509Certificate? cert, Java.Security.IPrivateKey? key, string? alias) -> void
override Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest.ThresholdClass.get -> nint
override Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest.ThresholdType.get -> System.Type!
override Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.AdWithBid.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.DecisionLogic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.GetAdSelectionDataOutcome.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.GetAdSelectionDataRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.PerBuyerDecisionLogic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.PersistAdSelectionResultRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.PersistAdSelectionResultRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.RemoveAdSelectionFromOutcomesOverrideRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.RemoveAdSelectionFromOutcomesOverrideRequest.ThresholdClass.get -> nint
override Android.AdServices.AdSelection.RemoveAdSelectionFromOutcomesOverrideRequest.ThresholdType.get -> System.Type!
override Android.AdServices.AdSelection.ReportEventRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.ReportEventRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.ReportEventRequest.ThresholdClass.get -> nint
override Android.AdServices.AdSelection.ReportEventRequest.ThresholdType.get -> System.Type!
override Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.ThresholdClass.get -> nint
override Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.ThresholdType.get -> System.Type!
override Android.AdServices.AdSelection.SignedContextualAds.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.SignedContextualAds.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.ThresholdClass.get -> nint
override Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.ThresholdType.get -> System.Type!
override Android.AdServices.Common.AdFilters.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Common.AdFilters.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Common.AppInstallFilters.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Common.AppInstallFilters.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Common.FrequencyCapFilters.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Common.FrequencyCapFilters.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Common.KeyedFrequencyCap.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Common.KeyedFrequencyCap.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.CustomAudiences.PartialCustomAudience.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.CustomAudiences.PartialCustomAudience.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Measurement.SourceRegistrationRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Measurement.SourceRegistrationRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.AppInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.DownloadCompletedInput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.DownloadCompletedOutput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.EventInput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.EventLogRecord.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.EventLogRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.EventOutput.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.EventOutput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.EventUrlProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.EventUrlProvider.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.EventUrlProvider.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.ExecuteInput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.ExecuteOutput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.FederatedComputeInput.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.FederatedComputeInput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.InferenceInput.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.InferenceInput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.InferenceInput.Params.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.InferenceInput.Params.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.InferenceInput.Params.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.InferenceInput.Params.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.InferenceOutput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.IsolatedService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.IsolatedService.OnBind(Android.Content.Intent! intent) -> Android.OS.IBinder?
override Android.AdServices.OnDevicePersonalization.IsolatedService.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.IsolatedService.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.IsolatedServiceException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.LogReader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.LogReader.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.LogReader.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.ModelManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.ModelManager.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.ModelManager.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ExecuteResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ExecuteResult.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ExecuteResult.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.RenderingConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.RenderingConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.RenderInput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.RenderOutput.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.RenderOutput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.RequestLogRecord.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.RequestLogRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.RequestToken.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.RequestToken.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.RequestToken.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.SurfacePackageToken.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.SurfacePackageToken.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.SurfacePackageToken.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.TrainingExamplesInput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.TrainingExamplesOutput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.TrainingInterval.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.TrainingInterval.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.UserData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.WebTriggerInput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.WebTriggerOutput.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.WebTriggerOutput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Signals.ProtectedSignalsManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Signals.ProtectedSignalsManager.ThresholdClass.get -> nint
override Android.AdServices.Signals.ProtectedSignalsManager.ThresholdType.get -> System.Type!
override Android.AdServices.Signals.UpdateSignalsRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Signals.UpdateSignalsRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Topics.EncryptedTopic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.ApplicationStartInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.EnterpriseGlobalSearchSession.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.EnterpriseGlobalSearchSession.ThresholdClass.get -> nint
override Android.App.AppSearch.EnterpriseGlobalSearchSession.ThresholdType.get -> System.Type!
override Android.App.AppSearch.SchemaVisibilityConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.SchemaVisibilityConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AutomaticZenRule.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.ComponentCaller.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Notification.TvExtender.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Usage.UsageEventsQuery.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Usage.UsageEventsQuery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Bluetooth.BluetoothCodecType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.ClipData.Item.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.PM.ArchivedActivityInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.PM.ArchivedPackageInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.PM.LauncherApps.ArchiveCompatibilityParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.PM.LauncherApps.ArchiveCompatibilityParams.ThresholdClass.get -> nint
override Android.Content.PM.LauncherApps.ArchiveCompatibilityParams.ThresholdType.get -> System.Type!
override Android.Content.PM.LauncherUserInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.PM.PackageInstaller.UnarchivalState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.UriRelativeFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.UriRelativeFilterGroup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Crypto.Hpke.XdhKeySpec.Format.get -> string!
override Android.Crypto.Hpke.XdhKeySpec.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Database.Sqlite.SQLiteRawStatement.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Matrix44.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Matrix44.ThresholdClass.get -> nint
override Android.Graphics.Matrix44.ThresholdType.get -> System.Type!
override Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Content.PdfPageImageContent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Content.PdfPageLinkContent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Content.PdfPageTextContent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.LoadParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.LoadParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Models.FormEditRecord.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Models.FormEditRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Models.FormWidgetInfo.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Models.FormWidgetInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Models.ListItem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Models.PageMatchBounds.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Models.Selection.PageSelection.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.Models.Selection.SelectionBoundary.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.PdfRendererPreV.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.PdfRendererPreV.Page.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.RenderParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.Pdf.RenderParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.Biometrics.PromptContentItemBulletedText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.Biometrics.PromptContentItemPlainText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.Biometrics.PromptVerticalListContentView.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.Biometrics.PromptVerticalListContentView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup.ThresholdClass.get -> nint
override Android.Hardware.Camera2.CameraDevice.CameraDeviceSetup.ThresholdType.get -> System.Type!
override Android.Hardware.Camera2.Params.LensIntrinsicsSample.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.OverlayProperties.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.ActiveCaloriesBurnedGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DistanceGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DistanceWithVariableRestGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.DurationGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.RepetitionsGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.StepsGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.ThresholdClass.get -> nint
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.ThresholdType.get -> System.Type!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.TotalCaloriesBurnedGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.UnknownGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExerciseCompletionGoal.UnspecifiedGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.AmrapGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.CadenceGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.HeartRateGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.PowerGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.RateOfPerceivedExertionGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.SpeedGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.ThresholdClass.get -> nint
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.ThresholdType.get -> System.Type!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.UnknownGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ExercisePerformanceGoal.WeightGoal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.PlannedExerciseBlock.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.PlannedExerciseBlock.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.PlannedExerciseSessionRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.PlannedExerciseStep.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.PlannedExerciseStep.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.SkinTemperatureRecord.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.SkinTemperatureRecord.Delta.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.SkinTemperatureRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.Units.TemperatureDelta.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Icu.Text.DisplayOptions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Icu.Text.DisplayOptions.Builder.ThresholdClass.get -> nint
override Android.Icu.Text.DisplayOptions.Builder.ThresholdType.get -> System.Type!
override Android.Icu.Text.DisplayOptions.Capitalization.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Icu.Text.DisplayOptions.DisplayLength.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Icu.Text.DisplayOptions.GrammaticalCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Icu.Text.DisplayOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Icu.Text.DisplayOptions.NameStyle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Icu.Text.DisplayOptions.NounClass.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Icu.Text.DisplayOptions.PluralCategory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Icu.Text.DisplayOptions.SubstituteHandling.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.LoudnessCodecController.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.LoudnessCodecController.ThresholdClass.get -> nint
override Android.Media.LoudnessCodecController.ThresholdType.get -> System.Type!
override Android.Media.MediaFormat.QpOffsetRect.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.MediaRouter2.ScanRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.MediaRouter2.ScanRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.MediaRouter2.ScanToken.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Metrics.EditingEndedEvent.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Metrics.EditingEndedEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Metrics.MediaItemInfo.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Metrics.MediaItemInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Midi.MidiUmpDeviceService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Midi.MidiUmpDeviceService.OnBind(Android.Content.Intent! intent) -> Android.OS.IBinder?
override Android.Media.Midi.MidiUmpDeviceService.ThresholdClass.get -> nint
override Android.Media.Midi.MidiUmpDeviceService.ThresholdType.get -> System.Type!
override Android.Net.IpSecTransformState.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.IpSecTransformState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Nsd.DiscoveryRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Nsd.DiscoveryRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.Rtt.RangingResult.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Nfc.CardEmulators.PollingFrame.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.PowerMonitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.PowerMonitorReadings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.ProfilingManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.ProfilingResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.SecurityStateManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.SecurityStateManager.ThresholdClass.get -> nint
override Android.OS.SecurityStateManager.ThresholdType.get -> System.Type!
override Android.OS.WorkDuration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.E2eeContactKeysManager.E2eeContactKey.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.E2eeContactKeysManager.E2eeSelfKey.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.E2eeContactKeysManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Chooser.ChooserResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Notification.ZenDeviceEffects.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Notification.ZenDeviceEffects.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.PersistentData.PersistentDataBlockManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.PersistentData.PersistentDataBlockManager.ThresholdClass.get -> nint
override Android.Service.PersistentData.PersistentDataBlockManager.ThresholdType.get -> System.Type!
override Android.Text.Layout.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Text.Style.LineBreakConfigSpan.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Views.Accessibility.AccessibilityNodeInfo.CollectionInfo.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Views.InputDevice.ViewBehavior.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Views.SurfaceControl.TransactionStats.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Widget.RemoteViews.DrawInstructions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Widget.RemoteViews.DrawInstructions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Window.InputTransferToken.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Window.TrustedPresentationThresholds.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Nio.MappedByteBuffer.Compact() -> Java.Nio.ByteBuffer?
override Java.Security.DrbgParameters.Capability.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Security.DrbgParameters.Instantiation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Security.DrbgParameters.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Security.DrbgParameters.NextBytes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Security.DrbgParameters.Reseed.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Security.DrbgParameters.ThresholdClass.get -> nint
override Java.Security.DrbgParameters.ThresholdType.get -> System.Type!
override Java.Security.Spec.DSAGenParameterSpec.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Security.Spec.EdDSAParameterSpec.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Security.Spec.EdDSAParameterSpec.ThresholdClass.get -> nint
override Java.Security.Spec.EdDSAParameterSpec.ThresholdType.get -> System.Type!
override Java.Util.RandomGenerators.RandomGeneratorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Javax.Crypto.Spec.ChaCha20ParameterSpec.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Javax.Security.Auth.X500.X500PrivateCredential.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Java.Lang.Invoke.VarHandle.ToString() -> string?
override sealed Java.Nio.MappedByteBuffer.Clear() -> Java.Nio.Buffer?
override sealed Java.Nio.MappedByteBuffer.Flip() -> Java.Nio.Buffer?
override sealed Java.Nio.MappedByteBuffer.Limit(int newLimit) -> Java.Nio.Buffer?
override sealed Java.Nio.MappedByteBuffer.Mark() -> Java.Nio.Buffer?
override sealed Java.Nio.MappedByteBuffer.Position(int newPosition) -> Java.Nio.Buffer?
override sealed Java.Nio.MappedByteBuffer.Reset() -> Java.Nio.Buffer?
override sealed Java.Nio.MappedByteBuffer.Rewind() -> Java.Nio.Buffer?
static Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.AdSelection.AdSelectionOutcome.NoOutcome.get -> Android.AdServices.AdSelection.AdSelectionOutcome!
static Android.AdServices.AdSelection.AdWithBid.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.AdSelection.DecisionLogic.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.AdSelection.PerBuyerDecisionLogic.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.AdSelection.PerBuyerDecisionLogic.Empty.get -> Android.AdServices.AdSelection.PerBuyerDecisionLogic!
static Android.AdServices.AdSelection.SignedContextualAds.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.Common.AdFilters.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.Common.AppInstallFilters.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.Common.FrequencyCapFilters.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.Common.KeyedFrequencyCap.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.CustomAudiences.PartialCustomAudience.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.Measurement.SourceRegistrationRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.OnDevicePersonalization.AppInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.OnDevicePersonalization.EventLogRecord.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.OnDevicePersonalization.RenderingConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.OnDevicePersonalization.RequestLogRecord.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.OnDevicePersonalization.TrainingExampleRecord.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.OnDevicePersonalization.UserData.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.Signals.ProtectedSignalsManager.Get(Android.Content.Context! context) -> Android.AdServices.Signals.ProtectedSignalsManager!
static Android.App.Admin.DevicePolicyManager.IsMtePolicyEnforced.get -> bool
static Android.App.ApplicationStartInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.AppSearchSchema.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.GetByDocumentIdRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.GetSchemaResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.JoinSpec.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.Observers.ObserverSpec.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.RemoveByDocumentIdRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.ReportUsageRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.SchemaVisibilityConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.SearchResult.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.SearchResult.MatchInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.SearchSpec.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.SearchSuggestionResult.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.SearchSuggestionSpec.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.SetSchemaResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.SetSchemaResponse.MigrationFailure.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.StorageInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.SdkSandbox.AppOwnedSdkSandboxInterface.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.Usage.UsageEventsQuery.Creator.get -> Android.OS.IParcelableCreator!
static Android.Bluetooth.BluetoothCodecType.Creator.get -> Android.OS.IParcelableCreator!
static Android.Content.PM.LauncherUserInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.Content.PM.PackageInstaller.UnarchivalState.CreateGenericErrorState(int unarchiveId) -> Android.Content.PM.PackageInstaller.UnarchivalState!
static Android.Content.PM.PackageInstaller.UnarchivalState.CreateInsufficientStorageState(int unarchiveId, long requiredStorageBytes, Android.App.PendingIntent? userActionIntent) -> Android.Content.PM.PackageInstaller.UnarchivalState!
static Android.Content.PM.PackageInstaller.UnarchivalState.CreateNoConnectivityState(int unarchiveId) -> Android.Content.PM.PackageInstaller.UnarchivalState!
static Android.Content.PM.PackageInstaller.UnarchivalState.CreateOkState(int unarchiveId) -> Android.Content.PM.PackageInstaller.UnarchivalState!
static Android.Content.PM.PackageInstaller.UnarchivalState.CreateUserActionRequiredState(int unarchiveId, Android.App.PendingIntent! userActionIntent) -> Android.Content.PM.PackageInstaller.UnarchivalState!
static Android.Content.Res.Resources.RegisterResourcePaths(string! uniqueId, Android.Content.PM.ApplicationInfo! appInfo) -> void
static Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Content.PdfPageGotoLinkContent.Destination.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Content.PdfPageImageContent.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Content.PdfPageLinkContent.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Content.PdfPageTextContent.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Models.FormEditRecord.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Models.FormWidgetInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Models.ListItem.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Models.PageMatchBounds.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Models.Selection.PageSelection.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Pdf.Models.Selection.SelectionBoundary.Creator.get -> Android.OS.IParcelableCreator!
static Android.Graphics.Text.LineBreakConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Hardware.Biometrics.PromptContentItemBulletedText.Creator.get -> Android.OS.IParcelableCreator!
static Android.Hardware.Biometrics.PromptContentItemPlainText.Creator.get -> Android.OS.IParcelableCreator!
static Android.Hardware.Biometrics.PromptContentViewWithMoreOptionsButton.Creator.get -> Android.OS.IParcelableCreator!
static Android.Hardware.Biometrics.PromptVerticalListContentView.Creator.get -> Android.OS.IParcelableCreator!
static Android.Hardware.Biometrics.PromptVerticalListContentView.MaxEachItemCharacterNumber.get -> int
static Android.Hardware.Biometrics.PromptVerticalListContentView.MaxItemCount.get -> int
static Android.Hardware.Camera2.CameraCharacteristics.ControlLowLightBoostInfoLuminanceRange.get -> Android.Hardware.Camera2.CameraCharacteristics.Key!
static Android.Hardware.Camera2.CameraCharacteristics.FlashSingleStrengthDefaultLevel.get -> Android.Hardware.Camera2.CameraCharacteristics.Key!
static Android.Hardware.Camera2.CameraCharacteristics.FlashSingleStrengthMaxLevel.get -> Android.Hardware.Camera2.CameraCharacteristics.Key!
static Android.Hardware.Camera2.CameraCharacteristics.FlashTorchStrengthDefaultLevel.get -> Android.Hardware.Camera2.CameraCharacteristics.Key!
static Android.Hardware.Camera2.CameraCharacteristics.FlashTorchStrengthMaxLevel.get -> Android.Hardware.Camera2.CameraCharacteristics.Key!
static Android.Hardware.Camera2.CameraCharacteristics.InfoSessionConfigurationQueryVersion.get -> Android.Hardware.Camera2.CameraCharacteristics.Key!
static Android.Hardware.Camera2.CaptureRequest.FlashStrengthLevel.get -> Android.Hardware.Camera2.CaptureRequest.Key!
static Android.Hardware.Camera2.CaptureResult.ControlLowLightBoostState.get -> Android.Hardware.Camera2.CaptureResult.Key!
static Android.Hardware.Camera2.CaptureResult.FlashStrengthLevel.get -> Android.Hardware.Camera2.CaptureResult.Key!
static Android.Hardware.Camera2.CaptureResult.LogicalMultiCameraActivePhysicalSensorCropRegion.get -> Android.Hardware.Camera2.CaptureResult.Key!
static Android.Hardware.Camera2.CaptureResult.StatisticsLensIntrinsicsSamples.get -> Android.Hardware.Camera2.CaptureResult.Key!
static Android.Hardware.Camera2.Params.OutputConfiguration.CreateInstancesForMultiResolutionOutput(System.Collections.Generic.ICollection<Android.Hardware.Camera2.Params.MultiResolutionStreamInfo!>! streams, Android.Graphics.ImageFormatType format) -> System.Collections.Generic.IList<Android.Hardware.Camera2.Params.OutputConfiguration!>!
static Android.Hardware.Camera2.Params.OutputConfiguration.SetSurfacesForMultiResolutionOutput(System.Collections.Generic.ICollection<Android.Hardware.Camera2.Params.OutputConfiguration!>! outputConfigurations, Android.Hardware.Camera2.MultiResolutionImageReader! multiResolutionImageReader) -> void
static Android.Hardware.HardwareBuffer.Create(int width, int height, Android.Hardware.HardwareBufferFormat format, int layers, Android.Hardware.HardwareBufferUsage usage) -> Android.Hardware.HardwareBuffer!
static Android.Hardware.HardwareBuffer.IsSupported(int width, int height, Android.Hardware.HardwareBufferFormat format, int layers, long usage) -> bool
static Android.Hardware.OverlayProperties.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.DataTypes.BloodPressureRecord.DiastolicAvg.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.BloodPressureRecord.DiastolicMax.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.BloodPressureRecord.DiastolicMin.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.BloodPressureRecord.SystolicAvg.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.BloodPressureRecord.SystolicMax.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.BloodPressureRecord.SystolicMin.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.CyclingPedalingCadenceRecord.RpmAvg.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.CyclingPedalingCadenceRecord.RpmMax.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.CyclingPedalingCadenceRecord.RpmMin.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.ExerciseCompletionGoal.UnknownGoal.Instance.get -> Android.Health.Connect.DataTypes.ExerciseCompletionGoal.UnknownGoal!
static Android.Health.Connect.DataTypes.ExerciseCompletionGoal.UnspecifiedGoal.Instance.get -> Android.Health.Connect.DataTypes.ExerciseCompletionGoal.UnspecifiedGoal!
static Android.Health.Connect.DataTypes.ExercisePerformanceGoal.AmrapGoal.Instance.get -> Android.Health.Connect.DataTypes.ExercisePerformanceGoal.AmrapGoal!
static Android.Health.Connect.DataTypes.ExercisePerformanceGoal.UnknownGoal.Instance.get -> Android.Health.Connect.DataTypes.ExercisePerformanceGoal.UnknownGoal!
static Android.Health.Connect.DataTypes.NutritionRecord.TransFatTotal.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.SkinTemperatureRecord.SkinTemperatureDeltaAvg.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.SkinTemperatureRecord.SkinTemperatureDeltaMax.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.SkinTemperatureRecord.SkinTemperatureDeltaMin.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.SpeedRecord.SpeedAvg.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.SpeedRecord.SpeedMax.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.SpeedRecord.SpeedMin.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.StepsCadenceRecord.StepsCadenceRateAvg.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.StepsCadenceRecord.StepsCadenceRateMax.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.StepsCadenceRecord.StepsCadenceRateMin.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.Units.TemperatureDelta.FromCelsius(double value) -> Android.Health.Connect.DataTypes.Units.TemperatureDelta!
static Android.Icu.Lang.UCharacter.UnicodeBlock.CjkUnifiedIdeographsExtensionI.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Text.Collator.GetEquivalentReorderCodes(int reorderCode) -> int[]?
static Android.Icu.Text.DisplayOptions.Capitalization.BeginningOfSentence.get -> Android.Icu.Text.DisplayOptions.Capitalization?
static Android.Icu.Text.DisplayOptions.Capitalization.MiddleOfSentence.get -> Android.Icu.Text.DisplayOptions.Capitalization?
static Android.Icu.Text.DisplayOptions.Capitalization.Standalone.get -> Android.Icu.Text.DisplayOptions.Capitalization?
static Android.Icu.Text.DisplayOptions.Capitalization.UiListOrMenu.get -> Android.Icu.Text.DisplayOptions.Capitalization?
static Android.Icu.Text.DisplayOptions.Capitalization.Undefined.get -> Android.Icu.Text.DisplayOptions.Capitalization?
static Android.Icu.Text.DisplayOptions.Capitalization.ValueOf(string? name) -> Android.Icu.Text.DisplayOptions.Capitalization?
static Android.Icu.Text.DisplayOptions.Capitalization.Values() -> Android.Icu.Text.DisplayOptions.Capitalization![]?
static Android.Icu.Text.DisplayOptions.DisplayLength.LengthFull.get -> Android.Icu.Text.DisplayOptions.DisplayLength?
static Android.Icu.Text.DisplayOptions.DisplayLength.LengthShort.get -> Android.Icu.Text.DisplayOptions.DisplayLength?
static Android.Icu.Text.DisplayOptions.DisplayLength.Undefined.get -> Android.Icu.Text.DisplayOptions.DisplayLength?
static Android.Icu.Text.DisplayOptions.DisplayLength.ValueOf(string? name) -> Android.Icu.Text.DisplayOptions.DisplayLength?
static Android.Icu.Text.DisplayOptions.DisplayLength.Values() -> Android.Icu.Text.DisplayOptions.DisplayLength![]?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Ablative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Accusative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Comitative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Dative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Ergative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.FromIdentifier(string? identifier) -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Genitive.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Instrumental.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Locative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.LocativeCopulative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Nominative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Oblique.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Prepositional.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Sociative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Undefined.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.ValueOf(string? name) -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Values() -> Android.Icu.Text.DisplayOptions.GrammaticalCase![]?
static Android.Icu.Text.DisplayOptions.GrammaticalCase.Vocative.get -> Android.Icu.Text.DisplayOptions.GrammaticalCase?
static Android.Icu.Text.DisplayOptions.InvokeBuilder() -> Android.Icu.Text.DisplayOptions.Builder?
static Android.Icu.Text.DisplayOptions.NameStyle.DialectNames.get -> Android.Icu.Text.DisplayOptions.NameStyle?
static Android.Icu.Text.DisplayOptions.NameStyle.StandardNames.get -> Android.Icu.Text.DisplayOptions.NameStyle?
static Android.Icu.Text.DisplayOptions.NameStyle.Undefined.get -> Android.Icu.Text.DisplayOptions.NameStyle?
static Android.Icu.Text.DisplayOptions.NameStyle.ValueOf(string? name) -> Android.Icu.Text.DisplayOptions.NameStyle?
static Android.Icu.Text.DisplayOptions.NameStyle.Values() -> Android.Icu.Text.DisplayOptions.NameStyle![]?
static Android.Icu.Text.DisplayOptions.NounClass.Animate.get -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.Common.get -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.Feminine.get -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.FromIdentifier(string? identifier) -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.Inanimate.get -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.Masculine.get -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.Neuter.get -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.Other.get -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.Personal.get -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.Undefined.get -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.ValueOf(string? name) -> Android.Icu.Text.DisplayOptions.NounClass?
static Android.Icu.Text.DisplayOptions.NounClass.Values() -> Android.Icu.Text.DisplayOptions.NounClass![]?
static Android.Icu.Text.DisplayOptions.PluralCategory.Few.get -> Android.Icu.Text.DisplayOptions.PluralCategory?
static Android.Icu.Text.DisplayOptions.PluralCategory.FromIdentifier(string? identifier) -> Android.Icu.Text.DisplayOptions.PluralCategory?
static Android.Icu.Text.DisplayOptions.PluralCategory.Many.get -> Android.Icu.Text.DisplayOptions.PluralCategory?
static Android.Icu.Text.DisplayOptions.PluralCategory.One.get -> Android.Icu.Text.DisplayOptions.PluralCategory?
static Android.Icu.Text.DisplayOptions.PluralCategory.Other.get -> Android.Icu.Text.DisplayOptions.PluralCategory?
static Android.Icu.Text.DisplayOptions.PluralCategory.Two.get -> Android.Icu.Text.DisplayOptions.PluralCategory?
static Android.Icu.Text.DisplayOptions.PluralCategory.Undefined.get -> Android.Icu.Text.DisplayOptions.PluralCategory?
static Android.Icu.Text.DisplayOptions.PluralCategory.ValueOf(string? name) -> Android.Icu.Text.DisplayOptions.PluralCategory?
static Android.Icu.Text.DisplayOptions.PluralCategory.Values() -> Android.Icu.Text.DisplayOptions.PluralCategory![]?
static Android.Icu.Text.DisplayOptions.PluralCategory.Zero.get -> Android.Icu.Text.DisplayOptions.PluralCategory?
static Android.Icu.Text.DisplayOptions.SubstituteHandling.NoSubstitute.get -> Android.Icu.Text.DisplayOptions.SubstituteHandling?
static Android.Icu.Text.DisplayOptions.SubstituteHandling.Substitute.get -> Android.Icu.Text.DisplayOptions.SubstituteHandling?
static Android.Icu.Text.DisplayOptions.SubstituteHandling.Undefined.get -> Android.Icu.Text.DisplayOptions.SubstituteHandling?
static Android.Icu.Text.DisplayOptions.SubstituteHandling.ValueOf(string? name) -> Android.Icu.Text.DisplayOptions.SubstituteHandling?
static Android.Icu.Text.DisplayOptions.SubstituteHandling.Values() -> Android.Icu.Text.DisplayOptions.SubstituteHandling![]?
static Android.Icu.Text.NumberFormat.Field.ApproximatelySign.get -> Android.Icu.Text.NumberFormat.Field?
static Android.Icu.Util.MeasureUnit.Quarter.get -> Android.Icu.Util.MeasureUnit?
static Android.Icu.Util.MeasureUnit.Tonne.get -> Android.Icu.Util.MeasureUnit?
static Android.Icu.Util.VersionInfo.Unicode151.get -> Android.Icu.Util.VersionInfo?
static Android.Media.LoudnessCodecController.Create(int sessionId) -> Android.Media.LoudnessCodecController!
static Android.Media.LoudnessCodecController.Create(int sessionId, Java.Util.Concurrent.IExecutor! executor, Android.Media.LoudnessCodecController.IOnLoudnessCodecUpdateListener! listener) -> Android.Media.LoudnessCodecController!
static Android.Media.MediaFormat.QpOffsetRect.FlattenToString(System.Collections.Generic.IList<Android.Media.MediaFormat.QpOffsetRect!>! qpOffsetRects) -> string!
static Android.Media.MediaRouter2.GetInstance(Android.Content.Context! context, string! clientPackageName, Java.Util.Concurrent.IExecutor! executor, Java.Lang.IRunnable! onInstanceInvalidatedListener) -> Android.Media.MediaRouter2!
static Android.Media.Metrics.EditingEndedEvent.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.Metrics.MediaItemInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.IpSecTransformState.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Nsd.DiscoveryRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Nfc.CardEmulators.PollingFrame.Creator.get -> Android.OS.IParcelableCreator!
static Android.OS.Debug.Rss.get -> long
static Android.OS.PowerMonitor.Creator.get -> Android.OS.IParcelableCreator!
static Android.OS.Process.GetAppUidForSdkSandboxUid(int uid) -> int
static Android.OS.Process.GetSdkSandboxUidForAppUid(int uid) -> int
static Android.OS.Process.IsSdkSandboxUid(int uid) -> bool
static Android.OS.ProfilingResult.Creator.get -> Android.OS.IParcelableCreator!
static Android.OS.SystemClock.UptimeNanos() -> long
static Android.Provider.E2eeContactKeysManager.E2eeContactKey.Creator.get -> Android.OS.IParcelableCreator!
static Android.Provider.E2eeContactKeysManager.E2eeSelfKey.Creator.get -> Android.OS.IParcelableCreator!
static Android.Provider.E2eeContactKeysManager.MaxKeySizeBytes.get -> int
static Android.Service.Chooser.ChooserResult.Creator.get -> Android.OS.IParcelableCreator!
static Android.Service.Notification.ZenDeviceEffects.Creator.get -> Android.OS.IParcelableCreator!
static Android.Systems.OsConstants.IpprotoEsp.get -> int
static Android.Systems.OsConstants.Ipv6Pktinfo.get -> int
static Android.Systems.OsConstants.NetlinkXfrm.get -> int
static Android.Systems.OsConstants.PacketIgnoreOutgoing.get -> int
static Android.Systems.OsConstants.SolPacket.get -> int
static Android.Telephony.PhoneNumberUtils.IsWpsCallNumber(string! number) -> bool
static Android.Text.Style.LineBreakConfigSpan.CreateNoBreakSpan() -> Android.Text.Style.LineBreakConfigSpan!
static Android.Text.Style.LineBreakConfigSpan.CreateNoHyphenationSpan() -> Android.Text.Style.LineBreakConfigSpan!
static Android.Text.Style.LineBreakConfigSpan.Creator.get -> Android.OS.IParcelableCreator!
static Android.Views.InputMethods.IConnectionlessHandwritingCallbackExtensions.OnResult(this Android.Views.InputMethods.IConnectionlessHandwritingCallback! self, string! text) -> void
static Android.Widget.RemoteViews.DrawInstructions.SupportedVersion.get -> long
static Android.Window.InputTransferToken.Creator.get -> Android.OS.IParcelableCreator!
static Android.Window.TrustedPresentationThresholds.Creator.get -> Android.OS.IParcelableCreator!
static Java.Lang.Character.CodePointOf(string! name) -> int
static Java.Lang.Character.ToString(int codePoint) -> string!
static Java.Lang.Math.CeilDiv(int x, int y) -> int
static Java.Lang.Math.CeilDiv(long x, int y) -> long
static Java.Lang.Math.CeilDiv(long x, long y) -> long
static Java.Lang.Math.CeilDivExact(int x, int y) -> int
static Java.Lang.Math.CeilDivExact(long x, long y) -> long
static Java.Lang.Math.CeilMod(int x, int y) -> int
static Java.Lang.Math.CeilMod(long x, int y) -> int
static Java.Lang.Math.CeilMod(long x, long y) -> long
static Java.Lang.Math.Clamp(double value, double min, double max) -> double
static Java.Lang.Math.Clamp(float value, float min, float max) -> float
static Java.Lang.Math.Clamp(long value, int min, int max) -> int
static Java.Lang.Math.Clamp(long value, long min, long max) -> long
static Java.Lang.Math.DivideExact(int x, int y) -> int
static Java.Lang.Math.DivideExact(long x, long y) -> long
static Java.Lang.Math.FloorDivExact(int x, int y) -> int
static Java.Lang.Math.FloorDivExact(long x, long y) -> long
static Java.Lang.Math.UnsignedMultiplyHigh(long x, long y) -> long
static Java.Lang.StrictMath.CeilDiv(int x, int y) -> int
static Java.Lang.StrictMath.CeilDiv(long x, int y) -> long
static Java.Lang.StrictMath.CeilDiv(long x, long y) -> long
static Java.Lang.StrictMath.CeilDivExact(int x, int y) -> int
static Java.Lang.StrictMath.CeilDivExact(long x, long y) -> long
static Java.Lang.StrictMath.CeilMod(int x, int y) -> int
static Java.Lang.StrictMath.CeilMod(long x, int y) -> int
static Java.Lang.StrictMath.CeilMod(long x, long y) -> long
static Java.Lang.StrictMath.Clamp(double value, double min, double max) -> double
static Java.Lang.StrictMath.Clamp(float value, float min, float max) -> float
static Java.Lang.StrictMath.Clamp(long value, int min, int max) -> int
static Java.Lang.StrictMath.Clamp(long value, long min, long max) -> long
static Java.Lang.StrictMath.DivideExact(int x, int y) -> int
static Java.Lang.StrictMath.DivideExact(long x, long y) -> long
static Java.Lang.StrictMath.FloorDivExact(int x, int y) -> int
static Java.Lang.StrictMath.FloorDivExact(long x, long y) -> long
static Java.Lang.StrictMath.UnsignedMultiplyHigh(long x, long y) -> long
static Java.Security.DrbgParameters.Capability.None.get -> Java.Security.DrbgParameters.Capability?
static Java.Security.DrbgParameters.Capability.PrAndReseed.get -> Java.Security.DrbgParameters.Capability?
static Java.Security.DrbgParameters.Capability.ReseedOnly.get -> Java.Security.DrbgParameters.Capability?
static Java.Security.DrbgParameters.Capability.ValueOf(string? name) -> Java.Security.DrbgParameters.Capability?
static Java.Security.DrbgParameters.Capability.Values() -> Java.Security.DrbgParameters.Capability![]?
static Java.Security.DrbgParameters.InvokeInstantiation(int strength, Java.Security.DrbgParameters.Capability? capability, byte[]? personalizationString) -> Java.Security.DrbgParameters.Instantiation?
static Java.Security.DrbgParameters.InvokeNextBytes(int strength, bool predictionResistance, byte[]? additionalInput) -> Java.Security.DrbgParameters.NextBytes?
static Java.Security.DrbgParameters.InvokeReseed(bool predictionResistance, byte[]? additionalInput) -> Java.Security.DrbgParameters.Reseed?
static Java.Security.SecureRandom.GetInstance(string? algorithm, Java.Security.ISecureRandomParameters? params) -> Java.Security.SecureRandom?
static Java.Security.SecureRandom.GetInstance(string? algorithm, Java.Security.ISecureRandomParameters? params, Java.Security.Provider? provider) -> Java.Security.SecureRandom?
static Java.Security.SecureRandom.GetInstance(string? algorithm, Java.Security.ISecureRandomParameters? params, string? provider) -> Java.Security.SecureRandom?
static Java.Security.Spec.MGF1ParameterSpec.Sha3224.get -> Java.Security.Spec.MGF1ParameterSpec?
static Java.Security.Spec.MGF1ParameterSpec.Sha3256.get -> Java.Security.Spec.MGF1ParameterSpec?
static Java.Security.Spec.MGF1ParameterSpec.Sha3384.get -> Java.Security.Spec.MGF1ParameterSpec?
static Java.Security.Spec.MGF1ParameterSpec.Sha3512.get -> Java.Security.Spec.MGF1ParameterSpec?
static Java.Security.Spec.MGF1ParameterSpec.Sha512224.get -> Java.Security.Spec.MGF1ParameterSpec?
static Java.Security.Spec.MGF1ParameterSpec.Sha512256.get -> Java.Security.Spec.MGF1ParameterSpec?
static Java.Util.Collections.NewSequencedSetFromMap(Java.Util.ISequencedMap! map) -> Java.Util.ISequencedSet!
static Java.Util.Collections.Shuffle(System.Collections.Generic.IList<object!>! list, Java.Util.RandomGenerators.IRandomGenerator! rnd) -> void
static Java.Util.Collections.UnmodifiableSequencedCollection(Java.Util.ISequencedCollection! c) -> Java.Util.ISequencedCollection!
static Java.Util.Collections.UnmodifiableSequencedMap(Java.Util.ISequencedMap! m) -> Java.Util.ISequencedMap!
static Java.Util.Collections.UnmodifiableSequencedSet(Java.Util.ISequencedSet! s) -> Java.Util.ISequencedSet!
static Java.Util.HashMap.NewHashMap(int numMappings) -> System.Collections.IDictionary!
static Java.Util.HashSet.NewHashSet(int numElements) -> Java.Util.HashSet!
static Java.Util.LinkedHashMap.NewLinkedHashMap(int numMappings) -> Java.Util.LinkedHashMap?
static Java.Util.LinkedHashSet.NewLinkedHashSet(int numElements) -> Java.Util.LinkedHashSet?
static Java.Util.MapEntry.CopyOf(Java.Util.IMapEntry! e) -> Java.Util.IMapEntry!
static Java.Util.RandomGenerators.RandomGeneratorFactory.Default.get -> Java.Util.RandomGenerators.RandomGeneratorFactory?
static Java.Util.RandomGenerators.RandomGeneratorFactory.Of(string? name) -> Java.Util.RandomGenerators.RandomGeneratorFactory?
static Java.Util.Streams.Collectors.Teeing(Java.Util.Streams.ICollector? downstream1, Java.Util.Streams.ICollector? downstream2, Java.Util.Functions.IBiFunction? merger) -> Java.Util.Streams.ICollector?
virtual Android.AdServices.AdIds.AdIdManager.GetAdId(Java.Util.Concurrent.IExecutor! executor, Android.AdServices.Common.IAdServicesOutcomeReceiver! callback) -> void
virtual Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest.AdSelectionFromOutcomesConfig.get -> Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig!
virtual Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest.OutcomeSelectionLogicJs.get -> string!
virtual Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest.OutcomeSelectionTrustedSignals.get -> Android.AdServices.Common.AdSelectionSignals!
virtual Android.AdServices.AdSelection.AddAdSelectionOverrideRequest.PerBuyerDecisionLogic.get -> Android.AdServices.AdSelection.PerBuyerDecisionLogic!
virtual Android.AdServices.AdSelection.AdSelectionManager.GetAdSelectionData(Android.AdServices.AdSelection.GetAdSelectionDataRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.AdSelection.AdSelectionManager.PersistAdSelectionResult(Android.AdServices.AdSelection.PersistAdSelectionResultRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.AdSelection.AdSelectionManager.ReportEvent(Android.AdServices.AdSelection.ReportEventRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.AdSelection.AdSelectionManager.SelectAds(Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig! adSelectionFromOutcomesConfig, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.AdSelection.AdSelectionManager.SetAppInstallAdvertisers(Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.AdSelection.AdSelectionManager.UpdateAdCounterHistogram(Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest! updateAdCounterHistogramRequest, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! outcomeReceiver) -> void
virtual Android.AdServices.AdSelection.AdSelectionOutcome.HasOutcome.get -> bool
virtual Android.AdServices.AdSelection.RemoveAdSelectionFromOutcomesOverrideRequest.AdSelectionFromOutcomesConfig.get -> Android.AdServices.AdSelection.AdSelectionFromOutcomesConfig!
virtual Android.AdServices.AdSelection.ReportEventRequest.AdSelectionId.get -> long
virtual Android.AdServices.AdSelection.ReportEventRequest.Data.get -> string!
virtual Android.AdServices.AdSelection.ReportEventRequest.InputEvent.get -> Android.Views.InputEvent?
virtual Android.AdServices.AdSelection.ReportEventRequest.Key.get -> string!
virtual Android.AdServices.AdSelection.ReportEventRequest.ReportingDestinations.get -> Android.AdServices.AdSelection.ReportingDestination
virtual Android.AdServices.AdSelection.SetAppInstallAdvertisersRequest.Advertisers.get -> System.Collections.Generic.ICollection<Android.AdServices.Common.AdTechIdentifier!>!
virtual Android.AdServices.AdSelection.TestAdSelectionManager.OverrideAdSelectionFromOutcomesConfigRemoteInfo(Android.AdServices.AdSelection.AddAdSelectionFromOutcomesOverrideRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.AdSelection.TestAdSelectionManager.RemoveAdSelectionFromOutcomesConfigRemoteInfoOverride(Android.AdServices.AdSelection.RemoveAdSelectionFromOutcomesOverrideRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.AdSelection.TestAdSelectionManager.ResetAllAdSelectionFromOutcomesConfigRemoteOverrides(Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.AdEventType.get -> Android.AdServices.Common.AdEventType
virtual Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.AdSelectionId.get -> long
virtual Android.AdServices.AdSelection.UpdateAdCounterHistogramRequest.CallerAdTech.get -> Android.AdServices.Common.AdTechIdentifier!
virtual Android.AdServices.CustomAudiences.AddCustomAudienceOverrideRequest.BiddingLogicJsVersion.get -> long
virtual Android.AdServices.CustomAudiences.CustomAudienceManager.FetchAndJoinCustomAudience(Android.AdServices.CustomAudiences.FetchAndJoinCustomAudienceRequest! fetchAndJoinCustomAudienceRequest, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.CustomAudiences.CustomAudienceManager.ScheduleCustomAudienceUpdate(Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.AdServices.Common.IAdServicesOutcomeReceiver! receiver) -> void
virtual Android.AdServices.Measurement.MeasurementManager.DeleteRegistrations(Android.AdServices.Measurement.DeletionRequest! deletionRequest, Java.Util.Concurrent.IExecutor! executor, Android.AdServices.Common.IAdServicesOutcomeReceiver! callback) -> void
virtual Android.AdServices.Measurement.MeasurementManager.GetMeasurementApiStatus(Java.Util.Concurrent.IExecutor! executor, Android.AdServices.Common.IAdServicesOutcomeReceiver! callback) -> void
virtual Android.AdServices.Measurement.MeasurementManager.RegisterSource(Android.AdServices.Measurement.SourceRegistrationRequest! request, Java.Util.Concurrent.IExecutor? executor, Android.AdServices.Common.IAdServicesOutcomeReceiver? callback) -> void
virtual Android.AdServices.Measurement.MeasurementManager.RegisterSource(Android.AdServices.Measurement.SourceRegistrationRequest! request, Java.Util.Concurrent.IExecutor? executor, Android.OS.IOutcomeReceiver? callback) -> void
virtual Android.AdServices.Measurement.MeasurementManager.RegisterSource(Android.Net.Uri! attributionSource, Android.Views.InputEvent? inputEvent, Java.Util.Concurrent.IExecutor? executor, Android.AdServices.Common.IAdServicesOutcomeReceiver? callback) -> void
virtual Android.AdServices.Measurement.MeasurementManager.RegisterTrigger(Android.Net.Uri! trigger, Java.Util.Concurrent.IExecutor? executor, Android.AdServices.Common.IAdServicesOutcomeReceiver? callback) -> void
virtual Android.AdServices.Measurement.MeasurementManager.RegisterWebSource(Android.AdServices.Measurement.WebSourceRegistrationRequest! request, Java.Util.Concurrent.IExecutor? executor, Android.AdServices.Common.IAdServicesOutcomeReceiver? callback) -> void
virtual Android.AdServices.Measurement.MeasurementManager.RegisterWebTrigger(Android.AdServices.Measurement.WebTriggerRegistrationRequest! request, Java.Util.Concurrent.IExecutor? executor, Android.AdServices.Common.IAdServicesOutcomeReceiver? callback) -> void
virtual Android.AdServices.OnDevicePersonalization.EventUrlProvider.CreateEventTrackingUrlWithRedirect(Android.OS.PersistableBundle! eventParams, Android.Net.Uri? destinationUrl) -> Android.Net.Uri!
virtual Android.AdServices.OnDevicePersonalization.EventUrlProvider.CreateEventTrackingUrlWithResponse(Android.OS.PersistableBundle! eventParams, byte[]? responseData, string? mimeType) -> Android.Net.Uri!
virtual Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Cancel(Android.AdServices.OnDevicePersonalization.FederatedComputeInput! input) -> void
virtual Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params.TrainingInterval.get -> Android.AdServices.OnDevicePersonalization.TrainingInterval!
virtual Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Schedule(Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params! params, Android.AdServices.OnDevicePersonalization.FederatedComputeInput! input) -> void
virtual Android.AdServices.OnDevicePersonalization.InferenceInput.Params.DelegateType.get -> int
virtual Android.AdServices.OnDevicePersonalization.InferenceInput.Params.KeyValueStore.get -> Android.AdServices.OnDevicePersonalization.IKeyValueStore!
virtual Android.AdServices.OnDevicePersonalization.InferenceInput.Params.ModelKey.get -> string!
virtual Android.AdServices.OnDevicePersonalization.InferenceInput.Params.ModelType.get -> int
virtual Android.AdServices.OnDevicePersonalization.InferenceInput.Params.RecommendedNumThreads.get -> int
virtual Android.AdServices.OnDevicePersonalization.LogReader.GetJoinedEvents(Java.Time.Instant! startTime, Java.Time.Instant! endTime) -> System.Collections.Generic.IList<Android.AdServices.OnDevicePersonalization.EventLogRecord!>!
virtual Android.AdServices.OnDevicePersonalization.LogReader.GetRequests(Java.Time.Instant! startTime, Java.Time.Instant! endTime) -> System.Collections.Generic.IList<Android.AdServices.OnDevicePersonalization.RequestLogRecord!>!
virtual Android.AdServices.OnDevicePersonalization.ModelManager.Run(Android.AdServices.OnDevicePersonalization.InferenceInput! input, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorCode.get -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
virtual Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.Execute(Android.Content.ComponentName! service, Android.OS.PersistableBundle! params, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ExecuteResult.GetOutputData() -> byte[]?
virtual Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ExecuteResult.SurfacePackageToken.get -> Android.AdServices.OnDevicePersonalization.SurfacePackageToken?
virtual Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.RequestSurfacePackage(Android.AdServices.OnDevicePersonalization.SurfacePackageToken! surfacePackageToken, Android.OS.IBinder! surfaceViewHostToken, int displayId, int width, int height, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.Signals.ProtectedSignalsManager.UpdateSignals(Android.AdServices.Signals.UpdateSignalsRequest! updateSignalsRequest, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.App.Activity.Caller.get -> Android.App.ComponentCaller?
virtual Android.App.Activity.CurrentCaller.get -> Android.App.ComponentCaller!
virtual Android.App.Activity.InitialCaller.get -> Android.App.ComponentCaller!
virtual Android.App.Activity.OnActivityResult(int requestCode, Android.App.Result resultCode, Android.Content.Intent? data, Android.App.ComponentCaller! caller) -> void
virtual Android.App.Activity.OnNewIntent(Android.Content.Intent! intent, Android.App.ComponentCaller! caller) -> void
virtual Android.App.Activity.OnRequestPermissionsResult(int requestCode, string![]! permissions, Android.Content.PM.Permission[]! grantResults, int deviceId) -> void
virtual Android.App.Activity.SetAllowCrossUidActivitySwitchFromBelow(bool allowed) -> void
virtual Android.App.Activity.SetIntent(Android.Content.Intent? newIntent, Android.App.ComponentCaller? newCaller) -> void
virtual Android.App.Activity.ShouldShowRequestPermissionRationale(string! permission, int deviceId) -> bool
virtual Android.App.ActivityManager.AddApplicationStartInfoCompletionListener(Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! listener) -> void
virtual Android.App.ActivityManager.AddStartInfoTimestamp(int key, long timestampNs) -> void
virtual Android.App.ActivityManager.GetHistoricalProcessStartReasons(int maxNum) -> System.Collections.Generic.IList<Android.App.ApplicationStartInfo!>!
virtual Android.App.ActivityManager.RemoveApplicationStartInfoCompletionListener(Java.Util.Functions.IConsumer! listener) -> void
virtual Android.App.Admin.DevicePolicyManager.GetContentProtectionPolicy(Android.Content.ComponentName? admin) -> Android.App.Admin.ContentProtectionPolicy
virtual Android.App.Admin.DevicePolicyManager.SetContentProtectionPolicy(Android.Content.ComponentName? admin, Android.App.Admin.ContentProtectionPolicy policy) -> void
virtual Android.App.Admin.DevicePolicyManager.SubscriptionIds.get -> System.Collections.Generic.ICollection<Java.Lang.Integer!>!
virtual Android.App.AppSearch.AppSearchManager.CreateEnterpriseGlobalSearchSession(Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
virtual Android.App.AppSearch.EnterpriseGlobalSearchSession.GetByDocumentId(string! packageName, string! databaseName, Android.App.AppSearch.GetByDocumentIdRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.App.AppSearch.IBatchResultCallback! callback) -> void
virtual Android.App.AppSearch.EnterpriseGlobalSearchSession.GetSchema(string! packageName, string! databaseName, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
virtual Android.App.AppSearch.EnterpriseGlobalSearchSession.Search(string! queryExpression, Android.App.AppSearch.SearchSpec! searchSpec) -> Android.App.AppSearch.SearchResults!
virtual Android.App.AppSearch.GenericDocument.Builder.ClearProperty(string! name) -> Java.Lang.Object!
virtual Android.App.AppSearch.GenericDocument.Builder.SetId(string! id) -> Java.Lang.Object!
virtual Android.App.AppSearch.GenericDocument.Builder.SetNamespace(string! namespace) -> Java.Lang.Object!
virtual Android.App.AppSearch.GenericDocument.Builder.SetSchemaType(string! schemaType) -> Java.Lang.Object!
virtual Android.App.AppSearch.SetSchemaResponse.MigrationFailure.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
virtual Android.App.AppSearch.SetSchemaResponse.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
virtual Android.App.AppSearch.StorageInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
virtual Android.App.GrammaticalInflectionManager.SystemGrammaticalGender.get -> Android.Content.Res.GrammaticalGender
virtual Android.App.Instrumentation.CallActivityOnNewIntent(Android.App.Activity! activity, Android.Content.Intent! intent, Android.App.ComponentCaller! caller) -> void
virtual Android.App.Job.JobInfo.DebugTags.get -> System.Collections.Generic.ICollection<string!>!
virtual Android.App.Job.JobInfo.TraceTag.get -> string?
virtual Android.App.LocaleConfig.DefaultLocale.get -> Java.Util.Locale?
virtual Android.App.NotificationManager.AreAutomaticZenRulesUserManaged() -> bool
virtual Android.App.NotificationManager.GetAutomaticZenRuleState(string! id) -> Android.Service.Notification.ConditionState
virtual Android.App.SdkSandbox.SdkProvider.SdkSandboxController.AppOwnedSdkSandboxInterfaces.get -> System.Collections.Generic.IList<Android.App.SdkSandbox.AppOwnedSdkSandboxInterface!>!
virtual Android.App.SdkSandbox.SdkProvider.SdkSandboxController.ClientPackageName.get -> string!
virtual Android.App.SdkSandbox.SdkProvider.SdkSandboxController.LoadSdk(string! sdkName, Android.OS.Bundle! params, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.App.Service.OnTimeout(int startId, Android.Content.PM.ForegroundService fgsType) -> void
virtual Android.Appwidget.AppWidgetManager.GetWidgetPreview(Android.Content.ComponentName! provider, Android.OS.UserHandle? profile, Android.Appwidget.AppWidgetCategory widgetCategory) -> Android.Widget.RemoteViews?
virtual Android.Appwidget.AppWidgetManager.RemoveWidgetPreview(Android.Content.ComponentName! provider, Android.Appwidget.AppWidgetCategory widgetCategories) -> void
virtual Android.Appwidget.AppWidgetManager.SetWidgetPreview(Android.Content.ComponentName! provider, Android.Appwidget.AppWidgetCategory widgetCategories, Android.Widget.RemoteViews! preview) -> bool
virtual Android.Content.ClipData.Item.IntentSender.get -> Android.Content.IntentSender?
virtual Android.Content.Context.BindIsolatedService(Android.Content.Intent! service, Android.Content.Context.BindServiceFlags! flags, string! instanceName, Java.Util.Concurrent.IExecutor! executor, Android.Content.IServiceConnection! conn) -> bool
virtual Android.Content.Context.BindIsolatedService(Android.Content.Intent! service, int flags, string! instanceName, Java.Util.Concurrent.IExecutor! executor, Android.Content.IServiceConnection! conn) -> bool
virtual Android.Content.Context.CheckContentUriPermissionFull(Android.Net.Uri! uri, int pid, int uid, Android.Content.ActivityFlags modeFlags) -> Android.Content.PM.Permission
virtual Android.Content.Intent.IsMismatchingFilter.get -> bool
virtual Android.Content.OM.FabricatedOverlay.SetNinePatchResourceValue(string! resourceName, Android.OS.ParcelFileDescriptor! value, string? configuration) -> void
virtual Android.Content.OM.FabricatedOverlay.SetResourceValue(string! resourceName, Android.Content.Res.AssetFileDescriptor! value, string? configuration) -> void
virtual Android.Content.PM.CrossProfileApps.IsManagedProfile(Android.OS.UserHandle! userHandle) -> bool
virtual Android.Content.PM.CrossProfileApps.IsProfile(Android.OS.UserHandle! userHandle) -> bool
virtual Android.Content.PM.LauncherApps.ArchiveCompatibilityParams.SetEnableIconOverlay(bool enableIconOverlay) -> void
virtual Android.Content.PM.LauncherApps.ArchiveCompatibilityParams.SetEnableUnarchivalConfirmation(bool enableUnarchivalConfirmation) -> void
virtual Android.Content.PM.LauncherApps.GetAppMarketActivityIntent(string? packageName, Android.OS.UserHandle! user) -> Android.Content.IntentSender?
virtual Android.Content.PM.LauncherApps.GetPreInstalledSystemPackages(Android.OS.UserHandle! userHandle) -> System.Collections.Generic.IList<string!>!
virtual Android.Content.PM.LauncherApps.SetArchiveCompatibility(Android.Content.PM.LauncherApps.ArchiveCompatibilityParams! params) -> void
virtual Android.Content.PM.PackageInfo.ApexPackageName.get -> string?
virtual Android.Content.PM.PackageInfo.ArchiveTimeMillis.get -> long
virtual Android.Content.PM.PackageInstaller.InstallPackageArchived(Android.Content.PM.ArchivedPackageInfo! archivedPackageInfo, Android.Content.PM.PackageInstaller.SessionParams! sessionParams, Android.Content.IntentSender! statusReceiver) -> void
virtual Android.Content.PM.PackageInstaller.ReportUnarchivalState(Android.Content.PM.PackageInstaller.UnarchivalState! unarchivalState) -> void
virtual Android.Content.PM.PackageInstaller.ReportUnarchivalStatus(int unarchiveId, Android.Content.PM.PackageInstallerUnarchival status, long requiredStorageBytes, Android.App.PendingIntent? userActionIntent) -> void
virtual Android.Content.PM.PackageInstaller.RequestArchive(string! packageName, Android.Content.IntentSender! statusReceiver) -> void
virtual Android.Content.PM.PackageInstaller.RequestUnarchive(string! packageName, Android.Content.IntentSender! statusReceiver) -> void
virtual Android.Content.PM.PackageInstaller.SessionInfo.IsUnarchival.get -> bool
virtual Android.Content.PM.PackageInstaller.SessionParams.SetUnarchiveId(int unarchiveId) -> void
virtual Android.Content.PM.PackageManager.GetArchivedPackage(string! packageName) -> Android.Content.PM.ArchivedPackageInfo?
virtual Android.Content.PM.PackageManager.IsAppArchivable(string! packageName) -> bool
virtual Android.Content.PM.PackageManager.IsPackageStopped(string! packageName) -> bool
virtual Android.Content.PM.PackageManager.ParseAndroidManifest(Java.IO.File! apkFile, Java.Util.Functions.IFunction! parserFunction) -> Java.Lang.Object?
virtual Android.Database.Sqlite.SQLiteDatabase.BeginTransactionReadOnly() -> void
virtual Android.Database.Sqlite.SQLiteDatabase.BeginTransactionWithListenerReadOnly(Android.Database.Sqlite.ISQLiteTransactionListener? transactionListener) -> void
virtual Android.Database.Sqlite.SQLiteDatabase.CreateRawStatement(string! sql) -> Android.Database.Sqlite.SQLiteRawStatement!
virtual Android.Database.Sqlite.SQLiteDatabase.LastChangedRowCount.get -> long
virtual Android.Database.Sqlite.SQLiteDatabase.LastInsertRowId.get -> long
virtual Android.Database.Sqlite.SQLiteDatabase.TotalChangedRowCount.get -> long
virtual Android.Graphics.BitmapShader.SetOverrideGainmap(Android.Graphics.Gainmap? overrideGainmap) -> void
virtual Android.Graphics.Canvas.ClipOutShader(Android.Graphics.Shader! shader) -> void
virtual Android.Graphics.Canvas.ClipShader(Android.Graphics.Shader! shader) -> void
virtual Android.Graphics.Canvas.Concat(Android.Graphics.Matrix44? m) -> void
virtual Android.Graphics.Matrix44.Concat(Android.Graphics.Matrix44! b) -> Android.Graphics.Matrix44!
virtual Android.Graphics.Matrix44.Get(int row, int col) -> float
virtual Android.Graphics.Matrix44.GetValues(float[]! dst) -> void
virtual Android.Graphics.Matrix44.Invert() -> bool
virtual Android.Graphics.Matrix44.IsIdentity.get -> bool
virtual Android.Graphics.Matrix44.Map(float x, float y, float z, float w) -> float[]!
virtual Android.Graphics.Matrix44.Map(float x, float y, float z, float w, float[]! dst) -> void
virtual Android.Graphics.Matrix44.Reset() -> void
virtual Android.Graphics.Matrix44.Rotate(float deg, float xComp, float yComp, float zComp) -> Android.Graphics.Matrix44!
virtual Android.Graphics.Matrix44.Scale(float x, float y, float z) -> Android.Graphics.Matrix44!
virtual Android.Graphics.Matrix44.Set(int row, int col, float val) -> void
virtual Android.Graphics.Matrix44.SetValues(float[]! src) -> void
virtual Android.Graphics.Matrix44.Translate(float x, float y, float z) -> Android.Graphics.Matrix44!
virtual Android.Graphics.Paint.FontMetricsInt.Set(Android.Graphics.Paint.FontMetrics! fontMetrics) -> void
virtual Android.Graphics.Paint.FontMetricsInt.Set(Android.Graphics.Paint.FontMetricsInt! fontMetricsInt) -> void
virtual Android.Graphics.Paint.GetFontMetricsForLocale(Android.Graphics.Paint.FontMetrics! metrics) -> void
virtual Android.Graphics.Paint.GetFontMetricsIntForLocale(Android.Graphics.Paint.FontMetricsInt! metrics) -> void
virtual Android.Hardware.Biometrics.BiometricManager.GetLastAuthenticationTime(Android.Hardware.Biometrics.BiometricManagerAuthenticators authenticators) -> long
virtual Android.Hardware.Biometrics.BiometricPrompt.Builder.SetContentView(Android.Hardware.Biometrics.IPromptContentView! view) -> Android.Hardware.Biometrics.BiometricPrompt.Builder!
virtual Android.Hardware.Biometrics.BiometricPrompt.Builder.SetLogoBitmap(Android.Graphics.Bitmap! logoBitmap) -> Android.Hardware.Biometrics.BiometricPrompt.Builder!
virtual Android.Hardware.Biometrics.BiometricPrompt.Builder.SetLogoDescription(string! logoDescription) -> Android.Hardware.Biometrics.BiometricPrompt.Builder!
virtual Android.Hardware.Biometrics.BiometricPrompt.Builder.SetLogoRes(int logoRes) -> Android.Hardware.Biometrics.BiometricPrompt.Builder!
virtual Android.Hardware.Biometrics.BiometricPrompt.ContentView.get -> Android.Hardware.Biometrics.IPromptContentView?
virtual Android.Hardware.Biometrics.BiometricPrompt.LogoBitmap.get -> Android.Graphics.Bitmap?
virtual Android.Hardware.Biometrics.BiometricPrompt.LogoDescription.get -> string?
virtual Android.Hardware.Biometrics.BiometricPrompt.LogoRes.get -> int
virtual Android.Hardware.Camera2.CameraExtensionSession.ExtensionCaptureCallback.OnCaptureFailed(Android.Hardware.Camera2.CameraExtensionSession! session, Android.Hardware.Camera2.CaptureRequest! request, int failure) -> void
virtual Android.Icu.Number.FormattedNumber.NounClass.get -> Android.Icu.Text.DisplayOptions.NounClass?
virtual Android.Icu.Number.NumberFormatterSettings.DisplayOptions(Android.Icu.Text.DisplayOptions? displayOptions) -> Java.Lang.Object?
virtual Android.Icu.Text.Collator.GetReorderCodes() -> int[]?
virtual Android.Icu.Text.Collator.SetReorderCodes(params int[]? order) -> void
virtual Android.Icu.Text.DateTimePatternGenerator.GetDateTimeFormat(int style) -> string?
virtual Android.Icu.Text.DateTimePatternGenerator.SetDateTimeFormat(int style, string? dateTimeFormat) -> void
virtual Android.Icu.Text.DisplayOptions.Builder.Build() -> Android.Icu.Text.DisplayOptions?
virtual Android.Icu.Text.DisplayOptions.Builder.SetCapitalization(Android.Icu.Text.DisplayOptions.Capitalization? capitalization) -> Android.Icu.Text.DisplayOptions.Builder?
virtual Android.Icu.Text.DisplayOptions.Builder.SetDisplayLength(Android.Icu.Text.DisplayOptions.DisplayLength? displayLength) -> Android.Icu.Text.DisplayOptions.Builder?
virtual Android.Icu.Text.DisplayOptions.Builder.SetGrammaticalCase(Android.Icu.Text.DisplayOptions.GrammaticalCase? grammaticalCase) -> Android.Icu.Text.DisplayOptions.Builder?
virtual Android.Icu.Text.DisplayOptions.Builder.SetNameStyle(Android.Icu.Text.DisplayOptions.NameStyle? nameStyle) -> Android.Icu.Text.DisplayOptions.Builder?
virtual Android.Icu.Text.DisplayOptions.Builder.SetNounClass(Android.Icu.Text.DisplayOptions.NounClass? nounClass) -> Android.Icu.Text.DisplayOptions.Builder?
virtual Android.Icu.Text.DisplayOptions.Builder.SetPluralCategory(Android.Icu.Text.DisplayOptions.PluralCategory? pluralCategory) -> Android.Icu.Text.DisplayOptions.Builder?
virtual Android.Icu.Text.DisplayOptions.Builder.SetSubstituteHandling(Android.Icu.Text.DisplayOptions.SubstituteHandling? substituteHandling) -> Android.Icu.Text.DisplayOptions.Builder?
virtual Android.InputMethodServices.InputMethodService.OnStartConnectionlessStylusHandwriting(int inputType, Android.Views.InputMethods.CursorAnchorInfo? cursorAnchorInfo) -> bool
virtual Android.Media.AudioManager.GetSupportedDeviceTypes(Android.Media.GetDevicesTargets direction) -> System.Collections.Generic.ICollection<Java.Lang.Integer!>!
virtual Android.Media.LoudnessCodecController.AddMediaCodec(Android.Media.MediaCodec! mediaCodec) -> bool
virtual Android.Media.LoudnessCodecController.Close() -> void
virtual Android.Media.LoudnessCodecController.GetLoudnessCodecParams(Android.Media.MediaCodec! mediaCodec) -> Android.OS.Bundle!
virtual Android.Media.LoudnessCodecController.RemoveMediaCodec(Android.Media.MediaCodec! mediaCodec) -> void
virtual Android.Media.MediaCodec.Callback.OnOutputBuffersAvailable(Android.Media.MediaCodec! codec, int index, Java.Util.ArrayDeque! infos) -> void
virtual Android.Media.MediaRouter2.RoutingController.TransferableRoutes.get -> System.Collections.Generic.IList<Android.Media.MediaRoute2Info!>!
virtual Android.Media.MediaRouter2.RoutingController.WasTransferInitiatedBySelf() -> bool
virtual Android.Media.Midi.MidiUmpDeviceService.OnClose() -> void
virtual Android.Media.Midi.MidiUmpDeviceService.OnDeviceStatusChanged(Android.Media.Midi.MidiDeviceStatus! status) -> void
virtual Android.Net.NetworkRequest.Builder.SetSubscriptionIds(System.Collections.Generic.ICollection<Java.Lang.Integer!>! subIds) -> Android.Net.NetworkRequest.Builder!
virtual Android.Net.NetworkRequest.SubscriptionIds.get -> System.Collections.Generic.ICollection<Java.Lang.Integer!>!
virtual Android.Net.Wifi.P2p.WifiP2pDevice.IpAddress.get -> Java.Net.InetAddress?
virtual Android.Net.Wifi.P2p.WifiP2pManager.RegisterWifiP2pListener(Java.Util.Concurrent.IExecutor! executor, Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener! listener) -> void
virtual Android.Net.Wifi.P2p.WifiP2pManager.StartPeerDiscovery(Android.Net.Wifi.P2p.WifiP2pManager.Channel! channel, Android.Net.Wifi.P2p.WifiP2pDiscoveryConfig! config, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener? listener) -> void
virtual Android.Net.Wifi.P2p.WifiP2pManager.UnregisterWifiP2pListener(Android.Net.Wifi.P2p.WifiP2pManager.IWifiP2pListener! listener) -> void
virtual Android.Net.Wifi.ScanResult.Is80211azNtbResponder() -> bool
virtual Android.Net.Wifi.ScanResult.IsTwtResponder.get -> bool
virtual Android.Net.Wifi.WifiInfo.PasspointUniqueId.get -> string?
virtual Android.Net.Wifi.WifiManager.GetPerSsidRoamingModes(Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! resultsCallback) -> void
virtual Android.Net.Wifi.WifiManager.IsAggressiveRoamingModeSupported.get -> bool
virtual Android.Net.Wifi.WifiManager.IsD2dSupportedWhenInfraStaDisabled.get -> bool
virtual Android.Net.Wifi.WifiManager.IsWepSupported.get -> bool
virtual Android.Net.Wifi.WifiManager.IsWpaPersonalSupported.get -> bool
virtual Android.Net.Wifi.WifiManager.QuerySendDhcpHostnameRestriction(Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IIntConsumer! resultsCallback) -> void
virtual Android.Net.Wifi.WifiManager.RemovePerSsidRoamingMode(Android.Net.Wifi.WifiSsid! ssid) -> void
virtual Android.Net.Wifi.WifiManager.SetPerSsidRoamingMode(Android.Net.Wifi.WifiSsid! ssid, int roamingMode) -> void
virtual Android.Net.Wifi.WifiManager.SetSendDhcpHostnameRestriction(Android.Net.Wifi.SendDhcpHostnameRestriction restriction) -> void
virtual Android.Nfc.CardEmulators.HostApduService.ProcessPollingFrames(System.Collections.Generic.IList<Android.Nfc.CardEmulators.PollingFrame!>! frame) -> void
virtual Android.OS.BatteryManager.GetStringProperty(int id) -> string?
virtual Android.OS.HardwarePropertiesManager.GetDeviceTemperatures(Android.OS.DeviceTemperatureType type, Android.OS.TemperatureSource source) -> float[]!
virtual Android.OS.Health.SystemHealthManager.GetPowerMonitorReadings(System.Collections.Generic.IList<Android.OS.PowerMonitor!>! powerMonitors, Java.Util.Concurrent.IExecutor? executor, Android.OS.IOutcomeReceiver! onResult) -> void
virtual Android.OS.Health.SystemHealthManager.GetSupportedPowerMonitors(Java.Util.Concurrent.IExecutor? executor, Java.Util.Functions.IConsumer! onResult) -> void
virtual Android.OS.PerformanceHintManager.Session.ReportActualWorkDuration(Android.OS.WorkDuration! workDuration) -> void
virtual Android.OS.PerformanceHintManager.Session.SetPreferPowerEfficiency(bool enabled) -> void
virtual Android.OS.PowerManager.ThermalHeadroomThresholds.get -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, Java.Lang.Float!>!
virtual Android.OS.SecurityStateManager.GlobalSecurityState.get -> Android.OS.Bundle!
virtual Android.Service.PersistentData.PersistentDataBlockManager.IsFactoryResetProtectionActive.get -> bool
virtual Android.Telecom.Call.Details.Id.get -> string!
virtual Android.Telecom.PhoneAccount.Builder.ClearSimultaneousCallingRestriction() -> Android.Telecom.PhoneAccount.Builder!
virtual Android.Telecom.PhoneAccount.Builder.SetSimultaneousCallingRestriction(System.Collections.Generic.ICollection<Android.Telecom.PhoneAccountHandle!>! handles) -> Android.Telecom.PhoneAccount.Builder!
virtual Android.Telecom.TelecomManager.RegisteredPhoneAccounts.get -> System.Collections.Generic.IList<Android.Telecom.PhoneAccount!>!
virtual Android.Telephony.Data.ApnSetting.Builder.SetAlwaysOn(bool alwaysOn) -> Android.Telephony.Data.ApnSetting.Builder!
virtual Android.Telephony.Data.ApnSetting.IsAlwaysOn.get -> bool
virtual Android.Telephony.Euicc.EuiccManager.AvailableMemoryInBytes.get -> long
virtual Android.Telephony.Mbms.DownloadStatusListener.OnStatusUpdated(Android.Telephony.Mbms.DownloadRequest? request, Android.Telephony.Mbms.FileInfo? fileInfo, Android.Telephony.Mbms.DownloadStatus status) -> void
virtual Android.Telephony.Mbms.StreamingServiceCallback.OnStreamMethodUpdated(Android.Telephony.Mbms.StreamingMethod methodType) -> void
virtual Android.Telephony.Mbms.StreamingServiceCallback.OnStreamStateUpdated(Android.Telephony.StreamingState state, Android.Telephony.Mbms.StreamingStateChangedReason reason) -> void
virtual Android.Telephony.ServiceState.IsUsingNonTerrestrialNetwork.get -> bool
virtual Android.Telephony.SubscriptionInfo.IsOnlyNonTerrestrialNetwork.get -> bool
virtual Android.Telephony.SubscriptionInfo.ServiceCapabilities.get -> System.Collections.Generic.ICollection<Java.Lang.Integer!>!
virtual Android.Telephony.TelephonyManager.IsDeviceSmsCapable.get -> bool
virtual Android.Telephony.TelephonyManager.IsDeviceVoiceCapable.get -> bool
virtual Android.Text.BoringLayout.Metrics.DrawingBoundingBox.get -> Android.Graphics.RectF!
virtual Android.Text.Layout.ComputeDrawingBoundingBox() -> Android.Graphics.RectF!
virtual Android.Text.Layout.GetLineLetterSpacingUnitCount(int line, bool includeTrailingWhitespace) -> int
virtual Android.Text.Layout.LineBreakConfig.get -> Android.Graphics.Text.LineBreakConfig!
virtual Android.Text.Layout.MinimumFontMetrics.get -> Android.Graphics.Paint.FontMetrics?
virtual Android.Text.Layout.ShiftDrawingOffsetForStartOverhang.get -> bool
virtual Android.Text.Layout.UseBoundsForWidth.get -> bool
virtual Android.Views.Accessibility.AccessibilityNodeInfo.GranularScrollingSupported.get -> bool
virtual Android.Views.Accessibility.AccessibilityNodeInfo.GranularScrollingSupported.set -> void
virtual Android.Views.Display.OverlaySupport.get -> Android.Hardware.OverlayProperties!
virtual Android.Views.InputMethods.EditorInfo.StylusHandwritingEnabled.get -> bool
virtual Android.Views.InputMethods.EditorInfo.StylusHandwritingEnabled.set -> void
virtual Android.Views.SurfaceControl.Transaction.AddTransactionCompletedListener(Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! listener) -> Android.Views.SurfaceControl.Transaction!
virtual Android.Views.SurfaceControl.Transaction.SetDesiredHdrHeadroom(Android.Views.SurfaceControl! sc, float desiredRatio) -> Android.Views.SurfaceControl.Transaction!
virtual Android.Views.SurfaceControl.Transaction.SetDesiredPresentTimeNanos(long desiredPresentTimeNanos) -> Android.Views.SurfaceControl.Transaction!
virtual Android.Views.SurfaceControl.Transaction.SetFrameTimeline(long vsyncId) -> Android.Views.SurfaceControl.Transaction!
virtual Android.Views.SurfaceView.SetDesiredHdrHeadroom(float desiredHeadroom) -> void
virtual Android.Views.View.ClearPendingCredentialRequest() -> void
virtual Android.Views.View.FrameContentVelocity.get -> float
virtual Android.Views.View.FrameContentVelocity.set -> void
virtual Android.Views.View.HandwritingDelegateFlags.get -> Android.Views.InputMethods.HandwritingDelegateFlag
virtual Android.Views.View.HandwritingDelegateFlags.set -> void
virtual Android.Views.View.RequestedFrameRate.get -> float
virtual Android.Views.View.RequestedFrameRate.set -> void
virtual Android.Views.View.SetPendingCredentialRequest(Android.Credentials.GetCredentialRequest! request, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Views.ViewStructure.ClearCredentialManagerRequest() -> void
virtual Android.Views.ViewStructure.PendingCredentialCallback.get -> Android.OS.IOutcomeReceiver?
virtual Android.Views.ViewStructure.PendingCredentialRequest.get -> Android.Credentials.GetCredentialRequest?
virtual Android.Views.ViewStructure.SetPendingCredentialRequest(Android.Credentials.GetCredentialRequest! request, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Views.Window.DesiredHdrHeadroom.get -> float
virtual Android.Views.Window.DesiredHdrHeadroom.set -> void
virtual Android.Views.Window.FrameRateBoostOnTouchEnabled.get -> bool
virtual Android.Views.Window.FrameRateBoostOnTouchEnabled.set -> void
virtual Android.Views.Window.FrameRatePowerSavingsBalanced.get -> bool
virtual Android.Views.Window.FrameRatePowerSavingsBalanced.set -> void
virtual Android.Views.WindowManagerLayoutParams.DesiredHdrHeadroom.get -> float
virtual Android.Views.WindowManagerLayoutParams.DesiredHdrHeadroom.set -> void
virtual Android.Views.WindowManagerLayoutParams.FrameRateBoostOnTouchEnabled.get -> bool
virtual Android.Views.WindowManagerLayoutParams.FrameRateBoostOnTouchEnabled.set -> void
virtual Android.Views.WindowManagerLayoutParams.FrameRatePowerSavingsBalanced.get -> bool
virtual Android.Views.WindowManagerLayoutParams.FrameRatePowerSavingsBalanced.set -> void
virtual Android.Widget.RemoteViews.SetOnStylusHandwritingPendingIntent(int viewId, Android.App.PendingIntent? pendingIntent) -> void
virtual Android.Widget.TextView.LocalePreferredLineHeightForMinimumUsed.get -> bool
virtual Android.Widget.TextView.LocalePreferredLineHeightForMinimumUsed.set -> void
virtual Android.Widget.TextView.MinimumFontMetrics.get -> Android.Graphics.Paint.FontMetrics?
virtual Android.Widget.TextView.MinimumFontMetrics.set -> void
virtual Android.Widget.TextView.ShiftDrawingOffsetForStartOverhang.get -> bool
virtual Android.Widget.TextView.ShiftDrawingOffsetForStartOverhang.set -> void
virtual Android.Widget.TextView.UseBoundsForWidth.get -> bool
virtual Android.Widget.TextView.UseBoundsForWidth.set -> void
virtual Java.Nio.ByteBuffer.Get(int index, byte[]! dst) -> Java.Nio.ByteBuffer!
virtual Java.Nio.ByteBuffer.Get(int index, byte[]! dst, int offset, int length) -> Java.Nio.ByteBuffer!
virtual Java.Nio.ByteBuffer.Put(int index, byte[]! src) -> Java.Nio.ByteBuffer!
virtual Java.Nio.ByteBuffer.Put(int index, byte[]! src, int offset, int length) -> Java.Nio.ByteBuffer!
virtual Java.Nio.ByteBuffer.Put(int index, Java.Nio.ByteBuffer! src, int offset, int length) -> Java.Nio.ByteBuffer!
virtual Java.Nio.CharBuffer.Get(int index, char[]? dst) -> Java.Nio.CharBuffer?
virtual Java.Nio.CharBuffer.Get(int index, char[]? dst, int offset, int length) -> Java.Nio.CharBuffer?
virtual Java.Nio.CharBuffer.Put(int index, char[]? src) -> Java.Nio.CharBuffer?
virtual Java.Nio.CharBuffer.Put(int index, char[]? src, int offset, int length) -> Java.Nio.CharBuffer?
virtual Java.Nio.CharBuffer.Put(int index, Java.Nio.CharBuffer? src, int offset, int length) -> Java.Nio.CharBuffer?
virtual Java.Nio.DoubleBuffer.Get(int index, double[]? dst) -> Java.Nio.DoubleBuffer?
virtual Java.Nio.DoubleBuffer.Get(int index, double[]? dst, int offset, int length) -> Java.Nio.DoubleBuffer?
virtual Java.Nio.DoubleBuffer.Put(int index, double[]? src) -> Java.Nio.DoubleBuffer?
virtual Java.Nio.DoubleBuffer.Put(int index, double[]? src, int offset, int length) -> Java.Nio.DoubleBuffer?
virtual Java.Nio.DoubleBuffer.Put(int index, Java.Nio.DoubleBuffer? src, int offset, int length) -> Java.Nio.DoubleBuffer?
virtual Java.Nio.FloatBuffer.Get(int index, float[]? dst) -> Java.Nio.FloatBuffer?
virtual Java.Nio.FloatBuffer.Get(int index, float[]? dst, int offset, int length) -> Java.Nio.FloatBuffer?
virtual Java.Nio.FloatBuffer.Put(int index, float[]? src) -> Java.Nio.FloatBuffer?
virtual Java.Nio.FloatBuffer.Put(int index, float[]? src, int offset, int length) -> Java.Nio.FloatBuffer?
virtual Java.Nio.FloatBuffer.Put(int index, Java.Nio.FloatBuffer? src, int offset, int length) -> Java.Nio.FloatBuffer?
virtual Java.Nio.IntBuffer.Get(int index, int[]? dst) -> Java.Nio.IntBuffer?
virtual Java.Nio.IntBuffer.Get(int index, int[]? dst, int offset, int length) -> Java.Nio.IntBuffer?
virtual Java.Nio.IntBuffer.Put(int index, int[]? src) -> Java.Nio.IntBuffer?
virtual Java.Nio.IntBuffer.Put(int index, int[]? src, int offset, int length) -> Java.Nio.IntBuffer?
virtual Java.Nio.IntBuffer.Put(int index, Java.Nio.IntBuffer? src, int offset, int length) -> Java.Nio.IntBuffer?
virtual Java.Nio.LongBuffer.Get(int index, long[]? dst) -> Java.Nio.LongBuffer?
virtual Java.Nio.LongBuffer.Get(int index, long[]? dst, int offset, int length) -> Java.Nio.LongBuffer?
virtual Java.Nio.LongBuffer.Put(int index, Java.Nio.LongBuffer? src, int offset, int length) -> Java.Nio.LongBuffer?
virtual Java.Nio.LongBuffer.Put(int index, long[]? src) -> Java.Nio.LongBuffer?
virtual Java.Nio.LongBuffer.Put(int index, long[]? src, int offset, int length) -> Java.Nio.LongBuffer?
virtual Java.Nio.ShortBuffer.Get(int index, short[]? dst) -> Java.Nio.ShortBuffer?
virtual Java.Nio.ShortBuffer.Get(int index, short[]? dst, int offset, int length) -> Java.Nio.ShortBuffer?
virtual Java.Nio.ShortBuffer.Put(int index, Java.Nio.ShortBuffer? src, int offset, int length) -> Java.Nio.ShortBuffer?
virtual Java.Nio.ShortBuffer.Put(int index, short[]? src) -> Java.Nio.ShortBuffer?
virtual Java.Nio.ShortBuffer.Put(int index, short[]? src, int offset, int length) -> Java.Nio.ShortBuffer?
virtual Java.Security.SecureRandom.NextBytes(byte[]? bytes, Java.Security.ISecureRandomParameters? params) -> void
virtual Java.Security.SecureRandom.Parameters.get -> Java.Security.ISecureRandomParameters?
virtual Java.Security.SecureRandom.Reseed() -> void
virtual Java.Security.SecureRandom.Reseed(Java.Security.ISecureRandomParameters? params) -> void
virtual Java.Security.SecureRandomSpi.EngineGetParameters() -> Java.Security.ISecureRandomParameters?
virtual Java.Security.SecureRandomSpi.EngineNextBytes(byte[]? bytes, Java.Security.ISecureRandomParameters? params) -> void
virtual Java.Security.SecureRandomSpi.EngineReseed(Java.Security.ISecureRandomParameters? params) -> void
virtual Java.Security.Spec.EdDSAParameterSpec.Context.get -> Java.Util.Optional?
virtual Java.Security.Spec.EdDSAParameterSpec.IsPrehash.get -> bool
virtual Java.Security.Spec.EncodedKeySpec.Algorithm.get -> string?
virtual Java.Security.Spec.RSAKeyGenParameterSpec.KeyParams.get -> Java.Security.Spec.IAlgorithmParameterSpec?
virtual Java.Security.Spec.RSAPrivateKeySpec.Params.get -> Java.Security.Spec.IAlgorithmParameterSpec?
virtual Java.Security.Spec.RSAPublicKeySpec.Params.get -> Java.Security.Spec.IAlgorithmParameterSpec?
virtual Java.Util.ArrayList.AddFirst(Java.Lang.Object? element) -> void
virtual Java.Util.ArrayList.AddLast(Java.Lang.Object? element) -> void
virtual Java.Util.ArrayList.First.get -> Java.Lang.Object?
virtual Java.Util.ArrayList.Last.get -> Java.Lang.Object?
virtual Java.Util.ArrayList.RemoveFirst() -> Java.Lang.Object?
virtual Java.Util.ArrayList.RemoveLast() -> Java.Lang.Object?
virtual Java.Util.Concurrent.ConcurrentSkipListMap.PutFirst(Java.Lang.Object? k, Java.Lang.Object? v) -> Java.Lang.Object?
virtual Java.Util.Concurrent.ConcurrentSkipListMap.PutLast(Java.Lang.Object? k, Java.Lang.Object? v) -> Java.Lang.Object?
virtual Java.Util.Concurrent.CopyOnWriteArrayList.AddFirst(Java.Lang.Object? e) -> void
virtual Java.Util.Concurrent.CopyOnWriteArrayList.AddLast(Java.Lang.Object? e) -> void
virtual Java.Util.Concurrent.CopyOnWriteArrayList.First.get -> Java.Lang.Object?
virtual Java.Util.Concurrent.CopyOnWriteArrayList.Last.get -> Java.Lang.Object?
virtual Java.Util.Concurrent.CopyOnWriteArrayList.RemoveFirst() -> Java.Lang.Object?
virtual Java.Util.Concurrent.CopyOnWriteArrayList.RemoveLast() -> Java.Lang.Object?
virtual Java.Util.Concurrent.CopyOnWriteArrayList.Reversed() -> System.Collections.IList!
virtual Java.Util.Concurrent.ThreadLocalRandom.NextFloat(float bound) -> float
virtual Java.Util.Concurrent.ThreadLocalRandom.NextFloat(float origin, float bound) -> float
virtual Java.Util.LinkedHashMap.PutFirst(Java.Lang.Object? k, Java.Lang.Object? v) -> Java.Lang.Object?
virtual Java.Util.LinkedHashMap.PutLast(Java.Lang.Object? k, Java.Lang.Object? v) -> Java.Lang.Object?
virtual Java.Util.LinkedHashMap.Reversed() -> Java.Util.ISequencedMap?
virtual Java.Util.LinkedHashMap.SequencedEntrySet() -> Java.Util.ISequencedSet?
virtual Java.Util.LinkedHashMap.SequencedKeySet() -> Java.Util.ISequencedSet?
virtual Java.Util.LinkedHashMap.SequencedValues() -> Java.Util.ISequencedCollection?
virtual Java.Util.LinkedHashSet.AddFirst(Java.Lang.Object? e) -> void
virtual Java.Util.LinkedHashSet.AddLast(Java.Lang.Object? e) -> void
virtual Java.Util.LinkedHashSet.First.get -> Java.Lang.Object?
virtual Java.Util.LinkedHashSet.Last.get -> Java.Lang.Object?
virtual Java.Util.LinkedHashSet.RemoveFirst() -> Java.Lang.Object?
virtual Java.Util.LinkedHashSet.RemoveLast() -> Java.Lang.Object?
virtual Java.Util.LinkedHashSet.Reversed() -> Java.Util.ISequencedCollection?
virtual Java.Util.LinkedList.Reversed() -> Java.Util.ISequencedCollection!
virtual Java.Util.Properties.Compute(Java.Lang.Object? key, Java.Util.Functions.IBiFunction? remappingFunction) -> Java.Lang.Object?
virtual Java.Util.Properties.ComputeIfAbsent(Java.Lang.Object? key, Java.Util.Functions.IFunction? mappingFunction) -> Java.Lang.Object?
virtual Java.Util.Properties.ComputeIfPresent(Java.Lang.Object? key, Java.Util.Functions.IBiFunction? remappingFunction) -> Java.Lang.Object?
virtual Java.Util.Properties.ForEach(Java.Util.Functions.IBiConsumer? action) -> void
virtual Java.Util.Properties.GetOrDefault(Java.Lang.Object? key, Java.Lang.Object? defaultValue) -> Java.Lang.Object?
virtual Java.Util.Properties.Merge(Java.Lang.Object? key, Java.Lang.Object? value, Java.Util.Functions.IBiFunction? remappingFunction) -> Java.Lang.Object?
virtual Java.Util.Properties.Put(Java.Lang.Object? key, Java.Lang.Object? value) -> Java.Lang.Object?
virtual Java.Util.Properties.PutAll(System.Collections.Generic.IDictionary<object!, object!>? t) -> void
virtual Java.Util.Properties.PutIfAbsent(Java.Lang.Object? key, Java.Lang.Object? value) -> Java.Lang.Object?
virtual Java.Util.Properties.Replace(Java.Lang.Object? key, Java.Lang.Object? oldValue, Java.Lang.Object? newValue) -> bool
virtual Java.Util.Properties.Replace(Java.Lang.Object? key, Java.Lang.Object? value) -> Java.Lang.Object?
virtual Java.Util.Properties.ReplaceAll(Java.Util.Functions.IBiFunction? function) -> void
virtual Java.Util.Properties.StoreToXML(System.IO.Stream? os, string? comment, Java.Nio.Charset.Charset? charset) -> void
virtual Java.Util.TreeMap.Compute(Java.Lang.Object? key, Java.Util.Functions.IBiFunction! remappingFunction) -> Java.Lang.Object?
virtual Java.Util.TreeMap.ComputeIfAbsent(Java.Lang.Object? key, Java.Util.Functions.IFunction! mappingFunction) -> Java.Lang.Object?
virtual Java.Util.TreeMap.ComputeIfPresent(Java.Lang.Object? key, Java.Util.Functions.IBiFunction! remappingFunction) -> Java.Lang.Object?
virtual Java.Util.TreeMap.Merge(Java.Lang.Object? key, Java.Lang.Object! value, Java.Util.Functions.IBiFunction! remappingFunction) -> Java.Lang.Object?
virtual Java.Util.TreeMap.PutFirst(Java.Lang.Object? k, Java.Lang.Object? v) -> Java.Lang.Object?
virtual Java.Util.TreeMap.PutIfAbsent(Java.Lang.Object? key, Java.Lang.Object? value) -> Java.Lang.Object?
virtual Java.Util.TreeMap.PutLast(Java.Lang.Object? k, Java.Lang.Object? v) -> Java.Lang.Object?
virtual Java.Util.TreeSet.AddFirst(Java.Lang.Object? e) -> void
virtual Java.Util.TreeSet.AddLast(Java.Lang.Object? e) -> void
virtual Java.Util.Zip.Deflater.Deflate(Java.Nio.ByteBuffer? output) -> int
virtual Java.Util.Zip.Deflater.Deflate(Java.Nio.ByteBuffer? output, int flush) -> int
virtual Java.Util.Zip.Deflater.SetDictionary(Java.Nio.ByteBuffer? dictionary) -> void
virtual Java.Util.Zip.Deflater.SetInput(Java.Nio.ByteBuffer? input) -> void
virtual Java.Util.Zip.Inflater.Inflate(Java.Nio.ByteBuffer? output) -> int
virtual Java.Util.Zip.Inflater.SetDictionary(Java.Nio.ByteBuffer? dictionary) -> void
virtual Java.Util.Zip.Inflater.SetInput(Java.Nio.ByteBuffer? input) -> void
virtual Java.Util.Zip.ZipEntry.TimeLocal.get -> Java.Time.LocalDateTime?
virtual Java.Util.Zip.ZipEntry.TimeLocal.set -> void
