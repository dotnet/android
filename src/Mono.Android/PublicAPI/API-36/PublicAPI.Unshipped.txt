#nullable enable
abstract Android.App.AppFunctions.AppFunctionService.OnExecuteFunction(Android.App.AppFunctions.ExecuteAppFunctionRequest! request, string! callingPackage, Android.Content.PM.SigningInfo! callingPackageSigningInfo, Android.OS.CancellationSignal! cancellationSignal, Android.OS.IOutcomeReceiver! callback) -> void
abstract Android.Media.TV.Ads.TvAdService.OnCreateSession(string! serviceId, string! type) -> Android.Media.TV.Ads.TvAdService.Session?
abstract Android.Media.TV.Ads.TvAdService.Session.OnRelease() -> void
abstract Android.Media.TV.Ads.TvAdService.Session.OnSetSurface(Android.Views.Surface? surface) -> bool
abstract Android.Ranging.RangingConfig.DescribeContents() -> int
abstract Android.Ranging.RangingConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
abstract Android.Service.Settings.Preferences.SettingsPreferenceService.OnGetAllPreferenceMetadata(Android.Service.Settings.Preferences.MetadataRequest! request, Android.OS.IOutcomeReceiver! callback) -> void
abstract Android.Service.Settings.Preferences.SettingsPreferenceService.OnGetPreferenceValue(Android.Service.Settings.Preferences.GetValueRequest! request, Android.OS.IOutcomeReceiver! callback) -> void
abstract Android.Service.Settings.Preferences.SettingsPreferenceService.OnSetPreferenceValue(Android.Service.Settings.Preferences.SetValueRequest! request, Android.OS.IOutcomeReceiver! callback) -> void
Android.AccessibilityServices.GlobalAction.MediaPlayPause = 22 -> Android.AccessibilityServices.GlobalAction
Android.AccessibilityServices.GlobalAction.Menu = 21 -> Android.AccessibilityServices.GlobalAction
Android.AdServices.AdSelection.AdSelectionOutcome.Builder.SetComponentAdUris(System.Collections.Generic.IList<Android.Net.Uri!>! componentAdUris) -> Android.AdServices.AdSelection.AdSelectionOutcome.Builder!
Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder.SetSellerConfiguration(Android.AdServices.AdSelection.SellerConfiguration? sellerConfiguration) -> Android.AdServices.AdSelection.GetAdSelectionDataRequest.Builder!
Android.AdServices.AdSelection.GetAdSelectionDataRequest.SellerConfiguration.get -> Android.AdServices.AdSelection.SellerConfiguration?
Android.AdServices.AdSelection.PerBuyerConfiguration
Android.AdServices.AdSelection.PerBuyerConfiguration.Builder
Android.AdServices.AdSelection.PerBuyerConfiguration.Builder.Build() -> Android.AdServices.AdSelection.PerBuyerConfiguration!
Android.AdServices.AdSelection.PerBuyerConfiguration.Builder.Builder() -> void
Android.AdServices.AdSelection.PerBuyerConfiguration.Builder.SetBuyer(Android.AdServices.Common.AdTechIdentifier! buyer) -> Android.AdServices.AdSelection.PerBuyerConfiguration.Builder!
Android.AdServices.AdSelection.PerBuyerConfiguration.Builder.SetTargetInputSizeBytes(int targetInputSizeB) -> Android.AdServices.AdSelection.PerBuyerConfiguration.Builder!
Android.AdServices.AdSelection.PerBuyerConfiguration.Buyer.get -> Android.AdServices.Common.AdTechIdentifier!
Android.AdServices.AdSelection.PerBuyerConfiguration.DescribeContents() -> int
Android.AdServices.AdSelection.PerBuyerConfiguration.InterfaceConsts
Android.AdServices.AdSelection.PerBuyerConfiguration.TargetInputSizeBytes.get -> int
Android.AdServices.AdSelection.PerBuyerConfiguration.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.AdSelection.ReportingDestination.ComponentSeller = 4 -> Android.AdServices.AdSelection.ReportingDestination
Android.AdServices.AdSelection.SellerConfiguration
Android.AdServices.AdSelection.SellerConfiguration.Builder
Android.AdServices.AdSelection.SellerConfiguration.Builder.Build() -> Android.AdServices.AdSelection.SellerConfiguration!
Android.AdServices.AdSelection.SellerConfiguration.Builder.Builder() -> void
Android.AdServices.AdSelection.SellerConfiguration.Builder.SetMaximumPayloadSizeBytes(int maximumPayloadSizeBytes) -> Android.AdServices.AdSelection.SellerConfiguration.Builder!
Android.AdServices.AdSelection.SellerConfiguration.Builder.SetPerBuyerConfigurations(System.Collections.Generic.ICollection<Android.AdServices.AdSelection.PerBuyerConfiguration!>! perBuyerConfigurations) -> Android.AdServices.AdSelection.SellerConfiguration.Builder!
Android.AdServices.AdSelection.SellerConfiguration.DescribeContents() -> int
Android.AdServices.AdSelection.SellerConfiguration.InterfaceConsts
Android.AdServices.AdSelection.SellerConfiguration.MaximumPayloadSizeBytes.get -> int
Android.AdServices.AdSelection.SellerConfiguration.PerBuyerConfigurations.get -> System.Collections.Generic.ICollection<Android.AdServices.AdSelection.PerBuyerConfiguration!>!
Android.AdServices.AdSelection.SellerConfiguration.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.Common.ComponentAdData
Android.AdServices.Common.ComponentAdData.AdRenderId.get -> string!
Android.AdServices.Common.ComponentAdData.ComponentAdData(Android.Net.Uri! renderUri, string! adRenderId) -> void
Android.AdServices.Common.ComponentAdData.DescribeContents() -> int
Android.AdServices.Common.ComponentAdData.InterfaceConsts
Android.AdServices.Common.ComponentAdData.RenderUri.get -> Android.Net.Uri!
Android.AdServices.Common.ComponentAdData.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.AdServices.CustomAudiences.CustomAudience.Builder.SetComponentAds(System.Collections.Generic.IList<Android.AdServices.Common.ComponentAdData!>! componentAds) -> Android.AdServices.CustomAudiences.CustomAudience.Builder!
Android.AdServices.CustomAudiences.CustomAudience.Builder.SetPriority(double priority) -> Android.AdServices.CustomAudiences.CustomAudience.Builder!
Android.AdServices.CustomAudiences.CustomAudience.ComponentAds.get -> System.Collections.Generic.IList<Android.AdServices.Common.ComponentAdData!>!
Android.AdServices.CustomAudiences.CustomAudience.Priority.get -> double
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder.Builder(Android.Net.Uri! updateUri, Java.Time.Duration! minDelay) -> void
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder.SetShouldReplacePendingUpdates(bool shouldReplacePendingUpdates) -> Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.Builder!
Android.AdServices.CustomAudiences.ScheduleCustomAudienceUpdateRequest.ShouldReplacePendingUpdates() -> bool
Android.AdServices.OnDevicePersonalization.AppInfo.AppInfo(bool installed) -> void
Android.AdServices.OnDevicePersonalization.DownloadCompletedInput.DownloadCompletedInput(Android.AdServices.OnDevicePersonalization.IKeyValueStore! downloadedContents) -> void
Android.AdServices.OnDevicePersonalization.EventInput.EventInput(Android.AdServices.OnDevicePersonalization.RequestLogRecord? requestLogRecord, Android.OS.PersistableBundle! parameters) -> void
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.Builder
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.Builder.Build() -> Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest!
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.Builder.Builder(Android.Content.ComponentName! service) -> void
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.Builder.SetAppParams(Android.OS.PersistableBundle! value) -> Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.Builder!
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.Builder.SetOutputSpec(Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec! value) -> Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.Builder!
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.ExecuteInIsolatedServiceRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.OutputSpec(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceResponse
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceResponse.ExecuteInIsolatedServiceResponse(Android.AdServices.OnDevicePersonalization.SurfacePackageToken? surfacePackageToken, int bestValue) -> void
Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceResponse.ExecuteInIsolatedServiceResponse(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.AdServices.OnDevicePersonalization.ExecuteInput.ExecuteInput(string! appPackageName, Android.OS.PersistableBundle! appParams) -> void
Android.AdServices.OnDevicePersonalization.ExecuteOutput.BestValue.get -> int
Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder.SetBestValue(int value) -> Android.AdServices.OnDevicePersonalization.ExecuteOutput.Builder!
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleRequest
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleRequest.FederatedComputeScheduleRequest(Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params! params, string! populationName) -> void
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleRequest.Params.get -> Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Params!
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleRequest.PopulationName.get -> string!
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleResponse
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleResponse.FederatedComputeScheduleRequest.get -> Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleRequest!
Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleResponse.FederatedComputeScheduleResponse(Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleRequest! federatedComputeScheduleRequest) -> void
Android.AdServices.OnDevicePersonalization.InferenceInput.Builder.Builder(Android.AdServices.OnDevicePersonalization.InferenceInput.Params! params, byte[]! inputData) -> void
Android.AdServices.OnDevicePersonalization.InferenceInput.Builder.SetInputData(byte[]! value) -> Android.AdServices.OnDevicePersonalization.InferenceInput.Builder!
Android.AdServices.OnDevicePersonalization.InferenceInput.GetData() -> byte[]!
Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder.SetData(byte[]! value) -> Android.AdServices.OnDevicePersonalization.InferenceOutput.Builder!
Android.AdServices.OnDevicePersonalization.InferenceOutput.GetData() -> byte[]!
Android.AdServices.OnDevicePersonalization.IsolatedServiceException.ErrorCode.get -> int
Android.AdServices.OnDevicePersonalization.IsolatedServiceException.IsolatedServiceException(int errorCode, Java.Lang.Throwable? cause) -> void
Android.AdServices.OnDevicePersonalization.IsolatedServiceException.IsolatedServiceException(int errorCode, string? message, Java.Lang.Throwable? cause) -> void
Android.AdServices.OnDevicePersonalization.ModelType.Executorch = 2 -> Android.AdServices.OnDevicePersonalization.ModelType
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.InferenceFailed = 9 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.InferenceModelNotFound = 8 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.InvalidTrainingManifest = 7 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.IsolatedServiceLoadingFailed = 3 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.IsolatedServiceManifestParsingFailed = 4 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.IsolatedServiceTimeout = 5 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.ScheduleTrainingFailed = 6 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature.Disabled = 1 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature.Enabled = 0 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature
Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature.Unsupported = 2 -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature
Android.AdServices.OnDevicePersonalization.OutputType
Android.AdServices.OnDevicePersonalization.OutputType.BestValue = 1 -> Android.AdServices.OnDevicePersonalization.OutputType
Android.AdServices.OnDevicePersonalization.OutputType.Null = 0 -> Android.AdServices.OnDevicePersonalization.OutputType
Android.AdServices.OnDevicePersonalization.RenderInput.RenderInput(int width, int height, Android.AdServices.OnDevicePersonalization.RenderingConfig? renderingConfig) -> void
Android.AdServices.OnDevicePersonalization.TrainingExamplesInput.CollectionName.get -> string?
Android.AdServices.OnDevicePersonalization.TrainingExamplesInput.TrainingExamplesInput(string! populationName, string! taskName, byte[]? resumptionToken, string? collectionName) -> void
Android.AdServices.OnDevicePersonalization.WebTriggerInput.WebTriggerInput(Android.Net.Uri! destinationUrl, string! appPackageName, byte[]! data) -> void
Android.App.Activity.RequestOpenInBrowserEducation() -> void
Android.App.Admin.DevicePolicyManagerAppFunctionsStatus
Android.App.Admin.DevicePolicyManagerAppFunctionsStatus.Disabled = 1 -> Android.App.Admin.DevicePolicyManagerAppFunctionsStatus
Android.App.Admin.DevicePolicyManagerAppFunctionsStatus.DisabledCrossProfile = 2 -> Android.App.Admin.DevicePolicyManagerAppFunctionsStatus
Android.App.Admin.DevicePolicyManagerAppFunctionsStatus.NotControlledByPolicy = 0 -> Android.App.Admin.DevicePolicyManagerAppFunctionsStatus
Android.App.Admin.DevicePolicyManagerAutoTimeStatus
Android.App.Admin.DevicePolicyManagerAutoTimeStatus.Disabled = 1 -> Android.App.Admin.DevicePolicyManagerAutoTimeStatus
Android.App.Admin.DevicePolicyManagerAutoTimeStatus.Enabled = 2 -> Android.App.Admin.DevicePolicyManagerAutoTimeStatus
Android.App.Admin.DevicePolicyManagerAutoTimeStatus.NotControlledByPolicy = 0 -> Android.App.Admin.DevicePolicyManagerAutoTimeStatus
Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus
Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus.Disabled = 1 -> Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus
Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus.Enabled = 2 -> Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus
Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus.NotControlledByPolicy = 0 -> Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus
Android.App.Admin.SecurityLogTags.NfcDisabled = 210046 -> Android.App.Admin.SecurityLogTags
Android.App.Admin.SecurityLogTags.NfcEnabled = 210045 -> Android.App.Admin.SecurityLogTags
Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionError.AppUnknownError = 3000 -> Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionError.Cancelled = 2001 -> Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionError.Denied = 1000 -> Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionError.Disabled = 1002 -> Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionError.EnterprisePolicyDisallowed = 2002 -> Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionError.FunctionNotFound = 1003 -> Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionError.InvalidArgument = 1001 -> Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionError.SystemError = 2000 -> Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionErrorCategory
Android.App.AppFunctions.AppFunctionErrorCategory.App = 3 -> Android.App.AppFunctions.AppFunctionErrorCategory
Android.App.AppFunctions.AppFunctionErrorCategory.RequestError = 1 -> Android.App.AppFunctions.AppFunctionErrorCategory
Android.App.AppFunctions.AppFunctionErrorCategory.System = 2 -> Android.App.AppFunctions.AppFunctionErrorCategory
Android.App.AppFunctions.AppFunctionErrorCategory.Unknown = 0 -> Android.App.AppFunctions.AppFunctionErrorCategory
Android.App.AppFunctions.AppFunctionException
Android.App.AppFunctions.AppFunctionException.AppFunctionException(Android.App.AppFunctions.AppFunctionError errorCode, string? errorMessage) -> void
Android.App.AppFunctions.AppFunctionException.AppFunctionException(Android.App.AppFunctions.AppFunctionError errorCode, string? errorMessage, Android.OS.Bundle! extras) -> void
Android.App.AppFunctions.AppFunctionException.DescribeContents() -> int
Android.App.AppFunctions.AppFunctionException.ErrorCategory.get -> Android.App.AppFunctions.AppFunctionErrorCategory
Android.App.AppFunctions.AppFunctionException.ErrorCode.get -> Android.App.AppFunctions.AppFunctionError
Android.App.AppFunctions.AppFunctionException.ErrorMessage.get -> string?
Android.App.AppFunctions.AppFunctionException.Extras.get -> Android.OS.Bundle!
Android.App.AppFunctions.AppFunctionException.InterfaceConsts
Android.App.AppFunctions.AppFunctionException.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppFunctions.AppFunctionManager
Android.App.AppFunctions.AppFunctionManager.ExecuteAppFunction(Android.App.AppFunctions.ExecuteAppFunctionRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.CancellationSignal! cancellationSignal, Android.OS.IOutcomeReceiver! callback) -> void
Android.App.AppFunctions.AppFunctionManager.IsAppFunctionEnabled(string! functionIdentifier, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
Android.App.AppFunctions.AppFunctionManager.IsAppFunctionEnabled(string! functionIdentifier, string! targetPackage, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
Android.App.AppFunctions.AppFunctionManager.SetAppFunctionEnabled(string! functionIdentifier, Android.App.AppFunctions.AppFunctionState newEnabledState, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
Android.App.AppFunctions.AppFunctionService
Android.App.AppFunctions.AppFunctionService.AppFunctionService() -> void
Android.App.AppFunctions.AppFunctionService.AppFunctionService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.App.AppFunctions.AppFunctionState
Android.App.AppFunctions.AppFunctionState.Default = 0 -> Android.App.AppFunctions.AppFunctionState
Android.App.AppFunctions.AppFunctionState.Disabled = 2 -> Android.App.AppFunctions.AppFunctionState
Android.App.AppFunctions.AppFunctionState.Enabled = 1 -> Android.App.AppFunctions.AppFunctionState
Android.App.AppFunctions.ExecuteAppFunctionRequest
Android.App.AppFunctions.ExecuteAppFunctionRequest.Builder
Android.App.AppFunctions.ExecuteAppFunctionRequest.Builder.Build() -> Android.App.AppFunctions.ExecuteAppFunctionRequest!
Android.App.AppFunctions.ExecuteAppFunctionRequest.Builder.Builder(string! targetPackageName, string! functionIdentifier) -> void
Android.App.AppFunctions.ExecuteAppFunctionRequest.Builder.SetExtras(Android.OS.Bundle! extras) -> Android.App.AppFunctions.ExecuteAppFunctionRequest.Builder!
Android.App.AppFunctions.ExecuteAppFunctionRequest.Builder.SetParameters(Android.App.AppSearch.GenericDocument! parameters) -> Android.App.AppFunctions.ExecuteAppFunctionRequest.Builder!
Android.App.AppFunctions.ExecuteAppFunctionRequest.DescribeContents() -> int
Android.App.AppFunctions.ExecuteAppFunctionRequest.Extras.get -> Android.OS.Bundle!
Android.App.AppFunctions.ExecuteAppFunctionRequest.FunctionIdentifier.get -> string!
Android.App.AppFunctions.ExecuteAppFunctionRequest.InterfaceConsts
Android.App.AppFunctions.ExecuteAppFunctionRequest.Parameters.get -> Android.App.AppSearch.GenericDocument!
Android.App.AppFunctions.ExecuteAppFunctionRequest.TargetPackageName.get -> string!
Android.App.AppFunctions.ExecuteAppFunctionRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppFunctions.ExecuteAppFunctionResponse
Android.App.AppFunctions.ExecuteAppFunctionResponse.DescribeContents() -> int
Android.App.AppFunctions.ExecuteAppFunctionResponse.ExecuteAppFunctionResponse(Android.App.AppSearch.GenericDocument! resultDocument) -> void
Android.App.AppFunctions.ExecuteAppFunctionResponse.ExecuteAppFunctionResponse(Android.App.AppSearch.GenericDocument! resultDocument, Android.OS.Bundle! extras) -> void
Android.App.AppFunctions.ExecuteAppFunctionResponse.Extras.get -> Android.OS.Bundle!
Android.App.AppFunctions.ExecuteAppFunctionResponse.InterfaceConsts
Android.App.AppFunctions.ExecuteAppFunctionResponse.ResultDocument.get -> Android.App.AppSearch.GenericDocument!
Android.App.AppFunctions.ExecuteAppFunctionResponse.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.ApplicationStartInfo.StartComponent.get -> Android.App.ApplicationStartInfoStartComponent
Android.App.ApplicationStartInfoStartComponent
Android.App.ApplicationStartInfoStartComponent.Activity = 1 -> Android.App.ApplicationStartInfoStartComponent
Android.App.ApplicationStartInfoStartComponent.Broadcast = 2 -> Android.App.ApplicationStartInfoStartComponent
Android.App.ApplicationStartInfoStartComponent.ContentProvider = 3 -> Android.App.ApplicationStartInfoStartComponent
Android.App.ApplicationStartInfoStartComponent.Other = 5 -> Android.App.ApplicationStartInfoStartComponent
Android.App.ApplicationStartInfoStartComponent.Service = 4 -> Android.App.ApplicationStartInfoStartComponent
Android.App.AppOpsManagerCallbackFlag
Android.App.AppOpsManagerCallbackFlag.Async = 1 -> Android.App.AppOpsManagerCallbackFlag
Android.App.AppOpsManagerCallbackFlag.None = 0 -> Android.App.AppOpsManagerCallbackFlag
Android.App.AppSearch.AppSearchBatchResult.Builder.Builder(Android.App.AppSearch.AppSearchBatchResult! appSearchBatchResult) -> void
Android.App.AppSearch.AppSearchBlobHandle
Android.App.AppSearch.AppSearchBlobHandle.DatabaseName.get -> string!
Android.App.AppSearch.AppSearchBlobHandle.DescribeContents() -> int
Android.App.AppSearch.AppSearchBlobHandle.GetSha256Digest() -> byte[]!
Android.App.AppSearch.AppSearchBlobHandle.InterfaceConsts
Android.App.AppSearch.AppSearchBlobHandle.Namespace.get -> string!
Android.App.AppSearch.AppSearchBlobHandle.PackageName.get -> string!
Android.App.AppSearch.AppSearchBlobHandle.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.AppSearchIndexingType
Android.App.AppSearch.AppSearchIndexingType.None = 0 -> Android.App.AppSearch.AppSearchIndexingType
Android.App.AppSearch.AppSearchIndexingType.Similarity = 1 -> Android.App.AppSearch.AppSearchIndexingType
Android.App.AppSearch.AppSearchQuantizationType
Android.App.AppSearch.AppSearchQuantizationType.None = 0 -> Android.App.AppSearch.AppSearchQuantizationType
Android.App.AppSearch.AppSearchQuantizationType.Type8Bit = 1 -> Android.App.AppSearch.AppSearchQuantizationType
Android.App.AppSearch.AppSearchResultCode.ResultAlreadyExists = 12 -> Android.App.AppSearch.AppSearchResultCode
Android.App.AppSearch.AppSearchSchema.BlobHandlePropertyConfig
Android.App.AppSearch.AppSearchSchema.BlobHandlePropertyConfig.Builder
Android.App.AppSearch.AppSearchSchema.BlobHandlePropertyConfig.Builder.Build() -> Android.App.AppSearch.AppSearchSchema.BlobHandlePropertyConfig!
Android.App.AppSearch.AppSearchSchema.BlobHandlePropertyConfig.Builder.Builder(string! propertyName) -> void
Android.App.AppSearch.AppSearchSchema.BlobHandlePropertyConfig.Builder.SetCardinality(int cardinality) -> Android.App.AppSearch.AppSearchSchema.BlobHandlePropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.BooleanPropertyConfig.Builder.SetScoringEnabled(bool scoringEnabled) -> Android.App.AppSearch.AppSearchSchema.BooleanPropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.BooleanPropertyConfig.IsScoringEnabled.get -> bool
Android.App.AppSearch.AppSearchSchema.Builder.Builder(Android.App.AppSearch.AppSearchSchema! schema) -> void
Android.App.AppSearch.AppSearchSchema.Builder.ClearParentTypes() -> Android.App.AppSearch.AppSearchSchema.Builder!
Android.App.AppSearch.AppSearchSchema.Builder.ClearProperties() -> Android.App.AppSearch.AppSearchSchema.Builder!
Android.App.AppSearch.AppSearchSchema.Builder.SetSchemaType(string! schemaType) -> Android.App.AppSearch.AppSearchSchema.Builder!
Android.App.AppSearch.AppSearchSchema.DoublePropertyConfig.Builder.SetScoringEnabled(bool scoringEnabled) -> Android.App.AppSearch.AppSearchSchema.DoublePropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.DoublePropertyConfig.IsScoringEnabled.get -> bool
Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig
Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder
Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder.Build() -> Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig!
Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder.Builder(string! propertyName) -> void
Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder.SetCardinality(int cardinality) -> Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder.SetIndexingType(int indexingType) -> Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder.SetQuantizationType(int quantizationType) -> Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.IndexingType.get -> int
Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.QuantizationType.get -> int
Android.App.AppSearch.AppSearchSchema.LongPropertyConfig.Builder.SetScoringEnabled(bool scoringEnabled) -> Android.App.AppSearch.AppSearchSchema.LongPropertyConfig.Builder!
Android.App.AppSearch.AppSearchSchema.LongPropertyConfig.IsScoringEnabled.get -> bool
Android.App.AppSearch.AppSearchSession.CommitBlob(System.Collections.Generic.ICollection<Android.App.AppSearch.AppSearchBlobHandle!>! handles, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
Android.App.AppSearch.AppSearchSession.OpenBlobForRead(System.Collections.Generic.ICollection<Android.App.AppSearch.AppSearchBlobHandle!>! handles, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
Android.App.AppSearch.AppSearchSession.OpenBlobForWrite(System.Collections.Generic.ICollection<Android.App.AppSearch.AppSearchBlobHandle!>! handles, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
Android.App.AppSearch.AppSearchSession.RemoveBlob(System.Collections.Generic.ICollection<Android.App.AppSearch.AppSearchBlobHandle!>! handles, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
Android.App.AppSearch.AppSearchSession.SetBlobVisibility(Android.App.AppSearch.SetBlobVisibilityRequest! request, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
Android.App.AppSearch.CommitBlobResponse
Android.App.AppSearch.CommitBlobResponse.CommitBlobResponse(Android.App.AppSearch.AppSearchBatchResult! result) -> void
Android.App.AppSearch.CommitBlobResponse.DescribeContents() -> int
Android.App.AppSearch.CommitBlobResponse.InterfaceConsts
Android.App.AppSearch.CommitBlobResponse.Result.get -> Android.App.AppSearch.AppSearchBatchResult!
Android.App.AppSearch.CommitBlobResponse.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.EmbeddingSearchMetricType
Android.App.AppSearch.EmbeddingSearchMetricType.Cosine = 1 -> Android.App.AppSearch.EmbeddingSearchMetricType
Android.App.AppSearch.EmbeddingSearchMetricType.Default = 0 -> Android.App.AppSearch.EmbeddingSearchMetricType
Android.App.AppSearch.EmbeddingSearchMetricType.DotProduct = 2 -> Android.App.AppSearch.EmbeddingSearchMetricType
Android.App.AppSearch.EmbeddingSearchMetricType.Euclidean = 3 -> Android.App.AppSearch.EmbeddingSearchMetricType
Android.App.AppSearch.EmbeddingVector
Android.App.AppSearch.EmbeddingVector.DescribeContents() -> int
Android.App.AppSearch.EmbeddingVector.EmbeddingVector(float[]! values, string! modelSignature) -> void
Android.App.AppSearch.EmbeddingVector.GetValues() -> float[]!
Android.App.AppSearch.EmbeddingVector.InterfaceConsts
Android.App.AppSearch.EmbeddingVector.ModelSignature.get -> string!
Android.App.AppSearch.EmbeddingVector.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.GetSchemaResponse.Builder.Builder(Android.App.AppSearch.GetSchemaResponse! getSchemaResponse) -> void
Android.App.AppSearch.GetSchemaResponse.Builder.ClearPubliclyVisibleSchema(string! schemaType) -> Android.App.AppSearch.GetSchemaResponse.Builder!
Android.App.AppSearch.GetSchemaResponse.Builder.ClearRequiredPermissionsForSchemaTypeVisibility(string! schemaType) -> Android.App.AppSearch.GetSchemaResponse.Builder!
Android.App.AppSearch.GetSchemaResponse.Builder.ClearSchemas() -> Android.App.AppSearch.GetSchemaResponse.Builder!
Android.App.AppSearch.GetSchemaResponse.Builder.ClearSchemaTypeNotDisplayedBySystem(string! schemaType) -> Android.App.AppSearch.GetSchemaResponse.Builder!
Android.App.AppSearch.GetSchemaResponse.Builder.ClearSchemaTypeVisibleToConfigs(string! schemaType) -> Android.App.AppSearch.GetSchemaResponse.Builder!
Android.App.AppSearch.GetSchemaResponse.Builder.ClearSchemaTypeVisibleToPackages(string! schemaType) -> Android.App.AppSearch.GetSchemaResponse.Builder!
Android.App.AppSearch.JoinSpec.Builder.Builder(Android.App.AppSearch.JoinSpec! joinSpec) -> void
Android.App.AppSearch.JoinSpec.Builder.SetChildPropertyExpression(string! childPropertyExpression) -> Android.App.AppSearch.JoinSpec.Builder!
Android.App.AppSearch.OpenBlobForReadResponse
Android.App.AppSearch.OpenBlobForReadResponse.Close() -> void
Android.App.AppSearch.OpenBlobForReadResponse.DescribeContents() -> int
Android.App.AppSearch.OpenBlobForReadResponse.InterfaceConsts
Android.App.AppSearch.OpenBlobForReadResponse.OpenBlobForReadResponse(Android.App.AppSearch.AppSearchBatchResult! result) -> void
Android.App.AppSearch.OpenBlobForReadResponse.Result.get -> Android.App.AppSearch.AppSearchBatchResult!
Android.App.AppSearch.OpenBlobForReadResponse.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.OpenBlobForWriteResponse
Android.App.AppSearch.OpenBlobForWriteResponse.Close() -> void
Android.App.AppSearch.OpenBlobForWriteResponse.DescribeContents() -> int
Android.App.AppSearch.OpenBlobForWriteResponse.InterfaceConsts
Android.App.AppSearch.OpenBlobForWriteResponse.OpenBlobForWriteResponse(Android.App.AppSearch.AppSearchBatchResult! result) -> void
Android.App.AppSearch.OpenBlobForWriteResponse.Result.get -> Android.App.AppSearch.AppSearchBatchResult!
Android.App.AppSearch.OpenBlobForWriteResponse.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.RemoveBlobResponse
Android.App.AppSearch.RemoveBlobResponse.DescribeContents() -> int
Android.App.AppSearch.RemoveBlobResponse.InterfaceConsts
Android.App.AppSearch.RemoveBlobResponse.RemoveBlobResponse(Android.App.AppSearch.AppSearchBatchResult! result) -> void
Android.App.AppSearch.RemoveBlobResponse.Result.get -> Android.App.AppSearch.AppSearchBatchResult!
Android.App.AppSearch.RemoveBlobResponse.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.AppSearch.SearchResult.Builder.AddInformationalRankingSignal(double rankingSignal) -> Android.App.AppSearch.SearchResult.Builder!
Android.App.AppSearch.SearchResult.Builder.SetParentTypeMap(System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IList<string!>!>! parentTypeMap) -> Android.App.AppSearch.SearchResult.Builder!
Android.App.AppSearch.SearchResult.InformationalRankingSignals.get -> System.Collections.Generic.IList<Java.Lang.Double!>!
Android.App.AppSearch.SearchResult.ParentTypeMap.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IList<string!>!>!
Android.App.AppSearch.SearchSpec.Builder.AddEmbeddingParameters(params Android.App.AppSearch.EmbeddingVector![]! searchEmbeddings) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.AddEmbeddingParameters(System.Collections.Generic.ICollection<Android.App.AppSearch.EmbeddingVector!>! searchEmbeddings) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.AddFilterDocumentIds(params string![]! documentIds) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.AddFilterDocumentIds(System.Collections.Generic.ICollection<string!>! documentIds) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.AddInformationalRankingExpressions(params string![]! informationalRankingExpressions) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.AddInformationalRankingExpressions(System.Collections.Generic.ICollection<string!>! informationalRankingExpressions) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.AddSearchStringParameters(params string![]! searchStringParameters) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.AddSearchStringParameters(System.Collections.Generic.IList<string!>! searchStringParameters) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.Builder(Android.App.AppSearch.SearchSpec! searchSpec) -> void
Android.App.AppSearch.SearchSpec.Builder.ClearEmbeddingParameters() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearFilterDocumentIds() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearFilterNamespaces() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearFilterPackageNames() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearFilterProperties() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearFilterSchemas() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearInformationalRankingExpressions() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearJoinSpec() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearProjections() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearPropertyWeights() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearResultGrouping() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearSearchSourceLogTag() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.ClearSearchStringParameters() -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.SetDefaultEmbeddingSearchMetricType(int defaultEmbeddingSearchMetricType) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.SetListFilterMatchScoreExpressionFunctionEnabled(bool enabled) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.Builder.SetScorablePropertyRankingEnabled(bool enabled) -> Android.App.AppSearch.SearchSpec.Builder!
Android.App.AppSearch.SearchSpec.DefaultEmbeddingSearchMetricType.get -> Android.App.AppSearch.EmbeddingSearchMetricType
Android.App.AppSearch.SearchSpec.EmbeddingParameters.get -> System.Collections.Generic.IList<Android.App.AppSearch.EmbeddingVector!>!
Android.App.AppSearch.SearchSpec.FilterDocumentIds.get -> System.Collections.Generic.IList<string!>!
Android.App.AppSearch.SearchSpec.InformationalRankingExpressions.get -> System.Collections.Generic.IList<string!>!
Android.App.AppSearch.SearchSpec.IsListFilterMatchScoreExpressionFunctionEnabled.get -> bool
Android.App.AppSearch.SearchSpec.IsScorablePropertyRankingEnabled.get -> bool
Android.App.AppSearch.SearchSpec.SearchStringParameters.get -> System.Collections.Generic.IList<string!>!
Android.App.AppSearch.SearchSuggestionSpec.Builder.AddSearchStringParameters(params string![]! searchStringParameters) -> Android.App.AppSearch.SearchSuggestionSpec.Builder!
Android.App.AppSearch.SearchSuggestionSpec.Builder.AddSearchStringParameters(System.Collections.Generic.IList<string!>! searchStringParameters) -> Android.App.AppSearch.SearchSuggestionSpec.Builder!
Android.App.AppSearch.SearchSuggestionSpec.SearchStringParameters.get -> System.Collections.Generic.IList<string!>!
Android.App.AppSearch.SetBlobVisibilityRequest
Android.App.AppSearch.SetBlobVisibilityRequest.Builder
Android.App.AppSearch.SetBlobVisibilityRequest.Builder.AddNamespaceVisibleToConfig(string! namespace, Android.App.AppSearch.SchemaVisibilityConfig! visibilityConfig) -> Android.App.AppSearch.SetBlobVisibilityRequest.Builder!
Android.App.AppSearch.SetBlobVisibilityRequest.Builder.Build() -> Android.App.AppSearch.SetBlobVisibilityRequest!
Android.App.AppSearch.SetBlobVisibilityRequest.Builder.Builder() -> void
Android.App.AppSearch.SetBlobVisibilityRequest.Builder.ClearNamespaceVisibleToConfigs(string! namespace) -> Android.App.AppSearch.SetBlobVisibilityRequest.Builder!
Android.App.AppSearch.SetBlobVisibilityRequest.Builder.SetNamespaceDisplayedBySystem(string! namespace, bool displayed) -> Android.App.AppSearch.SetBlobVisibilityRequest.Builder!
Android.App.AppSearch.SetBlobVisibilityRequest.SetBlobVisibilityRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.App.AppSearch.SetSchemaRequest.Builder.Builder(Android.App.AppSearch.SetSchemaRequest! request) -> void
Android.App.AppSearch.SetSchemaRequest.Builder.ClearMigrators() -> Android.App.AppSearch.SetSchemaRequest.Builder!
Android.App.AppSearch.SetSchemaRequest.Builder.ClearSchemas() -> Android.App.AppSearch.SetSchemaRequest.Builder!
Android.App.AppSearch.StorageInfo.Builder.SetBlobsCount(int blobsCount) -> Android.App.AppSearch.StorageInfo.Builder!
Android.App.AppSearch.StorageInfo.Builder.SetBlobsSizeBytes(long blobsSizeBytes) -> Android.App.AppSearch.StorageInfo.Builder!
Android.App.BackgroundActivityStartMode.AllowAlways = 3 -> Android.App.BackgroundActivityStartMode
Android.App.BackgroundActivityStartMode.AllowIfVisible = 4 -> Android.App.BackgroundActivityStartMode
Android.App.Jank.AppJankStats
Android.App.Jank.AppJankStats.AppJankStats(int appUid, string! widgetId, string? navigationComponent, string? widgetCategory, string? widgetState, long totalFrames, long jankyFrames, Android.App.Jank.RelativeFrameTimeHistogram! relativeFrameTimeHistogram) -> void
Android.App.Jank.AppJankStats.JankyFrameCount.get -> long
Android.App.Jank.AppJankStats.NavigationComponent.get -> string?
Android.App.Jank.AppJankStats.RelativeFrameTimeHistogram.get -> Android.App.Jank.RelativeFrameTimeHistogram!
Android.App.Jank.AppJankStats.TotalFrameCount.get -> long
Android.App.Jank.AppJankStats.Uid.get -> int
Android.App.Jank.AppJankStats.WidgetCategory.get -> string!
Android.App.Jank.AppJankStats.WidgetId.get -> string!
Android.App.Jank.AppJankStats.WidgetState.get -> string!
Android.App.Jank.RelativeFrameTimeHistogram
Android.App.Jank.RelativeFrameTimeHistogram.RelativeFrameTimeHistogram() -> void
Android.App.Jank.RelativeFrameTimeHistogram.RelativeFrameTimeHistogram(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.App.Job.PendingJobReason.ConstraintDeadline = 16 -> Android.App.Job.PendingJobReason
Android.App.Job.PendingJobReasonsInfo
Android.App.Job.PendingJobReasonsInfo.DescribeContents() -> int
Android.App.Job.PendingJobReasonsInfo.GetPendingJobReasons() -> int[]!
Android.App.Job.PendingJobReasonsInfo.InterfaceConsts
Android.App.Job.PendingJobReasonsInfo.PendingJobReasonsInfo(long timestampMillis, int[]! reasons) -> void
Android.App.Job.PendingJobReasonsInfo.TimestampMillis.get -> long
Android.App.Job.PendingJobReasonsInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.Job.StopReason.TimeoutAbandoned = 16 -> Android.App.Job.StopReason
Android.App.Notification.ProgressStyle
Android.App.Notification.ProgressStyle.Point
Android.App.Notification.ProgressStyle.Point.Color.get -> int
Android.App.Notification.ProgressStyle.Point.Id.get -> int
Android.App.Notification.ProgressStyle.Point.Point(int position) -> void
Android.App.Notification.ProgressStyle.Point.Position.get -> int
Android.App.Notification.ProgressStyle.Point.SetColor(Android.Graphics.Color color) -> Android.App.Notification.ProgressStyle.Point!
Android.App.Notification.ProgressStyle.Point.SetId(int id) -> Android.App.Notification.ProgressStyle.Point!
Android.App.Notification.ProgressStyle.ProgressStyle() -> void
Android.App.Notification.ProgressStyle.ProgressStyle(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.App.Notification.ProgressStyle.Segment
Android.App.Notification.ProgressStyle.Segment.Color.get -> int
Android.App.Notification.ProgressStyle.Segment.Id.get -> int
Android.App.Notification.ProgressStyle.Segment.Length.get -> int
Android.App.Notification.ProgressStyle.Segment.Segment(int length) -> void
Android.App.Notification.ProgressStyle.Segment.SetColor(Android.Graphics.Color color) -> Android.App.Notification.ProgressStyle.Segment!
Android.App.Notification.ProgressStyle.Segment.SetId(int id) -> Android.App.Notification.ProgressStyle.Segment!
Android.App.NotificationFlags.PromotedOngoing = 262144 -> Android.App.NotificationFlags
Android.App.SdkSandbox.SdkProvider.ISdkSandboxClientImportanceListener
Android.App.SdkSandbox.SdkProvider.ISdkSandboxClientImportanceListener.OnForegroundImportanceChanged(bool isForeground) -> void
Android.App.SdkSandbox.SdkProvider.SdkSandboxClientImportanceEventArgs
Android.App.SdkSandbox.SdkProvider.SdkSandboxClientImportanceEventArgs.IsForeground.get -> bool
Android.App.SdkSandbox.SdkProvider.SdkSandboxClientImportanceEventArgs.SdkSandboxClientImportanceEventArgs(bool isForeground) -> void
Android.App.Wallpaper.WallpaperDescription
Android.App.Wallpaper.WallpaperDescription.Builder
Android.App.Wallpaper.WallpaperDescription.Builder.Build() -> Android.App.Wallpaper.WallpaperDescription!
Android.App.Wallpaper.WallpaperDescription.Builder.Builder() -> void
Android.App.Wallpaper.WallpaperDescription.Builder.SetContent(Android.OS.PersistableBundle! content) -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.Builder.SetContextDescription(Java.Lang.ICharSequence? contextDescription) -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.Builder.SetContextDescription(string? contextDescription) -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.Builder.SetContextUri(Android.Net.Uri? contextUri) -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.Builder.SetDescription(System.Collections.Generic.IList<Java.Lang.ICharSequence!>! description) -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.Builder.SetId(string? id) -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.Builder.SetThumbnail(Android.Net.Uri? thumbnail) -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.Builder.SetTitle(Java.Lang.ICharSequence? title) -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.Builder.SetTitle(string? title) -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.Component.get -> Android.Content.ComponentName?
Android.App.Wallpaper.WallpaperDescription.Content.get -> Android.OS.PersistableBundle!
Android.App.Wallpaper.WallpaperDescription.ContextDescription.get -> string?
Android.App.Wallpaper.WallpaperDescription.ContextDescriptionFormatted.get -> Java.Lang.ICharSequence?
Android.App.Wallpaper.WallpaperDescription.ContextUri.get -> Android.Net.Uri?
Android.App.Wallpaper.WallpaperDescription.DescribeContents() -> int
Android.App.Wallpaper.WallpaperDescription.Description.get -> System.Collections.Generic.IList<Java.Lang.ICharSequence!>!
Android.App.Wallpaper.WallpaperDescription.Id.get -> string?
Android.App.Wallpaper.WallpaperDescription.InterfaceConsts
Android.App.Wallpaper.WallpaperDescription.Thumbnail.get -> Android.Net.Uri?
Android.App.Wallpaper.WallpaperDescription.Title.get -> string?
Android.App.Wallpaper.WallpaperDescription.TitleFormatted.get -> Java.Lang.ICharSequence?
Android.App.Wallpaper.WallpaperDescription.ToBuilder() -> Android.App.Wallpaper.WallpaperDescription.Builder!
Android.App.Wallpaper.WallpaperDescription.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.App.Wallpaper.WallpaperInstance
Android.App.Wallpaper.WallpaperInstance.DescribeContents() -> int
Android.App.Wallpaper.WallpaperInstance.Description.get -> Android.App.Wallpaper.WallpaperDescription!
Android.App.Wallpaper.WallpaperInstance.Id.get -> string!
Android.App.Wallpaper.WallpaperInstance.Info.get -> Android.App.WallpaperInfo?
Android.App.Wallpaper.WallpaperInstance.InterfaceConsts
Android.App.Wallpaper.WallpaperInstance.WallpaperInstance(Android.App.WallpaperInfo? info, Android.App.Wallpaper.WallpaperDescription! description) -> void
Android.App.Wallpaper.WallpaperInstance.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Appwidget.AppWidgetCategory.NotKeyguard = 8 -> Android.Appwidget.AppWidgetCategory
Android.Bluetooth.BluetoothAdapter.ListenUsingSocketSettings(Android.Bluetooth.BluetoothSocketSettings! settings) -> Android.Bluetooth.BluetoothServerSocket!
Android.Bluetooth.BluetoothConnectionType.Le = 4 -> Android.Bluetooth.BluetoothConnectionType
Android.Bluetooth.BluetoothDevice.BluetoothAddress
Android.Bluetooth.BluetoothDevice.BluetoothAddress.Address.get -> string?
Android.Bluetooth.BluetoothDevice.BluetoothAddress.AddressType.get -> int
Android.Bluetooth.BluetoothDevice.BluetoothAddress.BluetoothAddress(string? address, int addressType) -> void
Android.Bluetooth.BluetoothDevice.BluetoothAddress.DescribeContents() -> int
Android.Bluetooth.BluetoothDevice.BluetoothAddress.InterfaceConsts
Android.Bluetooth.BluetoothDevice.BluetoothAddress.WriteToParcel(Android.OS.Parcel! out, Android.OS.ParcelableWriteFlags flags) -> void
Android.Bluetooth.BluetoothDevice.CreateUsingSocketSettings(Android.Bluetooth.BluetoothSocketSettings! settings) -> Android.Bluetooth.BluetoothSocket!
Android.Bluetooth.BluetoothDevice.IdentityAddressWithType.get -> Android.Bluetooth.BluetoothDevice.BluetoothAddress!
Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm
Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm.Aes = 2 -> Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm
Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm.E0 = 1 -> Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm
Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm.None = 0 -> Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm
Android.Bluetooth.BluetoothLeSourceCodecType.Opus = 1 -> Android.Bluetooth.BluetoothLeSourceCodecType
Android.Bluetooth.BluetoothSocketSettings
Android.Bluetooth.BluetoothSocketSettings.Builder
Android.Bluetooth.BluetoothSocketSettings.Builder.Build() -> Android.Bluetooth.BluetoothSocketSettings!
Android.Bluetooth.BluetoothSocketSettings.Builder.Builder() -> void
Android.Bluetooth.BluetoothSocketSettings.Builder.SetAuthenticationRequired(bool authenticationRequired) -> Android.Bluetooth.BluetoothSocketSettings.Builder!
Android.Bluetooth.BluetoothSocketSettings.Builder.SetEncryptionRequired(bool encryptionRequired) -> Android.Bluetooth.BluetoothSocketSettings.Builder!
Android.Bluetooth.BluetoothSocketSettings.Builder.SetL2capPsm(int l2capPsm) -> Android.Bluetooth.BluetoothSocketSettings.Builder!
Android.Bluetooth.BluetoothSocketSettings.Builder.SetRfcommServiceName(string! rfcommServiceName) -> Android.Bluetooth.BluetoothSocketSettings.Builder!
Android.Bluetooth.BluetoothSocketSettings.Builder.SetRfcommUuid(Java.Util.UUID! rfcommUuid) -> Android.Bluetooth.BluetoothSocketSettings.Builder!
Android.Bluetooth.BluetoothSocketSettings.Builder.SetSocketType(int socketType) -> Android.Bluetooth.BluetoothSocketSettings.Builder!
Android.Bluetooth.BluetoothSocketSettings.IsAuthenticationRequired.get -> bool
Android.Bluetooth.BluetoothSocketSettings.IsEncryptionRequired.get -> bool
Android.Bluetooth.BluetoothSocketSettings.L2capPsm.get -> int
Android.Bluetooth.BluetoothSocketSettings.RfcommServiceName.get -> string?
Android.Bluetooth.BluetoothSocketSettings.RfcommUuid.get -> Java.Util.UUID?
Android.Bluetooth.BluetoothSocketSettings.SocketType.get -> Android.Bluetooth.BluetoothConnectionType
Android.Companion.AssociationInfo.DeviceId.get -> Android.Companion.DeviceId?
Android.Companion.CompanionDeviceManager.Callback.OnFailure(int errorCode, string? error) -> void
Android.Companion.CompanionDeviceManager.RemoveBond(int associationId) -> bool
Android.Companion.CompanionDeviceManager.SetDeviceId(int associationId, Android.Companion.DeviceId? deviceId) -> void
Android.Companion.CompanionDeviceManager.StartObservingDevicePresence(Android.Companion.ObservingDevicePresenceRequest! request) -> void
Android.Companion.CompanionDeviceManager.StopObservingDevicePresence(Android.Companion.ObservingDevicePresenceRequest! request) -> void
Android.Companion.CompanionDeviceResult.SecurityError = 4 -> Android.Companion.CompanionDeviceResult
Android.Companion.DeviceId
Android.Companion.DeviceId.Builder
Android.Companion.DeviceId.Builder.Build() -> Android.Companion.DeviceId!
Android.Companion.DeviceId.Builder.Builder() -> void
Android.Companion.DeviceId.Builder.SetCustomId(string? customId) -> Android.Companion.DeviceId.Builder!
Android.Companion.DeviceId.Builder.SetMacAddress(Android.Net.MacAddress? macAddress) -> Android.Companion.DeviceId.Builder!
Android.Companion.DeviceId.CustomId.get -> string?
Android.Companion.DeviceId.DescribeContents() -> int
Android.Companion.DeviceId.InterfaceConsts
Android.Companion.DeviceId.MacAddress.get -> Android.Net.MacAddress?
Android.Companion.DeviceId.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Companion.DevicePresenceEvent
Android.Companion.DevicePresenceEvent.AssociationId.get -> int
Android.Companion.DevicePresenceEvent.DescribeContents() -> int
Android.Companion.DevicePresenceEvent.DevicePresenceEvent(int associationId, Android.Companion.DevicePresenceEventType e, Android.OS.ParcelUuid? uuid) -> void
Android.Companion.DevicePresenceEvent.Event.get -> Android.Companion.DevicePresenceEventType
Android.Companion.DevicePresenceEvent.InterfaceConsts
Android.Companion.DevicePresenceEvent.Uuid.get -> Android.OS.ParcelUuid?
Android.Companion.DevicePresenceEvent.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Companion.DevicePresenceEventType
Android.Companion.DevicePresenceEventType.BleAppeared = 0 -> Android.Companion.DevicePresenceEventType
Android.Companion.DevicePresenceEventType.BleDisappeared = 1 -> Android.Companion.DevicePresenceEventType
Android.Companion.DevicePresenceEventType.BtConnected = 2 -> Android.Companion.DevicePresenceEventType
Android.Companion.DevicePresenceEventType.BtDisconnected = 3 -> Android.Companion.DevicePresenceEventType
Android.Companion.DevicePresenceEventType.SelfManagedAppeared = 4 -> Android.Companion.DevicePresenceEventType
Android.Companion.DevicePresenceEventType.SelfManagedDisappeared = 5 -> Android.Companion.DevicePresenceEventType
Android.Companion.ObservingDevicePresenceRequest
Android.Companion.ObservingDevicePresenceRequest.AssociationId.get -> int
Android.Companion.ObservingDevicePresenceRequest.Builder
Android.Companion.ObservingDevicePresenceRequest.Builder.Build() -> Android.Companion.ObservingDevicePresenceRequest!
Android.Companion.ObservingDevicePresenceRequest.Builder.Builder() -> void
Android.Companion.ObservingDevicePresenceRequest.Builder.SetAssociationId(int associationId) -> Android.Companion.ObservingDevicePresenceRequest.Builder!
Android.Companion.ObservingDevicePresenceRequest.Builder.SetUuid(Android.OS.ParcelUuid! uuid) -> Android.Companion.ObservingDevicePresenceRequest.Builder!
Android.Companion.ObservingDevicePresenceRequest.DescribeContents() -> int
Android.Companion.ObservingDevicePresenceRequest.InterfaceConsts
Android.Companion.ObservingDevicePresenceRequest.Uuid.get -> Android.OS.ParcelUuid?
Android.Companion.ObservingDevicePresenceRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Content.PM.ConfigChanges.AssetsPaths = -2147483648 -> Android.Content.PM.ConfigChanges
Android.Content.PM.ConfigChanges.ResourcesUnused = 134217728 -> Android.Content.PM.ConfigChanges
Android.Content.PM.LauncherUserInfo.UserConfig.get -> Android.OS.Bundle!
Android.Content.PM.SharedLibraryInfo.CertDigests.get -> System.Collections.Generic.IList<string!>!
Android.Content.PM.SigningInfo.SignersMatchExactly(Android.Content.PM.SigningInfo! other) -> bool
Android.Content.PM.SigningInfoException
Android.Content.PM.SigningInfoException.SigningInfoException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Content.PM.SigningInfoVersion
Android.Content.PM.SigningInfoVersion.Jar = 1 -> Android.Content.PM.SigningInfoVersion
Android.Content.PM.SigningInfoVersion.SigningBlockV2 = 2 -> Android.Content.PM.SigningInfoVersion
Android.Content.PM.SigningInfoVersion.SigningBlockV3 = 3 -> Android.Content.PM.SigningInfoVersion
Android.Content.PM.SigningInfoVersion.SigningBlockV4 = 4 -> Android.Content.PM.SigningInfoVersion
Android.Graphics.Gainmap.AlternativeImagePrimaries.get -> Android.Graphics.ColorSpace?
Android.Graphics.Gainmap.AlternativeImagePrimaries.set -> void
Android.Graphics.Gainmap.GainmapDirection.get -> Android.Graphics.GainmapDirection
Android.Graphics.Gainmap.GainmapDirection.set -> void
Android.Graphics.GainmapDirection
Android.Graphics.GainmapDirection.HdrToSdr = 1 -> Android.Graphics.GainmapDirection
Android.Graphics.GainmapDirection.SdrToHdr = 0 -> Android.Graphics.GainmapDirection
Android.Graphics.ImageFormatType.HeicUltrahdr = 4102 -> Android.Graphics.ImageFormatType
Android.Graphics.ImageFormatType.YcbcrP210 = 60 -> Android.Graphics.ImageFormatType
Android.Graphics.PaintFlags.VerticalText = 4096 -> Android.Graphics.PaintFlags
Android.Graphics.RuntimeColorFilter
Android.Graphics.RuntimeColorFilter.RuntimeColorFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Graphics.RuntimeColorFilter.RuntimeColorFilter(string! agsl) -> void
Android.Graphics.RuntimeXfermode
Android.Graphics.RuntimeXfermode.RuntimeXfermode(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Graphics.RuntimeXfermode.RuntimeXfermode(string! agsl) -> void
Android.Hardware.Biometrics.BiometricCode.ErrorIdentityCheckNotActive = 20 -> Android.Hardware.Biometrics.BiometricCode
Android.Hardware.Biometrics.BiometricCode.ErrorNotEnabledForApps = 21 -> Android.Hardware.Biometrics.BiometricCode
Android.Hardware.Biometrics.BiometricErrorCode.IdentityCheckNotActive = 20 -> Android.Hardware.Biometrics.BiometricErrorCode
Android.Hardware.Biometrics.BiometricErrorCode.NotEnabledForApps = 21 -> Android.Hardware.Biometrics.BiometricErrorCode
Android.Hardware.Biometrics.BiometricManagerAuthenticators.IdentityCheck = 65536 -> Android.Hardware.Biometrics.BiometricManagerAuthenticators
Android.Hardware.Camera2.ColorCorrectionMode.Cct = 3 -> Android.Hardware.Camera2.ColorCorrectionMode
Android.Hardware.Camera2.ControlAePriorityMode
Android.Hardware.Camera2.ControlAePriorityMode.Off = 0 -> Android.Hardware.Camera2.ControlAePriorityMode
Android.Hardware.Camera2.ControlAePriorityMode.SensorExposureTimePriority = 2 -> Android.Hardware.Camera2.ControlAePriorityMode
Android.Hardware.Camera2.ControlAePriorityMode.SensorSensitivityPriority = 1 -> Android.Hardware.Camera2.ControlAePriorityMode
Android.Hardware.Camera2.ControlZoomMethod
Android.Hardware.Camera2.ControlZoomMethod.Auto = 0 -> Android.Hardware.Camera2.ControlZoomMethod
Android.Hardware.Camera2.ControlZoomMethod.ZoomRatio = 1 -> Android.Hardware.Camera2.ControlZoomMethod
Android.Hardware.Camera2.ExtensionNightModeIndicator
Android.Hardware.Camera2.ExtensionNightModeIndicator.Off = 1 -> Android.Hardware.Camera2.ExtensionNightModeIndicator
Android.Hardware.Camera2.ExtensionNightModeIndicator.On = 2 -> Android.Hardware.Camera2.ExtensionNightModeIndicator
Android.Hardware.Camera2.ExtensionNightModeIndicator.Unknown = 0 -> Android.Hardware.Camera2.ExtensionNightModeIndicator
Android.Hardware.Camera2.MultiResolutionImageReader.MultiResolutionImageReader(System.Collections.Generic.ICollection<Android.Hardware.Camera2.Params.MultiResolutionStreamInfo!>! streams, Android.Graphics.ImageFormatType format, int maxImages, long usage) -> void
Android.Hardware.Camera2.Params.OutputConfiguration.SetMirrorMode(Android.Views.Surface! surface, Android.Hardware.Camera2.Params.MirrorMode mirrorMode) -> void
Android.Hardware.DataSpaceType.HeifUltrahdr = 4102 -> Android.Hardware.DataSpaceType
Android.Hardware.Display.DisplayManager.RegisterDisplayListener(Java.Util.Concurrent.IExecutor! executor, long eventFilter, Android.Hardware.Display.DisplayManager.IDisplayListener! listener) -> void
Android.Hardware.Display.VirtualDisplay.SetRotation(Android.Views.SurfaceOrientation rotation) -> void
Android.Hardware.Display.VirtualDisplayConfig.BrightnessEventArgs
Android.Hardware.Display.VirtualDisplayConfig.BrightnessEventArgs.Brightness.get -> float
Android.Hardware.Display.VirtualDisplayConfig.BrightnessEventArgs.BrightnessEventArgs(float brightness) -> void
Android.Hardware.Display.VirtualDisplayConfig.Builder.SetBrightnessListener(Java.Util.Concurrent.IExecutor! executor, Android.Hardware.Display.VirtualDisplayConfig.IBrightnessListener! listener) -> Android.Hardware.Display.VirtualDisplayConfig.Builder!
Android.Hardware.Display.VirtualDisplayConfig.Builder.SetDefaultBrightness(float brightness) -> Android.Hardware.Display.VirtualDisplayConfig.Builder!
Android.Hardware.Display.VirtualDisplayConfig.Builder.SetDimBrightness(float brightness) -> Android.Hardware.Display.VirtualDisplayConfig.Builder!
Android.Hardware.Display.VirtualDisplayConfig.DefaultBrightness.get -> float
Android.Hardware.Display.VirtualDisplayConfig.DimBrightness.get -> float
Android.Hardware.Display.VirtualDisplayConfig.IBrightnessListener
Android.Hardware.Display.VirtualDisplayConfig.IBrightnessListener.OnBrightnessChanged(float brightness) -> void
Android.Hardware.DisplayLuts
Android.Hardware.DisplayLuts.DisplayLuts() -> void
Android.Hardware.DisplayLuts.Entry
Android.Hardware.DisplayLuts.Entry.Entry(float[]! buffer, int dimension, int samplingKey) -> void
Android.Hardware.DisplayLuts.Entry.Entry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Hardware.DisplayLuts.Set(Android.Hardware.DisplayLuts.Entry! entry) -> void
Android.Hardware.DisplayLuts.Set(Android.Hardware.DisplayLuts.Entry! first, Android.Hardware.DisplayLuts.Entry! second) -> void
Android.Hardware.HardwareBufferFormat.YcbcrP210 = 60 -> Android.Hardware.HardwareBufferFormat
Android.Hardware.LutProperties
Android.Hardware.LutProperties.Dimension.get -> Android.Hardware.LutPropertiesDimension
Android.Hardware.LutProperties.GetSamplingKeys() -> int[]!
Android.Hardware.LutProperties.Size.get -> int
Android.Hardware.LutPropertiesDimension
Android.Hardware.LutPropertiesDimension.OneDimension = 1 -> Android.Hardware.LutPropertiesDimension
Android.Hardware.LutPropertiesDimension.ThreeDimension = 3 -> Android.Hardware.LutPropertiesDimension
Android.Hardware.LutPropertiesSamplingKey
Android.Hardware.LutPropertiesSamplingKey.CieY = 2 -> Android.Hardware.LutPropertiesSamplingKey
Android.Hardware.LutPropertiesSamplingKey.MaxRgb = 1 -> Android.Hardware.LutPropertiesSamplingKey
Android.Hardware.LutPropertiesSamplingKey.Rgb = 0 -> Android.Hardware.LutPropertiesSamplingKey
Android.Hardware.OverlayProperties.GetLutProperties() -> Android.Hardware.LutProperties![]!
Android.Health.Connect.CreateMedicalDataSourceRequest
Android.Health.Connect.CreateMedicalDataSourceRequest.Builder
Android.Health.Connect.CreateMedicalDataSourceRequest.Builder.Build() -> Android.Health.Connect.CreateMedicalDataSourceRequest!
Android.Health.Connect.CreateMedicalDataSourceRequest.Builder.Builder(Android.Health.Connect.CreateMedicalDataSourceRequest! other) -> void
Android.Health.Connect.CreateMedicalDataSourceRequest.Builder.Builder(Android.Health.Connect.CreateMedicalDataSourceRequest.Builder! other) -> void
Android.Health.Connect.CreateMedicalDataSourceRequest.Builder.Builder(Android.Net.Uri! fhirBaseUri, string! displayName, Android.Health.Connect.DataTypes.FhirVersion! fhirVersion) -> void
Android.Health.Connect.CreateMedicalDataSourceRequest.Builder.SetDisplayName(string! displayName) -> Android.Health.Connect.CreateMedicalDataSourceRequest.Builder!
Android.Health.Connect.CreateMedicalDataSourceRequest.Builder.SetFhirBaseUri(Android.Net.Uri! fhirBaseUri) -> Android.Health.Connect.CreateMedicalDataSourceRequest.Builder!
Android.Health.Connect.CreateMedicalDataSourceRequest.Builder.SetFhirVersion(Android.Health.Connect.DataTypes.FhirVersion! fhirVersion) -> Android.Health.Connect.CreateMedicalDataSourceRequest.Builder!
Android.Health.Connect.CreateMedicalDataSourceRequest.DescribeContents() -> int
Android.Health.Connect.CreateMedicalDataSourceRequest.DisplayName.get -> string!
Android.Health.Connect.CreateMedicalDataSourceRequest.FhirBaseUri.get -> Android.Net.Uri!
Android.Health.Connect.CreateMedicalDataSourceRequest.FhirVersion.get -> Android.Health.Connect.DataTypes.FhirVersion!
Android.Health.Connect.CreateMedicalDataSourceRequest.InterfaceConsts
Android.Health.Connect.CreateMedicalDataSourceRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Health.Connect.DataTypes.ActivityIntensityRecord
Android.Health.Connect.DataTypes.ActivityIntensityRecord.ActivityIntensityType.get -> Android.Health.Connect.DataTypes.ActivityIntensityType
Android.Health.Connect.DataTypes.ActivityIntensityRecord.Builder
Android.Health.Connect.DataTypes.ActivityIntensityRecord.Builder.Build() -> Android.Health.Connect.DataTypes.ActivityIntensityRecord!
Android.Health.Connect.DataTypes.ActivityIntensityRecord.Builder.Builder(Android.Health.Connect.DataTypes.Metadata! metadata, Java.Time.Instant! startTime, Java.Time.Instant! endTime, int activityIntensityType) -> void
Android.Health.Connect.DataTypes.ActivityIntensityRecord.Builder.SetEndZoneOffset(Java.Time.ZoneOffset! endZoneOffset) -> Android.Health.Connect.DataTypes.ActivityIntensityRecord.Builder!
Android.Health.Connect.DataTypes.ActivityIntensityRecord.Builder.SetStartZoneOffset(Java.Time.ZoneOffset! startZoneOffset) -> Android.Health.Connect.DataTypes.ActivityIntensityRecord.Builder!
Android.Health.Connect.DataTypes.ActivityIntensityType
Android.Health.Connect.DataTypes.ActivityIntensityType.Moderate = 0 -> Android.Health.Connect.DataTypes.ActivityIntensityType
Android.Health.Connect.DataTypes.ActivityIntensityType.Vigorous = 1 -> Android.Health.Connect.DataTypes.ActivityIntensityType
Android.Health.Connect.DataTypes.FhirResource
Android.Health.Connect.DataTypes.FhirResource.Builder
Android.Health.Connect.DataTypes.FhirResource.Builder.Build() -> Android.Health.Connect.DataTypes.FhirResource!
Android.Health.Connect.DataTypes.FhirResource.Builder.Builder(Android.Health.Connect.DataTypes.FhirResource! other) -> void
Android.Health.Connect.DataTypes.FhirResource.Builder.Builder(Android.Health.Connect.DataTypes.FhirResource.Builder! other) -> void
Android.Health.Connect.DataTypes.FhirResource.Builder.Builder(int type, string! id, string! data) -> void
Android.Health.Connect.DataTypes.FhirResource.Builder.SetData(string! data) -> Android.Health.Connect.DataTypes.FhirResource.Builder!
Android.Health.Connect.DataTypes.FhirResource.Builder.SetId(string! id) -> Android.Health.Connect.DataTypes.FhirResource.Builder!
Android.Health.Connect.DataTypes.FhirResource.Builder.SetType(int type) -> Android.Health.Connect.DataTypes.FhirResource.Builder!
Android.Health.Connect.DataTypes.FhirResource.Data.get -> string!
Android.Health.Connect.DataTypes.FhirResource.DescribeContents() -> int
Android.Health.Connect.DataTypes.FhirResource.Id.get -> string!
Android.Health.Connect.DataTypes.FhirResource.InterfaceConsts
Android.Health.Connect.DataTypes.FhirResource.Type.get -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResource.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.AllergyIntolerance = 2 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Condition = 4 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Encounter = 12 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Immunization = 1 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Location = 13 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Medication = 6 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.MedicationRequest = 7 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.MedicationStatement = 8 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Observation = 3 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Organization = 14 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Patient = 9 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Practitioner = 10 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.PractitionerRole = 11 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirResourceType.Procedure = 5 -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.DataTypes.FhirVersion
Android.Health.Connect.DataTypes.FhirVersion.DescribeContents() -> int
Android.Health.Connect.DataTypes.FhirVersion.InterfaceConsts
Android.Health.Connect.DataTypes.FhirVersion.IsSupportedFhirVersion.get -> bool
Android.Health.Connect.DataTypes.FhirVersion.Major.get -> int
Android.Health.Connect.DataTypes.FhirVersion.Minor.get -> int
Android.Health.Connect.DataTypes.FhirVersion.Patch.get -> int
Android.Health.Connect.DataTypes.FhirVersion.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Health.Connect.DataTypes.MedicalDataSource
Android.Health.Connect.DataTypes.MedicalDataSource.Builder
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.Build() -> Android.Health.Connect.DataTypes.MedicalDataSource!
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.Builder(Android.Health.Connect.DataTypes.MedicalDataSource! other) -> void
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.Builder(Android.Health.Connect.DataTypes.MedicalDataSource.Builder! other) -> void
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.Builder(string! id, string! packageName, Android.Net.Uri! fhirBaseUri, string! displayName, Android.Health.Connect.DataTypes.FhirVersion! fhirVersion) -> void
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.SetDisplayName(string! displayName) -> Android.Health.Connect.DataTypes.MedicalDataSource.Builder!
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.SetFhirBaseUri(Android.Net.Uri! fhirBaseUri) -> Android.Health.Connect.DataTypes.MedicalDataSource.Builder!
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.SetFhirVersion(Android.Health.Connect.DataTypes.FhirVersion! fhirVersion) -> Android.Health.Connect.DataTypes.MedicalDataSource.Builder!
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.SetId(string! id) -> Android.Health.Connect.DataTypes.MedicalDataSource.Builder!
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.SetLastDataUpdateTime(Java.Time.Instant? lastDataUpdateTime) -> Android.Health.Connect.DataTypes.MedicalDataSource.Builder!
Android.Health.Connect.DataTypes.MedicalDataSource.Builder.SetPackageName(string! packageName) -> Android.Health.Connect.DataTypes.MedicalDataSource.Builder!
Android.Health.Connect.DataTypes.MedicalDataSource.DescribeContents() -> int
Android.Health.Connect.DataTypes.MedicalDataSource.DisplayName.get -> string!
Android.Health.Connect.DataTypes.MedicalDataSource.FhirBaseUri.get -> Android.Net.Uri!
Android.Health.Connect.DataTypes.MedicalDataSource.FhirVersion.get -> Android.Health.Connect.DataTypes.FhirVersion!
Android.Health.Connect.DataTypes.MedicalDataSource.Id.get -> string!
Android.Health.Connect.DataTypes.MedicalDataSource.InterfaceConsts
Android.Health.Connect.DataTypes.MedicalDataSource.LastDataUpdateTime.get -> Java.Time.Instant?
Android.Health.Connect.DataTypes.MedicalDataSource.PackageName.get -> string!
Android.Health.Connect.DataTypes.MedicalDataSource.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Health.Connect.DataTypes.MedicalResource
Android.Health.Connect.DataTypes.MedicalResource.Builder
Android.Health.Connect.DataTypes.MedicalResource.Builder.Build() -> Android.Health.Connect.DataTypes.MedicalResource!
Android.Health.Connect.DataTypes.MedicalResource.Builder.Builder(Android.Health.Connect.DataTypes.MedicalResource! other) -> void
Android.Health.Connect.DataTypes.MedicalResource.Builder.Builder(Android.Health.Connect.DataTypes.MedicalResource.Builder! other) -> void
Android.Health.Connect.DataTypes.MedicalResource.Builder.Builder(int type, string! dataSourceId, Android.Health.Connect.DataTypes.FhirVersion! fhirVersion, Android.Health.Connect.DataTypes.FhirResource! fhirResource) -> void
Android.Health.Connect.DataTypes.MedicalResource.Builder.SetDataSourceId(string! dataSourceId) -> Android.Health.Connect.DataTypes.MedicalResource.Builder!
Android.Health.Connect.DataTypes.MedicalResource.Builder.SetFhirResource(Android.Health.Connect.DataTypes.FhirResource! fhirResource) -> Android.Health.Connect.DataTypes.MedicalResource.Builder!
Android.Health.Connect.DataTypes.MedicalResource.Builder.SetFhirVersion(Android.Health.Connect.DataTypes.FhirVersion! fhirVersion) -> Android.Health.Connect.DataTypes.MedicalResource.Builder!
Android.Health.Connect.DataTypes.MedicalResource.Builder.SetType(int type) -> Android.Health.Connect.DataTypes.MedicalResource.Builder!
Android.Health.Connect.DataTypes.MedicalResource.DataSourceId.get -> string!
Android.Health.Connect.DataTypes.MedicalResource.DescribeContents() -> int
Android.Health.Connect.DataTypes.MedicalResource.FhirResource.get -> Android.Health.Connect.DataTypes.FhirResource!
Android.Health.Connect.DataTypes.MedicalResource.FhirVersion.get -> Android.Health.Connect.DataTypes.FhirVersion!
Android.Health.Connect.DataTypes.MedicalResource.Id.get -> Android.Health.Connect.MedicalResourceId!
Android.Health.Connect.DataTypes.MedicalResource.InterfaceConsts
Android.Health.Connect.DataTypes.MedicalResource.Type.get -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResource.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.AllergiesIntolerances = 2 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.Conditions = 7 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.LaboratoryResults = 6 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.Medications = 9 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.PersonalDetails = 10 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.PractitionerDetails = 11 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.Pregnancy = 3 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.Procedures = 8 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.SocialHistory = 4 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.Vaccines = 1 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.Visits = 12 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MedicalResourceType.VitalSigns = 5 -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.DataTypes.MindfulnessSessionRecord
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder.Build() -> Android.Health.Connect.DataTypes.MindfulnessSessionRecord!
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder.Builder(Android.Health.Connect.DataTypes.Metadata! metadata, Java.Time.Instant! startTime, Java.Time.Instant! endTime, int mindfulnessSessionType) -> void
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder.SetEndZoneOffset(Java.Time.ZoneOffset! endZoneOffset) -> Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder!
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder.SetNotes(Java.Lang.ICharSequence? notes) -> Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder!
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder.SetNotes(string? notes) -> Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder!
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder.SetStartZoneOffset(Java.Time.ZoneOffset! startZoneOffset) -> Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder!
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder.SetTitle(Java.Lang.ICharSequence? title) -> Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder!
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder.SetTitle(string? title) -> Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder!
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.MindfulnessSessionType.get -> Android.Health.Connect.DataTypes.MindfulnessSessionType
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Notes.get -> string?
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.NotesFormatted.get -> Java.Lang.ICharSequence?
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Title.get -> string?
Android.Health.Connect.DataTypes.MindfulnessSessionRecord.TitleFormatted.get -> Java.Lang.ICharSequence?
Android.Health.Connect.DataTypes.MindfulnessSessionType
Android.Health.Connect.DataTypes.MindfulnessSessionType.Breathing = 3 -> Android.Health.Connect.DataTypes.MindfulnessSessionType
Android.Health.Connect.DataTypes.MindfulnessSessionType.Meditation = 1 -> Android.Health.Connect.DataTypes.MindfulnessSessionType
Android.Health.Connect.DataTypes.MindfulnessSessionType.Movement = 5 -> Android.Health.Connect.DataTypes.MindfulnessSessionType
Android.Health.Connect.DataTypes.MindfulnessSessionType.Music = 4 -> Android.Health.Connect.DataTypes.MindfulnessSessionType
Android.Health.Connect.DataTypes.MindfulnessSessionType.Other = 2 -> Android.Health.Connect.DataTypes.MindfulnessSessionType
Android.Health.Connect.DataTypes.MindfulnessSessionType.Unguided = 6 -> Android.Health.Connect.DataTypes.MindfulnessSessionType
Android.Health.Connect.DataTypes.MindfulnessSessionType.Unknown = 0 -> Android.Health.Connect.DataTypes.MindfulnessSessionType
Android.Health.Connect.DeleteMedicalResourcesRequest
Android.Health.Connect.DeleteMedicalResourcesRequest.Builder
Android.Health.Connect.DeleteMedicalResourcesRequest.Builder.AddDataSourceId(string! dataSourceId) -> Android.Health.Connect.DeleteMedicalResourcesRequest.Builder!
Android.Health.Connect.DeleteMedicalResourcesRequest.Builder.AddMedicalResourceType(int resourceType) -> Android.Health.Connect.DeleteMedicalResourcesRequest.Builder!
Android.Health.Connect.DeleteMedicalResourcesRequest.Builder.Build() -> Android.Health.Connect.DeleteMedicalResourcesRequest!
Android.Health.Connect.DeleteMedicalResourcesRequest.Builder.Builder() -> void
Android.Health.Connect.DeleteMedicalResourcesRequest.Builder.Builder(Android.Health.Connect.DeleteMedicalResourcesRequest! other) -> void
Android.Health.Connect.DeleteMedicalResourcesRequest.Builder.Builder(Android.Health.Connect.DeleteMedicalResourcesRequest.Builder! other) -> void
Android.Health.Connect.DeleteMedicalResourcesRequest.Builder.ClearDataSourceIds() -> Android.Health.Connect.DeleteMedicalResourcesRequest.Builder!
Android.Health.Connect.DeleteMedicalResourcesRequest.Builder.ClearMedicalResourceTypes() -> Android.Health.Connect.DeleteMedicalResourcesRequest.Builder!
Android.Health.Connect.DeleteMedicalResourcesRequest.DataSourceIds.get -> System.Collections.Generic.ICollection<string!>!
Android.Health.Connect.DeleteMedicalResourcesRequest.DescribeContents() -> int
Android.Health.Connect.DeleteMedicalResourcesRequest.InterfaceConsts
Android.Health.Connect.DeleteMedicalResourcesRequest.MedicalResourceTypes.get -> System.Collections.Generic.ICollection<Java.Lang.Integer!>!
Android.Health.Connect.DeleteMedicalResourcesRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Health.Connect.GetMedicalDataSourcesRequest
Android.Health.Connect.GetMedicalDataSourcesRequest.Builder
Android.Health.Connect.GetMedicalDataSourcesRequest.Builder.AddPackageName(string! packageName) -> Android.Health.Connect.GetMedicalDataSourcesRequest.Builder!
Android.Health.Connect.GetMedicalDataSourcesRequest.Builder.Build() -> Android.Health.Connect.GetMedicalDataSourcesRequest!
Android.Health.Connect.GetMedicalDataSourcesRequest.Builder.Builder() -> void
Android.Health.Connect.GetMedicalDataSourcesRequest.Builder.Builder(Android.Health.Connect.GetMedicalDataSourcesRequest! other) -> void
Android.Health.Connect.GetMedicalDataSourcesRequest.Builder.Builder(Android.Health.Connect.GetMedicalDataSourcesRequest.Builder! other) -> void
Android.Health.Connect.GetMedicalDataSourcesRequest.Builder.ClearPackageNames() -> Android.Health.Connect.GetMedicalDataSourcesRequest.Builder!
Android.Health.Connect.GetMedicalDataSourcesRequest.DescribeContents() -> int
Android.Health.Connect.GetMedicalDataSourcesRequest.InterfaceConsts
Android.Health.Connect.GetMedicalDataSourcesRequest.PackageNames.get -> System.Collections.Generic.ICollection<string!>!
Android.Health.Connect.GetMedicalDataSourcesRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Health.Connect.MedicalResourceId
Android.Health.Connect.MedicalResourceId.DataSourceId.get -> string!
Android.Health.Connect.MedicalResourceId.DescribeContents() -> int
Android.Health.Connect.MedicalResourceId.FhirResourceId.get -> string!
Android.Health.Connect.MedicalResourceId.FhirResourceType.get -> Android.Health.Connect.DataTypes.FhirResourceType
Android.Health.Connect.MedicalResourceId.InterfaceConsts
Android.Health.Connect.MedicalResourceId.MedicalResourceId(string! dataSourceId, Android.Health.Connect.DataTypes.FhirResourceType fhirResourceType, string! fhirResourceId) -> void
Android.Health.Connect.MedicalResourceId.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Health.Connect.ReadMedicalResourcesInitialRequest
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.AddDataSourceId(string! dataSourceId) -> Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder!
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.AddDataSourceIds(System.Collections.Generic.ICollection<string!>! dataSourceIds) -> Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder!
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.Build() -> Android.Health.Connect.ReadMedicalResourcesInitialRequest!
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.Builder(Android.Health.Connect.ReadMedicalResourcesInitialRequest! other) -> void
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.Builder(Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder! other) -> void
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.Builder(int medicalResourceType) -> void
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.ClearDataSourceIds() -> Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder!
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.SetMedicalResourceType(int medicalResourceType) -> Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder!
Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.SetPageSize(int pageSize) -> Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder!
Android.Health.Connect.ReadMedicalResourcesInitialRequest.DataSourceIds.get -> System.Collections.Generic.ICollection<string!>!
Android.Health.Connect.ReadMedicalResourcesInitialRequest.MedicalResourceType.get -> Android.Health.Connect.DataTypes.MedicalResourceType
Android.Health.Connect.ReadMedicalResourcesPageRequest
Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder
Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder.Build() -> Android.Health.Connect.ReadMedicalResourcesPageRequest!
Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder.Builder(Android.Health.Connect.ReadMedicalResourcesPageRequest! other) -> void
Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder.Builder(Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder! other) -> void
Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder.Builder(string! pageToken) -> void
Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder.SetPageSize(int pageSize) -> Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder!
Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder.SetPageToken(string! pageToken) -> Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder!
Android.Health.Connect.ReadMedicalResourcesPageRequest.PageToken.get -> string!
Android.Health.Connect.ReadMedicalResourcesRequest
Android.Health.Connect.ReadMedicalResourcesRequest.ReadMedicalResourcesRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Health.Connect.ReadMedicalResourcesResponse
Android.Health.Connect.ReadMedicalResourcesResponse.DescribeContents() -> int
Android.Health.Connect.ReadMedicalResourcesResponse.InterfaceConsts
Android.Health.Connect.ReadMedicalResourcesResponse.MedicalResources.get -> System.Collections.Generic.IList<Android.Health.Connect.DataTypes.MedicalResource!>!
Android.Health.Connect.ReadMedicalResourcesResponse.NextPageToken.get -> string?
Android.Health.Connect.ReadMedicalResourcesResponse.ReadMedicalResourcesResponse(System.Collections.Generic.IList<Android.Health.Connect.DataTypes.MedicalResource!>! medicalResources, string? nextPageToken, int remainingCount) -> void
Android.Health.Connect.ReadMedicalResourcesResponse.RemainingCount.get -> int
Android.Health.Connect.ReadMedicalResourcesResponse.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Health.Connect.UpsertMedicalResourceRequest
Android.Health.Connect.UpsertMedicalResourceRequest.Builder
Android.Health.Connect.UpsertMedicalResourceRequest.Builder.Build() -> Android.Health.Connect.UpsertMedicalResourceRequest!
Android.Health.Connect.UpsertMedicalResourceRequest.Builder.Builder(Android.Health.Connect.UpsertMedicalResourceRequest! other) -> void
Android.Health.Connect.UpsertMedicalResourceRequest.Builder.Builder(Android.Health.Connect.UpsertMedicalResourceRequest.Builder! other) -> void
Android.Health.Connect.UpsertMedicalResourceRequest.Builder.Builder(string! dataSourceId, Android.Health.Connect.DataTypes.FhirVersion! fhirVersion, string! data) -> void
Android.Health.Connect.UpsertMedicalResourceRequest.Builder.SetData(string! data) -> Android.Health.Connect.UpsertMedicalResourceRequest.Builder!
Android.Health.Connect.UpsertMedicalResourceRequest.Builder.SetDataSourceId(string! dataSourceId) -> Android.Health.Connect.UpsertMedicalResourceRequest.Builder!
Android.Health.Connect.UpsertMedicalResourceRequest.Builder.SetFhirVersion(Android.Health.Connect.DataTypes.FhirVersion! fhirVersion) -> Android.Health.Connect.UpsertMedicalResourceRequest.Builder!
Android.Health.Connect.UpsertMedicalResourceRequest.Data.get -> string!
Android.Health.Connect.UpsertMedicalResourceRequest.DataSourceId.get -> string!
Android.Health.Connect.UpsertMedicalResourceRequest.DescribeContents() -> int
Android.Health.Connect.UpsertMedicalResourceRequest.FhirVersion.get -> Android.Health.Connect.DataTypes.FhirVersion!
Android.Health.Connect.UpsertMedicalResourceRequest.InterfaceConsts
Android.Health.Connect.UpsertMedicalResourceRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Icu.Text.UnicodeSetOptions.SimpleCaseInsensitive = 6 -> Android.Icu.Text.UnicodeSetOptions
Android.InputMethodServices.InputMethodService.SetStylusHandwritingRegion(Android.Graphics.Region! handwritingRegion) -> void
Android.Media.AudioDeviceInfo.SpeakerLayoutChannelMask.get -> Android.Media.ChannelOut
Android.Media.AudioDeviceType.MultichannelGroup = 32 -> Android.Media.AudioDeviceType
Android.Media.Encoding.IamfBaseEnhancedProfileAac = 42 -> Android.Media.Encoding
Android.Media.Encoding.IamfBaseEnhancedProfileFlac = 43 -> Android.Media.Encoding
Android.Media.Encoding.IamfBaseEnhancedProfileOpus = 41 -> Android.Media.Encoding
Android.Media.Encoding.IamfBaseEnhancedProfilePcm = 44 -> Android.Media.Encoding
Android.Media.Encoding.IamfBaseProfileAac = 38 -> Android.Media.Encoding
Android.Media.Encoding.IamfBaseProfileFlac = 39 -> Android.Media.Encoding
Android.Media.Encoding.IamfBaseProfileOpus = 37 -> Android.Media.Encoding
Android.Media.Encoding.IamfBaseProfilePcm = 40 -> Android.Media.Encoding
Android.Media.Encoding.IamfSimpleProfileAac = 34 -> Android.Media.Encoding
Android.Media.Encoding.IamfSimpleProfileFlac = 35 -> Android.Media.Encoding
Android.Media.Encoding.IamfSimpleProfileOpus = 33 -> Android.Media.Encoding
Android.Media.Encoding.IamfSimpleProfilePcm = 36 -> Android.Media.Encoding
Android.Media.IAudioRouting.RoutedDevices.get -> System.Collections.Generic.IList<Android.Media.AudioDeviceInfo!>!
Android.Media.MediaCodecCapabilities.Formatyuvp210 = 60 -> Android.Media.MediaCodecCapabilities
Android.Media.MediaCodecInfo.SecurityModel.get -> Android.Media.MediaCodecSecurityModel
Android.Media.MediaCodecProfileLevel.Apvlevel11band0 = 513 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel11band1 = 514 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel11band2 = 516 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel11band3 = 520 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel1band0 = 257 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel1band1 = 258 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel1band2 = 260 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel1band3 = 264 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel21band0 = 2049 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel21band1 = 2050 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel21band2 = 2052 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel21band3 = 2056 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel2band0 = 1025 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel2band1 = 1026 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel2band2 = 1028 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel2band3 = 1032 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel31band0 = 8193 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel31band1 = 8194 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel31band2 = 8196 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel31band3 = 8200 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel3band0 = 4097 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel3band1 = 4098 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel3band2 = 4100 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel3band3 = 4104 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel41band0 = 32769 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel41band1 = 32770 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel41band2 = 32772 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel41band3 = 32776 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel4band0 = 16385 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel4band1 = 16386 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel4band2 = 16388 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel4band3 = 16392 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel51band0 = 131073 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel51band1 = 131074 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel51band2 = 131076 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel51band3 = 131080 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel5band0 = 65537 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel5band1 = 65538 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel5band2 = 65540 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel5band3 = 65544 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel61band0 = 524289 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel61band1 = 524290 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel61band2 = 524292 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel61band3 = 524296 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel6band0 = 262145 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel6band1 = 262146 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel6band2 = 262148 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel6band3 = 262152 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel71band0 = 2097153 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel71band1 = 2097154 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel71band2 = 2097156 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel71band3 = 2097160 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel7band0 = 1048577 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel7band1 = 1048578 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel7band2 = 1048580 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileLevel.Apvlevel7band3 = 1048584 -> Android.Media.MediaCodecProfileLevel
Android.Media.MediaCodecProfileType.Apvprofile42210 = 1 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Apvprofile42210hdr10 = 4096 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Apvprofile42210hdr10plus = 8192 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilebaseaac = 16908290 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilebaseenhancedaac = 17039362 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilebaseenhancedflac = 17039364 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilebaseenhancedopus = 17039361 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilebaseenhancedpcm = 17039368 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilebaseflac = 16908292 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilebaseopus = 16908289 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilebasepcm = 16908296 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilesimpleaac = 16842754 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilesimpleflac = 16842756 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilesimpleopus = 16842753 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecProfileType.Iamfprofilesimplepcm = 16842760 -> Android.Media.MediaCodecProfileType
Android.Media.MediaCodecSecurityModel
Android.Media.MediaCodecSecurityModel.MemorySafe = 1 -> Android.Media.MediaCodecSecurityModel
Android.Media.MediaCodecSecurityModel.Sandboxed = 0 -> Android.Media.MediaCodecSecurityModel
Android.Media.MediaFormatSecurityModel
Android.Media.MediaFormatSecurityModel.MemorySafe = 2 -> Android.Media.MediaFormatSecurityModel
Android.Media.MediaFormatSecurityModel.Sandboxed = 1 -> Android.Media.MediaFormatSecurityModel
Android.Media.MediaRoute2Type.AuxLine = 19 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.LineAnalog = 5 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.LineDigital = 6 -> Android.Media.MediaRoute2Type
Android.Media.MediaRoute2Type.MultichannelSpeakerGroup = 32 -> Android.Media.MediaRoute2Type
Android.Media.Quality.ActiveProcessingPicture
Android.Media.Quality.ActiveProcessingPicture.ActiveProcessingPicture(int id, string! profileId) -> void
Android.Media.Quality.ActiveProcessingPicture.DescribeContents() -> int
Android.Media.Quality.ActiveProcessingPicture.Id.get -> int
Android.Media.Quality.ActiveProcessingPicture.InterfaceConsts
Android.Media.Quality.ActiveProcessingPicture.ProfileId.get -> string!
Android.Media.Quality.ActiveProcessingPicture.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Quality.AmbientBacklightEvent
Android.Media.Quality.AmbientBacklightEvent.AmbientBacklightEvent(Android.Media.Quality.AmbientBacklightEventType eventType, Android.Media.Quality.AmbientBacklightMetadata? metadata) -> void
Android.Media.Quality.AmbientBacklightEvent.DescribeContents() -> int
Android.Media.Quality.AmbientBacklightEvent.EventType.get -> Android.Media.Quality.AmbientBacklightEventType
Android.Media.Quality.AmbientBacklightEvent.InterfaceConsts
Android.Media.Quality.AmbientBacklightEvent.Metadata.get -> Android.Media.Quality.AmbientBacklightMetadata?
Android.Media.Quality.AmbientBacklightEvent.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Quality.AmbientBacklightEventType
Android.Media.Quality.AmbientBacklightEventType.Disabled = 2 -> Android.Media.Quality.AmbientBacklightEventType
Android.Media.Quality.AmbientBacklightEventType.Enabled = 1 -> Android.Media.Quality.AmbientBacklightEventType
Android.Media.Quality.AmbientBacklightEventType.Interrupted = 4 -> Android.Media.Quality.AmbientBacklightEventType
Android.Media.Quality.AmbientBacklightEventType.MetadataAvailable = 3 -> Android.Media.Quality.AmbientBacklightEventType
Android.Media.Quality.AmbientBacklightMetadata
Android.Media.Quality.AmbientBacklightMetadata.AmbientBacklightMetadata(string! packageName, Android.Media.Quality.AmbientBacklightMetadataAlgorithm compressAlgorithm, Android.Media.Quality.AmbientBacklightSettingsSource source, Android.Graphics.Format colorFormat, int horizontalZonesNumber, int verticalZonesNumber, int[]! zonesColors) -> void
Android.Media.Quality.AmbientBacklightMetadata.ColorFormat.get -> Android.Graphics.Format
Android.Media.Quality.AmbientBacklightMetadata.CompressionAlgorithm.get -> Android.Media.Quality.AmbientBacklightMetadataAlgorithm
Android.Media.Quality.AmbientBacklightMetadata.DescribeContents() -> int
Android.Media.Quality.AmbientBacklightMetadata.GetZoneColors() -> int[]!
Android.Media.Quality.AmbientBacklightMetadata.HorizontalZonesCount.get -> int
Android.Media.Quality.AmbientBacklightMetadata.InterfaceConsts
Android.Media.Quality.AmbientBacklightMetadata.PackageName.get -> string!
Android.Media.Quality.AmbientBacklightMetadata.Source.get -> Android.Media.Quality.AmbientBacklightSettingsSource
Android.Media.Quality.AmbientBacklightMetadata.VerticalZonesCount.get -> int
Android.Media.Quality.AmbientBacklightMetadata.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Quality.AmbientBacklightMetadataAlgorithm
Android.Media.Quality.AmbientBacklightMetadataAlgorithm.None = 0 -> Android.Media.Quality.AmbientBacklightMetadataAlgorithm
Android.Media.Quality.AmbientBacklightMetadataAlgorithm.Rle = 1 -> Android.Media.Quality.AmbientBacklightMetadataAlgorithm
Android.Media.Quality.AmbientBacklightSettings
Android.Media.Quality.AmbientBacklightSettings.AmbientBacklightSettings(Android.Media.Quality.AmbientBacklightSettingsSource source, int maxFps, Android.Graphics.Format colorFormat, int horizontalZonesNumber, int verticalZonesNumber, bool isLetterboxOmitted, int threshold) -> void
Android.Media.Quality.AmbientBacklightSettings.ColorFormat.get -> Android.Graphics.Format
Android.Media.Quality.AmbientBacklightSettings.DescribeContents() -> int
Android.Media.Quality.AmbientBacklightSettings.HorizontalZonesCount.get -> int
Android.Media.Quality.AmbientBacklightSettings.InterfaceConsts
Android.Media.Quality.AmbientBacklightSettings.IsLetterboxOmitted.get -> bool
Android.Media.Quality.AmbientBacklightSettings.MaxFps.get -> int
Android.Media.Quality.AmbientBacklightSettings.Source.get -> Android.Media.Quality.AmbientBacklightSettingsSource
Android.Media.Quality.AmbientBacklightSettings.Threshold.get -> int
Android.Media.Quality.AmbientBacklightSettings.VerticalZonesCount.get -> int
Android.Media.Quality.AmbientBacklightSettings.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Quality.AmbientBacklightSettingsSource
Android.Media.Quality.AmbientBacklightSettingsSource.Audio = 1 -> Android.Media.Quality.AmbientBacklightSettingsSource
Android.Media.Quality.AmbientBacklightSettingsSource.AudioVideo = 3 -> Android.Media.Quality.AmbientBacklightSettingsSource
Android.Media.Quality.AmbientBacklightSettingsSource.None = 0 -> Android.Media.Quality.AmbientBacklightSettingsSource
Android.Media.Quality.AmbientBacklightSettingsSource.Video = 2 -> Android.Media.Quality.AmbientBacklightSettingsSource
Android.Media.Quality.MediaQualityContract
Android.Media.Quality.MediaQualityContract.MediaQualityContract(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.Quality.MediaQualityContract.PictureQuality
Android.Media.Quality.MediaQualityContract.SoundQuality
Android.Media.Quality.MediaQualityManager
Android.Media.Quality.MediaQualityManager.AddActiveProcessingPictureListener(Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! listener) -> void
Android.Media.Quality.MediaQualityManager.AmbientBacklightEnabled.get -> bool
Android.Media.Quality.MediaQualityManager.AmbientBacklightEnabled.set -> void
Android.Media.Quality.MediaQualityManager.CreatePictureProfile(Android.Media.Quality.PictureProfile! pp) -> void
Android.Media.Quality.MediaQualityManager.CreateSoundProfile(Android.Media.Quality.SoundProfile! sp) -> void
Android.Media.Quality.MediaQualityManager.GetAvailablePictureProfiles(Android.Media.Quality.MediaQualityManager.ProfileQueryParams? options) -> System.Collections.Generic.IList<Android.Media.Quality.PictureProfile!>!
Android.Media.Quality.MediaQualityManager.GetAvailableSoundProfiles(Android.Media.Quality.MediaQualityManager.ProfileQueryParams? options) -> System.Collections.Generic.IList<Android.Media.Quality.SoundProfile!>!
Android.Media.Quality.MediaQualityManager.GetParameterCapabilities(System.Collections.Generic.IList<string!>! names) -> System.Collections.Generic.IList<Android.Media.Quality.ParameterCapability!>!
Android.Media.Quality.MediaQualityManager.GetPictureProfile(Android.Media.Quality.PictureProfileType type, string! name, Android.Media.Quality.MediaQualityManager.ProfileQueryParams? options) -> Android.Media.Quality.PictureProfile?
Android.Media.Quality.MediaQualityManager.GetSoundProfile(Android.Media.Quality.SoundProfileType type, string! name, Android.Media.Quality.MediaQualityManager.ProfileQueryParams? options) -> Android.Media.Quality.SoundProfile?
Android.Media.Quality.MediaQualityManager.IAmbientBacklightCallback
Android.Media.Quality.MediaQualityManager.IAmbientBacklightCallback.OnAmbientBacklightEvent(Android.Media.Quality.AmbientBacklightEvent! e) -> void
Android.Media.Quality.MediaQualityManager.IsAutoPictureQualityEnabled.get -> bool
Android.Media.Quality.MediaQualityManager.IsAutoSoundQualityEnabled.get -> bool
Android.Media.Quality.MediaQualityManager.IsSuperResolutionEnabled.get -> bool
Android.Media.Quality.MediaQualityManager.PictureProfileCallback
Android.Media.Quality.MediaQualityManager.PictureProfileCallback.PictureProfileCallback() -> void
Android.Media.Quality.MediaQualityManager.PictureProfileCallback.PictureProfileCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.Quality.MediaQualityManager.ProfileQueryParams
Android.Media.Quality.MediaQualityManager.ProfileQueryParams.AreParametersIncluded() -> bool
Android.Media.Quality.MediaQualityManager.ProfileQueryParams.Builder
Android.Media.Quality.MediaQualityManager.ProfileQueryParams.Builder.Build() -> Android.Media.Quality.MediaQualityManager.ProfileQueryParams!
Android.Media.Quality.MediaQualityManager.ProfileQueryParams.Builder.Builder() -> void
Android.Media.Quality.MediaQualityManager.ProfileQueryParams.Builder.SetParametersIncluded(bool included) -> Android.Media.Quality.MediaQualityManager.ProfileQueryParams.Builder!
Android.Media.Quality.MediaQualityManager.ProfileQueryParams.DescribeContents() -> int
Android.Media.Quality.MediaQualityManager.ProfileQueryParams.InterfaceConsts
Android.Media.Quality.MediaQualityManager.ProfileQueryParams.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Quality.MediaQualityManager.RegisterAmbientBacklightCallback(Java.Util.Concurrent.IExecutor! executor, Android.Media.Quality.MediaQualityManager.IAmbientBacklightCallback! callback) -> void
Android.Media.Quality.MediaQualityManager.RegisterPictureProfileCallback(Java.Util.Concurrent.IExecutor! executor, Android.Media.Quality.MediaQualityManager.PictureProfileCallback! callback) -> void
Android.Media.Quality.MediaQualityManager.RegisterSoundProfileCallback(Java.Util.Concurrent.IExecutor! executor, Android.Media.Quality.MediaQualityManager.SoundProfileCallback! callback) -> void
Android.Media.Quality.MediaQualityManager.RemoveActiveProcessingPictureListener(Java.Util.Functions.IConsumer! listener) -> void
Android.Media.Quality.MediaQualityManager.RemovePictureProfile(string! profileId) -> void
Android.Media.Quality.MediaQualityManager.RemoveSoundProfile(string! profileId) -> void
Android.Media.Quality.MediaQualityManager.SetAmbientBacklightSettings(Android.Media.Quality.AmbientBacklightSettings! settings) -> void
Android.Media.Quality.MediaQualityManager.SoundProfileCallback
Android.Media.Quality.MediaQualityManager.SoundProfileCallback.SoundProfileCallback() -> void
Android.Media.Quality.MediaQualityManager.SoundProfileCallback.SoundProfileCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.Quality.MediaQualityManager.UnregisterAmbientBacklightCallback(Android.Media.Quality.MediaQualityManager.IAmbientBacklightCallback! callback) -> void
Android.Media.Quality.MediaQualityManager.UnregisterPictureProfileCallback(Android.Media.Quality.MediaQualityManager.PictureProfileCallback! callback) -> void
Android.Media.Quality.MediaQualityManager.UnregisterSoundProfileCallback(Android.Media.Quality.MediaQualityManager.SoundProfileCallback! callback) -> void
Android.Media.Quality.MediaQualityManager.UpdatePictureProfile(string! profileId, Android.Media.Quality.PictureProfile! pp) -> void
Android.Media.Quality.MediaQualityManager.UpdateSoundProfile(string! profileId, Android.Media.Quality.SoundProfile! sp) -> void
Android.Media.Quality.ParameterCapability
Android.Media.Quality.ParameterCapability.Capabilities.get -> Android.OS.Bundle!
Android.Media.Quality.ParameterCapability.DescribeContents() -> int
Android.Media.Quality.ParameterCapability.InterfaceConsts
Android.Media.Quality.ParameterCapability.IsSupported.get -> bool
Android.Media.Quality.ParameterCapability.ParameterName.get -> string!
Android.Media.Quality.ParameterCapability.ParameterType.get -> Android.Media.Quality.ParameterCapabilityType
Android.Media.Quality.ParameterCapability.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Quality.ParameterCapabilityType
Android.Media.Quality.ParameterCapabilityType.Double = 3 -> Android.Media.Quality.ParameterCapabilityType
Android.Media.Quality.ParameterCapabilityType.Int = 1 -> Android.Media.Quality.ParameterCapabilityType
Android.Media.Quality.ParameterCapabilityType.Long = 2 -> Android.Media.Quality.ParameterCapabilityType
Android.Media.Quality.ParameterCapabilityType.None = 0 -> Android.Media.Quality.ParameterCapabilityType
Android.Media.Quality.ParameterCapabilityType.String = 4 -> Android.Media.Quality.ParameterCapabilityType
Android.Media.Quality.PictureProfile
Android.Media.Quality.PictureProfile.Builder
Android.Media.Quality.PictureProfile.Builder.Build() -> Android.Media.Quality.PictureProfile!
Android.Media.Quality.PictureProfile.Builder.Builder(Android.Media.Quality.PictureProfile! p) -> void
Android.Media.Quality.PictureProfile.Builder.Builder(string! name) -> void
Android.Media.Quality.PictureProfile.Builder.SetParameters(Android.OS.PersistableBundle! params) -> Android.Media.Quality.PictureProfile.Builder!
Android.Media.Quality.PictureProfile.DescribeContents() -> int
Android.Media.Quality.PictureProfile.InputId.get -> string?
Android.Media.Quality.PictureProfile.InterfaceConsts
Android.Media.Quality.PictureProfile.Name.get -> string!
Android.Media.Quality.PictureProfile.PackageName.get -> string?
Android.Media.Quality.PictureProfile.Parameters.get -> Android.OS.PersistableBundle!
Android.Media.Quality.PictureProfile.ProfileId.get -> string?
Android.Media.Quality.PictureProfile.ProfileType.get -> Android.Media.Quality.PictureProfileType
Android.Media.Quality.PictureProfile.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Quality.PictureProfileErrorType
Android.Media.Quality.PictureProfileErrorType.Duplicate = 2 -> Android.Media.Quality.PictureProfileErrorType
Android.Media.Quality.PictureProfileErrorType.InvalidArgument = 3 -> Android.Media.Quality.PictureProfileErrorType
Android.Media.Quality.PictureProfileErrorType.NoPermission = 1 -> Android.Media.Quality.PictureProfileErrorType
Android.Media.Quality.PictureProfileErrorType.NotAllowlisted = 4 -> Android.Media.Quality.PictureProfileErrorType
Android.Media.Quality.PictureProfileErrorType.Unknown = 0 -> Android.Media.Quality.PictureProfileErrorType
Android.Media.Quality.PictureProfileType
Android.Media.Quality.PictureProfileType.Application = 2 -> Android.Media.Quality.PictureProfileType
Android.Media.Quality.PictureProfileType.System = 1 -> Android.Media.Quality.PictureProfileType
Android.Media.Quality.SoundProfile
Android.Media.Quality.SoundProfile.Builder
Android.Media.Quality.SoundProfile.Builder.Build() -> Android.Media.Quality.SoundProfile!
Android.Media.Quality.SoundProfile.Builder.Builder(Android.Media.Quality.SoundProfile! p) -> void
Android.Media.Quality.SoundProfile.Builder.Builder(string! name) -> void
Android.Media.Quality.SoundProfile.Builder.SetParameters(Android.OS.PersistableBundle! params) -> Android.Media.Quality.SoundProfile.Builder!
Android.Media.Quality.SoundProfile.DescribeContents() -> int
Android.Media.Quality.SoundProfile.InputId.get -> string?
Android.Media.Quality.SoundProfile.InterfaceConsts
Android.Media.Quality.SoundProfile.Name.get -> string!
Android.Media.Quality.SoundProfile.PackageName.get -> string?
Android.Media.Quality.SoundProfile.Parameters.get -> Android.OS.PersistableBundle!
Android.Media.Quality.SoundProfile.ProfileId.get -> string?
Android.Media.Quality.SoundProfile.ProfileType.get -> Android.Media.Quality.SoundProfileType
Android.Media.Quality.SoundProfile.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.Quality.SoundProfileErrorType
Android.Media.Quality.SoundProfileErrorType.Duplicate = 2 -> Android.Media.Quality.SoundProfileErrorType
Android.Media.Quality.SoundProfileErrorType.InvalidArgument = 3 -> Android.Media.Quality.SoundProfileErrorType
Android.Media.Quality.SoundProfileErrorType.NoPermission = 1 -> Android.Media.Quality.SoundProfileErrorType
Android.Media.Quality.SoundProfileErrorType.NotAllowlisted = 4 -> Android.Media.Quality.SoundProfileErrorType
Android.Media.Quality.SoundProfileErrorType.Unknown = 0 -> Android.Media.Quality.SoundProfileErrorType
Android.Media.Quality.SoundProfileType
Android.Media.Quality.SoundProfileType.Application = 2 -> Android.Media.Quality.SoundProfileType
Android.Media.Quality.SoundProfileType.System = 1 -> Android.Media.Quality.SoundProfileType
Android.Media.TV.Ads.TvAdManager
Android.Media.TV.Ads.TvAdManager.RegisterCallback(Java.Util.Concurrent.IExecutor! executor, Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback! callback) -> void
Android.Media.TV.Ads.TvAdManager.SendAppLinkCommand(string! serviceId, Android.OS.Bundle! command) -> void
Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback
Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback.TvAdServiceCallback() -> void
Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback.TvAdServiceCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.TV.Ads.TvAdManager.TvAdServiceList.get -> System.Collections.Generic.IList<Android.Media.TV.Ads.TvAdServiceInfo!>!
Android.Media.TV.Ads.TvAdManager.UnregisterCallback(Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback! callback) -> void
Android.Media.TV.Ads.TvAdManagerError
Android.Media.TV.Ads.TvAdManagerError.Blocked = 5 -> Android.Media.TV.Ads.TvAdManagerError
Android.Media.TV.Ads.TvAdManagerError.Encrypted = 6 -> Android.Media.TV.Ads.TvAdManagerError
Android.Media.TV.Ads.TvAdManagerError.None = 0 -> Android.Media.TV.Ads.TvAdManagerError
Android.Media.TV.Ads.TvAdManagerError.NotSupported = 2 -> Android.Media.TV.Ads.TvAdManagerError
Android.Media.TV.Ads.TvAdManagerError.ResourceUnavailable = 4 -> Android.Media.TV.Ads.TvAdManagerError
Android.Media.TV.Ads.TvAdManagerError.Unknown = 1 -> Android.Media.TV.Ads.TvAdManagerError
Android.Media.TV.Ads.TvAdManagerError.UnknownChannel = 7 -> Android.Media.TV.Ads.TvAdManagerError
Android.Media.TV.Ads.TvAdManagerError.WeakSignal = 3 -> Android.Media.TV.Ads.TvAdManagerError
Android.Media.TV.Ads.TvAdManagerSessionState
Android.Media.TV.Ads.TvAdManagerSessionState.Error = 3 -> Android.Media.TV.Ads.TvAdManagerSessionState
Android.Media.TV.Ads.TvAdManagerSessionState.Running = 2 -> Android.Media.TV.Ads.TvAdManagerSessionState
Android.Media.TV.Ads.TvAdManagerSessionState.Stopped = 1 -> Android.Media.TV.Ads.TvAdManagerSessionState
Android.Media.TV.Ads.TvAdService
Android.Media.TV.Ads.TvAdService.Session
Android.Media.TV.Ads.TvAdService.Session.Session(Android.Content.Context! context) -> void
Android.Media.TV.Ads.TvAdService.Session.Session(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.TV.Ads.TvAdService.TvAdService() -> void
Android.Media.TV.Ads.TvAdService.TvAdService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.TV.Ads.TvAdServiceInfo
Android.Media.TV.Ads.TvAdServiceInfo.DescribeContents() -> int
Android.Media.TV.Ads.TvAdServiceInfo.Id.get -> string!
Android.Media.TV.Ads.TvAdServiceInfo.InterfaceConsts
Android.Media.TV.Ads.TvAdServiceInfo.ServiceInfo.get -> Android.Content.PM.ServiceInfo?
Android.Media.TV.Ads.TvAdServiceInfo.SupportedTypes.get -> System.Collections.Generic.IList<string!>!
Android.Media.TV.Ads.TvAdServiceInfo.TvAdServiceInfo(Android.Content.Context! context, Android.Content.ComponentName! component) -> void
Android.Media.TV.Ads.TvAdServiceInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.TV.Ads.TvAdView
Android.Media.TV.Ads.TvAdView.IOnUnhandledInputEventListener
Android.Media.TV.Ads.TvAdView.IOnUnhandledInputEventListener.OnUnhandledInputEvent(Android.Views.InputEvent! e) -> bool
Android.Media.TV.Ads.TvAdView.TvAdCallback
Android.Media.TV.Ads.TvAdView.TvAdCallback.TvAdCallback() -> void
Android.Media.TV.Ads.TvAdView.TvAdCallback.TvAdCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.TV.Ads.TvAdView.TvAdView(Android.Content.Context! context) -> void
Android.Media.TV.Ads.TvAdView.TvAdView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
Android.Media.TV.Ads.TvAdView.TvAdView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
Android.Media.TV.Ads.TvAdView.TvAdView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Media.TV.Ads.TvAdView.UnhandledInputEvent -> System.EventHandler<Android.Media.TV.Ads.TvAdView.UnhandledInputEventEventArgs!>!
Android.Media.TV.Ads.TvAdView.UnhandledInputEventEventArgs
Android.Media.TV.Ads.TvAdView.UnhandledInputEventEventArgs.Event.get -> Android.Views.InputEvent!
Android.Media.TV.Ads.TvAdView.UnhandledInputEventEventArgs.Handled.get -> bool
Android.Media.TV.Ads.TvAdView.UnhandledInputEventEventArgs.Handled.set -> void
Android.Media.TV.Ads.TvAdView.UnhandledInputEventEventArgs.UnhandledInputEventEventArgs(bool handled, Android.Views.InputEvent! e) -> void
Android.Media.TV.BroadcastInfoRequestOption.Oneshot = 3 -> Android.Media.TV.BroadcastInfoRequestOption
Android.Media.TV.BroadcastInfoRequestOption.Oneway = 2 -> Android.Media.TV.BroadcastInfoRequestOption
Android.Media.TV.BroadcastVisibilityType
Android.Media.TV.BroadcastVisibilityType.Invisible = 2 -> Android.Media.TV.BroadcastVisibilityType
Android.Media.TV.BroadcastVisibilityType.NumericSelectableOnly = 1 -> Android.Media.TV.BroadcastVisibilityType
Android.Media.TV.BroadcastVisibilityType.Visible = 0 -> Android.Media.TV.BroadcastVisibilityType
Android.Media.TV.SignalingDataInfo
Android.Media.TV.SignalingDataInfo.DescribeContents() -> int
Android.Media.TV.SignalingDataInfo.Encoding.get -> string!
Android.Media.TV.SignalingDataInfo.Group.get -> int
Android.Media.TV.SignalingDataInfo.InterfaceConsts
Android.Media.TV.SignalingDataInfo.SignalingDataInfo(string! table, string! signalingDataType, int version, int group) -> void
Android.Media.TV.SignalingDataInfo.SignalingDataInfo(string! table, string! signalingDataType, int version, int group, string! encoding) -> void
Android.Media.TV.SignalingDataInfo.SignalingDataType.get -> string!
Android.Media.TV.SignalingDataInfo.Table.get -> string!
Android.Media.TV.SignalingDataInfo.Version.get -> int
Android.Media.TV.SignalingDataInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Media.TV.SignalingDataRequest
Android.Media.TV.SignalingDataRequest.Group.get -> int
Android.Media.TV.SignalingDataRequest.SignalingDataRequest(int requestId, Android.Media.TV.BroadcastInfoRequestOption option, int group, System.Collections.Generic.IList<string!>! signalingDataTypes) -> void
Android.Media.TV.SignalingDataRequest.SignalingDataTypes.get -> System.Collections.Generic.IList<string!>!
Android.Media.TV.SignalingDataResponse
Android.Media.TV.SignalingDataResponse.SignalingDataInfoList.get -> System.Collections.Generic.IList<Android.Media.TV.SignalingDataInfo!>!
Android.Media.TV.SignalingDataResponse.SignalingDataResponse(int requestId, int sequence, Android.Media.TV.BroadcastInfoResponseResult responseResult, System.Collections.Generic.IList<string!>! signalingDataTypes, System.Collections.Generic.IList<Android.Media.TV.SignalingDataInfo!>! signalingDataInfoList) -> void
Android.Media.TV.SignalingDataResponse.SignalingDataTypes.get -> System.Collections.Generic.IList<string!>!
Android.Media.TV.VideoUnavailableReason.Stopped = 19 -> Android.Media.TV.VideoUnavailableReason
Android.Net.L2capNetworkSpecifier
Android.Net.L2capNetworkSpecifier.Builder
Android.Net.L2capNetworkSpecifier.Builder.Build() -> Android.Net.L2capNetworkSpecifier!
Android.Net.L2capNetworkSpecifier.Builder.Builder() -> void
Android.Net.L2capNetworkSpecifier.Builder.SetHeaderCompression(int headerCompression) -> Android.Net.L2capNetworkSpecifier.Builder!
Android.Net.L2capNetworkSpecifier.Builder.SetPsm(int psm) -> Android.Net.L2capNetworkSpecifier.Builder!
Android.Net.L2capNetworkSpecifier.Builder.SetRemoteAddress(Android.Net.MacAddress? remoteAddress) -> Android.Net.L2capNetworkSpecifier.Builder!
Android.Net.L2capNetworkSpecifier.Builder.SetRole(int role) -> Android.Net.L2capNetworkSpecifier.Builder!
Android.Net.L2capNetworkSpecifier.CanBeSatisfiedBy(Android.Net.NetworkSpecifier? other) -> bool
Android.Net.L2capNetworkSpecifier.DescribeContents() -> int
Android.Net.L2capNetworkSpecifier.HeaderCompression.get -> Android.Net.L2capNetworkSpecifierHeaderCompression
Android.Net.L2capNetworkSpecifier.InterfaceConsts
Android.Net.L2capNetworkSpecifier.Psm.get -> int
Android.Net.L2capNetworkSpecifier.Redact() -> Android.Net.NetworkSpecifier?
Android.Net.L2capNetworkSpecifier.RemoteAddress.get -> Android.Net.MacAddress?
Android.Net.L2capNetworkSpecifier.Role.get -> Android.Net.L2capNetworkSpecifierRole
Android.Net.L2capNetworkSpecifier.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.L2capNetworkSpecifierHeaderCompression
Android.Net.L2capNetworkSpecifierHeaderCompression.Any = 0 -> Android.Net.L2capNetworkSpecifierHeaderCompression
Android.Net.L2capNetworkSpecifierHeaderCompression.None = 1 -> Android.Net.L2capNetworkSpecifierHeaderCompression
Android.Net.L2capNetworkSpecifierHeaderCompression.Sixlowpan = 2 -> Android.Net.L2capNetworkSpecifierHeaderCompression
Android.Net.L2capNetworkSpecifierRole
Android.Net.L2capNetworkSpecifierRole.Any = 0 -> Android.Net.L2capNetworkSpecifierRole
Android.Net.L2capNetworkSpecifierRole.Client = 1 -> Android.Net.L2capNetworkSpecifierRole
Android.Net.L2capNetworkSpecifierRole.Server = 2 -> Android.Net.L2capNetworkSpecifierRole
Android.Net.NetCapability.NotBandwidthConstrained = 37 -> Android.Net.NetCapability
Android.Net.Nsd.AdvertisingRequest
Android.Net.Nsd.AdvertisingRequest.Builder
Android.Net.Nsd.AdvertisingRequest.Builder.Build() -> Android.Net.Nsd.AdvertisingRequest!
Android.Net.Nsd.AdvertisingRequest.Builder.Builder(Android.Net.Nsd.NsdServiceInfo! serviceInfo) -> void
Android.Net.Nsd.AdvertisingRequest.Builder.SetFlags(long flags) -> Android.Net.Nsd.AdvertisingRequest.Builder!
Android.Net.Nsd.AdvertisingRequest.Builder.SetProtocolType(int protocolType) -> Android.Net.Nsd.AdvertisingRequest.Builder!
Android.Net.Nsd.AdvertisingRequest.DescribeContents() -> int
Android.Net.Nsd.AdvertisingRequest.Flags.get -> long
Android.Net.Nsd.AdvertisingRequest.InterfaceConsts
Android.Net.Nsd.AdvertisingRequest.ProtocolType.get -> Android.Net.Nsd.NsdProtocol
Android.Net.Nsd.AdvertisingRequest.ServiceInfo.get -> Android.Net.Nsd.NsdServiceInfo!
Android.Net.Nsd.AdvertisingRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Nsd.NsdServiceInfo.Hostname.get -> string?
Android.Net.TetheringInterface
Android.Net.TetheringInterface.DescribeContents() -> int
Android.Net.TetheringInterface.Interface.get -> string!
Android.Net.TetheringInterface.InterfaceConsts
Android.Net.TetheringInterface.SoftApConfiguration.get -> Android.Net.Wifi.SoftApConfiguration?
Android.Net.TetheringInterface.TetheringInterface(Android.Net.TetheringManagerTetheringType type, string! iface) -> void
Android.Net.TetheringInterface.TetheringInterface(Android.Net.TetheringManagerTetheringType type, string! iface, Android.Net.Wifi.SoftApConfiguration? softApConfig) -> void
Android.Net.TetheringInterface.Type.get -> Android.Net.TetheringManagerTetheringType
Android.Net.TetheringInterface.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.TetheringManager
Android.Net.TetheringManager.IStartTetheringCallback
Android.Net.TetheringManager.IStartTetheringCallback.OnTetheringFailed(int error) -> void
Android.Net.TetheringManager.IStartTetheringCallback.OnTetheringStarted() -> void
Android.Net.TetheringManager.IStopTetheringCallback
Android.Net.TetheringManager.IStopTetheringCallback.OnStopTetheringFailed(int error) -> void
Android.Net.TetheringManager.IStopTetheringCallback.OnStopTetheringSucceeded() -> void
Android.Net.TetheringManager.ITetheringEventCallback
Android.Net.TetheringManager.ITetheringEventCallback.OnTetheredInterfacesChanged(System.Collections.Generic.ICollection<Android.Net.TetheringInterface!>! interfaces) -> void
Android.Net.TetheringManager.TetheringManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Net.TetheringManager.TetheringRequest
Android.Net.TetheringManager.TetheringRequest.Builder
Android.Net.TetheringManager.TetheringRequest.Builder.Builder(int type) -> void
Android.Net.TetheringManager.TetheringRequest.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Net.TetheringManager.TetheringRequest.DescribeContents() -> int
Android.Net.TetheringManager.TetheringRequest.InterfaceConsts
Android.Net.TetheringManager.TetheringRequest.SoftApConfiguration.get -> Android.Net.Wifi.SoftApConfiguration?
Android.Net.TetheringManager.TetheringRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.TetheringManagerConnectivityScope
Android.Net.TetheringManagerConnectivityScope.Global = 1 -> Android.Net.TetheringManagerConnectivityScope
Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.DhcpserverError = 12 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.DisableForwardingError = 9 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.DuplicateRequest = 18 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.EnableForwardingError = 8 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.EntitlementUnknown = 13 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.IfaceCfgError = 10 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.InternalError = 5 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.NoAccessTetheringPermission = 15 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.NoChangeTetheringPermission = 14 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.NoError = 0 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.ProvisioningFailed = 11 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.ServiceUnavail = 2 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.TetherIfaceError = 6 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.UnavailIface = 4 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.UnknownIface = 1 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.UnknownRequest = 17 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.UnknownType = 16 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.Unsupported = 3 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetherError.UntetherIfaceError = 7 -> Android.Net.TetheringManagerTetherError
Android.Net.TetheringManagerTetheringType
Android.Net.TetheringManagerTetheringType.Wifi = 0 -> Android.Net.TetheringManagerTetheringType
Android.Net.Wifi.Aware.AwarePairingConfig.Builder.SetSupportedCipherSuites(int cipherSuites) -> Android.Net.Wifi.Aware.AwarePairingConfig.Builder!
Android.Net.Wifi.Aware.AwarePairingConfig.SupportedCipherSuites.get -> Android.Net.Wifi.Aware.WifiAwareCipherSuite
Android.Net.Wifi.BlockingOption
Android.Net.Wifi.BlockingOption.BlockingTimeSeconds.get -> int
Android.Net.Wifi.BlockingOption.Builder
Android.Net.Wifi.BlockingOption.Builder.Build() -> Android.Net.Wifi.BlockingOption!
Android.Net.Wifi.BlockingOption.Builder.Builder(int blockingTimeSec) -> void
Android.Net.Wifi.BlockingOption.Builder.SetBlockingBssidOnly(bool bssidOnly) -> Android.Net.Wifi.BlockingOption.Builder!
Android.Net.Wifi.BlockingOption.DescribeContents() -> int
Android.Net.Wifi.BlockingOption.InterfaceConsts
Android.Net.Wifi.BlockingOption.IsBlockingBssidOnly.get -> bool
Android.Net.Wifi.BlockingOption.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.P2p.Frequency.Band6ghz = 3 -> Android.Net.Wifi.P2p.Frequency
Android.Net.Wifi.P2p.GroupSecurityType
Android.Net.Wifi.P2p.GroupSecurityType.Unknown = -1 -> Android.Net.Wifi.P2p.GroupSecurityType
Android.Net.Wifi.P2p.GroupSecurityType.Wpa2Psk = 0 -> Android.Net.Wifi.P2p.GroupSecurityType
Android.Net.Wifi.P2p.GroupSecurityType.Wpa3Compatibility = 1 -> Android.Net.Wifi.P2p.GroupSecurityType
Android.Net.Wifi.P2p.GroupSecurityType.Wpa3Sae = 2 -> Android.Net.Wifi.P2p.GroupSecurityType
Android.Net.Wifi.P2p.Nsd.ServiceProtocolType
Android.Net.Wifi.P2p.Nsd.ServiceProtocolType.Bonjour = 1 -> Android.Net.Wifi.P2p.Nsd.ServiceProtocolType
Android.Net.Wifi.P2p.Nsd.ServiceProtocolType.Generic = 2 -> Android.Net.Wifi.P2p.Nsd.ServiceProtocolType
Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo.WifiP2pServiceInfo(Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig! usdConfig) -> void
Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest.WifiP2pServiceRequest(Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig! usdConfig) -> void
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.Builder
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.Builder.Build() -> Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig!
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.Builder.Builder(string! serviceName) -> void
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.Builder.SetServiceProtocolType(int serviceProtocolType) -> Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.Builder!
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.Builder.SetServiceSpecificInfo(byte[]? serviceSpecificInfo) -> Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.Builder!
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.DescribeContents() -> int
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.GetServiceSpecificInfo() -> byte[]?
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.InterfaceConsts
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.ServiceName.get -> string!
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.ServiceProtocolType.get -> int
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.WifiP2pUsdBasedServiceConfig() -> void
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse.DescribeContents() -> int
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse.GetServiceSpecificInfo() -> byte[]?
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse.InterfaceConsts
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse.ServiceProtocolType.get -> int
Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.P2p.PairingBootstrappingMethods
Android.Net.Wifi.P2p.PairingBootstrappingMethods.DisplayPassphrase = 4 -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
Android.Net.Wifi.P2p.PairingBootstrappingMethods.DisplayPincode = 2 -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
Android.Net.Wifi.P2p.PairingBootstrappingMethods.KeypadPassphrase = 16 -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
Android.Net.Wifi.P2p.PairingBootstrappingMethods.KeypadPincode = 8 -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
Android.Net.Wifi.P2p.PairingBootstrappingMethods.None = 0 -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
Android.Net.Wifi.P2p.PairingBootstrappingMethods.Opportunistic = 1 -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
Android.Net.Wifi.P2p.PairingBootstrappingMethods.OutOfBand = 32 -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
Android.Net.Wifi.P2p.PccModeConnectionType
Android.Net.Wifi.P2p.PccModeConnectionType.LegacyOnly = 0 -> Android.Net.Wifi.P2p.PccModeConnectionType
Android.Net.Wifi.P2p.PccModeConnectionType.LegacyOrR2 = 1 -> Android.Net.Wifi.P2p.PccModeConnectionType
Android.Net.Wifi.P2p.PccModeConnectionType.R2Only = 2 -> Android.Net.Wifi.P2p.PccModeConnectionType
Android.Net.Wifi.P2p.Version
Android.Net.Wifi.P2p.Version.Version1 = 0 -> Android.Net.Wifi.P2p.Version
Android.Net.Wifi.P2p.Version.Version2 = 1 -> Android.Net.Wifi.P2p.Version
Android.Net.Wifi.P2p.WifiP2pConfig.Builder.SetAuthorizeConnectionFromPeerEnabled(bool enabled) -> Android.Net.Wifi.P2p.WifiP2pConfig.Builder!
Android.Net.Wifi.P2p.WifiP2pConfig.Builder.SetPairingBootstrappingConfig(Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig! config) -> Android.Net.Wifi.P2p.WifiP2pConfig.Builder!
Android.Net.Wifi.P2p.WifiP2pConfig.Builder.SetPccModeConnectionType(int connectionType) -> Android.Net.Wifi.P2p.WifiP2pConfig.Builder!
Android.Net.Wifi.P2p.WifiP2pDirInfo
Android.Net.Wifi.P2p.WifiP2pDirInfo.DescribeContents() -> int
Android.Net.Wifi.P2p.WifiP2pDirInfo.GetDirTag() -> byte[]!
Android.Net.Wifi.P2p.WifiP2pDirInfo.GetNonce() -> byte[]!
Android.Net.Wifi.P2p.WifiP2pDirInfo.InterfaceConsts
Android.Net.Wifi.P2p.WifiP2pDirInfo.MacAddress.get -> Android.Net.MacAddress!
Android.Net.Wifi.P2p.WifiP2pDirInfo.WifiP2pDirInfo(Android.Net.MacAddress! macAddress, byte[]! nonce, byte[]! dirTag) -> void
Android.Net.Wifi.P2p.WifiP2pDirInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.P2p.WifiP2pFailureReason.NoPermission = 4 -> Android.Net.Wifi.P2p.WifiP2pFailureReason
Android.Net.Wifi.P2p.WifiP2pManager.IServiceResponseListener.OnUsdBasedServiceAvailable(Android.Net.Wifi.P2p.WifiP2pDevice! srcDevice, Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse! usdResponseData) -> void
Android.Net.Wifi.P2p.WifiP2pManager.UsdBasedServiceAvailableEventArgs
Android.Net.Wifi.P2p.WifiP2pManager.UsdBasedServiceAvailableEventArgs.SrcDevice.get -> Android.Net.Wifi.P2p.WifiP2pDevice!
Android.Net.Wifi.P2p.WifiP2pManager.UsdBasedServiceAvailableEventArgs.UsdBasedServiceAvailableEventArgs(Android.Net.Wifi.P2p.WifiP2pDevice! srcDevice, Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse! usdResponseData) -> void
Android.Net.Wifi.P2p.WifiP2pManager.UsdBasedServiceAvailableEventArgs.UsdResponseData.get -> Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse!
Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig
Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.DescribeContents() -> int
Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.InterfaceConsts
Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.WifiP2pPairingBootstrappingConfig(Android.Net.Wifi.P2p.PairingBootstrappingMethods method, string? password) -> void
Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig
Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.Builder
Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.Builder.Build() -> Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig!
Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.Builder.Builder() -> void
Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.Builder.SetFrequencyMhz(int frequencyMhz) -> Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.Builder!
Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.DescribeContents() -> int
Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.FrequencyMhz.get -> int
Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.InterfaceConsts
Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Band.get -> Android.Net.Wifi.WifiBand
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Builder
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Builder.Build() -> Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig!
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Builder.Builder() -> void
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Builder.SetBand(int band) -> Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Builder!
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Builder.SetFrequenciesMhz(int[]! frequenciesMhz) -> Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Builder!
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.DescribeContents() -> int
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.GetFrequenciesMhz() -> int[]?
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.InterfaceConsts
Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.Rtt.PasnConfig
Android.Net.Wifi.Rtt.PasnConfig.BaseAkms.get -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfig.Builder
Android.Net.Wifi.Rtt.PasnConfig.Builder.Build() -> Android.Net.Wifi.Rtt.PasnConfig!
Android.Net.Wifi.Rtt.PasnConfig.Builder.Builder(int baseAkms, int ciphers) -> void
Android.Net.Wifi.Rtt.PasnConfig.Builder.SetPasnComebackCookie(byte[]! pasnComebackCookie) -> Android.Net.Wifi.Rtt.PasnConfig.Builder!
Android.Net.Wifi.Rtt.PasnConfig.Builder.SetPassword(string! password) -> Android.Net.Wifi.Rtt.PasnConfig.Builder!
Android.Net.Wifi.Rtt.PasnConfig.Builder.SetWifiSsid(Android.Net.Wifi.WifiSsid! wifiSsid) -> Android.Net.Wifi.Rtt.PasnConfig.Builder!
Android.Net.Wifi.Rtt.PasnConfig.Ciphers.get -> Android.Net.Wifi.Rtt.PasnConfigCipher
Android.Net.Wifi.Rtt.PasnConfig.DescribeContents() -> int
Android.Net.Wifi.Rtt.PasnConfig.GetPasnComebackCookie() -> byte[]?
Android.Net.Wifi.Rtt.PasnConfig.InterfaceConsts
Android.Net.Wifi.Rtt.PasnConfig.Password.get -> string?
Android.Net.Wifi.Rtt.PasnConfig.WifiSsid.get -> Android.Net.Wifi.WifiSsid?
Android.Net.Wifi.Rtt.PasnConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigAkm.FilsEapSha256 = 64 -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigAkm.FilsEapSha384 = 128 -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigAkm.FtEapSha256 = 4 -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigAkm.FtEapSha384 = 16 -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigAkm.FtPskSha256 = 8 -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigAkm.FtPskSha384 = 32 -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigAkm.None = 0 -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigAkm.Pasn = 1 -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigAkm.Sae = 2 -> Android.Net.Wifi.Rtt.PasnConfigAkm
Android.Net.Wifi.Rtt.PasnConfigCipher
Android.Net.Wifi.Rtt.PasnConfigCipher.Ccmp128 = 1 -> Android.Net.Wifi.Rtt.PasnConfigCipher
Android.Net.Wifi.Rtt.PasnConfigCipher.Ccmp256 = 2 -> Android.Net.Wifi.Rtt.PasnConfigCipher
Android.Net.Wifi.Rtt.PasnConfigCipher.Gcmp128 = 4 -> Android.Net.Wifi.Rtt.PasnConfigCipher
Android.Net.Wifi.Rtt.PasnConfigCipher.Gcmp256 = 8 -> Android.Net.Wifi.Rtt.PasnConfigCipher
Android.Net.Wifi.Rtt.PasnConfigCipher.None = 0 -> Android.Net.Wifi.Rtt.PasnConfigCipher
Android.Net.Wifi.Rtt.RangingRequest.Builder.SetSecurityMode(int securityMode) -> Android.Net.Wifi.Rtt.RangingRequest.Builder!
Android.Net.Wifi.Rtt.RangingRequest.SecurityMode.get -> Android.Net.Wifi.Rtt.RangingRequestSecurityMode
Android.Net.Wifi.Rtt.RangingRequestSecurityMode
Android.Net.Wifi.Rtt.RangingRequestSecurityMode.Open = 0 -> Android.Net.Wifi.Rtt.RangingRequestSecurityMode
Android.Net.Wifi.Rtt.RangingRequestSecurityMode.Opportunistic = 1 -> Android.Net.Wifi.Rtt.RangingRequestSecurityMode
Android.Net.Wifi.Rtt.RangingRequestSecurityMode.SecureAuth = 2 -> Android.Net.Wifi.Rtt.RangingRequestSecurityMode
Android.Net.Wifi.Rtt.RangingResult.Builder.SetPasnComebackAfterMillis(long comebackAfterMillis) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetPasnComebackCookie(byte[]! pasnComebackCookie) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetRangingAuthenticated(bool isRangingAuthenticated) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetRangingFrameProtected(bool isRangingFrameProtected) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetSecureHeLtfEnabled(bool isSecureHeLtfEnabled) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.Builder.SetSecureHeLtfProtocolVersion(int secureHeLtfProtocolVersion) -> Android.Net.Wifi.Rtt.RangingResult.Builder!
Android.Net.Wifi.Rtt.RangingResult.GetPasnComebackCookie() -> byte[]?
Android.Net.Wifi.Rtt.RangingResult.IsRangingAuthenticated.get -> bool
Android.Net.Wifi.Rtt.RangingResult.IsRangingFrameProtected.get -> bool
Android.Net.Wifi.Rtt.RangingResult.IsSecureHeLtfEnabled.get -> bool
Android.Net.Wifi.Rtt.RangingResult.PasnComebackAfterMillis.get -> long
Android.Net.Wifi.Rtt.RangingResult.SecureHeLtfProtocolVersion.get -> int
Android.Net.Wifi.Rtt.ResponderConfig.Builder.SetSecureRangingConfig(Android.Net.Wifi.Rtt.SecureRangingConfig! secureRangingConfig) -> Android.Net.Wifi.Rtt.ResponderConfig.Builder!
Android.Net.Wifi.Rtt.ResponderConfig.SecureRangingConfig.get -> Android.Net.Wifi.Rtt.SecureRangingConfig?
Android.Net.Wifi.Rtt.SecureRangingConfig
Android.Net.Wifi.Rtt.SecureRangingConfig.Builder
Android.Net.Wifi.Rtt.SecureRangingConfig.Builder.Build() -> Android.Net.Wifi.Rtt.SecureRangingConfig!
Android.Net.Wifi.Rtt.SecureRangingConfig.Builder.Builder(Android.Net.Wifi.Rtt.PasnConfig! pasnConfig) -> void
Android.Net.Wifi.Rtt.SecureRangingConfig.Builder.SetRangingFrameProtectionEnabled(bool enableRangingFrameProtection) -> Android.Net.Wifi.Rtt.SecureRangingConfig.Builder!
Android.Net.Wifi.Rtt.SecureRangingConfig.Builder.SetSecureHeLtfEnabled(bool enableSecureHeLtf) -> Android.Net.Wifi.Rtt.SecureRangingConfig.Builder!
Android.Net.Wifi.Rtt.SecureRangingConfig.DescribeContents() -> int
Android.Net.Wifi.Rtt.SecureRangingConfig.InterfaceConsts
Android.Net.Wifi.Rtt.SecureRangingConfig.IsRangingFrameProtectionEnabled.get -> bool
Android.Net.Wifi.Rtt.SecureRangingConfig.IsSecureHeLtfEnabled.get -> bool
Android.Net.Wifi.Rtt.SecureRangingConfig.PasnConfig.get -> Android.Net.Wifi.Rtt.PasnConfig!
Android.Net.Wifi.Rtt.SecureRangingConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Net.Wifi.SoftApConfiguration.Builder
Android.Net.Wifi.SoftApConfiguration.Builder.Build() -> Android.Net.Wifi.SoftApConfiguration!
Android.Net.Wifi.SoftApConfiguration.Builder.Builder() -> void
Android.Net.Wifi.SoftApConfiguration.Builder.SetChannels(Android.Util.SparseIntArray! channels) -> Android.Net.Wifi.SoftApConfiguration.Builder!
Android.Net.Wifi.SoftApConfiguration.Channels.get -> Android.Util.SparseIntArray!
Android.Net.Wifi.SoftApConfigurationBand
Android.Net.Wifi.SoftApConfigurationBand.Band2ghz = 1 -> Android.Net.Wifi.SoftApConfigurationBand
Android.Net.Wifi.SoftApConfigurationBand.Band5ghz = 2 -> Android.Net.Wifi.SoftApConfigurationBand
Android.Net.Wifi.SoftApConfigurationBand.Band60ghz = 8 -> Android.Net.Wifi.SoftApConfigurationBand
Android.Net.Wifi.SoftApConfigurationBand.Band6ghz = 4 -> Android.Net.Wifi.SoftApConfigurationBand
Android.Net.Wifi.StatusLocalOnlyConnectionFailureReason.UserReject = 6 -> Android.Net.Wifi.StatusLocalOnlyConnectionFailureReason
Android.Net.Wifi.WifiAvailableChannel.ChannelWidth.get -> Android.Net.Wifi.WifiChannelWidth
Android.Net.Wifi.WifiManager.IWifiStateChangedListener
Android.Net.Wifi.WifiManager.IWifiStateChangedListener.OnWifiStateChanged() -> void
Android.Nfc.CardEmulators.CardEmulation.DefaultNfcSubscriptionId.get -> int
Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback
Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback.OnAidConflictOccurred(string! aid) -> void
Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback.OnAidNotRouted(string! aid) -> void
Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback.OnInternalErrorReported(int errorType) -> void
Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback.OnNfcStateChanged(int state) -> void
Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback.OnObserveModeStateChanged(bool isEnabled) -> void
Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback.OnPreferredServiceChanged(bool isPreferred) -> void
Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback.OnRemoteFieldChanged(bool isDetected) -> void
Android.Nfc.CardEmulators.CardEmulation.IsEuiccSupported.get -> bool
Android.Nfc.CardEmulators.CardEmulation.RegisterNfcEventCallback(Java.Util.Concurrent.IExecutor! executor, Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback! callback) -> void
Android.Nfc.CardEmulators.CardEmulation.UnregisterNfcEventCallback(Android.Nfc.CardEmulators.CardEmulation.INfcEventCallback! callback) -> void
Android.Nfc.CardEmulators.NfcInternalErrorType
Android.Nfc.CardEmulators.NfcInternalErrorType.CommandTimeout = 3 -> Android.Nfc.CardEmulators.NfcInternalErrorType
Android.Nfc.CardEmulators.NfcInternalErrorType.NfcCrashRestart = 1 -> Android.Nfc.CardEmulators.NfcInternalErrorType
Android.Nfc.CardEmulators.NfcInternalErrorType.NfcHardwareError = 2 -> Android.Nfc.CardEmulators.NfcInternalErrorType
Android.Nfc.CardEmulators.NfcInternalErrorType.Unknown = 0 -> Android.Nfc.CardEmulators.NfcInternalErrorType
Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Default = 3 -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Dh = 0 -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Ese = 1 -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Uicc = 2 -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Unset = -1 -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
Android.Nfc.NfcAdapter.Disable() -> bool
Android.Nfc.NfcAdapter.Enable() -> bool
Android.Nfc.NfcAdapter.IsTagIntentAllowed.get -> bool
Android.Nfc.NfcAdapter.IsTagIntentAppPreferenceSupported.get -> bool
Android.OS.BatteryCapacityLevel
Android.OS.BatteryCapacityLevel.Critical = 1 -> Android.OS.BatteryCapacityLevel
Android.OS.BatteryCapacityLevel.Full = 5 -> Android.OS.BatteryCapacityLevel
Android.OS.BatteryCapacityLevel.High = 4 -> Android.OS.BatteryCapacityLevel
Android.OS.BatteryCapacityLevel.Low = 2 -> Android.OS.BatteryCapacityLevel
Android.OS.BatteryCapacityLevel.Normal = 3 -> Android.OS.BatteryCapacityLevel
Android.OS.BatteryCapacityLevel.Unknown = 0 -> Android.OS.BatteryCapacityLevel
Android.OS.BatteryCapacityLevel.Unsupported = -1 -> Android.OS.BatteryCapacityLevel
Android.OS.Build.VERSION_CODES_FULL
Android.OS.Build.VERSION_CODES_FULL.VERSION_CODES_FULL(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.OS.BuildVersionCodes.Baklava = 36 -> Android.OS.BuildVersionCodes
Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Baklava = 3600000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Base = 100000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Base11 = 200000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Cupcake = 300000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Donut = 400000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Eclair = 500000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Eclair01 = 600000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.EclairMr1 = 700000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Froyo = 800000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Gingerbread = 900000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.GingerbreadMr1 = 1000000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Honeycomb = 1100000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.HoneycombMr1 = 1200000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.HoneycombMr2 = 1300000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.IceCreamSandwich = 1400000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.IceCreamSandwichMr1 = 1500000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.JellyBean = 1600000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.JellyBeanMr1 = 1700000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.JellyBeanMr2 = 1800000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Kitkat = 1900000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.KitkatWatch = 2000000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Lollipop = 2100000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.LollipopMr1 = 2200000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.M = 2300000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.N = 2400000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.NMr1 = 2500000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.O = 2600000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.OMr1 = 2700000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.P = 2800000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Q = 2900000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.R = 3000000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.S = 3100000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.SV2 = 3200000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.Tiramisu = 3300000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.UpsideDownCake = 3400000 -> Android.OS.BuildVersionCodesFull
Android.OS.BuildVersionCodesFull.VanillaIceCream = 3500000 -> Android.OS.BuildVersionCodesFull
Android.OS.CpuHeadroomCalculationType
Android.OS.CpuHeadroomCalculationType.Average = 1 -> Android.OS.CpuHeadroomCalculationType
Android.OS.CpuHeadroomCalculationType.Min = 0 -> Android.OS.CpuHeadroomCalculationType
Android.OS.CpuHeadroomParams
Android.OS.CpuHeadroomParams.Builder
Android.OS.CpuHeadroomParams.Builder.Build() -> Android.OS.CpuHeadroomParams!
Android.OS.CpuHeadroomParams.Builder.Builder() -> void
Android.OS.CpuHeadroomParams.Builder.Builder(Android.OS.CpuHeadroomParams! params) -> void
Android.OS.CpuHeadroomParams.Builder.SetCalculationType(int calculationType) -> Android.OS.CpuHeadroomParams.Builder!
Android.OS.CpuHeadroomParams.Builder.SetCalculationWindowMillis(int windowMillis) -> Android.OS.CpuHeadroomParams.Builder!
Android.OS.CpuHeadroomParams.Builder.SetTids(params int[]! tids) -> Android.OS.CpuHeadroomParams.Builder!
Android.OS.CpuHeadroomParams.CalculationType.get -> Android.OS.CpuHeadroomCalculationType
Android.OS.CpuHeadroomParams.CalculationWindowMillis.get -> long
Android.OS.CpuHeadroomParams.GetTids() -> int[]!
Android.OS.CpuHeadroomParams.ToBuilder() -> Android.OS.CpuHeadroomParams.Builder!
Android.OS.Flagging.AconfigPackage
Android.OS.Flagging.AconfigPackage.AconfigPackage(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.OS.Flagging.AconfigStorageReadErrorType
Android.OS.Flagging.AconfigStorageReadErrorType.CannotReadStorageFile = 4 -> Android.OS.Flagging.AconfigStorageReadErrorType
Android.OS.Flagging.AconfigStorageReadErrorType.ContainerNotFound = 3 -> Android.OS.Flagging.AconfigStorageReadErrorType
Android.OS.Flagging.AconfigStorageReadErrorType.Generic = 0 -> Android.OS.Flagging.AconfigStorageReadErrorType
Android.OS.Flagging.AconfigStorageReadErrorType.PackageNotFound = 2 -> Android.OS.Flagging.AconfigStorageReadErrorType
Android.OS.Flagging.AconfigStorageReadErrorType.StorageSystemNotFound = 1 -> Android.OS.Flagging.AconfigStorageReadErrorType
Android.OS.Flagging.AconfigStorageReadException
Android.OS.Flagging.AconfigStorageReadException.AconfigStorageReadException(Android.OS.Flagging.AconfigStorageReadErrorType errorCode, Java.Lang.Throwable! cause) -> void
Android.OS.Flagging.AconfigStorageReadException.AconfigStorageReadException(Android.OS.Flagging.AconfigStorageReadErrorType errorCode, string! msg) -> void
Android.OS.Flagging.AconfigStorageReadException.AconfigStorageReadException(Android.OS.Flagging.AconfigStorageReadErrorType errorCode, string! msg, Java.Lang.Throwable! cause) -> void
Android.OS.Flagging.AconfigStorageReadException.AconfigStorageReadException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.OS.FrozenCalleePolicy
Android.OS.FrozenCalleePolicy.Drop = 3 -> Android.OS.FrozenCalleePolicy
Android.OS.FrozenCalleePolicy.EnqueueAll = 1 -> Android.OS.FrozenCalleePolicy
Android.OS.FrozenCalleePolicy.EnqueueMostRecent = 2 -> Android.OS.FrozenCalleePolicy
Android.OS.FrozenCalleePolicy.Unset = 0 -> Android.OS.FrozenCalleePolicy
Android.OS.FrozenStateChangeCallbackState
Android.OS.FrozenStateChangeCallbackState.Frozen = 0 -> Android.OS.FrozenStateChangeCallbackState
Android.OS.FrozenStateChangeCallbackState.Unfrozen = 1 -> Android.OS.FrozenStateChangeCallbackState
Android.OS.GpuHeadroomCalculationType
Android.OS.GpuHeadroomCalculationType.Average = 1 -> Android.OS.GpuHeadroomCalculationType
Android.OS.GpuHeadroomCalculationType.Min = 0 -> Android.OS.GpuHeadroomCalculationType
Android.OS.GpuHeadroomParams
Android.OS.GpuHeadroomParams.Builder
Android.OS.GpuHeadroomParams.Builder.Build() -> Android.OS.GpuHeadroomParams!
Android.OS.GpuHeadroomParams.Builder.Builder() -> void
Android.OS.GpuHeadroomParams.Builder.Builder(Android.OS.GpuHeadroomParams! params) -> void
Android.OS.GpuHeadroomParams.Builder.SetCalculationType(int calculationType) -> Android.OS.GpuHeadroomParams.Builder!
Android.OS.GpuHeadroomParams.Builder.SetCalculationWindowMillis(int windowMillis) -> Android.OS.GpuHeadroomParams.Builder!
Android.OS.GpuHeadroomParams.CalculationWindowMillis.get -> int
Android.OS.IBinder.AddFrozenStateChangeCallback(Java.Util.Concurrent.IExecutor! executor, Android.OS.IBinder.IFrozenStateChangeCallback! callback) -> void
Android.OS.IBinder.IFrozenStateChangeCallback
Android.OS.IBinder.IFrozenStateChangeCallback.OnFrozenStateChanged(Android.OS.IBinder! who, int state) -> void
Android.OS.IBinder.RemoveFrozenStateChangeCallback(Android.OS.IBinder.IFrozenStateChangeCallback! callback) -> bool
Android.OS.PowerManager.IOnThermalHeadroomChangedListener
Android.OS.PowerManager.IOnThermalHeadroomChangedListener.OnThermalHeadroomChanged(float headroom, float forecastHeadroom, int forecastSeconds, System.Collections.Generic.IDictionary<Java.Lang.Integer!, Java.Lang.Float!>! thresholds) -> void
Android.OS.PowerManager.ThermalHeadroom -> System.EventHandler<Android.OS.PowerManager.ThermalHeadroomChangedEventArgs!>!
Android.OS.PowerManager.ThermalHeadroomChangedEventArgs
Android.OS.PowerManager.ThermalHeadroomChangedEventArgs.ForecastHeadroom.get -> float
Android.OS.PowerManager.ThermalHeadroomChangedEventArgs.ForecastSeconds.get -> int
Android.OS.PowerManager.ThermalHeadroomChangedEventArgs.Headroom.get -> float
Android.OS.PowerManager.ThermalHeadroomChangedEventArgs.ThermalHeadroomChangedEventArgs(float headroom, float forecastHeadroom, int forecastSeconds, System.Collections.Generic.IDictionary<Java.Lang.Integer!, Java.Lang.Float!>! thresholds) -> void
Android.OS.PowerManager.ThermalHeadroomChangedEventArgs.Thresholds.get -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, Java.Lang.Float!>!
Android.OS.ProfilingManager.AddProfilingTriggers(System.Collections.Generic.IList<Android.OS.ProfilingTrigger!>! triggers) -> void
Android.OS.ProfilingManager.ClearProfilingTriggers() -> void
Android.OS.ProfilingManager.RemoveProfilingTriggersByType(int[]! triggers) -> void
Android.OS.ProfilingResult.TriggerType.get -> int
Android.OS.ProfilingTrigger
Android.OS.ProfilingTrigger.Builder
Android.OS.ProfilingTrigger.Builder.Build() -> Android.OS.ProfilingTrigger!
Android.OS.ProfilingTrigger.Builder.Builder(int triggerType) -> void
Android.OS.ProfilingTrigger.Builder.SetRateLimitingPeriodHours(int rateLimitingPeriodHours) -> Android.OS.ProfilingTrigger.Builder!
Android.OS.ProfilingTrigger.RateLimitingPeriodHours.get -> int
Android.OS.ProfilingTrigger.TriggerType.get -> Android.OS.ProfilingTriggerType
Android.OS.ProfilingTriggerType
Android.OS.ProfilingTriggerType.Anr = 2 -> Android.OS.ProfilingTriggerType
Android.OS.ProfilingTriggerType.AppFullyDrawn = 1 -> Android.OS.ProfilingTriggerType
Android.OS.ProfilingTriggerType.None = 0 -> Android.OS.ProfilingTriggerType
Android.OS.RemoteCallbackList.Builder
Android.OS.RemoteCallbackList.Builder.Build() -> Android.OS.RemoteCallbackList!
Android.OS.RemoteCallbackList.Builder.Builder(int frozenCalleePolicy) -> void
Android.OS.RemoteCallbackList.Builder.IInterfaceDiedCallback
Android.OS.RemoteCallbackList.Builder.IInterfaceDiedCallback.OnInterfaceDied(Android.OS.RemoteCallbackList! remoteCallbackList, Java.Lang.Object? deadInterface, Java.Lang.Object? cookie) -> void
Android.OS.RemoteCallbackList.Builder.SetExecutor(Java.Util.Concurrent.IExecutor! executor) -> Android.OS.RemoteCallbackList.Builder!
Android.OS.RemoteCallbackList.Builder.SetInterfaceDiedCallback(Android.OS.RemoteCallbackList.Builder.IInterfaceDiedCallback! callback) -> Android.OS.RemoteCallbackList.Builder!
Android.OS.RemoteCallbackList.Builder.SetMaxQueueSize(int maxQueueSize) -> Android.OS.RemoteCallbackList.Builder!
Android.OS.StrictMode.VmPolicy.Builder.DetectBlockedBackgroundActivityLaunch() -> Android.OS.StrictMode.VmPolicy.Builder!
Android.OS.StrictMode.VmPolicy.Builder.IgnoreBlockedBackgroundActivityLaunch() -> Android.OS.StrictMode.VmPolicy.Builder!
Android.OS.VibrationEffect.BasicEnvelopeBuilder
Android.OS.VibrationEffect.BasicEnvelopeBuilder.AddControlPoint(float intensity, float sharpness, long durationMillis) -> Android.OS.VibrationEffect.BasicEnvelopeBuilder!
Android.OS.VibrationEffect.BasicEnvelopeBuilder.BasicEnvelopeBuilder() -> void
Android.OS.VibrationEffect.BasicEnvelopeBuilder.Build() -> Android.OS.VibrationEffect!
Android.OS.VibrationEffect.BasicEnvelopeBuilder.SetInitialSharpness(float initialSharpness) -> Android.OS.VibrationEffect.BasicEnvelopeBuilder!
Android.OS.VibrationEffect.Composition.AddPrimitive(int primitiveId, float scale, int delay, int delayType) -> Android.OS.VibrationEffect.Composition!
Android.OS.VibrationEffect.WaveformEnvelopeBuilder
Android.OS.VibrationEffect.WaveformEnvelopeBuilder.AddControlPoint(float amplitude, float frequencyHz, long durationMillis) -> Android.OS.VibrationEffect.WaveformEnvelopeBuilder!
Android.OS.VibrationEffect.WaveformEnvelopeBuilder.Build() -> Android.OS.VibrationEffect!
Android.OS.VibrationEffect.WaveformEnvelopeBuilder.SetInitialFrequencyHz(float initialFrequencyHz) -> Android.OS.VibrationEffect.WaveformEnvelopeBuilder!
Android.OS.VibrationEffect.WaveformEnvelopeBuilder.WaveformEnvelopeBuilder() -> void
Android.OS.VibrationEffectCompositionDelayType
Android.OS.VibrationEffectCompositionDelayType.Pause = 0 -> Android.OS.VibrationEffectCompositionDelayType
Android.OS.VibrationEffectCompositionDelayType.RelativeStartOffset = 1 -> Android.OS.VibrationEffectCompositionDelayType
Android.OS.Vibrators.VibratorEnvelopeEffectInfo
Android.OS.Vibrators.VibratorEnvelopeEffectInfo.DescribeContents() -> int
Android.OS.Vibrators.VibratorEnvelopeEffectInfo.InterfaceConsts
Android.OS.Vibrators.VibratorEnvelopeEffectInfo.MaxControlPointDurationMillis.get -> long
Android.OS.Vibrators.VibratorEnvelopeEffectInfo.MaxDurationMillis.get -> long
Android.OS.Vibrators.VibratorEnvelopeEffectInfo.MaxSize.get -> int
Android.OS.Vibrators.VibratorEnvelopeEffectInfo.MinControlPointDurationMillis.get -> long
Android.OS.Vibrators.VibratorEnvelopeEffectInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.OS.Vibrators.VibratorFrequencyProfile
Android.OS.Vibrators.VibratorFrequencyProfile.FrequenciesOutputAcceleration.get -> Android.Util.SparseArray!
Android.OS.Vibrators.VibratorFrequencyProfile.GetFrequencyRange(float minOutputAccelerationGs) -> Android.Util.Range?
Android.OS.Vibrators.VibratorFrequencyProfile.GetOutputAccelerationGs(float frequencyHz) -> float
Android.OS.Vibrators.VibratorFrequencyProfile.MaxFrequencyHz.get -> float
Android.OS.Vibrators.VibratorFrequencyProfile.MaxOutputAccelerationGs.get -> float
Android.OS.Vibrators.VibratorFrequencyProfile.MinFrequencyHz.get -> float
Android.Provider.CloudMediaProviderContract.Capabilities
Android.Provider.CloudMediaProviderContract.Capabilities.Builder
Android.Provider.CloudMediaProviderContract.Capabilities.Builder.Build() -> Android.Provider.CloudMediaProviderContract.Capabilities!
Android.Provider.CloudMediaProviderContract.Capabilities.Builder.Builder() -> void
Android.Provider.CloudMediaProviderContract.Capabilities.Builder.SetMediaCategoriesEnabled(bool enabled) -> Android.Provider.CloudMediaProviderContract.Capabilities.Builder!
Android.Provider.CloudMediaProviderContract.Capabilities.Builder.SetSearchEnabled(bool enabled) -> Android.Provider.CloudMediaProviderContract.Capabilities.Builder!
Android.Provider.CloudMediaProviderContract.Capabilities.DescribeContents() -> int
Android.Provider.CloudMediaProviderContract.Capabilities.InterfaceConsts
Android.Provider.CloudMediaProviderContract.Capabilities.IsMediaCategoriesEnabled.get -> bool
Android.Provider.CloudMediaProviderContract.Capabilities.IsSearchEnabled.get -> bool
Android.Provider.CloudMediaProviderContract.Capabilities.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Provider.CloudMediaProviderContract.MediaCategoryColumns
Android.Provider.CloudMediaProviderContract.MediaSetColumns
Android.Provider.CloudMediaProviderContract.SearchSuggestionColumns
Android.Provider.CloudMediaProviderContractSortOrder
Android.Provider.CloudMediaProviderContractSortOrder.DescDateTaken = 1 -> Android.Provider.CloudMediaProviderContractSortOrder
Android.Provider.ContactsContract.RawContacts.DefaultAccount
Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState
Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.Account.get -> Android.Accounts.Account?
Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.State.get -> int
Android.Provider.DefaultAccountState
Android.Provider.DefaultAccountState.Cloud = 3 -> Android.Provider.DefaultAccountState
Android.Provider.DefaultAccountState.Local = 2 -> Android.Provider.DefaultAccountState
Android.Provider.DefaultAccountState.NotSet = 1 -> Android.Provider.DefaultAccountState
Android.Provider.DefaultAccountState.Sim = 4 -> Android.Provider.DefaultAccountState
Android.Ranging.Ble.CS.BleCsRangingCapabilities
Android.Ranging.Ble.CS.BleCsRangingCapabilities.DescribeContents() -> int
Android.Ranging.Ble.CS.BleCsRangingCapabilities.InterfaceConsts
Android.Ranging.Ble.CS.BleCsRangingCapabilities.SupportedSecurityLevels.get -> System.Collections.Generic.ICollection<Java.Lang.Integer!>!
Android.Ranging.Ble.CS.BleCsRangingCapabilities.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel
Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel.Four = 4 -> Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel
Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel.One = 1 -> Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel
Android.Ranging.Ble.CS.BleCsRangingParams
Android.Ranging.Ble.CS.BleCsRangingParams.Builder
Android.Ranging.Ble.CS.BleCsRangingParams.Builder.Build() -> Android.Ranging.Ble.CS.BleCsRangingParams!
Android.Ranging.Ble.CS.BleCsRangingParams.Builder.Builder(string! peerBluetoothAddress) -> void
Android.Ranging.Ble.CS.BleCsRangingParams.Builder.SetLocationType(int locationType) -> Android.Ranging.Ble.CS.BleCsRangingParams.Builder!
Android.Ranging.Ble.CS.BleCsRangingParams.Builder.SetRangingUpdateRate(int updateRate) -> Android.Ranging.Ble.CS.BleCsRangingParams.Builder!
Android.Ranging.Ble.CS.BleCsRangingParams.Builder.SetSecurityLevel(int securityLevel) -> Android.Ranging.Ble.CS.BleCsRangingParams.Builder!
Android.Ranging.Ble.CS.BleCsRangingParams.Builder.SetSightType(int sightType) -> Android.Ranging.Ble.CS.BleCsRangingParams.Builder!
Android.Ranging.Ble.CS.BleCsRangingParams.DescribeContents() -> int
Android.Ranging.Ble.CS.BleCsRangingParams.InterfaceConsts
Android.Ranging.Ble.CS.BleCsRangingParams.LocationType.get -> Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType
Android.Ranging.Ble.CS.BleCsRangingParams.PeerBluetoothAddress.get -> string!
Android.Ranging.Ble.CS.BleCsRangingParams.RangingUpdateRate.get -> Android.Ranging.Raw.RangingDeviceUpdateRate
Android.Ranging.Ble.CS.BleCsRangingParams.SecurityLevel.get -> Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel
Android.Ranging.Ble.CS.BleCsRangingParams.SightType.get -> Android.Ranging.Ble.Cs.BleCsRangingParamsSightType
Android.Ranging.Ble.CS.BleCsRangingParams.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType
Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType.Indoor = 1 -> Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType
Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType.Outdoor = 2 -> Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType
Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType.Unknown = 0 -> Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType
Android.Ranging.Ble.Cs.BleCsRangingParamsSightType
Android.Ranging.Ble.Cs.BleCsRangingParamsSightType.LineOfSight = 1 -> Android.Ranging.Ble.Cs.BleCsRangingParamsSightType
Android.Ranging.Ble.Cs.BleCsRangingParamsSightType.NonLineOfSight = 2 -> Android.Ranging.Ble.Cs.BleCsRangingParamsSightType
Android.Ranging.Ble.Cs.BleCsRangingParamsSightType.Unknown = 0 -> Android.Ranging.Ble.Cs.BleCsRangingParamsSightType
Android.Ranging.Ble.Rssi.BleRssiRangingParams
Android.Ranging.Ble.Rssi.BleRssiRangingParams.Builder
Android.Ranging.Ble.Rssi.BleRssiRangingParams.Builder.Build() -> Android.Ranging.Ble.Rssi.BleRssiRangingParams!
Android.Ranging.Ble.Rssi.BleRssiRangingParams.Builder.Builder(string! peerBluetoothAddress) -> void
Android.Ranging.Ble.Rssi.BleRssiRangingParams.Builder.SetRangingUpdateRate(int updateRate) -> Android.Ranging.Ble.Rssi.BleRssiRangingParams.Builder!
Android.Ranging.Ble.Rssi.BleRssiRangingParams.DescribeContents() -> int
Android.Ranging.Ble.Rssi.BleRssiRangingParams.InterfaceConsts
Android.Ranging.Ble.Rssi.BleRssiRangingParams.PeerBluetoothAddress.get -> string!
Android.Ranging.Ble.Rssi.BleRssiRangingParams.RangingUpdateRate.get -> Android.Ranging.Raw.RangingDeviceUpdateRate
Android.Ranging.Ble.Rssi.BleRssiRangingParams.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.DataNotificationConfig
Android.Ranging.DataNotificationConfig.Builder
Android.Ranging.DataNotificationConfig.Builder.Build() -> Android.Ranging.DataNotificationConfig!
Android.Ranging.DataNotificationConfig.Builder.Builder() -> void
Android.Ranging.DataNotificationConfig.Builder.SetNotificationConfigType(int config) -> Android.Ranging.DataNotificationConfig.Builder!
Android.Ranging.DataNotificationConfig.Builder.SetProximityFarCm(int proximityCm) -> Android.Ranging.DataNotificationConfig.Builder!
Android.Ranging.DataNotificationConfig.Builder.SetProximityNearCm(int proximityCm) -> Android.Ranging.DataNotificationConfig.Builder!
Android.Ranging.DataNotificationConfig.DescribeContents() -> int
Android.Ranging.DataNotificationConfig.InterfaceConsts
Android.Ranging.DataNotificationConfig.NotificationConfigType.get -> Android.Ranging.DataNotificationConfigType
Android.Ranging.DataNotificationConfig.ProximityFarCm.get -> int
Android.Ranging.DataNotificationConfig.ProximityNearCm.get -> int
Android.Ranging.DataNotificationConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.DataNotificationConfigType
Android.Ranging.DataNotificationConfigType.Disable = 0 -> Android.Ranging.DataNotificationConfigType
Android.Ranging.DataNotificationConfigType.Enable = 1 -> Android.Ranging.DataNotificationConfigType
Android.Ranging.DataNotificationConfigType.ProximityEdge = 3 -> Android.Ranging.DataNotificationConfigType
Android.Ranging.DataNotificationConfigType.ProximityLevel = 2 -> Android.Ranging.DataNotificationConfigType
Android.Ranging.Oob.DeviceHandle
Android.Ranging.Oob.DeviceHandle.Builder
Android.Ranging.Oob.DeviceHandle.Builder.Build() -> Android.Ranging.Oob.DeviceHandle!
Android.Ranging.Oob.DeviceHandle.Builder.Builder(Android.Ranging.RangingDevice! rangingDevice, Android.Ranging.Oob.ITransportHandle! transportHandle) -> void
Android.Ranging.Oob.DeviceHandle.DescribeContents() -> int
Android.Ranging.Oob.DeviceHandle.InterfaceConsts
Android.Ranging.Oob.DeviceHandle.RangingDevice.get -> Android.Ranging.RangingDevice!
Android.Ranging.Oob.DeviceHandle.TransportHandle.get -> Android.Ranging.Oob.ITransportHandle!
Android.Ranging.Oob.DeviceHandle.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Oob.ITransportHandle
Android.Ranging.Oob.ITransportHandle.RegisterReceiveCallback(Java.Util.Concurrent.IExecutor! executor, Android.Ranging.Oob.ITransportHandleReceiveCallback! callback) -> void
Android.Ranging.Oob.ITransportHandle.SendData(byte[]! data) -> void
Android.Ranging.Oob.ITransportHandleReceiveCallback
Android.Ranging.Oob.ITransportHandleReceiveCallback.OnClose() -> void
Android.Ranging.Oob.ITransportHandleReceiveCallback.OnDisconnect() -> void
Android.Ranging.Oob.ITransportHandleReceiveCallback.OnReceiveData(byte[]! data) -> void
Android.Ranging.Oob.ITransportHandleReceiveCallback.OnReconnect() -> void
Android.Ranging.Oob.ITransportHandleReceiveCallback.OnSendFailed() -> void
Android.Ranging.Oob.OobInitiatorRangingConfig
Android.Ranging.Oob.OobInitiatorRangingConfig.Builder
Android.Ranging.Oob.OobInitiatorRangingConfig.Builder.AddDeviceHandle(Android.Ranging.Oob.DeviceHandle! deviceHandle) -> Android.Ranging.Oob.OobInitiatorRangingConfig.Builder!
Android.Ranging.Oob.OobInitiatorRangingConfig.Builder.AddDeviceHandles(System.Collections.Generic.IList<Android.Ranging.Oob.DeviceHandle!>! deviceHandles) -> Android.Ranging.Oob.OobInitiatorRangingConfig.Builder!
Android.Ranging.Oob.OobInitiatorRangingConfig.Builder.Build() -> Android.Ranging.Oob.OobInitiatorRangingConfig!
Android.Ranging.Oob.OobInitiatorRangingConfig.Builder.Builder() -> void
Android.Ranging.Oob.OobInitiatorRangingConfig.Builder.SetFastestRangingInterval(Java.Time.Duration! intervalMs) -> Android.Ranging.Oob.OobInitiatorRangingConfig.Builder!
Android.Ranging.Oob.OobInitiatorRangingConfig.Builder.SetRangingMode(int rangingMode) -> Android.Ranging.Oob.OobInitiatorRangingConfig.Builder!
Android.Ranging.Oob.OobInitiatorRangingConfig.Builder.SetSecurityLevel(int securityLevel) -> Android.Ranging.Oob.OobInitiatorRangingConfig.Builder!
Android.Ranging.Oob.OobInitiatorRangingConfig.Builder.SetSlowestRangingInterval(Java.Time.Duration! intervalMs) -> Android.Ranging.Oob.OobInitiatorRangingConfig.Builder!
Android.Ranging.Oob.OobInitiatorRangingConfig.DeviceHandles.get -> System.Collections.Generic.IList<Android.Ranging.Oob.DeviceHandle!>!
Android.Ranging.Oob.OobInitiatorRangingConfig.FastestRangingInterval.get -> Java.Time.Duration!
Android.Ranging.Oob.OobInitiatorRangingConfig.RangingIntervalRange.get -> Android.Util.Range!
Android.Ranging.Oob.OobInitiatorRangingConfig.RangingMode.get -> Android.Ranging.Oob.OobInitiatorRangingConfigMode
Android.Ranging.Oob.OobInitiatorRangingConfig.SecurityLevel.get -> Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel
Android.Ranging.Oob.OobInitiatorRangingConfig.SlowestRangingInterval.get -> Java.Time.Duration!
Android.Ranging.Oob.OobInitiatorRangingConfigMode
Android.Ranging.Oob.OobInitiatorRangingConfigMode.Auto = 0 -> Android.Ranging.Oob.OobInitiatorRangingConfigMode
Android.Ranging.Oob.OobInitiatorRangingConfigMode.Fused = 3 -> Android.Ranging.Oob.OobInitiatorRangingConfigMode
Android.Ranging.Oob.OobInitiatorRangingConfigMode.HighAccuracy = 1 -> Android.Ranging.Oob.OobInitiatorRangingConfigMode
Android.Ranging.Oob.OobInitiatorRangingConfigMode.HighAccuracyPreferred = 2 -> Android.Ranging.Oob.OobInitiatorRangingConfigMode
Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel
Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel.Basic = 0 -> Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel
Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel.Secure = 1 -> Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel
Android.Ranging.Oob.OobResponderRangingConfig
Android.Ranging.Oob.OobResponderRangingConfig.Builder
Android.Ranging.Oob.OobResponderRangingConfig.Builder.Build() -> Android.Ranging.Oob.OobResponderRangingConfig!
Android.Ranging.Oob.OobResponderRangingConfig.Builder.Builder(Android.Ranging.Oob.DeviceHandle! deviceHandle) -> void
Android.Ranging.Oob.OobResponderRangingConfig.DeviceHandle.get -> Android.Ranging.Oob.DeviceHandle!
Android.Ranging.RangingCapabilities
Android.Ranging.RangingCapabilities.CsCapabilities.get -> Android.Ranging.Ble.CS.BleCsRangingCapabilities?
Android.Ranging.RangingCapabilities.DescribeContents() -> int
Android.Ranging.RangingCapabilities.InterfaceConsts
Android.Ranging.RangingCapabilities.RttRangingCapabilities.get -> Android.Ranging.Wifi.Rtt.RttRangingCapabilities?
Android.Ranging.RangingCapabilities.TechnologyAvailability.get -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, Java.Lang.Integer!>!
Android.Ranging.RangingCapabilities.UwbCapabilities.get -> Android.Ranging.Uwb.UwbRangingCapabilities?
Android.Ranging.RangingCapabilities.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.RangingCapabilitiesStatus
Android.Ranging.RangingCapabilitiesStatus.DisabledRegulatory = 2 -> Android.Ranging.RangingCapabilitiesStatus
Android.Ranging.RangingCapabilitiesStatus.DisabledUser = 1 -> Android.Ranging.RangingCapabilitiesStatus
Android.Ranging.RangingCapabilitiesStatus.DisabledUserRestrictions = 4 -> Android.Ranging.RangingCapabilitiesStatus
Android.Ranging.RangingCapabilitiesStatus.Enabled = 3 -> Android.Ranging.RangingCapabilitiesStatus
Android.Ranging.RangingCapabilitiesStatus.NotSupported = 0 -> Android.Ranging.RangingCapabilitiesStatus
Android.Ranging.RangingConfig
Android.Ranging.RangingConfig.InterfaceConsts
Android.Ranging.RangingConfig.RangingConfig() -> void
Android.Ranging.RangingConfig.RangingConfig(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Ranging.RangingConfigSessionType
Android.Ranging.RangingConfigSessionType.Oob = 1 -> Android.Ranging.RangingConfigSessionType
Android.Ranging.RangingConfigSessionType.Raw = 0 -> Android.Ranging.RangingConfigSessionType
Android.Ranging.RangingData
Android.Ranging.RangingData.Azimuth.get -> Android.Ranging.RangingMeasurement?
Android.Ranging.RangingData.DescribeContents() -> int
Android.Ranging.RangingData.Distance.get -> Android.Ranging.RangingMeasurement?
Android.Ranging.RangingData.Elevation.get -> Android.Ranging.RangingMeasurement?
Android.Ranging.RangingData.HasRssi.get -> bool
Android.Ranging.RangingData.InterfaceConsts
Android.Ranging.RangingData.RangingTechnology.get -> Android.Ranging.RangingManagerType
Android.Ranging.RangingData.Rssi.get -> int
Android.Ranging.RangingData.TimestampMillis.get -> long
Android.Ranging.RangingData.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.RangingDevice
Android.Ranging.RangingDevice.Builder
Android.Ranging.RangingDevice.Builder.Build() -> Android.Ranging.RangingDevice!
Android.Ranging.RangingDevice.Builder.Builder() -> void
Android.Ranging.RangingDevice.Builder.SetUuid(Java.Util.UUID! id) -> Android.Ranging.RangingDevice.Builder!
Android.Ranging.RangingDevice.DescribeContents() -> int
Android.Ranging.RangingDevice.InterfaceConsts
Android.Ranging.RangingDevice.Uuid.get -> Java.Util.UUID!
Android.Ranging.RangingDevice.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.RangingDeviceRole
Android.Ranging.RangingDeviceRole.Initiator = 1 -> Android.Ranging.RangingDeviceRole
Android.Ranging.RangingDeviceRole.Responder = 0 -> Android.Ranging.RangingDeviceRole
Android.Ranging.RangingManager
Android.Ranging.RangingManager.CreateRangingSession(Java.Util.Concurrent.IExecutor! executor, Android.Ranging.RangingSession.ICallback! callback) -> Android.Ranging.RangingSession?
Android.Ranging.RangingManager.IRangingCapabilitiesCallback
Android.Ranging.RangingManager.IRangingCapabilitiesCallback.OnRangingCapabilities(Android.Ranging.RangingCapabilities! capabilities) -> void
Android.Ranging.RangingManager.RegisterCapabilitiesCallback(Java.Util.Concurrent.IExecutor! executor, Android.Ranging.RangingManager.IRangingCapabilitiesCallback! callback) -> void
Android.Ranging.RangingManager.UnregisterCapabilitiesCallback(Android.Ranging.RangingManager.IRangingCapabilitiesCallback! callback) -> void
Android.Ranging.RangingManagerType
Android.Ranging.RangingManagerType.BleCs = 1 -> Android.Ranging.RangingManagerType
Android.Ranging.RangingManagerType.BleRssi = 3 -> Android.Ranging.RangingManagerType
Android.Ranging.RangingManagerType.Uwb = 0 -> Android.Ranging.RangingManagerType
Android.Ranging.RangingManagerType.WifiNanRtt = 2 -> Android.Ranging.RangingManagerType
Android.Ranging.RangingMeasurement
Android.Ranging.RangingMeasurement.Confidence.get -> Android.Ranging.RangingMeasurementConfidence
Android.Ranging.RangingMeasurement.DescribeContents() -> int
Android.Ranging.RangingMeasurement.InterfaceConsts
Android.Ranging.RangingMeasurement.Measurement.get -> double
Android.Ranging.RangingMeasurement.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.RangingMeasurementConfidence
Android.Ranging.RangingMeasurementConfidence.High = 2 -> Android.Ranging.RangingMeasurementConfidence
Android.Ranging.RangingMeasurementConfidence.Low = 0 -> Android.Ranging.RangingMeasurementConfidence
Android.Ranging.RangingMeasurementConfidence.Medium = 1 -> Android.Ranging.RangingMeasurementConfidence
Android.Ranging.RangingPreference
Android.Ranging.RangingPreference.Builder
Android.Ranging.RangingPreference.Builder.Build() -> Android.Ranging.RangingPreference!
Android.Ranging.RangingPreference.Builder.Builder(int role, Android.Ranging.RangingConfig! rangingConfig) -> void
Android.Ranging.RangingPreference.Builder.SetSessionConfig(Android.Ranging.SessionConfig! config) -> Android.Ranging.RangingPreference.Builder!
Android.Ranging.RangingPreference.DescribeContents() -> int
Android.Ranging.RangingPreference.DeviceRole.get -> Android.Ranging.RangingDeviceRole
Android.Ranging.RangingPreference.InterfaceConsts
Android.Ranging.RangingPreference.RangingParams.get -> Android.Ranging.RangingConfig?
Android.Ranging.RangingPreference.SessionConfig.get -> Android.Ranging.SessionConfig!
Android.Ranging.RangingPreference.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.RangingSession
Android.Ranging.RangingSession.AddDeviceToRangingSession(Android.Ranging.RangingConfig! deviceRangingParams) -> void
Android.Ranging.RangingSession.Close() -> void
Android.Ranging.RangingSession.ICallback
Android.Ranging.RangingSession.ICallback.OnClosed(int reason) -> void
Android.Ranging.RangingSession.ICallback.OnOpened() -> void
Android.Ranging.RangingSession.ICallback.OnOpenFailed(int reason) -> void
Android.Ranging.RangingSession.ICallback.OnResults(Android.Ranging.RangingDevice! peer, Android.Ranging.RangingData! data) -> void
Android.Ranging.RangingSession.ICallback.OnStarted(Android.Ranging.RangingDevice! peer, int technology) -> void
Android.Ranging.RangingSession.ICallback.OnStopped(Android.Ranging.RangingDevice! peer, int technology) -> void
Android.Ranging.RangingSession.ReconfigureRangingInterval(int intervalSkipCount) -> void
Android.Ranging.RangingSession.RemoveDeviceFromRangingSession(Android.Ranging.RangingDevice! rangingDevice) -> void
Android.Ranging.RangingSession.Start(Android.Ranging.RangingPreference! rangingPreference) -> Android.OS.CancellationSignal!
Android.Ranging.RangingSession.Stop() -> void
Android.Ranging.RangingSessionCallbackReason
Android.Ranging.RangingSessionCallbackReason.LocalRequest = 1 -> Android.Ranging.RangingSessionCallbackReason
Android.Ranging.RangingSessionCallbackReason.NoPeersFound = 5 -> Android.Ranging.RangingSessionCallbackReason
Android.Ranging.RangingSessionCallbackReason.RemoteRequest = 2 -> Android.Ranging.RangingSessionCallbackReason
Android.Ranging.RangingSessionCallbackReason.SystemPolicy = 4 -> Android.Ranging.RangingSessionCallbackReason
Android.Ranging.RangingSessionCallbackReason.Unknown = 0 -> Android.Ranging.RangingSessionCallbackReason
Android.Ranging.RangingSessionCallbackReason.Unsupported = 3 -> Android.Ranging.RangingSessionCallbackReason
Android.Ranging.Raw.RangingDeviceUpdateRate
Android.Ranging.Raw.RangingDeviceUpdateRate.Frequent = 3 -> Android.Ranging.Raw.RangingDeviceUpdateRate
Android.Ranging.Raw.RangingDeviceUpdateRate.Infrequent = 2 -> Android.Ranging.Raw.RangingDeviceUpdateRate
Android.Ranging.Raw.RangingDeviceUpdateRate.Normal = 1 -> Android.Ranging.Raw.RangingDeviceUpdateRate
Android.Ranging.Raw.RawInitiatorRangingConfig
Android.Ranging.Raw.RawInitiatorRangingConfig.Builder
Android.Ranging.Raw.RawInitiatorRangingConfig.Builder.AddRawRangingDevice(Android.Ranging.Raw.RawRangingDevice! rangingDevice) -> Android.Ranging.Raw.RawInitiatorRangingConfig.Builder!
Android.Ranging.Raw.RawInitiatorRangingConfig.Builder.AddRawRangingDevices(System.Collections.Generic.IList<Android.Ranging.Raw.RawRangingDevice!>! rangingDevices) -> Android.Ranging.Raw.RawInitiatorRangingConfig.Builder!
Android.Ranging.Raw.RawInitiatorRangingConfig.Builder.Build() -> Android.Ranging.Raw.RawInitiatorRangingConfig!
Android.Ranging.Raw.RawInitiatorRangingConfig.Builder.Builder() -> void
Android.Ranging.Raw.RawInitiatorRangingConfig.RawRangingDevices.get -> System.Collections.Generic.IList<Android.Ranging.Raw.RawRangingDevice!>!
Android.Ranging.Raw.RawRangingDevice
Android.Ranging.Raw.RawRangingDevice.BleRssiRangingParams.get -> Android.Ranging.Ble.Rssi.BleRssiRangingParams?
Android.Ranging.Raw.RawRangingDevice.Builder
Android.Ranging.Raw.RawRangingDevice.Builder.Build() -> Android.Ranging.Raw.RawRangingDevice!
Android.Ranging.Raw.RawRangingDevice.Builder.Builder() -> void
Android.Ranging.Raw.RawRangingDevice.Builder.SetBleRssiRangingParams(Android.Ranging.Ble.Rssi.BleRssiRangingParams! params) -> Android.Ranging.Raw.RawRangingDevice.Builder!
Android.Ranging.Raw.RawRangingDevice.Builder.SetCsRangingParams(Android.Ranging.Ble.CS.BleCsRangingParams! params) -> Android.Ranging.Raw.RawRangingDevice.Builder!
Android.Ranging.Raw.RawRangingDevice.Builder.SetRangingDevice(Android.Ranging.RangingDevice! rangingDevice) -> Android.Ranging.Raw.RawRangingDevice.Builder!
Android.Ranging.Raw.RawRangingDevice.Builder.SetRttRangingParams(Android.Ranging.Wifi.Rtt.RttRangingParams! params) -> Android.Ranging.Raw.RawRangingDevice.Builder!
Android.Ranging.Raw.RawRangingDevice.Builder.SetUwbRangingParams(Android.Ranging.Uwb.UwbRangingParams! params) -> Android.Ranging.Raw.RawRangingDevice.Builder!
Android.Ranging.Raw.RawRangingDevice.CsRangingParams.get -> Android.Ranging.Ble.CS.BleCsRangingParams?
Android.Ranging.Raw.RawRangingDevice.DescribeContents() -> int
Android.Ranging.Raw.RawRangingDevice.InterfaceConsts
Android.Ranging.Raw.RawRangingDevice.RangingDevice.get -> Android.Ranging.RangingDevice!
Android.Ranging.Raw.RawRangingDevice.RttRangingParams.get -> Android.Ranging.Wifi.Rtt.RttRangingParams?
Android.Ranging.Raw.RawRangingDevice.UwbRangingParams.get -> Android.Ranging.Uwb.UwbRangingParams?
Android.Ranging.Raw.RawRangingDevice.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Raw.RawResponderRangingConfig
Android.Ranging.Raw.RawResponderRangingConfig.Builder
Android.Ranging.Raw.RawResponderRangingConfig.Builder.Build() -> Android.Ranging.Raw.RawResponderRangingConfig!
Android.Ranging.Raw.RawResponderRangingConfig.Builder.Builder() -> void
Android.Ranging.Raw.RawResponderRangingConfig.Builder.SetRawRangingDevice(Android.Ranging.Raw.RawRangingDevice! rangingDevice) -> Android.Ranging.Raw.RawResponderRangingConfig.Builder!
Android.Ranging.Raw.RawResponderRangingConfig.RawRangingDevice.get -> Android.Ranging.Raw.RawRangingDevice!
Android.Ranging.SensorFusionParams
Android.Ranging.SensorFusionParams.Builder
Android.Ranging.SensorFusionParams.Builder.Build() -> Android.Ranging.SensorFusionParams!
Android.Ranging.SensorFusionParams.Builder.Builder() -> void
Android.Ranging.SensorFusionParams.Builder.SetSensorFusionEnabled(bool sensorFusionEnabled) -> Android.Ranging.SensorFusionParams.Builder!
Android.Ranging.SensorFusionParams.DescribeContents() -> int
Android.Ranging.SensorFusionParams.InterfaceConsts
Android.Ranging.SensorFusionParams.IsSensorFusionEnabled.get -> bool
Android.Ranging.SensorFusionParams.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.SessionConfig
Android.Ranging.SessionConfig.Builder
Android.Ranging.SessionConfig.Builder.Build() -> Android.Ranging.SessionConfig!
Android.Ranging.SessionConfig.Builder.Builder() -> void
Android.Ranging.SessionConfig.Builder.SetAngleOfArrivalNeeded(bool isAngleOfArrivalNeeded) -> Android.Ranging.SessionConfig.Builder!
Android.Ranging.SessionConfig.Builder.SetDataNotificationConfig(Android.Ranging.DataNotificationConfig! config) -> Android.Ranging.SessionConfig.Builder!
Android.Ranging.SessionConfig.Builder.SetRangingMeasurementsLimit(int rangingMeasurementsLimit) -> Android.Ranging.SessionConfig.Builder!
Android.Ranging.SessionConfig.Builder.SetSensorFusionParams(Android.Ranging.SensorFusionParams! parameters) -> Android.Ranging.SessionConfig.Builder!
Android.Ranging.SessionConfig.DataNotificationConfig.get -> Android.Ranging.DataNotificationConfig!
Android.Ranging.SessionConfig.DescribeContents() -> int
Android.Ranging.SessionConfig.InterfaceConsts
Android.Ranging.SessionConfig.IsAngleOfArrivalNeeded.get -> bool
Android.Ranging.SessionConfig.RangingMeasurementsLimit.get -> int
Android.Ranging.SessionConfig.SensorFusionParams.get -> Android.Ranging.SensorFusionParams!
Android.Ranging.SessionConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Uwb.UwbAddress
Android.Ranging.Uwb.UwbAddress.DescribeContents() -> int
Android.Ranging.Uwb.UwbAddress.GetAddressBytes() -> byte[]!
Android.Ranging.Uwb.UwbAddress.InterfaceConsts
Android.Ranging.Uwb.UwbAddress.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Uwb.UwbComplexChannel
Android.Ranging.Uwb.UwbComplexChannel.Builder
Android.Ranging.Uwb.UwbComplexChannel.Builder.Build() -> Android.Ranging.Uwb.UwbComplexChannel!
Android.Ranging.Uwb.UwbComplexChannel.Builder.Builder() -> void
Android.Ranging.Uwb.UwbComplexChannel.Builder.SetChannel(int channel) -> Android.Ranging.Uwb.UwbComplexChannel.Builder!
Android.Ranging.Uwb.UwbComplexChannel.Builder.SetPreambleIndex(int preambleIndex) -> Android.Ranging.Uwb.UwbComplexChannel.Builder!
Android.Ranging.Uwb.UwbComplexChannel.Channel.get -> Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannel.DescribeContents() -> int
Android.Ranging.Uwb.UwbComplexChannel.InterfaceConsts
Android.Ranging.Uwb.UwbComplexChannel.PreambleIndex.get -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannel.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannelNumber.Channel10 = 10 -> Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannelNumber.Channel12 = 12 -> Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannelNumber.Channel13 = 13 -> Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannelNumber.Channel14 = 14 -> Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannelNumber.Channel5 = 5 -> Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannelNumber.Channel6 = 6 -> Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannelNumber.Channel8 = 8 -> Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannelNumber.Channel9 = 9 -> Android.Ranging.Uwb.UwbComplexChannelNumber
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index10 = 10 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index11 = 11 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index12 = 12 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index25 = 25 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index26 = 26 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index27 = 27 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index28 = 28 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index29 = 29 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index30 = 30 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index31 = 31 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index32 = 32 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index9 = 9 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
Android.Ranging.Uwb.UwbRangingCapabilities
Android.Ranging.Uwb.UwbRangingCapabilities.DescribeContents() -> int
Android.Ranging.Uwb.UwbRangingCapabilities.InterfaceConsts
Android.Ranging.Uwb.UwbRangingCapabilities.IsAzimuthalAngleSupported.get -> bool
Android.Ranging.Uwb.UwbRangingCapabilities.IsBackgroundRangingSupported.get -> bool
Android.Ranging.Uwb.UwbRangingCapabilities.IsDistanceMeasurementSupported.get -> bool
Android.Ranging.Uwb.UwbRangingCapabilities.IsElevationAngleSupported.get -> bool
Android.Ranging.Uwb.UwbRangingCapabilities.IsRangingIntervalReconfigurationSupported.get -> bool
Android.Ranging.Uwb.UwbRangingCapabilities.MinimumRangingInterval.get -> Java.Time.Duration!
Android.Ranging.Uwb.UwbRangingCapabilities.SupportedChannels.get -> System.Collections.Generic.IList<Java.Lang.Integer!>!
Android.Ranging.Uwb.UwbRangingCapabilities.SupportedConfigIds.get -> System.Collections.Generic.IList<Java.Lang.Integer!>!
Android.Ranging.Uwb.UwbRangingCapabilities.SupportedNotificationConfigurations.get -> System.Collections.Generic.IList<Java.Lang.Integer!>!
Android.Ranging.Uwb.UwbRangingCapabilities.SupportedPreambleIndexes.get -> System.Collections.Generic.IList<Java.Lang.Integer!>!
Android.Ranging.Uwb.UwbRangingCapabilities.SupportedRangingUpdateRates.get -> System.Collections.Generic.IList<Java.Lang.Integer!>!
Android.Ranging.Uwb.UwbRangingCapabilities.SupportedSlotDurations.get -> System.Collections.Generic.IList<Java.Lang.Integer!>!
Android.Ranging.Uwb.UwbRangingCapabilities.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Uwb.UwbRangingConfig
Android.Ranging.Uwb.UwbRangingConfig.MulticastDsTwr = 2 -> Android.Ranging.Uwb.UwbRangingConfig
Android.Ranging.Uwb.UwbRangingConfig.ProvisionedIndividualMulticastDsTwr = 5 -> Android.Ranging.Uwb.UwbRangingConfig
Android.Ranging.Uwb.UwbRangingConfig.ProvisionedMulticastDsTwr = 4 -> Android.Ranging.Uwb.UwbRangingConfig
Android.Ranging.Uwb.UwbRangingConfig.ProvisionedUnicastDsTwr = 3 -> Android.Ranging.Uwb.UwbRangingConfig
Android.Ranging.Uwb.UwbRangingConfig.ProvisionedUnicastDsTwrVeryFast = 6 -> Android.Ranging.Uwb.UwbRangingConfig
Android.Ranging.Uwb.UwbRangingConfig.UnicastDsTwr = 1 -> Android.Ranging.Uwb.UwbRangingConfig
Android.Ranging.Uwb.UwbRangingParams
Android.Ranging.Uwb.UwbRangingParams.Builder
Android.Ranging.Uwb.UwbRangingParams.Builder.Build() -> Android.Ranging.Uwb.UwbRangingParams!
Android.Ranging.Uwb.UwbRangingParams.Builder.Builder(int sessionId, int configId, Android.Ranging.Uwb.UwbAddress! deviceAddress, Android.Ranging.Uwb.UwbAddress! peerAddress) -> void
Android.Ranging.Uwb.UwbRangingParams.Builder.SetComplexChannel(Android.Ranging.Uwb.UwbComplexChannel! complexChannel) -> Android.Ranging.Uwb.UwbRangingParams.Builder!
Android.Ranging.Uwb.UwbRangingParams.Builder.SetRangingUpdateRate(int rate) -> Android.Ranging.Uwb.UwbRangingParams.Builder!
Android.Ranging.Uwb.UwbRangingParams.Builder.SetSessionKeyInfo(byte[]! sessionKeyInfo) -> Android.Ranging.Uwb.UwbRangingParams.Builder!
Android.Ranging.Uwb.UwbRangingParams.Builder.SetSlotDuration(int durationMs) -> Android.Ranging.Uwb.UwbRangingParams.Builder!
Android.Ranging.Uwb.UwbRangingParams.Builder.SetSubSessionId(int subSessionId) -> Android.Ranging.Uwb.UwbRangingParams.Builder!
Android.Ranging.Uwb.UwbRangingParams.Builder.SetSubSessionKeyInfo(byte[]! subSessionKeyInfo) -> Android.Ranging.Uwb.UwbRangingParams.Builder!
Android.Ranging.Uwb.UwbRangingParams.ComplexChannel.get -> Android.Ranging.Uwb.UwbComplexChannel!
Android.Ranging.Uwb.UwbRangingParams.ConfigId.get -> Android.Ranging.Uwb.UwbRangingConfig
Android.Ranging.Uwb.UwbRangingParams.DescribeContents() -> int
Android.Ranging.Uwb.UwbRangingParams.DeviceAddress.get -> Android.Ranging.Uwb.UwbAddress!
Android.Ranging.Uwb.UwbRangingParams.GetSessionKeyInfo() -> byte[]?
Android.Ranging.Uwb.UwbRangingParams.GetSubSessionKeyInfo() -> byte[]?
Android.Ranging.Uwb.UwbRangingParams.InterfaceConsts
Android.Ranging.Uwb.UwbRangingParams.PeerAddress.get -> Android.Ranging.Uwb.UwbAddress!
Android.Ranging.Uwb.UwbRangingParams.RangingUpdateRate.get -> Android.Ranging.Raw.RangingDeviceUpdateRate
Android.Ranging.Uwb.UwbRangingParams.SessionId.get -> int
Android.Ranging.Uwb.UwbRangingParams.SlotDuration.get -> Android.Ranging.Uwb.UwbRangingParamsDuration
Android.Ranging.Uwb.UwbRangingParams.SubSessionId.get -> int
Android.Ranging.Uwb.UwbRangingParams.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Uwb.UwbRangingParamsDuration
Android.Ranging.Uwb.UwbRangingParamsDuration.Duration1Ms = 1 -> Android.Ranging.Uwb.UwbRangingParamsDuration
Android.Ranging.Uwb.UwbRangingParamsDuration.Duration2Ms = 2 -> Android.Ranging.Uwb.UwbRangingParamsDuration
Android.Ranging.Wifi.Rtt.RttRangingCapabilities
Android.Ranging.Wifi.Rtt.RttRangingCapabilities.DescribeContents() -> int
Android.Ranging.Wifi.Rtt.RttRangingCapabilities.HasPeriodicRangingHardwareFeature.get -> bool
Android.Ranging.Wifi.Rtt.RttRangingCapabilities.InterfaceConsts
Android.Ranging.Wifi.Rtt.RttRangingCapabilities.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Ranging.Wifi.Rtt.RttRangingParams
Android.Ranging.Wifi.Rtt.RttRangingParams.Builder
Android.Ranging.Wifi.Rtt.RttRangingParams.Builder.Build() -> Android.Ranging.Wifi.Rtt.RttRangingParams!
Android.Ranging.Wifi.Rtt.RttRangingParams.Builder.Builder(string! serviceName) -> void
Android.Ranging.Wifi.Rtt.RttRangingParams.Builder.SetMatchFilter(byte[]! matchFilter) -> Android.Ranging.Wifi.Rtt.RttRangingParams.Builder!
Android.Ranging.Wifi.Rtt.RttRangingParams.Builder.SetPeriodicRangingHwFeatureEnabled(bool periodicRangingHwFeatureEnabled) -> Android.Ranging.Wifi.Rtt.RttRangingParams.Builder!
Android.Ranging.Wifi.Rtt.RttRangingParams.Builder.SetRangingUpdateRate(int updateRate) -> Android.Ranging.Wifi.Rtt.RttRangingParams.Builder!
Android.Ranging.Wifi.Rtt.RttRangingParams.DescribeContents() -> int
Android.Ranging.Wifi.Rtt.RttRangingParams.GetMatchFilter() -> byte[]?
Android.Ranging.Wifi.Rtt.RttRangingParams.InterfaceConsts
Android.Ranging.Wifi.Rtt.RttRangingParams.IsPeriodicRangingHwFeatureEnabled.get -> bool
Android.Ranging.Wifi.Rtt.RttRangingParams.RangingUpdateRate.get -> Android.Ranging.Raw.RangingDeviceUpdateRate
Android.Ranging.Wifi.Rtt.RttRangingParams.ServiceName.get -> string!
Android.Ranging.Wifi.Rtt.RttRangingParams.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Security.AdvancedProtection.AdvancedProtectionManager
Android.Security.AdvancedProtection.AdvancedProtectionManager.ICallback
Android.Security.AdvancedProtection.AdvancedProtectionManager.ICallback.OnAdvancedProtectionChanged(bool enabled) -> void
Android.Security.AdvancedProtection.AdvancedProtectionManager.IsAdvancedProtectionEnabled.get -> bool
Android.Security.AdvancedProtection.AdvancedProtectionManager.RegisterAdvancedProtectionCallback(Java.Util.Concurrent.IExecutor! executor, Android.Security.AdvancedProtection.AdvancedProtectionManager.ICallback! callback) -> void
Android.Security.AdvancedProtection.AdvancedProtectionManager.UnregisterAdvancedProtectionCallback(Android.Security.AdvancedProtection.AdvancedProtectionManager.ICallback! callback) -> void
Android.Security.Keystore.KeyStoreManager
Android.Security.Keystore.KeyStoreManager.GetGrantedCertificateChainFromId(long id) -> System.Collections.Generic.IList<Java.Security.Cert.X509Certificate!>!
Android.Security.Keystore.KeyStoreManager.GetGrantedKeyFromId(long id) -> Java.Security.IKey!
Android.Security.Keystore.KeyStoreManager.GetGrantedKeyPairFromId(long id) -> Java.Security.KeyPair!
Android.Security.Keystore.KeyStoreManager.GetSupplementaryAttestationInfo(int tag) -> byte[]!
Android.Security.Keystore.KeyStoreManager.GrantKeyAccess(string! alias, int uid) -> long
Android.Security.Keystore.KeyStoreManager.RevokeKeyAccess(string! alias, int uid) -> void
Android.Service.Autofill.EventNoSaveUiReason.UsingCredman = 7 -> Android.Service.Autofill.EventNoSaveUiReason
Android.Service.Autofill.EventUIType.CredentialManager = 4 -> Android.Service.Autofill.EventUIType
Android.Service.Autofill.FillEventHistory.Event.FocusedId.get -> Android.Views.Autofill.AutofillId?
Android.Service.Autofill.FillEventHistory.Event.ShownDatasetIds.get -> System.Collections.Generic.ICollection<string!>!
Android.Service.Autofill.FillEventHistory.SessionId.get -> int
Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.ConfigurationError = 606 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.DataDisabled = 610 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.HttpFailure = 603 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.InactiveSubscription = 609 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.InvalidApn = 601 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.InvalidSubscriptionId = 608 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.IoError = 604 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.MmsDisabledByCarrier = 611 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.NoDataNetwork = 607 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.Retry = 605 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.UnableConnectMms = 602 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.DownloadStatusMmsErrorType.Unspecified = 600 -> Android.Service.Carrier.DownloadStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.ConfigurationError = 406 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.DataDisabled = 410 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.HttpFailure = 403 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.InactiveSubscription = 409 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.InvalidApn = 401 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.InvalidSubscriptionId = 408 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.IoError = 404 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.MmsDisabledByCarrier = 411 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.NoDataNetwork = 407 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.Retry = 405 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.UnableConnectMms = 402 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusMmsErrorType.Unspecified = 400 -> Android.Service.Carrier.SendStatusMmsErrorType
Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.Cancelled = 215 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.EncodingError = 212 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.ErrorFdnCheckFailure = 204 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.ErrorGenericFailure = 200 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.ErrorLimitExceeded = 203 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.ErrorNoService = 202 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.ErrorNullPdu = 201 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.ErrorShortCodeNeverAllowed = 206 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.ErrorShortCodeNotAllowed = 205 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.InvalidArguments = 208 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.InvalidSmscAddress = 213 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.InvalidSmsFormat = 210 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.InvalidState = 209 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.NetworkError = 211 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.NetworkReject = 207 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.OperationNotAllowed = 214 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.RequestNotSupported = 216 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.SmsBlockedDuringEmergency = 217 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Carrier.SendStatusResultType.SmsSendRetryFailed = 218 -> Android.Service.Carrier.SendStatusResultType
Android.Service.Notification.NotificationListenerService.CreateConversationNotificationChannelForPackage(string! pkg, Android.OS.UserHandle! user, string! parentChannelId, string! conversationId) -> Android.App.NotificationChannel?
Android.Service.Settings.Preferences.GetValueRequest
Android.Service.Settings.Preferences.GetValueRequest.Builder
Android.Service.Settings.Preferences.GetValueRequest.Builder.Build() -> Android.Service.Settings.Preferences.GetValueRequest!
Android.Service.Settings.Preferences.GetValueRequest.Builder.Builder(string! screenKey, string! preferenceKey) -> void
Android.Service.Settings.Preferences.GetValueRequest.DescribeContents() -> int
Android.Service.Settings.Preferences.GetValueRequest.InterfaceConsts
Android.Service.Settings.Preferences.GetValueRequest.PreferenceKey.get -> string!
Android.Service.Settings.Preferences.GetValueRequest.ScreenKey.get -> string!
Android.Service.Settings.Preferences.GetValueRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Settings.Preferences.GetValueResult
Android.Service.Settings.Preferences.GetValueResult.Builder
Android.Service.Settings.Preferences.GetValueResult.Builder.Build() -> Android.Service.Settings.Preferences.GetValueResult!
Android.Service.Settings.Preferences.GetValueResult.Builder.Builder(int resultCode) -> void
Android.Service.Settings.Preferences.GetValueResult.Builder.SetMetadata(Android.Service.Settings.Preferences.SettingsPreferenceMetadata? metadata) -> Android.Service.Settings.Preferences.GetValueResult.Builder!
Android.Service.Settings.Preferences.GetValueResult.Builder.SetValue(Android.Service.Settings.Preferences.SettingsPreferenceValue? value) -> Android.Service.Settings.Preferences.GetValueResult.Builder!
Android.Service.Settings.Preferences.GetValueResult.DescribeContents() -> int
Android.Service.Settings.Preferences.GetValueResult.InterfaceConsts
Android.Service.Settings.Preferences.GetValueResult.Metadata.get -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata?
Android.Service.Settings.Preferences.GetValueResult.ResultCode.get -> Android.Service.Settings.Preferences.GetValueResultType
Android.Service.Settings.Preferences.GetValueResult.Value.get -> Android.Service.Settings.Preferences.SettingsPreferenceValue?
Android.Service.Settings.Preferences.GetValueResult.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Settings.Preferences.GetValueResultType
Android.Service.Settings.Preferences.GetValueResultType.Disallow = 4 -> Android.Service.Settings.Preferences.GetValueResultType
Android.Service.Settings.Preferences.GetValueResultType.InternalError = 6 -> Android.Service.Settings.Preferences.GetValueResultType
Android.Service.Settings.Preferences.GetValueResultType.InvalidRequest = 5 -> Android.Service.Settings.Preferences.GetValueResultType
Android.Service.Settings.Preferences.GetValueResultType.Ok = 0 -> Android.Service.Settings.Preferences.GetValueResultType
Android.Service.Settings.Preferences.GetValueResultType.RequireAppPermission = 3 -> Android.Service.Settings.Preferences.GetValueResultType
Android.Service.Settings.Preferences.GetValueResultType.Unavailable = 2 -> Android.Service.Settings.Preferences.GetValueResultType
Android.Service.Settings.Preferences.GetValueResultType.Unsupported = 1 -> Android.Service.Settings.Preferences.GetValueResultType
Android.Service.Settings.Preferences.MetadataRequest
Android.Service.Settings.Preferences.MetadataRequest.Builder
Android.Service.Settings.Preferences.MetadataRequest.Builder.Build() -> Android.Service.Settings.Preferences.MetadataRequest!
Android.Service.Settings.Preferences.MetadataRequest.Builder.Builder() -> void
Android.Service.Settings.Preferences.MetadataRequest.DescribeContents() -> int
Android.Service.Settings.Preferences.MetadataRequest.InterfaceConsts
Android.Service.Settings.Preferences.MetadataRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Settings.Preferences.MetadataResult
Android.Service.Settings.Preferences.MetadataResult.Builder
Android.Service.Settings.Preferences.MetadataResult.Builder.Build() -> Android.Service.Settings.Preferences.MetadataResult!
Android.Service.Settings.Preferences.MetadataResult.Builder.Builder(int resultCode) -> void
Android.Service.Settings.Preferences.MetadataResult.Builder.SetMetadataList(System.Collections.Generic.IList<Android.Service.Settings.Preferences.SettingsPreferenceMetadata!>! metadataList) -> Android.Service.Settings.Preferences.MetadataResult.Builder!
Android.Service.Settings.Preferences.MetadataResult.DescribeContents() -> int
Android.Service.Settings.Preferences.MetadataResult.InterfaceConsts
Android.Service.Settings.Preferences.MetadataResult.MetadataList.get -> System.Collections.Generic.IList<Android.Service.Settings.Preferences.SettingsPreferenceMetadata!>!
Android.Service.Settings.Preferences.MetadataResult.ResultCode.get -> Android.Service.Settings.Preferences.MetadataResultType
Android.Service.Settings.Preferences.MetadataResult.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Settings.Preferences.MetadataResultType
Android.Service.Settings.Preferences.MetadataResultType.InternalError = 2 -> Android.Service.Settings.Preferences.MetadataResultType
Android.Service.Settings.Preferences.MetadataResultType.Ok = 0 -> Android.Service.Settings.Preferences.MetadataResultType
Android.Service.Settings.Preferences.MetadataResultType.Unsupported = 1 -> Android.Service.Settings.Preferences.MetadataResultType
Android.Service.Settings.Preferences.SettingsPreferenceMetadata
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.Build() -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.Builder(string! screenKey, string! key) -> void
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetAvailable(bool available) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetEnabled(bool enabled) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetExtras(Android.OS.Bundle! extras) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetLaunchIntent(Android.Content.Intent? launchIntent) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetReadPermissions(System.Collections.Generic.IList<string!>! readPermissions) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetRestricted(bool restricted) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetSummary(string? summary) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetTitle(string? title) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetWritable(bool writable) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetWritePermissions(System.Collections.Generic.IList<string!>! writePermissions) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.SetWriteSensitivity(int sensitivity) -> Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.DescribeContents() -> int
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Extras.get -> Android.OS.Bundle!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.InterfaceConsts
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.IsAvailable.get -> bool
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.IsEnabled.get -> bool
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.IsRestricted.get -> bool
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.IsWritable.get -> bool
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Key.get -> string!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.LaunchIntent.get -> Android.Content.Intent?
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.ReadPermissions.get -> System.Collections.Generic.IList<string!>!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.ScreenKey.get -> string!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Summary.get -> string?
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Title.get -> string?
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.WritePermissions.get -> System.Collections.Generic.IList<string!>!
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.WriteSensitivity.get -> Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
Android.Service.Settings.Preferences.SettingsPreferenceMetadata.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
Android.Service.Settings.Preferences.SettingsPreferenceMetadataType.DeeplinkOnly = 2 -> Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
Android.Service.Settings.Preferences.SettingsPreferenceMetadataType.ExpectPostConfirmation = 1 -> Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
Android.Service.Settings.Preferences.SettingsPreferenceMetadataType.NoDirectAccess = 3 -> Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
Android.Service.Settings.Preferences.SettingsPreferenceMetadataType.NoSensitivity = 0 -> Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
Android.Service.Settings.Preferences.SettingsPreferenceService
Android.Service.Settings.Preferences.SettingsPreferenceService.SettingsPreferenceService() -> void
Android.Service.Settings.Preferences.SettingsPreferenceService.SettingsPreferenceService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Service.Settings.Preferences.SettingsPreferenceServiceClient
Android.Service.Settings.Preferences.SettingsPreferenceServiceClient.SettingsPreferenceServiceClient(Android.Content.Context! context, string! packageName, Java.Util.Concurrent.IExecutor! callbackExecutor, Android.OS.IOutcomeReceiver! clientReadyCallback) -> void
Android.Service.Settings.Preferences.SettingsPreferenceServiceClient.SettingsPreferenceServiceClient(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Service.Settings.Preferences.SettingsPreferenceValue
Android.Service.Settings.Preferences.SettingsPreferenceValue.BooleanValue.get -> bool
Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder
Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder.Build() -> Android.Service.Settings.Preferences.SettingsPreferenceValue!
Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder.Builder(int type) -> void
Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder.SetBooleanValue(bool booleanValue) -> Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder.SetDoubleValue(double doubleValue) -> Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder.SetIntValue(int intValue) -> Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder.SetLongValue(long longValue) -> Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder.SetStringValue(string? stringValue) -> Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder!
Android.Service.Settings.Preferences.SettingsPreferenceValue.DescribeContents() -> int
Android.Service.Settings.Preferences.SettingsPreferenceValue.DoubleValue.get -> double
Android.Service.Settings.Preferences.SettingsPreferenceValue.InterfaceConsts
Android.Service.Settings.Preferences.SettingsPreferenceValue.IntValue.get -> int
Android.Service.Settings.Preferences.SettingsPreferenceValue.LongValue.get -> long
Android.Service.Settings.Preferences.SettingsPreferenceValue.StringValue.get -> string?
Android.Service.Settings.Preferences.SettingsPreferenceValue.Type.get -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
Android.Service.Settings.Preferences.SettingsPreferenceValue.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Settings.Preferences.SettingsPreferenceValueType
Android.Service.Settings.Preferences.SettingsPreferenceValueType.Boolean = 0 -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
Android.Service.Settings.Preferences.SettingsPreferenceValueType.Double = 2 -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
Android.Service.Settings.Preferences.SettingsPreferenceValueType.Int = 4 -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
Android.Service.Settings.Preferences.SettingsPreferenceValueType.Long = 1 -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
Android.Service.Settings.Preferences.SettingsPreferenceValueType.String = 3 -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
Android.Service.Settings.Preferences.SetValueRequest
Android.Service.Settings.Preferences.SetValueRequest.Builder
Android.Service.Settings.Preferences.SetValueRequest.Builder.Build() -> Android.Service.Settings.Preferences.SetValueRequest!
Android.Service.Settings.Preferences.SetValueRequest.Builder.Builder(string! screenKey, string! preferenceKey, Android.Service.Settings.Preferences.SettingsPreferenceValue! value) -> void
Android.Service.Settings.Preferences.SetValueRequest.DescribeContents() -> int
Android.Service.Settings.Preferences.SetValueRequest.InterfaceConsts
Android.Service.Settings.Preferences.SetValueRequest.PreferenceKey.get -> string!
Android.Service.Settings.Preferences.SetValueRequest.PreferenceValue.get -> Android.Service.Settings.Preferences.SettingsPreferenceValue!
Android.Service.Settings.Preferences.SetValueRequest.ScreenKey.get -> string!
Android.Service.Settings.Preferences.SetValueRequest.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Settings.Preferences.SetValueResult
Android.Service.Settings.Preferences.SetValueResult.Builder
Android.Service.Settings.Preferences.SetValueResult.Builder.Build() -> Android.Service.Settings.Preferences.SetValueResult!
Android.Service.Settings.Preferences.SetValueResult.Builder.Builder(int resultCode) -> void
Android.Service.Settings.Preferences.SetValueResult.DescribeContents() -> int
Android.Service.Settings.Preferences.SetValueResult.InterfaceConsts
Android.Service.Settings.Preferences.SetValueResult.ResultCode.get -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResult.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.Disabled = 2 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.Disallow = 7 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.InternalError = 9 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.InvalidRequest = 8 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.Ok = 0 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.RequireAppPermission = 5 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.RequireUserConsent = 6 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.Restricted = 3 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.Unavailable = 4 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Service.Settings.Preferences.SetValueResultType.Unsupported = 1 -> Android.Service.Settings.Preferences.SetValueResultType
Android.Telephony.Data.ApnType.OemPaid = 65536 -> Android.Telephony.Data.ApnType
Android.Telephony.Data.ApnType.OemPrivate = 131072 -> Android.Telephony.Data.ApnType
Android.Telephony.Satellite.ISatelliteStateChangeListener
Android.Telephony.Satellite.ISatelliteStateChangeListener.OnEnabledStateChanged(bool isEnabled) -> void
Android.Telephony.Satellite.SatelliteManager
Android.Telephony.Satellite.SatelliteManager.RegisterStateChangeListener(Java.Util.Concurrent.IExecutor! executor, Android.Telephony.Satellite.ISatelliteStateChangeListener! listener) -> void
Android.Telephony.Satellite.SatelliteManager.UnregisterStateChangeListener(Android.Telephony.Satellite.ISatelliteStateChangeListener! listener) -> void
Android.Telephony.Satellite.SatelliteStateChangeEventArgs
Android.Telephony.Satellite.SatelliteStateChangeEventArgs.IsEnabled.get -> bool
Android.Telephony.Satellite.SatelliteStateChangeEventArgs.SatelliteStateChangeEventArgs(bool isEnabled) -> void
Android.Telephony.SubscriptionPlan.PlanEndDate.get -> Java.Time.ZonedDateTime?
Android.Telephony.SubscriptionPlan.SubscriptionStatus.get -> Android.Telephony.SubscriptionStatus
Android.Telephony.SubscriptionStatus
Android.Telephony.SubscriptionStatus.Active = 1 -> Android.Telephony.SubscriptionStatus
Android.Telephony.SubscriptionStatus.Inactive = 2 -> Android.Telephony.SubscriptionStatus
Android.Telephony.SubscriptionStatus.Suspended = 4 -> Android.Telephony.SubscriptionStatus
Android.Telephony.SubscriptionStatus.Trial = 3 -> Android.Telephony.SubscriptionStatus
Android.Telephony.SubscriptionStatus.Unknown = 0 -> Android.Telephony.SubscriptionStatus
Android.Text.Style.NoWritingToolsSpan
Android.Text.Style.NoWritingToolsSpan.DescribeContents() -> int
Android.Text.Style.NoWritingToolsSpan.InterfaceConsts
Android.Text.Style.NoWritingToolsSpan.NoWritingToolsSpan() -> void
Android.Text.Style.NoWritingToolsSpan.SpanTypeId.get -> int
Android.Text.Style.NoWritingToolsSpan.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Text.Style.TtsSpan.DurationBuilder
Android.Text.Style.TtsSpan.DurationBuilder.DurationBuilder() -> void
Android.Text.Style.TtsSpan.DurationBuilder.DurationBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Views.Accessibility.AccessibilityManager.AddHighContrastTextStateChangeListener(Java.Util.Concurrent.IExecutor! executor, Android.Views.Accessibility.AccessibilityManager.IHighContrastTextStateChangeListener! listener) -> void
Android.Views.Accessibility.AccessibilityManager.HighContrastTextStateChangeEventArgs
Android.Views.Accessibility.AccessibilityManager.HighContrastTextStateChangeEventArgs.Enabled.get -> bool
Android.Views.Accessibility.AccessibilityManager.HighContrastTextStateChangeEventArgs.HighContrastTextStateChangeEventArgs(bool enabled) -> void
Android.Views.Accessibility.AccessibilityManager.IHighContrastTextStateChangeListener
Android.Views.Accessibility.AccessibilityManager.IHighContrastTextStateChangeListener.OnHighContrastTextStateChanged(bool enabled) -> void
Android.Views.Accessibility.AccessibilityManager.IsHighContrastTextEnabled.get -> bool
Android.Views.Accessibility.AccessibilityManager.RemoveHighContrastTextStateChangeListener(Android.Views.Accessibility.AccessibilityManager.IHighContrastTextStateChangeListener! listener) -> void
Android.Views.Accessibility.AccessibilityNodeInfo.SupplementalDescription.get -> string?
Android.Views.Accessibility.AccessibilityNodeInfo.SupplementalDescription.set -> void
Android.Views.Accessibility.AccessibilityWindowType.WindowControl = 7 -> Android.Views.Accessibility.AccessibilityWindowType
Android.Views.Accessibility.CheckedState
Android.Views.Accessibility.CheckedState.False = 0 -> Android.Views.Accessibility.CheckedState
Android.Views.Accessibility.CheckedState.Partial = 2 -> Android.Views.Accessibility.CheckedState
Android.Views.Accessibility.CheckedState.True = 1 -> Android.Views.Accessibility.CheckedState
Android.Views.Accessibility.ContentChangeTypes.Checked = 8192 -> Android.Views.Accessibility.ContentChangeTypes
Android.Views.Accessibility.ContentChangeTypes.Expanded = 16384 -> Android.Views.Accessibility.ContentChangeTypes
Android.Views.Accessibility.ContentChangeTypes.SupplementalDescription = 32768 -> Android.Views.Accessibility.ContentChangeTypes
Android.Views.Accessibility.ExpandedState
Android.Views.Accessibility.ExpandedState.Collapsed = 1 -> Android.Views.Accessibility.ExpandedState
Android.Views.Accessibility.ExpandedState.Full = 3 -> Android.Views.Accessibility.ExpandedState
Android.Views.Accessibility.ExpandedState.Partial = 2 -> Android.Views.Accessibility.ExpandedState
Android.Views.Accessibility.ExpandedState.Undefined = 0 -> Android.Views.Accessibility.ExpandedState
Android.Views.Accessibility.RangeType.Indeterminate = 3 -> Android.Views.Accessibility.RangeType
Android.Views.Autofill.AutofillId.AutofillVirtualId.get -> int
Android.Views.Autofill.AutofillId.IsInAutofillSession.get -> bool
Android.Views.Autofill.AutofillId.IsVirtual.get -> bool
Android.Views.Autofill.AutofillId.SessionId.get -> int
Android.Views.Autofill.AutofillId.ViewId.get -> int
Android.Views.DisplayFrameRateCategory
Android.Views.DisplayFrameRateCategory.High = 1 -> Android.Views.DisplayFrameRateCategory
Android.Views.DisplayFrameRateCategory.Normal = 0 -> Android.Views.DisplayFrameRateCategory
Android.Views.DragFlags.HideCallingTaskOnDragStart = 16384 -> Android.Views.DragFlags
Android.Views.FrameMetricsId.FrameTimelineVsyncId = 14 -> Android.Views.FrameMetricsId
Android.Views.IAttachedSurfaceControl.RegisterOnJankDataListener(Java.Util.Concurrent.IExecutor! executor, Android.Views.SurfaceControl.IOnJankDataListener! listener) -> Android.Views.SurfaceControl.OnJankDataListenerRegistration!
Android.Views.InputMethods.InputMethodInfo.CreateImeLanguageSettingsActivityIntent() -> Android.Content.Intent?
Android.Views.InputMethods.InputMethodSubtype.GetLayoutDisplayName(Android.Content.Context! context, Android.Content.PM.ApplicationInfo! imeAppInfo) -> string!
Android.Views.InputMethods.InputMethodSubtype.GetLayoutDisplayNameFormatted(Android.Content.Context! context, Android.Content.PM.ApplicationInfo! imeAppInfo) -> Java.Lang.ICharSequence!
Android.Views.InputMethods.InputMethodSubtype.InputMethodSubtypeBuilder.SetLayoutLabelNonLocalized(string! layoutLabelNonLocalized) -> Android.Views.InputMethods.InputMethodSubtype.InputMethodSubtypeBuilder!
Android.Views.InputMethods.InputMethodSubtype.LayoutLabelNonLocalized.get -> string?
Android.Views.InputMethods.InputMethodSubtype.LayoutLabelNonLocalizedFormatted.get -> Java.Lang.ICharSequence!
Android.Views.InputMethods.InputMethodSubtype.LayoutLabelResource.get -> int
Android.Views.Keycode.Close = 321 -> Android.Views.Keycode
Android.Views.Keycode.Dictate = 319 -> Android.Views.Keycode
Android.Views.Keycode.DoNotDisturb = 322 -> Android.Views.Keycode
Android.Views.Keycode.F13 = 326 -> Android.Views.Keycode
Android.Views.Keycode.F14 = 327 -> Android.Views.Keycode
Android.Views.Keycode.F15 = 328 -> Android.Views.Keycode
Android.Views.Keycode.F16 = 329 -> Android.Views.Keycode
Android.Views.Keycode.F17 = 330 -> Android.Views.Keycode
Android.Views.Keycode.F18 = 331 -> Android.Views.Keycode
Android.Views.Keycode.F19 = 332 -> Android.Views.Keycode
Android.Views.Keycode.F20 = 333 -> Android.Views.Keycode
Android.Views.Keycode.F21 = 334 -> Android.Views.Keycode
Android.Views.Keycode.F22 = 335 -> Android.Views.Keycode
Android.Views.Keycode.F23 = 336 -> Android.Views.Keycode
Android.Views.Keycode.F24 = 337 -> Android.Views.Keycode
Android.Views.Keycode.Fullscreen = 325 -> Android.Views.Keycode
Android.Views.Keycode.Lock = 324 -> Android.Views.Keycode
Android.Views.Keycode.New = 320 -> Android.Views.Keycode
Android.Views.Keycode.Print = 323 -> Android.Views.Keycode
Android.Views.SurfaceControl.IOnJankDataListener
Android.Views.SurfaceControl.IOnJankDataListener.OnJankDataAvailable(System.Collections.Generic.IList<Android.Views.SurfaceControl.JankData!>! jankData) -> void
Android.Views.SurfaceControl.JankData
Android.Views.SurfaceControl.JankData.JankData(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Views.SurfaceControl.JankDataEventArgs
Android.Views.SurfaceControl.JankDataEventArgs.JankData.get -> System.Collections.Generic.IList<Android.Views.SurfaceControl.JankData!>!
Android.Views.SurfaceControl.JankDataEventArgs.JankDataEventArgs(System.Collections.Generic.IList<Android.Views.SurfaceControl.JankData!>! jankData) -> void
Android.Views.SurfaceControl.OnJankDataListenerRegistration
Android.Views.SurfaceControl.OnJankDataListenerRegistration.OnJankDataListenerRegistration(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Views.SurfaceFrameRateCompatibility.AtLeast = 2 -> Android.Views.SurfaceFrameRateCompatibility
Android.Views.SurfaceJankType
Android.Views.SurfaceJankType.Application = 2 -> Android.Views.SurfaceJankType
Android.Views.SurfaceJankType.Composer = 1 -> Android.Views.SurfaceJankType
Android.Views.SurfaceJankType.None = 0 -> Android.Views.SurfaceJankType
Android.Views.SurfaceJankType.Other = 4 -> Android.Views.SurfaceJankType
Android.Views.View.SupplementalDescription.get -> string?
Android.Views.View.SupplementalDescription.set -> void
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.AccentColor.get -> long
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder.Build() -> Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo!
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder.Builder() -> void
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder.SetAccentColor(long accentColor) -> Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder!
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder.SetMaxSelectionLimit(int maxSelectionLimit) -> Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder!
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder.SetMimeTypes(System.Collections.Generic.IList<string!>! mimeTypes) -> Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder!
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder.SetOrderedSelection(bool orderedSelection) -> Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder!
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder.SetPreSelectedUris(System.Collections.Generic.IList<Android.Net.Uri!>! preSelectedUris) -> Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder!
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder.SetThemeNightMode(int themeNightMode) -> Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder!
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.DescribeContents() -> int
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.InterfaceConsts
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.IsOrderedSelection.get -> bool
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.MaxSelectionLimit.get -> int
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.MimeTypes.get -> System.Collections.Generic.IList<string!>!
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.PreSelectedUris.get -> System.Collections.Generic.IList<Android.Net.Uri!>!
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.ThemeNightMode.get -> int
Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Widget.PhotoPicker.EmbeddedPhotoPickerProviderFactory
Android.Widget.PhotoPicker.EmbeddedPhotoPickerProviderFactory.EmbeddedPhotoPickerProviderFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerClient
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerClient.OnSelectionComplete() -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerClient.OnSessionError(Java.Lang.Throwable! cause) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerClient.OnSessionOpened(Android.Widget.PhotoPicker.IEmbeddedPhotoPickerSession! session) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerClient.OnUriPermissionGranted(System.Collections.Generic.IList<Android.Net.Uri!>! uris) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerClient.OnUriPermissionRevoked(System.Collections.Generic.IList<Android.Net.Uri!>! uris) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerProvider
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerProvider.OpenSession(Android.OS.IBinder! hostToken, int displayId, int width, int height, Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo! featureInfo, Java.Util.Concurrent.IExecutor! clientExecutor, Android.Widget.PhotoPicker.IEmbeddedPhotoPickerClient! callback) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerSession
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerSession.Close() -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerSession.NotifyConfigurationChanged(Android.Content.Res.Configuration! configuration) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerSession.NotifyPhotoPickerExpanded(bool isExpanded) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerSession.NotifyResized(int width, int height) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerSession.NotifyVisibilityChanged(bool isVisible) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerSession.RequestRevokeUriPermission(System.Collections.Generic.IList<Android.Net.Uri!>! uris) -> void
Android.Widget.PhotoPicker.IEmbeddedPhotoPickerSession.SurfacePackage.get -> Android.Views.SurfaceControlViewHost.SurfacePackage!
Android.Window.BackEvent.BackEvent(float touchX, float touchY, float progress, Android.Window.BackEventEdge swipeEdge, long frameTimeMillis) -> void
Android.Window.BackEvent.FrameTimeMillis.get -> long
Android.Window.BackEventEdge.None = 2 -> Android.Window.BackEventEdge
Android.Window.SystemOnBackInvokedCallbacks
const Android.AccessibilityServices.AccessibilityService.GlobalActionMediaPlayPause = Android.AccessibilityServices.GlobalAction.MediaPlayPause -> Android.AccessibilityServices.GlobalAction
const Android.AccessibilityServices.AccessibilityService.GlobalActionMenu = Android.AccessibilityServices.GlobalAction.Menu -> Android.AccessibilityServices.GlobalAction
const Android.AdServices.AdSelection.PerBuyerConfiguration.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.AdSelection.PerBuyerConfiguration.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.AdSelection.ReportEventRequest.FlagReportingDestinationComponentSeller = Android.AdServices.AdSelection.ReportingDestination.ComponentSeller -> Android.AdServices.AdSelection.ReportingDestination
const Android.AdServices.AdSelection.SellerConfiguration.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.AdSelection.SellerConfiguration.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.Common.ComponentAdData.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.AdServices.Common.ComponentAdData.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.OutputTypeBestValue = Android.AdServices.OnDevicePersonalization.OutputType.BestValue -> Android.AdServices.OnDevicePersonalization.OutputType
const Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.OutputTypeNull = Android.AdServices.OnDevicePersonalization.OutputType.Null -> Android.AdServices.OnDevicePersonalization.OutputType
const Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceResponse.DefaultBestValue = -1 -> int
const Android.AdServices.OnDevicePersonalization.InferenceInput.Params.ModelTypeExecutorch = Android.AdServices.OnDevicePersonalization.ModelType.Executorch -> Android.AdServices.OnDevicePersonalization.ModelType
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorInferenceFailed = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.InferenceFailed -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorInferenceModelNotFound = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.InferenceModelNotFound -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorInvalidTrainingManifest = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.InvalidTrainingManifest -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorIsolatedServiceLoadingFailed = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.IsolatedServiceLoadingFailed -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorIsolatedServiceManifestParsingFailed = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.IsolatedServiceManifestParsingFailed -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorIsolatedServiceTimeout = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.IsolatedServiceTimeout -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationException.ErrorScheduleTrainingFailed = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError.ScheduleTrainingFailed -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationError
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.FeatureDisabled = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature.Disabled -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.FeatureEnabled = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature.Enabled -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature
const Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.FeatureUnsupported = Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature.Unsupported -> Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationFeature
const Android.App.ActivityOptions.ModeBackgroundActivityStartAllowAlways = Android.App.BackgroundActivityStartMode.AllowAlways -> Android.App.BackgroundActivityStartMode
const Android.App.ActivityOptions.ModeBackgroundActivityStartAllowIfVisible = Android.App.BackgroundActivityStartMode.AllowIfVisible -> Android.App.BackgroundActivityStartMode
const Android.App.Admin.DevicePolicyIdentifiers.AppFunctionsPolicy = "appFunctions" -> string!
const Android.App.Admin.DevicePolicyManager.AppFunctionsDisabled = Android.App.Admin.DevicePolicyManagerAppFunctionsStatus.Disabled -> Android.App.Admin.DevicePolicyManagerAppFunctionsStatus
const Android.App.Admin.DevicePolicyManager.AppFunctionsDisabledCrossProfile = Android.App.Admin.DevicePolicyManagerAppFunctionsStatus.DisabledCrossProfile -> Android.App.Admin.DevicePolicyManagerAppFunctionsStatus
const Android.App.Admin.DevicePolicyManager.AppFunctionsNotControlledByPolicy = Android.App.Admin.DevicePolicyManagerAppFunctionsStatus.NotControlledByPolicy -> Android.App.Admin.DevicePolicyManagerAppFunctionsStatus
const Android.App.Admin.DevicePolicyManager.AutoTimeDisabled = Android.App.Admin.DevicePolicyManagerAutoTimeStatus.Disabled -> Android.App.Admin.DevicePolicyManagerAutoTimeStatus
const Android.App.Admin.DevicePolicyManager.AutoTimeEnabled = Android.App.Admin.DevicePolicyManagerAutoTimeStatus.Enabled -> Android.App.Admin.DevicePolicyManagerAutoTimeStatus
const Android.App.Admin.DevicePolicyManager.AutoTimeNotControlledByPolicy = Android.App.Admin.DevicePolicyManagerAutoTimeStatus.NotControlledByPolicy -> Android.App.Admin.DevicePolicyManagerAutoTimeStatus
const Android.App.Admin.DevicePolicyManager.AutoTimeZoneDisabled = Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus.Disabled -> Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus
const Android.App.Admin.DevicePolicyManager.AutoTimeZoneEnabled = Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus.Enabled -> Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus
const Android.App.Admin.DevicePolicyManager.AutoTimeZoneNotControlledByPolicy = Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus.NotControlledByPolicy -> Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus
const Android.App.Admin.SecurityLog.TagNfcDisabled = Android.App.Admin.SecurityLogTags.NfcDisabled -> Android.App.Admin.SecurityLogTags
const Android.App.Admin.SecurityLog.TagNfcEnabled = Android.App.Admin.SecurityLogTags.NfcEnabled -> Android.App.Admin.SecurityLogTags
const Android.App.AppFunctions.AppFunctionException.ErrorAppUnknownError = Android.App.AppFunctions.AppFunctionError.AppUnknownError -> Android.App.AppFunctions.AppFunctionError
const Android.App.AppFunctions.AppFunctionException.ErrorCancelled = Android.App.AppFunctions.AppFunctionError.Cancelled -> Android.App.AppFunctions.AppFunctionError
const Android.App.AppFunctions.AppFunctionException.ErrorCategoryApp = Android.App.AppFunctions.AppFunctionErrorCategory.App -> Android.App.AppFunctions.AppFunctionErrorCategory
const Android.App.AppFunctions.AppFunctionException.ErrorCategoryRequestError = Android.App.AppFunctions.AppFunctionErrorCategory.RequestError -> Android.App.AppFunctions.AppFunctionErrorCategory
const Android.App.AppFunctions.AppFunctionException.ErrorCategorySystem = Android.App.AppFunctions.AppFunctionErrorCategory.System -> Android.App.AppFunctions.AppFunctionErrorCategory
const Android.App.AppFunctions.AppFunctionException.ErrorCategoryUnknown = Android.App.AppFunctions.AppFunctionErrorCategory.Unknown -> Android.App.AppFunctions.AppFunctionErrorCategory
const Android.App.AppFunctions.AppFunctionException.ErrorDenied = Android.App.AppFunctions.AppFunctionError.Denied -> Android.App.AppFunctions.AppFunctionError
const Android.App.AppFunctions.AppFunctionException.ErrorDisabled = Android.App.AppFunctions.AppFunctionError.Disabled -> Android.App.AppFunctions.AppFunctionError
const Android.App.AppFunctions.AppFunctionException.ErrorEnterprisePolicyDisallowed = Android.App.AppFunctions.AppFunctionError.EnterprisePolicyDisallowed -> Android.App.AppFunctions.AppFunctionError
const Android.App.AppFunctions.AppFunctionException.ErrorFunctionNotFound = Android.App.AppFunctions.AppFunctionError.FunctionNotFound -> Android.App.AppFunctions.AppFunctionError
const Android.App.AppFunctions.AppFunctionException.ErrorInvalidArgument = Android.App.AppFunctions.AppFunctionError.InvalidArgument -> Android.App.AppFunctions.AppFunctionError
const Android.App.AppFunctions.AppFunctionException.ErrorSystemError = Android.App.AppFunctions.AppFunctionError.SystemError -> Android.App.AppFunctions.AppFunctionError
const Android.App.AppFunctions.AppFunctionException.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppFunctions.AppFunctionException.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppFunctions.AppFunctionManager.AppFunctionStateDefault = Android.App.AppFunctions.AppFunctionState.Default -> Android.App.AppFunctions.AppFunctionState
const Android.App.AppFunctions.AppFunctionManager.AppFunctionStateDisabled = Android.App.AppFunctions.AppFunctionState.Disabled -> Android.App.AppFunctions.AppFunctionState
const Android.App.AppFunctions.AppFunctionManager.AppFunctionStateEnabled = Android.App.AppFunctions.AppFunctionState.Enabled -> Android.App.AppFunctions.AppFunctionState
const Android.App.AppFunctions.AppFunctionService.ServiceInterface = "android.app.appfunctions.AppFunctionService" -> string!
const Android.App.AppFunctions.ExecuteAppFunctionRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppFunctions.ExecuteAppFunctionRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppFunctions.ExecuteAppFunctionResponse.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppFunctions.ExecuteAppFunctionResponse.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppFunctions.ExecuteAppFunctionResponse.PropertyReturnValue = "androidAppfunctionsReturnValue" -> string!
const Android.App.ApplicationStartInfo.StartComponentActivity = Android.App.ApplicationStartInfoStartComponent.Activity -> Android.App.ApplicationStartInfoStartComponent
const Android.App.ApplicationStartInfo.StartComponentBroadcast = Android.App.ApplicationStartInfoStartComponent.Broadcast -> Android.App.ApplicationStartInfoStartComponent
const Android.App.ApplicationStartInfo.StartComponentContentProvider = Android.App.ApplicationStartInfoStartComponent.ContentProvider -> Android.App.ApplicationStartInfoStartComponent
const Android.App.ApplicationStartInfo.StartComponentOther = Android.App.ApplicationStartInfoStartComponent.Other -> Android.App.ApplicationStartInfoStartComponent
const Android.App.ApplicationStartInfo.StartComponentService = Android.App.ApplicationStartInfoStartComponent.Service -> Android.App.ApplicationStartInfoStartComponent
const Android.App.AppOpsManager.OpNotedCallbackFlagIgnoreAsync = Android.App.AppOpsManagerCallbackFlag.Async -> Android.App.AppOpsManagerCallbackFlag
const Android.App.AppSearch.AppSearchBlobHandle.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.AppSearchBlobHandle.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.AppSearchResult.ResultAlreadyExists = Android.App.AppSearch.AppSearchResultCode.ResultAlreadyExists -> Android.App.AppSearch.AppSearchResultCode
const Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.IndexingTypeNone = Android.App.AppSearch.AppSearchIndexingType.None -> Android.App.AppSearch.AppSearchIndexingType
const Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.IndexingTypeSimilarity = Android.App.AppSearch.AppSearchIndexingType.Similarity -> Android.App.AppSearch.AppSearchIndexingType
const Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.QuantizationType8Bit = Android.App.AppSearch.AppSearchQuantizationType.Type8Bit -> Android.App.AppSearch.AppSearchQuantizationType
const Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.QuantizationTypeNone = Android.App.AppSearch.AppSearchQuantizationType.None -> Android.App.AppSearch.AppSearchQuantizationType
const Android.App.AppSearch.CommitBlobResponse.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.CommitBlobResponse.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.EmbeddingVector.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.EmbeddingVector.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.OpenBlobForReadResponse.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.OpenBlobForReadResponse.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.OpenBlobForWriteResponse.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.OpenBlobForWriteResponse.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.RemoveBlobResponse.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.AppSearch.RemoveBlobResponse.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.AppSearch.SearchSpec.EmbeddingSearchMetricTypeCosine = Android.App.AppSearch.EmbeddingSearchMetricType.Cosine -> Android.App.AppSearch.EmbeddingSearchMetricType
const Android.App.AppSearch.SearchSpec.EmbeddingSearchMetricTypeDefault = Android.App.AppSearch.EmbeddingSearchMetricType.Default -> Android.App.AppSearch.EmbeddingSearchMetricType
const Android.App.AppSearch.SearchSpec.EmbeddingSearchMetricTypeDotProduct = Android.App.AppSearch.EmbeddingSearchMetricType.DotProduct -> Android.App.AppSearch.EmbeddingSearchMetricType
const Android.App.AppSearch.SearchSpec.EmbeddingSearchMetricTypeEuclidean = Android.App.AppSearch.EmbeddingSearchMetricType.Euclidean -> Android.App.AppSearch.EmbeddingSearchMetricType
const Android.App.Assist.AssistContent.ExtraAppFunctionData = "android.app.assist.extra.APP_FUNCTION_DATA" -> string!
const Android.App.Jank.AppJankStats.WidgetCategoryAnimation = "animation" -> string!
const Android.App.Jank.AppJankStats.WidgetCategoryKeyboard = "keyboard" -> string!
const Android.App.Jank.AppJankStats.WidgetCategoryMedia = "media" -> string!
const Android.App.Jank.AppJankStats.WidgetCategoryNavigation = "navigation" -> string!
const Android.App.Jank.AppJankStats.WidgetCategoryOther = "other" -> string!
const Android.App.Jank.AppJankStats.WidgetCategoryScroll = "scroll" -> string!
const Android.App.Jank.AppJankStats.WidgetCategoryUnspecified = "unspecified" -> string!
const Android.App.Jank.AppJankStats.WidgetStateAnimating = "animating" -> string!
const Android.App.Jank.AppJankStats.WidgetStateDragging = "dragging" -> string!
const Android.App.Jank.AppJankStats.WidgetStateFlinging = "flinging" -> string!
const Android.App.Jank.AppJankStats.WidgetStateNone = "none" -> string!
const Android.App.Jank.AppJankStats.WidgetStatePlayback = "playback" -> string!
const Android.App.Jank.AppJankStats.WidgetStatePredictiveBack = "predictive_back" -> string!
const Android.App.Jank.AppJankStats.WidgetStateScrolling = "scrolling" -> string!
const Android.App.Jank.AppJankStats.WidgetStateSwiping = "swiping" -> string!
const Android.App.Jank.AppJankStats.WidgetStateTapping = "tapping" -> string!
const Android.App.Jank.AppJankStats.WidgetStateUnspecified = "unspecified" -> string!
const Android.App.Jank.AppJankStats.WidgetStateZooming = "zooming" -> string!
const Android.App.Job.JobParameters.StopReasonTimeoutAbandoned = Android.App.Job.StopReason.TimeoutAbandoned -> Android.App.Job.StopReason
const Android.App.Job.JobScheduler.PendingJobReasonConstraintDeadline = Android.App.Job.PendingJobReason.ConstraintDeadline -> Android.App.Job.PendingJobReason
const Android.App.Job.PendingJobReasonsInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.Job.PendingJobReasonsInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.Notification.FlagPromotedOngoing = Android.App.NotificationFlags.PromotedOngoing -> Android.App.NotificationFlags
const Android.App.Wallpaper.WallpaperDescription.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.Wallpaper.WallpaperDescription.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.App.Wallpaper.WallpaperInstance.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.App.Wallpaper.WallpaperInstance.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Appwidget.AppWidgetProviderInfo.WidgetCategoryNotKeyguard = Android.Appwidget.AppWidgetCategory.NotKeyguard -> Android.Appwidget.AppWidgetCategory
const Android.Bluetooth.BluetoothDevice.ActionEncryptionChange = "android.bluetooth.device.action.ENCRYPTION_CHANGE" -> string!
const Android.Bluetooth.BluetoothDevice.ActionKeyMissing = "android.bluetooth.device.action.KEY_MISSING" -> string!
const Android.Bluetooth.BluetoothDevice.BluetoothAddress.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Bluetooth.BluetoothDevice.BluetoothAddress.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Bluetooth.BluetoothDevice.EncryptionAlgorithmAes = Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm.Aes -> Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm
const Android.Bluetooth.BluetoothDevice.EncryptionAlgorithmE0 = Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm.E0 -> Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm
const Android.Bluetooth.BluetoothDevice.EncryptionAlgorithmNone = Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm.None -> Android.Bluetooth.BluetoothDeviceEncryptionAlgorithm
const Android.Bluetooth.BluetoothDevice.ExtraEncryptionAlgorithm = "android.bluetooth.device.extra.EXTRA_ENCRYPTION_ALGORITHM" -> string!
const Android.Bluetooth.BluetoothDevice.ExtraEncryptionEnabled = "android.bluetooth.device.extra.ENCRYPTION_ENABLED" -> string!
const Android.Bluetooth.BluetoothDevice.ExtraEncryptionStatus = "android.bluetooth.device.extra.ENCRYPTION_STATUS" -> string!
const Android.Bluetooth.BluetoothDevice.ExtraKeySize = "android.bluetooth.device.extra.KEY_SIZE" -> string!
const Android.Bluetooth.BluetoothLeAudioCodecConfig.SourceCodecTypeOpus = Android.Bluetooth.BluetoothLeSourceCodecType.Opus -> Android.Bluetooth.BluetoothLeSourceCodecType
const Android.Bluetooth.BluetoothSocket.TypeLe = Android.Bluetooth.BluetoothConnectionType.Le -> Android.Bluetooth.BluetoothConnectionType
const Android.Companion.CompanionDeviceManager.ResultSecurityError = Android.Companion.CompanionDeviceResult.SecurityError -> Android.Companion.CompanionDeviceResult
const Android.Companion.DeviceId.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Companion.DeviceId.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Companion.DevicePresenceEvent.EventBleAppeared = Android.Companion.DevicePresenceEventType.BleAppeared -> Android.Companion.DevicePresenceEventType
const Android.Companion.DevicePresenceEvent.EventBleDisappeared = Android.Companion.DevicePresenceEventType.BleDisappeared -> Android.Companion.DevicePresenceEventType
const Android.Companion.DevicePresenceEvent.EventBtConnected = Android.Companion.DevicePresenceEventType.BtConnected -> Android.Companion.DevicePresenceEventType
const Android.Companion.DevicePresenceEvent.EventBtDisconnected = Android.Companion.DevicePresenceEventType.BtDisconnected -> Android.Companion.DevicePresenceEventType
const Android.Companion.DevicePresenceEvent.EventSelfManagedAppeared = Android.Companion.DevicePresenceEventType.SelfManagedAppeared -> Android.Companion.DevicePresenceEventType
const Android.Companion.DevicePresenceEvent.EventSelfManagedDisappeared = Android.Companion.DevicePresenceEventType.SelfManagedDisappeared -> Android.Companion.DevicePresenceEventType
const Android.Companion.DevicePresenceEvent.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Companion.DevicePresenceEvent.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Companion.DevicePresenceEvent.NoAssociation = -1 -> int
const Android.Companion.ObservingDevicePresenceRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Companion.ObservingDevicePresenceRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Content.Context.AdvancedProtectionService = "advanced_protection" -> string!
const Android.Content.Context.AppFunctionService = "app_function" -> string!
const Android.Content.Context.KeystoreService = "keystore" -> string!
const Android.Content.Context.MediaQualityService = "media_quality" -> string!
const Android.Content.Context.SatelliteService = "satellite" -> string!
const Android.Content.Context.TetheringService = "tethering" -> string!
const Android.Content.Context.TvAdService = "tv_ad" -> string!
const Android.Content.PM.ActivityInfo.ConfigAssetsPaths = Android.Content.PM.ConfigChanges.AssetsPaths -> Android.Content.PM.ConfigChanges
const Android.Content.PM.ActivityInfo.ConfigResourcesUnused = Android.Content.PM.ConfigChanges.ResourcesUnused -> Android.Content.PM.ConfigChanges
const Android.Content.PM.LauncherUserInfo.PrivateSpaceEntrypointHidden = "private_space_entrypoint_hidden" -> string!
const Android.Content.PM.PackageManager.FeatureAudioSpatialHeadtrackingLowLatency = "android.hardware.audio.spatial.headtracking.low_latency" -> string!
const Android.Content.PM.PackageManager.FeatureBluetoothLeChannelSounding = "android.hardware.bluetooth_le.channel_sounding" -> string!
const Android.Content.PM.PackageManager.FeatureThreadNetwork = "android.hardware.thread_network" -> string!
const Android.Content.PM.PackageManager.PropertyUseRestrictedBackupMode = "android.app.backup.PROPERTY_USE_RESTRICTED_BACKUP_MODE" -> string!
const Android.Content.PM.SigningInfo.VersionJar = Android.Content.PM.SigningInfoVersion.Jar -> Android.Content.PM.SigningInfoVersion
const Android.Content.PM.SigningInfo.VersionSigningBlockV2 = Android.Content.PM.SigningInfoVersion.SigningBlockV2 -> Android.Content.PM.SigningInfoVersion
const Android.Content.PM.SigningInfo.VersionSigningBlockV3 = Android.Content.PM.SigningInfoVersion.SigningBlockV3 -> Android.Content.PM.SigningInfoVersion
const Android.Content.PM.SigningInfo.VersionSigningBlockV4 = Android.Content.PM.SigningInfoVersion.SigningBlockV4 -> Android.Content.PM.SigningInfoVersion
const Android.Graphics.Gainmap.GainmapDirectionHdrToSdr = Android.Graphics.GainmapDirection.HdrToSdr -> Android.Graphics.GainmapDirection
const Android.Graphics.Gainmap.GainmapDirectionSdrToHdr = Android.Graphics.GainmapDirection.SdrToHdr -> Android.Graphics.GainmapDirection
const Android.Graphics.ImageFormat.HeicUltrahdr = Android.Graphics.ImageFormatType.HeicUltrahdr -> Android.Graphics.ImageFormatType
const Android.Graphics.ImageFormat.YcbcrP210 = Android.Graphics.ImageFormatType.YcbcrP210 -> Android.Graphics.ImageFormatType
const Android.Graphics.Paint.VerticalTextFlag = Android.Graphics.PaintFlags.VerticalText -> Android.Graphics.PaintFlags
const Android.Hardware.Biometrics.BiometricManager.BiometricErrorIdentityCheckNotActive = Android.Hardware.Biometrics.BiometricCode.ErrorIdentityCheckNotActive -> Android.Hardware.Biometrics.BiometricCode
const Android.Hardware.Biometrics.BiometricManager.BiometricErrorNotEnabledForApps = Android.Hardware.Biometrics.BiometricCode.ErrorNotEnabledForApps -> Android.Hardware.Biometrics.BiometricCode
const Android.Hardware.Biometrics.BiometricPrompt.BiometricErrorIdentityCheckNotActive = Android.Hardware.Biometrics.BiometricErrorCode.IdentityCheckNotActive -> Android.Hardware.Biometrics.BiometricErrorCode
const Android.Hardware.Biometrics.BiometricPrompt.BiometricErrorNotEnabledForApps = Android.Hardware.Biometrics.BiometricErrorCode.NotEnabledForApps -> Android.Hardware.Biometrics.BiometricErrorCode
const Android.Hardware.Camera2.CameraMetadata.ColorCorrectionModeCct = Android.Hardware.Camera2.ColorCorrectionMode.Cct -> Android.Hardware.Camera2.ColorCorrectionMode
const Android.Hardware.Camera2.CameraMetadata.ControlAePriorityModeOff = Android.Hardware.Camera2.ControlAePriorityMode.Off -> Android.Hardware.Camera2.ControlAePriorityMode
const Android.Hardware.Camera2.CameraMetadata.ControlAePriorityModeSensorExposureTimePriority = Android.Hardware.Camera2.ControlAePriorityMode.SensorExposureTimePriority -> Android.Hardware.Camera2.ControlAePriorityMode
const Android.Hardware.Camera2.CameraMetadata.ControlAePriorityModeSensorSensitivityPriority = Android.Hardware.Camera2.ControlAePriorityMode.SensorSensitivityPriority -> Android.Hardware.Camera2.ControlAePriorityMode
const Android.Hardware.Camera2.CameraMetadata.ControlZoomMethodAuto = Android.Hardware.Camera2.ControlZoomMethod.Auto -> Android.Hardware.Camera2.ControlZoomMethod
const Android.Hardware.Camera2.CameraMetadata.ControlZoomMethodZoomRatio = Android.Hardware.Camera2.ControlZoomMethod.ZoomRatio -> Android.Hardware.Camera2.ControlZoomMethod
const Android.Hardware.Camera2.CameraMetadata.ExtensionNightModeIndicatorOff = Android.Hardware.Camera2.ExtensionNightModeIndicator.Off -> Android.Hardware.Camera2.ExtensionNightModeIndicator
const Android.Hardware.Camera2.CameraMetadata.ExtensionNightModeIndicatorOn = Android.Hardware.Camera2.ExtensionNightModeIndicator.On -> Android.Hardware.Camera2.ExtensionNightModeIndicator
const Android.Hardware.Camera2.CameraMetadata.ExtensionNightModeIndicatorUnknown = Android.Hardware.Camera2.ExtensionNightModeIndicator.Unknown -> Android.Hardware.Camera2.ExtensionNightModeIndicator
const Android.Hardware.DataSpace.DataspaceHeifUltrahdr = Android.Hardware.DataSpaceType.HeifUltrahdr -> Android.Hardware.DataSpaceType
const Android.Hardware.Display.DisplayManager.EventTypeDisplayAdded = 1 -> long
const Android.Hardware.Display.DisplayManager.EventTypeDisplayChanged = 4 -> long
const Android.Hardware.Display.DisplayManager.EventTypeDisplayRefreshRate = 8 -> long
const Android.Hardware.Display.DisplayManager.EventTypeDisplayRemoved = 2 -> long
const Android.Hardware.Display.DisplayManager.EventTypeDisplayState = 16 -> long
const Android.Hardware.HardwareBuffer.YcbcrP210 = Android.Hardware.HardwareBufferFormat.YcbcrP210 -> Android.Hardware.HardwareBufferFormat
const Android.Hardware.LutProperties.OneDimension = Android.Hardware.LutPropertiesDimension.OneDimension -> Android.Hardware.LutPropertiesDimension
const Android.Hardware.LutProperties.SamplingKeyCieY = Android.Hardware.LutPropertiesSamplingKey.CieY -> Android.Hardware.LutPropertiesSamplingKey
const Android.Hardware.LutProperties.SamplingKeyMaxRgb = Android.Hardware.LutPropertiesSamplingKey.MaxRgb -> Android.Hardware.LutPropertiesSamplingKey
const Android.Hardware.LutProperties.SamplingKeyRgb = Android.Hardware.LutPropertiesSamplingKey.Rgb -> Android.Hardware.LutPropertiesSamplingKey
const Android.Hardware.LutProperties.ThreeDimension = Android.Hardware.LutPropertiesDimension.ThreeDimension -> Android.Hardware.LutPropertiesDimension
const Android.Health.Connect.CreateMedicalDataSourceRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.CreateMedicalDataSourceRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.DataTypes.ActivityIntensityRecord.ActivityIntensityTypeModerate = Android.Health.Connect.DataTypes.ActivityIntensityType.Moderate -> Android.Health.Connect.DataTypes.ActivityIntensityType
const Android.Health.Connect.DataTypes.ActivityIntensityRecord.ActivityIntensityTypeVigorous = Android.Health.Connect.DataTypes.ActivityIntensityType.Vigorous -> Android.Health.Connect.DataTypes.ActivityIntensityType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeAllergyIntolerance = Android.Health.Connect.DataTypes.FhirResourceType.AllergyIntolerance -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeCondition = Android.Health.Connect.DataTypes.FhirResourceType.Condition -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeEncounter = Android.Health.Connect.DataTypes.FhirResourceType.Encounter -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeImmunization = Android.Health.Connect.DataTypes.FhirResourceType.Immunization -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeLocation = Android.Health.Connect.DataTypes.FhirResourceType.Location -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeMedication = Android.Health.Connect.DataTypes.FhirResourceType.Medication -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeMedicationRequest = Android.Health.Connect.DataTypes.FhirResourceType.MedicationRequest -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeMedicationStatement = Android.Health.Connect.DataTypes.FhirResourceType.MedicationStatement -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeObservation = Android.Health.Connect.DataTypes.FhirResourceType.Observation -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeOrganization = Android.Health.Connect.DataTypes.FhirResourceType.Organization -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypePatient = Android.Health.Connect.DataTypes.FhirResourceType.Patient -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypePractitioner = Android.Health.Connect.DataTypes.FhirResourceType.Practitioner -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypePractitionerRole = Android.Health.Connect.DataTypes.FhirResourceType.PractitionerRole -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.FhirResourceTypeProcedure = Android.Health.Connect.DataTypes.FhirResourceType.Procedure -> Android.Health.Connect.DataTypes.FhirResourceType
const Android.Health.Connect.DataTypes.FhirResource.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.DataTypes.FhirResource.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.DataTypes.FhirVersion.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.DataTypes.FhirVersion.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.DataTypes.MedicalDataSource.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.DataTypes.MedicalDataSource.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.DataTypes.MedicalResource.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.DataTypes.MedicalResource.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypeAllergiesIntolerances = Android.Health.Connect.DataTypes.MedicalResourceType.AllergiesIntolerances -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypeConditions = Android.Health.Connect.DataTypes.MedicalResourceType.Conditions -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypeLaboratoryResults = Android.Health.Connect.DataTypes.MedicalResourceType.LaboratoryResults -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypeMedications = Android.Health.Connect.DataTypes.MedicalResourceType.Medications -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypePersonalDetails = Android.Health.Connect.DataTypes.MedicalResourceType.PersonalDetails -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypePractitionerDetails = Android.Health.Connect.DataTypes.MedicalResourceType.PractitionerDetails -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypePregnancy = Android.Health.Connect.DataTypes.MedicalResourceType.Pregnancy -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypeProcedures = Android.Health.Connect.DataTypes.MedicalResourceType.Procedures -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypeSocialHistory = Android.Health.Connect.DataTypes.MedicalResourceType.SocialHistory -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypeVaccines = Android.Health.Connect.DataTypes.MedicalResourceType.Vaccines -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypeVisits = Android.Health.Connect.DataTypes.MedicalResourceType.Visits -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MedicalResource.MedicalResourceTypeVitalSigns = Android.Health.Connect.DataTypes.MedicalResourceType.VitalSigns -> Android.Health.Connect.DataTypes.MedicalResourceType
const Android.Health.Connect.DataTypes.MindfulnessSessionRecord.MindfulnessSessionTypeBreathing = Android.Health.Connect.DataTypes.MindfulnessSessionType.Breathing -> Android.Health.Connect.DataTypes.MindfulnessSessionType
const Android.Health.Connect.DataTypes.MindfulnessSessionRecord.MindfulnessSessionTypeMeditation = Android.Health.Connect.DataTypes.MindfulnessSessionType.Meditation -> Android.Health.Connect.DataTypes.MindfulnessSessionType
const Android.Health.Connect.DataTypes.MindfulnessSessionRecord.MindfulnessSessionTypeMovement = Android.Health.Connect.DataTypes.MindfulnessSessionType.Movement -> Android.Health.Connect.DataTypes.MindfulnessSessionType
const Android.Health.Connect.DataTypes.MindfulnessSessionRecord.MindfulnessSessionTypeMusic = Android.Health.Connect.DataTypes.MindfulnessSessionType.Music -> Android.Health.Connect.DataTypes.MindfulnessSessionType
const Android.Health.Connect.DataTypes.MindfulnessSessionRecord.MindfulnessSessionTypeOther = Android.Health.Connect.DataTypes.MindfulnessSessionType.Other -> Android.Health.Connect.DataTypes.MindfulnessSessionType
const Android.Health.Connect.DataTypes.MindfulnessSessionRecord.MindfulnessSessionTypeUnguided = Android.Health.Connect.DataTypes.MindfulnessSessionType.Unguided -> Android.Health.Connect.DataTypes.MindfulnessSessionType
const Android.Health.Connect.DataTypes.MindfulnessSessionRecord.MindfulnessSessionTypeUnknown = Android.Health.Connect.DataTypes.MindfulnessSessionType.Unknown -> Android.Health.Connect.DataTypes.MindfulnessSessionType
const Android.Health.Connect.DeleteMedicalResourcesRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.DeleteMedicalResourcesRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.GetMedicalDataSourcesRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.GetMedicalDataSourcesRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.HealthPermissions.ReadActivityIntensity = "android.permission.health.READ_ACTIVITY_INTENSITY" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataAllergiesIntolerances = "android.permission.health.READ_MEDICAL_DATA_ALLERGIES_INTOLERANCES" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataConditions = "android.permission.health.READ_MEDICAL_DATA_CONDITIONS" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataLaboratoryResults = "android.permission.health.READ_MEDICAL_DATA_LABORATORY_RESULTS" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataMedications = "android.permission.health.READ_MEDICAL_DATA_MEDICATIONS" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataPersonalDetails = "android.permission.health.READ_MEDICAL_DATA_PERSONAL_DETAILS" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataPractitionerDetails = "android.permission.health.READ_MEDICAL_DATA_PRACTITIONER_DETAILS" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataPregnancy = "android.permission.health.READ_MEDICAL_DATA_PREGNANCY" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataProcedures = "android.permission.health.READ_MEDICAL_DATA_PROCEDURES" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataSocialHistory = "android.permission.health.READ_MEDICAL_DATA_SOCIAL_HISTORY" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataVaccines = "android.permission.health.READ_MEDICAL_DATA_VACCINES" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataVisits = "android.permission.health.READ_MEDICAL_DATA_VISITS" -> string!
const Android.Health.Connect.HealthPermissions.ReadMedicalDataVitalSigns = "android.permission.health.READ_MEDICAL_DATA_VITAL_SIGNS" -> string!
const Android.Health.Connect.HealthPermissions.ReadMindfulness = "android.permission.health.READ_MINDFULNESS" -> string!
const Android.Health.Connect.HealthPermissions.WriteActivityIntensity = "android.permission.health.WRITE_ACTIVITY_INTENSITY" -> string!
const Android.Health.Connect.HealthPermissions.WriteMedicalData = "android.permission.health.WRITE_MEDICAL_DATA" -> string!
const Android.Health.Connect.HealthPermissions.WriteMindfulness = "android.permission.health.WRITE_MINDFULNESS" -> string!
const Android.Health.Connect.MedicalResourceId.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.MedicalResourceId.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.ReadMedicalResourcesResponse.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.ReadMedicalResourcesResponse.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Health.Connect.UpsertMedicalResourceRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Health.Connect.UpsertMedicalResourceRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Icu.Lang.IUProperty.IdCompatMathContinue = 74 -> int
const Android.Icu.Lang.IUProperty.IdCompatMathStart = 73 -> int
const Android.Icu.Lang.IUProperty.IdsUnaryOperator = 72 -> int
const Android.Icu.Lang.UCharacter.IIndicSyllabicCategory.ReorderingKiller = 36 -> int
const Android.Icu.Lang.UCharacter.IJoiningGroup.KashmiriYeh = 104 -> int
const Android.Icu.Lang.UCharacter.IndicSyllabicCategory.ReorderingKiller = 36 -> int
const Android.Icu.Lang.UCharacter.JoiningGroup.KashmiriYeh = 104 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.EgyptianHieroglyphsExtendedAId = 329 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.GarayId = 330 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.GurungKhemaId = 331 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.KiratRaiId = 332 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.MyanmarExtendedCId = 333 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.OlOnalId = 334 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.SunuwarId = 335 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.SymbolsForLegacyComputingSupplementId = 336 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.TodhriId = 337 -> int
const Android.Icu.Lang.UCharacter.UnicodeBlock.TuluTigalariId = 338 -> int
const Android.Icu.Lang.UProperty.IdCompatMathContinue = 74 -> int
const Android.Icu.Lang.UProperty.IdCompatMathStart = 73 -> int
const Android.Icu.Lang.UProperty.IdsUnaryOperator = 72 -> int
const Android.Icu.Lang.UScript.ArabicNastaliq = 200 -> int
const Android.Icu.Lang.UScript.Garay = 201 -> int
const Android.Icu.Lang.UScript.GurungKhema = 202 -> int
const Android.Icu.Lang.UScript.KiratRai = 203 -> int
const Android.Icu.Lang.UScript.OlOnal = 204 -> int
const Android.Icu.Lang.UScript.Sunuwar = 205 -> int
const Android.Icu.Lang.UScript.Todhri = 206 -> int
const Android.Icu.Lang.UScript.TuluTigalari = 207 -> int
const Android.Icu.Text.UnicodeSet.SimpleCaseInsensitive = Android.Icu.Text.UnicodeSetOptions.SimpleCaseInsensitive -> Android.Icu.Text.UnicodeSetOptions
const Android.Icu.Util.Calendar.OrdinalMonth = 23 -> int
const Android.Manifest.Permission.ApplyPictureProfile = "android.permission.APPLY_PICTURE_PROFILE" -> string!
const Android.Manifest.Permission.BindAppFunctionService = "android.permission.BIND_APP_FUNCTION_SERVICE" -> string!
const Android.Manifest.Permission.BindTvAdService = "android.permission.BIND_TV_AD_SERVICE" -> string!
const Android.Manifest.Permission.ExecuteAppFunctions = "android.permission.EXECUTE_APP_FUNCTIONS" -> string!
const Android.Manifest.Permission.ManageDevicePolicyAppFunctions = "android.permission.MANAGE_DEVICE_POLICY_APP_FUNCTIONS" -> string!
const Android.Manifest.Permission.ManageDevicePolicyThreadNetwork = "android.permission.MANAGE_DEVICE_POLICY_THREAD_NETWORK" -> string!
const Android.Manifest.Permission.QueryAdvancedProtectionMode = "android.permission.QUERY_ADVANCED_PROTECTION_MODE" -> string!
const Android.Manifest.Permission.Ranging = "android.permission.RANGING" -> string!
const Android.Manifest.Permission.ReadColorZones = "android.permission.READ_COLOR_ZONES" -> string!
const Android.Manifest.Permission.ReadSystemPreferences = "android.permission.READ_SYSTEM_PREFERENCES" -> string!
const Android.Manifest.Permission.RequestObserveDeviceUuidPresence = "android.permission.REQUEST_OBSERVE_DEVICE_UUID_PRESENCE" -> string!
const Android.Manifest.Permission.TvImplicitEnterPip = "android.permission.TV_IMPLICIT_ENTER_PIP" -> string!
const Android.Manifest.Permission.WriteSystemPreferences = "android.permission.WRITE_SYSTEM_PREFERENCES" -> string!
const Android.Media.AudioDeviceInfo.TypeMultichannelGroup = Android.Media.AudioDeviceType.MultichannelGroup -> Android.Media.AudioDeviceType
const Android.Media.AudioFormat.EncodingIamfBaseEnhancedProfileAac = Android.Media.Encoding.IamfBaseEnhancedProfileAac -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfBaseEnhancedProfileFlac = Android.Media.Encoding.IamfBaseEnhancedProfileFlac -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfBaseEnhancedProfileOpus = Android.Media.Encoding.IamfBaseEnhancedProfileOpus -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfBaseEnhancedProfilePcm = Android.Media.Encoding.IamfBaseEnhancedProfilePcm -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfBaseProfileAac = Android.Media.Encoding.IamfBaseProfileAac -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfBaseProfileFlac = Android.Media.Encoding.IamfBaseProfileFlac -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfBaseProfileOpus = Android.Media.Encoding.IamfBaseProfileOpus -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfBaseProfilePcm = Android.Media.Encoding.IamfBaseProfilePcm -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfSimpleProfileAac = Android.Media.Encoding.IamfSimpleProfileAac -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfSimpleProfileFlac = Android.Media.Encoding.IamfSimpleProfileFlac -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfSimpleProfileOpus = Android.Media.Encoding.IamfSimpleProfileOpus -> Android.Media.Encoding
const Android.Media.AudioFormat.EncodingIamfSimpleProfilePcm = Android.Media.Encoding.IamfSimpleProfilePcm -> Android.Media.Encoding
const Android.Media.MediaCodecInfo.CodecCapabilities.COLORFormatYUVP210 = Android.Media.MediaCodecCapabilities.Formatyuvp210 -> Android.Media.MediaCodecCapabilities
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel11Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel11band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel11Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel11band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel11Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel11band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel11Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel11band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel1Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel1band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel1Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel1band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel1Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel1band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel1Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel1band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel21Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel21band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel21Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel21band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel21Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel21band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel21Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel21band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel2Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel2band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel2Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel2band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel2Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel2band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel2Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel2band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel31Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel31band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel31Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel31band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel31Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel31band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel31Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel31band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel3Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel3band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel3Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel3band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel3Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel3band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel3Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel3band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel41Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel41band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel41Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel41band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel41Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel41band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel41Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel41band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel4Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel4band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel4Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel4band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel4Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel4band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel4Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel4band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel51Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel51band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel51Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel51band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel51Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel51band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel51Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel51band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel5Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel5band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel5Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel5band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel5Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel5band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel5Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel5band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel61Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel61band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel61Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel61band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel61Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel61band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel61Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel61band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel6Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel6band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel6Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel6band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel6Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel6band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel6Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel6band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel71Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel71band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel71Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel71band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel71Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel71band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel71Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel71band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel7Band0 = Android.Media.MediaCodecProfileLevel.Apvlevel7band0 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel7Band1 = Android.Media.MediaCodecProfileLevel.Apvlevel7band1 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel7Band2 = Android.Media.MediaCodecProfileLevel.Apvlevel7band2 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVLevel7Band3 = Android.Media.MediaCodecProfileLevel.Apvlevel7band3 -> Android.Media.MediaCodecProfileLevel
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVProfile42210 = Android.Media.MediaCodecProfileType.Aacobjectmain -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVProfile42210HDR10 = Android.Media.MediaCodecProfileType.Apvprofile42210hdr10 -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.APVProfile42210HDR10Plus = Android.Media.MediaCodecProfileType.Apvprofile42210hdr10plus -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileBaseAac = Android.Media.MediaCodecProfileType.Iamfprofilebaseaac -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileBaseEnhancedAac = Android.Media.MediaCodecProfileType.Iamfprofilebaseenhancedaac -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileBaseEnhancedFlac = Android.Media.MediaCodecProfileType.Iamfprofilebaseenhancedflac -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileBaseEnhancedOpus = Android.Media.MediaCodecProfileType.Iamfprofilebaseenhancedopus -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileBaseEnhancedPcm = Android.Media.MediaCodecProfileType.Iamfprofilebaseenhancedpcm -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileBaseFlac = Android.Media.MediaCodecProfileType.Iamfprofilebaseflac -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileBaseOpus = Android.Media.MediaCodecProfileType.Iamfprofilebaseopus -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileBasePcm = Android.Media.MediaCodecProfileType.Iamfprofilebasepcm -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileSimpleAac = Android.Media.MediaCodecProfileType.Iamfprofilesimpleaac -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileSimpleFlac = Android.Media.MediaCodecProfileType.Iamfprofilesimpleflac -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileSimpleOpus = Android.Media.MediaCodecProfileType.Iamfprofilesimpleopus -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.IAMFProfileSimplePcm = Android.Media.MediaCodecProfileType.Iamfprofilesimplepcm -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.VP9Profile2HDR = Android.Media.MediaCodecProfileType.Apvprofile42210hdr10 -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.CodecProfileLevel.VP9Profile3HDR = Android.Media.MediaCodecProfileType.Apvprofile42210hdr10plus -> Android.Media.MediaCodecProfileType
const Android.Media.MediaCodecInfo.SecurityModelMemorySafe = Android.Media.MediaCodecSecurityModel.MemorySafe -> Android.Media.MediaCodecSecurityModel
const Android.Media.MediaCodecInfo.SecurityModelSandboxed = Android.Media.MediaCodecSecurityModel.Sandboxed -> Android.Media.MediaCodecSecurityModel
const Android.Media.MediaFormat.FlagSecurityModelMemorySafe = Android.Media.MediaFormatSecurityModel.MemorySafe -> Android.Media.MediaFormatSecurityModel
const Android.Media.MediaFormat.FlagSecurityModelSandboxed = Android.Media.MediaFormatSecurityModel.Sandboxed -> Android.Media.MediaFormatSecurityModel
const Android.Media.MediaFormat.KeyPictureProfileId = "picture-profile-id" -> string!
const Android.Media.MediaFormat.KeyPictureProfileInstance = "picture-profile-instance" -> string!
const Android.Media.MediaFormat.KeySecurityModel = "security-model" -> string!
const Android.Media.MediaFormat.MimetypeAudioIamf = "audio/iamf" -> string!
const Android.Media.MediaFormat.MimetypeVideoApv = "video/apv" -> string!
const Android.Media.MediaRoute2Info.TypeAuxLine = Android.Media.MediaRoute2Type.AuxLine -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeLineAnalog = Android.Media.MediaRoute2Type.LineAnalog -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeLineDigital = Android.Media.MediaRoute2Type.LineDigital -> Android.Media.MediaRoute2Type
const Android.Media.MediaRoute2Info.TypeMultichannelSpeakerGroup = Android.Media.MediaRoute2Type.MultichannelSpeakerGroup -> Android.Media.MediaRoute2Type
const Android.Media.Quality.ActiveProcessingPicture.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Quality.ActiveProcessingPicture.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Quality.AmbientBacklightEvent.AmbientBacklightEventDisabled = Android.Media.Quality.AmbientBacklightEventType.Disabled -> Android.Media.Quality.AmbientBacklightEventType
const Android.Media.Quality.AmbientBacklightEvent.AmbientBacklightEventEnabled = Android.Media.Quality.AmbientBacklightEventType.Enabled -> Android.Media.Quality.AmbientBacklightEventType
const Android.Media.Quality.AmbientBacklightEvent.AmbientBacklightEventInterrupted = Android.Media.Quality.AmbientBacklightEventType.Interrupted -> Android.Media.Quality.AmbientBacklightEventType
const Android.Media.Quality.AmbientBacklightEvent.AmbientBacklightEventMetadataAvailable = Android.Media.Quality.AmbientBacklightEventType.MetadataAvailable -> Android.Media.Quality.AmbientBacklightEventType
const Android.Media.Quality.AmbientBacklightEvent.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Quality.AmbientBacklightEvent.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Quality.AmbientBacklightMetadata.AlgorithmNone = Android.Media.Quality.AmbientBacklightMetadataAlgorithm.None -> Android.Media.Quality.AmbientBacklightMetadataAlgorithm
const Android.Media.Quality.AmbientBacklightMetadata.AlgorithmRle = Android.Media.Quality.AmbientBacklightMetadataAlgorithm.Rle -> Android.Media.Quality.AmbientBacklightMetadataAlgorithm
const Android.Media.Quality.AmbientBacklightMetadata.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Quality.AmbientBacklightMetadata.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Quality.AmbientBacklightSettings.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Quality.AmbientBacklightSettings.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Quality.AmbientBacklightSettings.SourceAudio = Android.Media.Quality.AmbientBacklightSettingsSource.Audio -> Android.Media.Quality.AmbientBacklightSettingsSource
const Android.Media.Quality.AmbientBacklightSettings.SourceAudioVideo = Android.Media.Quality.AmbientBacklightSettingsSource.AudioVideo -> Android.Media.Quality.AmbientBacklightSettingsSource
const Android.Media.Quality.AmbientBacklightSettings.SourceNone = Android.Media.Quality.AmbientBacklightSettingsSource.None -> Android.Media.Quality.AmbientBacklightSettingsSource
const Android.Media.Quality.AmbientBacklightSettings.SourceVideo = Android.Media.Quality.AmbientBacklightSettingsSource.Video -> Android.Media.Quality.AmbientBacklightSettingsSource
const Android.Media.Quality.MediaQualityContract.LevelHigh = "level_high" -> string!
const Android.Media.Quality.MediaQualityContract.LevelLow = "level_low" -> string!
const Android.Media.Quality.MediaQualityContract.LevelMedium = "level_medium" -> string!
const Android.Media.Quality.MediaQualityContract.LevelOff = "level_off" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterAutoPictureQualityEnabled = "auto_picture_quality_enabled" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterAutoSuperResolutionEnabled = "auto_super_resolution_enabled" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterBlueStretch = "blue_stretch" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterBrightness = "brightness" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTemperature = "color_temperature" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTune = "color_tune" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTunerBlueGain = "color_tuner_blue_gain" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTunerBlueOffset = "color_tuner_blue_offset" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTunerBrightness = "color_tuner_brightness" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTunerGreenGain = "color_tuner_green_gain" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTunerGreenOffset = "color_tuner_green_offset" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTunerHue = "color_tuner_hue" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTunerRedGain = "color_tuner_red_gain" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTunerRedOffset = "color_tuner_red_offset" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterColorTunerSaturation = "color_tuner_saturation" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterContrast = "contrast" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterDecontour = "decontour" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterDynamicLumaControl = "dynamic_luma_control" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterFilmMode = "film_mode" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterFleshTone = "flesh_tone" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterGlobalDimming = "global_dimming" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterHue = "hue" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterMpegNoiseReduction = "mpeg_noise_reduction" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterNoiseReduction = "noise_reduction" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterSaturation = "saturation" -> string!
const Android.Media.Quality.MediaQualityContract.PictureQuality.ParameterSharpness = "sharpness" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterAutoVolumeControl = "auto_volume_control" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterBalance = "balance" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterBass = "bass" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDialogueEnhancer = "dialogue_enhancer" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDigitalOutputDelayMillis = "digital_output_delay_millis" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDigitalOutputMode = "digital_output_mode" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDolbyAudioProcessingDolbyAtmos = "dolby_audio_processing_dolby_atmos" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDolbyAudioProcessingSoundMode = "dolby_audio_processing_sound_mode" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDolbyAudioProcessingSurroundVirtualizer = "dolby_audio_processing_surround_virtualizer" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDolbyAudioProcessingVolumeLeveler = "dolby_audio_processing_volume_leveler" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDownMixMode = "down_mix_mode" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDtsDrc = "dts_drc" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDtsVirtualXDefinition = "dts_virtual_x_definition" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDtsVirtualXDialogClarity = "dts_virtual_x_dialog_clarity" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDtsVirtualXHeight = "dts_virtual_x_height" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDtsVirtualXLimiter = "dts_virtual_x_limiter" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDtsVirtualXTbhdx = "dts_virtual_x_tbhdx" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDtsVirtualXTruSurroundX = "dts_virtual_x_tru_surround_x" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterDtsVirtualXTruVolumeHd = "dts_virtual_x_tru_volume_hd" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterEarc = "earc" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterSpeakers = "speakers" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterSpeakersDelayMillis = "speakers_delay_millis" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterSurroundSound = "surround_sound" -> string!
const Android.Media.Quality.MediaQualityContract.SoundQuality.ParameterTreble = "treble" -> string!
const Android.Media.Quality.MediaQualityManager.ProfileQueryParams.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Quality.MediaQualityManager.ProfileQueryParams.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Quality.ParameterCapability.CapabilityDefault = "default" -> string!
const Android.Media.Quality.ParameterCapability.CapabilityEnum = "enum" -> string!
const Android.Media.Quality.ParameterCapability.CapabilityMax = "max" -> string!
const Android.Media.Quality.ParameterCapability.CapabilityMin = "min" -> string!
const Android.Media.Quality.ParameterCapability.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Quality.ParameterCapability.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Quality.ParameterCapability.TypeDouble = Android.Media.Quality.ParameterCapabilityType.Double -> Android.Media.Quality.ParameterCapabilityType
const Android.Media.Quality.ParameterCapability.TypeInt = Android.Media.Quality.ParameterCapabilityType.Int -> Android.Media.Quality.ParameterCapabilityType
const Android.Media.Quality.ParameterCapability.TypeLong = Android.Media.Quality.ParameterCapabilityType.Long -> Android.Media.Quality.ParameterCapabilityType
const Android.Media.Quality.ParameterCapability.TypeNone = Android.Media.Quality.ParameterCapabilityType.None -> Android.Media.Quality.ParameterCapabilityType
const Android.Media.Quality.ParameterCapability.TypeString = Android.Media.Quality.ParameterCapabilityType.String -> Android.Media.Quality.ParameterCapabilityType
const Android.Media.Quality.PictureProfile.ErrorDuplicate = Android.Media.Quality.PictureProfileErrorType.Duplicate -> Android.Media.Quality.PictureProfileErrorType
const Android.Media.Quality.PictureProfile.ErrorInvalidArgument = Android.Media.Quality.PictureProfileErrorType.InvalidArgument -> Android.Media.Quality.PictureProfileErrorType
const Android.Media.Quality.PictureProfile.ErrorNoPermission = Android.Media.Quality.PictureProfileErrorType.NoPermission -> Android.Media.Quality.PictureProfileErrorType
const Android.Media.Quality.PictureProfile.ErrorNotAllowlisted = Android.Media.Quality.PictureProfileErrorType.NotAllowlisted -> Android.Media.Quality.PictureProfileErrorType
const Android.Media.Quality.PictureProfile.ErrorUnknown = Android.Media.Quality.PictureProfileErrorType.Unknown -> Android.Media.Quality.PictureProfileErrorType
const Android.Media.Quality.PictureProfile.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Quality.PictureProfile.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Quality.PictureProfile.TypeApplication = Android.Media.Quality.PictureProfileType.Application -> Android.Media.Quality.PictureProfileType
const Android.Media.Quality.PictureProfile.TypeSystem = Android.Media.Quality.PictureProfileType.System -> Android.Media.Quality.PictureProfileType
const Android.Media.Quality.SoundProfile.ErrorDuplicate = Android.Media.Quality.SoundProfileErrorType.Duplicate -> Android.Media.Quality.SoundProfileErrorType
const Android.Media.Quality.SoundProfile.ErrorInvalidArgument = Android.Media.Quality.SoundProfileErrorType.InvalidArgument -> Android.Media.Quality.SoundProfileErrorType
const Android.Media.Quality.SoundProfile.ErrorNoPermission = Android.Media.Quality.SoundProfileErrorType.NoPermission -> Android.Media.Quality.SoundProfileErrorType
const Android.Media.Quality.SoundProfile.ErrorNotAllowlisted = Android.Media.Quality.SoundProfileErrorType.NotAllowlisted -> Android.Media.Quality.SoundProfileErrorType
const Android.Media.Quality.SoundProfile.ErrorUnknown = Android.Media.Quality.SoundProfileErrorType.Unknown -> Android.Media.Quality.SoundProfileErrorType
const Android.Media.Quality.SoundProfile.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.Quality.SoundProfile.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.Quality.SoundProfile.TypeApplication = Android.Media.Quality.SoundProfileType.Application -> Android.Media.Quality.SoundProfileType
const Android.Media.Quality.SoundProfile.TypeSystem = Android.Media.Quality.SoundProfileType.System -> Android.Media.Quality.SoundProfileType
const Android.Media.TV.Ads.TvAdManager.ActionAppLinkCommand = "android.media.tv.ad.action.APP_LINK_COMMAND" -> string!
const Android.Media.TV.Ads.TvAdManager.AppLinkKeyBackUri = "back_uri" -> string!
const Android.Media.TV.Ads.TvAdManager.AppLinkKeyClassName = "class_name" -> string!
const Android.Media.TV.Ads.TvAdManager.AppLinkKeyCommandType = "command_type" -> string!
const Android.Media.TV.Ads.TvAdManager.AppLinkKeyPackageName = "package_name" -> string!
const Android.Media.TV.Ads.TvAdManager.AppLinkKeyServiceId = "service_id" -> string!
const Android.Media.TV.Ads.TvAdManager.ErrorBlocked = Android.Media.TV.Ads.TvAdManagerError.Blocked -> Android.Media.TV.Ads.TvAdManagerError
const Android.Media.TV.Ads.TvAdManager.ErrorEncrypted = Android.Media.TV.Ads.TvAdManagerError.Encrypted -> Android.Media.TV.Ads.TvAdManagerError
const Android.Media.TV.Ads.TvAdManager.ErrorNone = Android.Media.TV.Ads.TvAdManagerError.None -> Android.Media.TV.Ads.TvAdManagerError
const Android.Media.TV.Ads.TvAdManager.ErrorNotSupported = Android.Media.TV.Ads.TvAdManagerError.NotSupported -> Android.Media.TV.Ads.TvAdManagerError
const Android.Media.TV.Ads.TvAdManager.ErrorResourceUnavailable = Android.Media.TV.Ads.TvAdManagerError.ResourceUnavailable -> Android.Media.TV.Ads.TvAdManagerError
const Android.Media.TV.Ads.TvAdManager.ErrorUnknown = Android.Media.TV.Ads.TvAdManagerError.Unknown -> Android.Media.TV.Ads.TvAdManagerError
const Android.Media.TV.Ads.TvAdManager.ErrorUnknownChannel = Android.Media.TV.Ads.TvAdManagerError.UnknownChannel -> Android.Media.TV.Ads.TvAdManagerError
const Android.Media.TV.Ads.TvAdManager.ErrorWeakSignal = Android.Media.TV.Ads.TvAdManagerError.WeakSignal -> Android.Media.TV.Ads.TvAdManagerError
const Android.Media.TV.Ads.TvAdManager.IntentKeyAdServiceId = "ad_service_id" -> string!
const Android.Media.TV.Ads.TvAdManager.IntentKeyChannelUri = "channel_uri" -> string!
const Android.Media.TV.Ads.TvAdManager.IntentKeyCommandType = "command_type" -> string!
const Android.Media.TV.Ads.TvAdManager.IntentKeyTvInputId = "tv_input_id" -> string!
const Android.Media.TV.Ads.TvAdManager.SessionDataKeyAdBuffer = "ad_buffer" -> string!
const Android.Media.TV.Ads.TvAdManager.SessionDataKeyAdRequest = "ad_request" -> string!
const Android.Media.TV.Ads.TvAdManager.SessionDataKeyBroadcastInfoRequest = "broadcast_info_request" -> string!
const Android.Media.TV.Ads.TvAdManager.SessionDataKeyRequestId = "request_id" -> string!
const Android.Media.TV.Ads.TvAdManager.SessionDataTypeAdBufferReady = "ad_buffer_ready" -> string!
const Android.Media.TV.Ads.TvAdManager.SessionDataTypeAdRequest = "ad_request" -> string!
const Android.Media.TV.Ads.TvAdManager.SessionDataTypeBroadcastInfoRequest = "broadcast_info_request" -> string!
const Android.Media.TV.Ads.TvAdManager.SessionDataTypeRemoveBroadcastInfoRequest = "remove_broadcast_info_request" -> string!
const Android.Media.TV.Ads.TvAdManager.SessionStateError = Android.Media.TV.Ads.TvAdManagerSessionState.Error -> Android.Media.TV.Ads.TvAdManagerSessionState
const Android.Media.TV.Ads.TvAdManager.SessionStateRunning = Android.Media.TV.Ads.TvAdManagerSessionState.Running -> Android.Media.TV.Ads.TvAdManagerSessionState
const Android.Media.TV.Ads.TvAdManager.SessionStateStopped = Android.Media.TV.Ads.TvAdManagerSessionState.Stopped -> Android.Media.TV.Ads.TvAdManagerSessionState
const Android.Media.TV.Ads.TvAdService.ServiceInterface = "android.media.tv.ad.TvAdService" -> string!
const Android.Media.TV.Ads.TvAdService.ServiceMetaData = "android.media.tv.ad.service" -> string!
const Android.Media.TV.Ads.TvAdServiceInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.TV.Ads.TvAdServiceInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.TV.Ads.TvAdView.ErrorKeyErrorCode = "error_code" -> string!
const Android.Media.TV.Ads.TvAdView.ErrorKeyMethodName = "method_name" -> string!
const Android.Media.TV.BroadcastInfoRequest.RequestOptionOneshot = Android.Media.TV.BroadcastInfoRequestOption.Oneshot -> Android.Media.TV.BroadcastInfoRequestOption
const Android.Media.TV.BroadcastInfoRequest.RequestOptionOneway = Android.Media.TV.BroadcastInfoRequestOption.Oneway -> Android.Media.TV.BroadcastInfoRequestOption
const Android.Media.TV.SignalingDataInfo.ContentEncodingBase64 = "Base64" -> string!
const Android.Media.TV.SignalingDataInfo.ContentEncodingUtf8 = "UTF-8" -> string!
const Android.Media.TV.SignalingDataInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Media.TV.SignalingDataInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Media.TV.SignalingDataInfo.LlsNoGroupId = -1 -> int
const Android.Media.TV.SignalingDataRequest.SignalingDataNoGroupId = -1 -> int
const Android.Media.TV.SignalingDataRequest.SignalingMetadataAeat = "AEAT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataAei = "AEI" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataApd = "APD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataAsd = "ASD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataAspd = "ASPD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataCad = "CAD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataCdt = "CDT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataCrit = "CRIT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataDcit = "DCIT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataDwd = "DWD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataEmsg = "EMSG" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataEvti = "EVTI" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataHeld = "HELD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataIed = "IED" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataMpd = "MPD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataMpit = "MPIT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataMpt = "MPT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataOsn = "OSN" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataPat = "PAT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataRdt = "RDT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataRrt = "RRT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataRsat = "RSAT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataSlt = "SLT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataSmt = "SMT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataSsd = "SSD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataStsid = "STSID" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataStt = "STT" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataUsbd = "USBD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataUsd = "USD" -> string!
const Android.Media.TV.SignalingDataRequest.SignalingMetadataVspd = "VSPD" -> string!
const Android.Media.TV.TvContract.Channels.BroadcastVisibilityTypeInvisible = Android.Media.TV.BroadcastVisibilityType.Invisible -> Android.Media.TV.BroadcastVisibilityType
const Android.Media.TV.TvContract.Channels.BroadcastVisibilityTypeNumericSelectableOnly = Android.Media.TV.BroadcastVisibilityType.NumericSelectableOnly -> Android.Media.TV.BroadcastVisibilityType
const Android.Media.TV.TvContract.Channels.BroadcastVisibilityTypeVisible = Android.Media.TV.BroadcastVisibilityType.Visible -> Android.Media.TV.BroadcastVisibilityType
const Android.Media.TV.TvContract.Channels.ColumnBroadcastVisibilityType = "broadcast_visibility_type" -> string!
const Android.Media.TV.TvInputManager.SessionDataKeyAdBuffer = "ad_buffer" -> string!
const Android.Media.TV.TvInputManager.SessionDataKeyAdResponse = "ad_response" -> string!
const Android.Media.TV.TvInputManager.SessionDataKeyBroadcastInfoResponse = "broadcast_info_response" -> string!
const Android.Media.TV.TvInputManager.SessionDataKeyChannelUri = "channel_uri" -> string!
const Android.Media.TV.TvInputManager.SessionDataKeyTrackId = "track_id" -> string!
const Android.Media.TV.TvInputManager.SessionDataKeyTracks = "tracks" -> string!
const Android.Media.TV.TvInputManager.SessionDataKeyTrackType = "track_type" -> string!
const Android.Media.TV.TvInputManager.SessionDataKeyTvMessageType = "tv_message_type" -> string!
const Android.Media.TV.TvInputManager.SessionDataKeyVideoUnavailableReason = "video_unavailable_reason" -> string!
const Android.Media.TV.TvInputManager.SessionDataTypeAdBufferConsumed = "ad_buffer_consumed" -> string!
const Android.Media.TV.TvInputManager.SessionDataTypeAdResponse = "ad_response" -> string!
const Android.Media.TV.TvInputManager.SessionDataTypeBroadcastInfoResponse = "broadcast_info_response" -> string!
const Android.Media.TV.TvInputManager.SessionDataTypeTracksChanged = "tracks_changed" -> string!
const Android.Media.TV.TvInputManager.SessionDataTypeTrackSelected = "track_selected" -> string!
const Android.Media.TV.TvInputManager.SessionDataTypeTuned = "tuned" -> string!
const Android.Media.TV.TvInputManager.SessionDataTypeTvMessage = "tv_message" -> string!
const Android.Media.TV.TvInputManager.SessionDataTypeVideoAvailable = "video_available" -> string!
const Android.Media.TV.TvInputManager.SessionDataTypeVideoUnavailable = "video_unavailable" -> string!
const Android.Media.TV.TvInputManager.VideoUnavailableReasonStopped = Android.Media.TV.VideoUnavailableReason.Stopped -> Android.Media.TV.VideoUnavailableReason
const Android.Net.L2capNetworkSpecifier.HeaderCompression6lowpan = Android.Net.L2capNetworkSpecifierHeaderCompression.Sixlowpan -> Android.Net.L2capNetworkSpecifierHeaderCompression
const Android.Net.L2capNetworkSpecifier.HeaderCompressionAny = Android.Net.L2capNetworkSpecifierHeaderCompression.Any -> Android.Net.L2capNetworkSpecifierHeaderCompression
const Android.Net.L2capNetworkSpecifier.HeaderCompressionNone = Android.Net.L2capNetworkSpecifierHeaderCompression.None -> Android.Net.L2capNetworkSpecifierHeaderCompression
const Android.Net.L2capNetworkSpecifier.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.L2capNetworkSpecifier.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.L2capNetworkSpecifier.PsmAny = 0 -> int
const Android.Net.L2capNetworkSpecifier.RoleAny = Android.Net.L2capNetworkSpecifierRole.Any -> Android.Net.L2capNetworkSpecifierRole
const Android.Net.L2capNetworkSpecifier.RoleClient = Android.Net.L2capNetworkSpecifierRole.Client -> Android.Net.L2capNetworkSpecifierRole
const Android.Net.L2capNetworkSpecifier.RoleServer = Android.Net.L2capNetworkSpecifierRole.Server -> Android.Net.L2capNetworkSpecifierRole
const Android.Net.NetworkCapabilities.NetCapabilityNotBandwidthConstrained = Android.Net.NetCapability.NotBandwidthConstrained -> Android.Net.NetCapability
const Android.Net.Nsd.AdvertisingRequest.FlagSkipProbing = 2 -> long
const Android.Net.Nsd.AdvertisingRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Nsd.AdvertisingRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.TetheringInterface.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.TetheringInterface.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.TetheringManager.ConnectivityScopeGlobal = Android.Net.TetheringManagerConnectivityScope.Global -> Android.Net.TetheringManagerConnectivityScope
const Android.Net.TetheringManager.TetherErrorDhcpserverError = Android.Net.TetheringManagerTetherError.DhcpserverError -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorDisableForwardingError = Android.Net.TetheringManagerTetherError.DisableForwardingError -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorDuplicateRequest = Android.Net.TetheringManagerTetherError.DuplicateRequest -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorEnableForwardingError = Android.Net.TetheringManagerTetherError.EnableForwardingError -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorEntitlementUnknown = Android.Net.TetheringManagerTetherError.EntitlementUnknown -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorIfaceCfgError = Android.Net.TetheringManagerTetherError.IfaceCfgError -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorInternalError = Android.Net.TetheringManagerTetherError.InternalError -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorNoAccessTetheringPermission = Android.Net.TetheringManagerTetherError.NoAccessTetheringPermission -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorNoChangeTetheringPermission = Android.Net.TetheringManagerTetherError.NoChangeTetheringPermission -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorNoError = Android.Net.TetheringManagerTetherError.NoError -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorProvisioningFailed = Android.Net.TetheringManagerTetherError.ProvisioningFailed -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorServiceUnavail = Android.Net.TetheringManagerTetherError.ServiceUnavail -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorTetherIfaceError = Android.Net.TetheringManagerTetherError.TetherIfaceError -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorUnavailIface = Android.Net.TetheringManagerTetherError.UnavailIface -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorUnknownIface = Android.Net.TetheringManagerTetherError.UnknownIface -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorUnknownRequest = Android.Net.TetheringManagerTetherError.UnknownRequest -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorUnknownType = Android.Net.TetheringManagerTetherError.UnknownType -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorUnsupported = Android.Net.TetheringManagerTetherError.Unsupported -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetherErrorUntetherIfaceError = Android.Net.TetheringManagerTetherError.UntetherIfaceError -> Android.Net.TetheringManagerTetherError
const Android.Net.TetheringManager.TetheringRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.TetheringManager.TetheringRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.TetheringManager.TetheringWifi = Android.Net.TetheringManagerTetheringType.Wifi -> Android.Net.TetheringManagerTetheringType
const Android.Net.Vcn.VcnGatewayConnectionConfig.MinUdpPort4500NatTimeoutUnset = -1 -> int
const Android.Net.Wifi.BlockingOption.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.BlockingOption.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.ServiceProtocolTypeBonjour = Android.Net.Wifi.P2p.Nsd.ServiceProtocolType.Bonjour -> Android.Net.Wifi.P2p.Nsd.ServiceProtocolType
const Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.ServiceProtocolTypeGeneric = Android.Net.Wifi.P2p.Nsd.ServiceProtocolType.Generic -> Android.Net.Wifi.P2p.Nsd.ServiceProtocolType
const Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.P2p.WifiP2pConfig.GroupOwnerBand6ghz = Android.Net.Wifi.P2p.Frequency.Band6ghz -> Android.Net.Wifi.P2p.Frequency
const Android.Net.Wifi.P2p.WifiP2pConfig.P2pVersion1 = Android.Net.Wifi.P2p.Version.Version1 -> Android.Net.Wifi.P2p.Version
const Android.Net.Wifi.P2p.WifiP2pConfig.P2pVersion2 = Android.Net.Wifi.P2p.Version.Version2 -> Android.Net.Wifi.P2p.Version
const Android.Net.Wifi.P2p.WifiP2pConfig.PccModeConnectionTypeLegacyOnly = Android.Net.Wifi.P2p.PccModeConnectionType.LegacyOnly -> Android.Net.Wifi.P2p.PccModeConnectionType
const Android.Net.Wifi.P2p.WifiP2pConfig.PccModeConnectionTypeLegacyOrR2 = Android.Net.Wifi.P2p.PccModeConnectionType.LegacyOrR2 -> Android.Net.Wifi.P2p.PccModeConnectionType
const Android.Net.Wifi.P2p.WifiP2pConfig.PccModeConnectionTypeR2Only = Android.Net.Wifi.P2p.PccModeConnectionType.R2Only -> Android.Net.Wifi.P2p.PccModeConnectionType
const Android.Net.Wifi.P2p.WifiP2pDirInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.P2p.WifiP2pDirInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.P2p.WifiP2pGroup.SecurityTypeUnknown = Android.Net.Wifi.P2p.GroupSecurityType.Unknown -> Android.Net.Wifi.P2p.GroupSecurityType
const Android.Net.Wifi.P2p.WifiP2pGroup.SecurityTypeWpa2Psk = Android.Net.Wifi.P2p.GroupSecurityType.Wpa2Psk -> Android.Net.Wifi.P2p.GroupSecurityType
const Android.Net.Wifi.P2p.WifiP2pGroup.SecurityTypeWpa3Compatibility = Android.Net.Wifi.P2p.GroupSecurityType.Wpa3Compatibility -> Android.Net.Wifi.P2p.GroupSecurityType
const Android.Net.Wifi.P2p.WifiP2pGroup.SecurityTypeWpa3Sae = Android.Net.Wifi.P2p.GroupSecurityType.Wpa3Sae -> Android.Net.Wifi.P2p.GroupSecurityType
const Android.Net.Wifi.P2p.WifiP2pManager.NoPermission = Android.Net.Wifi.P2p.WifiP2pFailureReason.NoPermission -> Android.Net.Wifi.P2p.WifiP2pFailureReason
const Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.PairingBootstrappingMethodDisplayPassphrase = Android.Net.Wifi.P2p.PairingBootstrappingMethods.DisplayPassphrase -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
const Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.PairingBootstrappingMethodDisplayPincode = Android.Net.Wifi.P2p.PairingBootstrappingMethods.DisplayPincode -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
const Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.PairingBootstrappingMethodKeypadPassphrase = Android.Net.Wifi.P2p.PairingBootstrappingMethods.KeypadPassphrase -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
const Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.PairingBootstrappingMethodKeypadPincode = Android.Net.Wifi.P2p.PairingBootstrappingMethods.KeypadPincode -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
const Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.PairingBootstrappingMethodOpportunistic = Android.Net.Wifi.P2p.PairingBootstrappingMethods.Opportunistic -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
const Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.PairingBootstrappingMethodOutOfBand = Android.Net.Wifi.P2p.PairingBootstrappingMethods.OutOfBand -> Android.Net.Wifi.P2p.PairingBootstrappingMethods
const Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.Rtt.PasnConfig.AkmFilsEapSha256 = Android.Net.Wifi.Rtt.PasnConfigAkm.FilsEapSha256 -> Android.Net.Wifi.Rtt.PasnConfigAkm
const Android.Net.Wifi.Rtt.PasnConfig.AkmFilsEapSha384 = Android.Net.Wifi.Rtt.PasnConfigAkm.FilsEapSha384 -> Android.Net.Wifi.Rtt.PasnConfigAkm
const Android.Net.Wifi.Rtt.PasnConfig.AkmFtEapSha256 = Android.Net.Wifi.Rtt.PasnConfigAkm.FtEapSha256 -> Android.Net.Wifi.Rtt.PasnConfigAkm
const Android.Net.Wifi.Rtt.PasnConfig.AkmFtEapSha384 = Android.Net.Wifi.Rtt.PasnConfigAkm.FtEapSha384 -> Android.Net.Wifi.Rtt.PasnConfigAkm
const Android.Net.Wifi.Rtt.PasnConfig.AkmFtPskSha256 = Android.Net.Wifi.Rtt.PasnConfigAkm.FtPskSha256 -> Android.Net.Wifi.Rtt.PasnConfigAkm
const Android.Net.Wifi.Rtt.PasnConfig.AkmFtPskSha384 = Android.Net.Wifi.Rtt.PasnConfigAkm.FtPskSha384 -> Android.Net.Wifi.Rtt.PasnConfigAkm
const Android.Net.Wifi.Rtt.PasnConfig.AkmNone = Android.Net.Wifi.Rtt.PasnConfigAkm.None -> Android.Net.Wifi.Rtt.PasnConfigAkm
const Android.Net.Wifi.Rtt.PasnConfig.AkmPasn = Android.Net.Wifi.Rtt.PasnConfigAkm.Pasn -> Android.Net.Wifi.Rtt.PasnConfigAkm
const Android.Net.Wifi.Rtt.PasnConfig.AkmSae = Android.Net.Wifi.Rtt.PasnConfigAkm.Sae -> Android.Net.Wifi.Rtt.PasnConfigAkm
const Android.Net.Wifi.Rtt.PasnConfig.CipherCcmp128 = Android.Net.Wifi.Rtt.PasnConfigCipher.Ccmp128 -> Android.Net.Wifi.Rtt.PasnConfigCipher
const Android.Net.Wifi.Rtt.PasnConfig.CipherCcmp256 = Android.Net.Wifi.Rtt.PasnConfigCipher.Ccmp256 -> Android.Net.Wifi.Rtt.PasnConfigCipher
const Android.Net.Wifi.Rtt.PasnConfig.CipherGcmp128 = Android.Net.Wifi.Rtt.PasnConfigCipher.Gcmp128 -> Android.Net.Wifi.Rtt.PasnConfigCipher
const Android.Net.Wifi.Rtt.PasnConfig.CipherGcmp256 = Android.Net.Wifi.Rtt.PasnConfigCipher.Gcmp256 -> Android.Net.Wifi.Rtt.PasnConfigCipher
const Android.Net.Wifi.Rtt.PasnConfig.CipherNone = Android.Net.Wifi.Rtt.PasnConfigCipher.None -> Android.Net.Wifi.Rtt.PasnConfigCipher
const Android.Net.Wifi.Rtt.PasnConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.Rtt.PasnConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.Rtt.RangingRequest.SecurityModeOpen = Android.Net.Wifi.Rtt.RangingRequestSecurityMode.Open -> Android.Net.Wifi.Rtt.RangingRequestSecurityMode
const Android.Net.Wifi.Rtt.RangingRequest.SecurityModeOpportunistic = Android.Net.Wifi.Rtt.RangingRequestSecurityMode.Opportunistic -> Android.Net.Wifi.Rtt.RangingRequestSecurityMode
const Android.Net.Wifi.Rtt.RangingRequest.SecurityModeSecureAuth = Android.Net.Wifi.Rtt.RangingRequestSecurityMode.SecureAuth -> Android.Net.Wifi.Rtt.RangingRequestSecurityMode
const Android.Net.Wifi.Rtt.SecureRangingConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Net.Wifi.Rtt.SecureRangingConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Net.Wifi.Rtt.WifiRttManager.CharacteristicsKeyBooleanRangingFrameProtectionSupported = "key_rnm_mfp_supported" -> string!
const Android.Net.Wifi.Rtt.WifiRttManager.CharacteristicsKeyBooleanSecureHeLtfSupported = "key_secure_he_ltf_supported" -> string!
const Android.Net.Wifi.Rtt.WifiRttManager.CharacteristicsKeyIntMaxSupportedSecureHeLtfProtoVersion = "key_max_supported_secure_he_ltf_proto_ver" -> string!
const Android.Net.Wifi.SoftApConfiguration.Band2ghz = Android.Net.Wifi.SoftApConfigurationBand.Band2ghz -> Android.Net.Wifi.SoftApConfigurationBand
const Android.Net.Wifi.SoftApConfiguration.Band5ghz = Android.Net.Wifi.SoftApConfigurationBand.Band5ghz -> Android.Net.Wifi.SoftApConfigurationBand
const Android.Net.Wifi.SoftApConfiguration.Band60ghz = Android.Net.Wifi.SoftApConfigurationBand.Band60ghz -> Android.Net.Wifi.SoftApConfigurationBand
const Android.Net.Wifi.SoftApConfiguration.Band6ghz = Android.Net.Wifi.SoftApConfigurationBand.Band6ghz -> Android.Net.Wifi.SoftApConfigurationBand
const Android.Net.Wifi.WifiManager.StatusLocalOnlyConnectionFailureUserReject = Android.Net.Wifi.StatusLocalOnlyConnectionFailureReason.UserReject -> Android.Net.Wifi.StatusLocalOnlyConnectionFailureReason
const Android.Nfc.CardEmulators.CardEmulation.NfcInternalErrorCommandTimeout = Android.Nfc.CardEmulators.NfcInternalErrorType.CommandTimeout -> Android.Nfc.CardEmulators.NfcInternalErrorType
const Android.Nfc.CardEmulators.CardEmulation.NfcInternalErrorNfcCrashRestart = Android.Nfc.CardEmulators.NfcInternalErrorType.NfcCrashRestart -> Android.Nfc.CardEmulators.NfcInternalErrorType
const Android.Nfc.CardEmulators.CardEmulation.NfcInternalErrorNfcHardwareError = Android.Nfc.CardEmulators.NfcInternalErrorType.NfcHardwareError -> Android.Nfc.CardEmulators.NfcInternalErrorType
const Android.Nfc.CardEmulators.CardEmulation.NfcInternalErrorUnknown = Android.Nfc.CardEmulators.NfcInternalErrorType.Unknown -> Android.Nfc.CardEmulators.NfcInternalErrorType
const Android.Nfc.CardEmulators.CardEmulation.PropertyAllowSharedRolePriority = "android.nfc.cardemulation.PROPERTY_ALLOW_SHARED_ROLE_PRIORITY" -> string!
const Android.Nfc.CardEmulators.CardEmulation.ProtocolAndTechnologyRouteDefault = Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Default -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
const Android.Nfc.CardEmulators.CardEmulation.ProtocolAndTechnologyRouteDh = Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Dh -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
const Android.Nfc.CardEmulators.CardEmulation.ProtocolAndTechnologyRouteEse = Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Ese -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
const Android.Nfc.CardEmulators.CardEmulation.ProtocolAndTechnologyRouteUicc = Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Uicc -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
const Android.Nfc.CardEmulators.CardEmulation.ProtocolAndTechnologyRouteUnset = Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute.Unset -> Android.Nfc.CardEmulators.ProtocolAndTechnologyRoute
const Android.Nfc.NfcAdapter.ActionChangeTagIntentPreference = "android.nfc.action.CHANGE_TAG_INTENT_PREFERENCE" -> string!
const Android.OS.BatteryManager.BatteryCapacityLevelCritical = Android.OS.BatteryCapacityLevel.Critical -> Android.OS.BatteryCapacityLevel
const Android.OS.BatteryManager.BatteryCapacityLevelFull = Android.OS.BatteryCapacityLevel.Full -> Android.OS.BatteryCapacityLevel
const Android.OS.BatteryManager.BatteryCapacityLevelHigh = Android.OS.BatteryCapacityLevel.High -> Android.OS.BatteryCapacityLevel
const Android.OS.BatteryManager.BatteryCapacityLevelLow = Android.OS.BatteryCapacityLevel.Low -> Android.OS.BatteryCapacityLevel
const Android.OS.BatteryManager.BatteryCapacityLevelNormal = Android.OS.BatteryCapacityLevel.Normal -> Android.OS.BatteryCapacityLevel
const Android.OS.BatteryManager.BatteryCapacityLevelUnknown = Android.OS.BatteryCapacityLevel.Unknown -> Android.OS.BatteryCapacityLevel
const Android.OS.BatteryManager.BatteryCapacityLevelUnsupported = Android.OS.BatteryCapacityLevel.Unsupported -> Android.OS.BatteryCapacityLevel
const Android.OS.BatteryManager.ExtraCapacityLevel = "android.os.extra.CAPACITY_LEVEL" -> string!
const Android.OS.Build.VERSION_CODES.Baklava = Android.OS.BuildVersionCodes.Baklava -> Android.OS.BuildVersionCodes
const Android.OS.Build.VERSION_CODES_FULL.Baklava = Android.OS.BuildVersionCodesFull.Baklava -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Base = Android.OS.BuildVersionCodesFull.Base -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Base11 = Android.OS.BuildVersionCodesFull.Base11 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Cupcake = Android.OS.BuildVersionCodesFull.Cupcake -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Donut = Android.OS.BuildVersionCodesFull.Donut -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Eclair = Android.OS.BuildVersionCodesFull.Eclair -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Eclair01 = Android.OS.BuildVersionCodesFull.Eclair01 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.EclairMr1 = Android.OS.BuildVersionCodesFull.EclairMr1 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Froyo = Android.OS.BuildVersionCodesFull.Froyo -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Gingerbread = Android.OS.BuildVersionCodesFull.Gingerbread -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.GingerbreadMr1 = Android.OS.BuildVersionCodesFull.GingerbreadMr1 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Honeycomb = Android.OS.BuildVersionCodesFull.Honeycomb -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.HoneycombMr1 = Android.OS.BuildVersionCodesFull.HoneycombMr1 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.HoneycombMr2 = Android.OS.BuildVersionCodesFull.HoneycombMr2 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.IceCreamSandwich = Android.OS.BuildVersionCodesFull.IceCreamSandwich -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.IceCreamSandwichMr1 = Android.OS.BuildVersionCodesFull.IceCreamSandwichMr1 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.JellyBean = Android.OS.BuildVersionCodesFull.JellyBean -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.JellyBeanMr1 = Android.OS.BuildVersionCodesFull.JellyBeanMr1 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.JellyBeanMr2 = Android.OS.BuildVersionCodesFull.JellyBeanMr2 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Kitkat = Android.OS.BuildVersionCodesFull.Kitkat -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.KitkatWatch = Android.OS.BuildVersionCodesFull.KitkatWatch -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Lollipop = Android.OS.BuildVersionCodesFull.Lollipop -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.LollipopMr1 = Android.OS.BuildVersionCodesFull.LollipopMr1 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.M = Android.OS.BuildVersionCodesFull.M -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.N = Android.OS.BuildVersionCodesFull.N -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.NMr1 = Android.OS.BuildVersionCodesFull.NMr1 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.O = Android.OS.BuildVersionCodesFull.O -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.OMr1 = Android.OS.BuildVersionCodesFull.OMr1 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.P = Android.OS.BuildVersionCodesFull.P -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Q = Android.OS.BuildVersionCodesFull.Q -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.R = Android.OS.BuildVersionCodesFull.R -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.S = Android.OS.BuildVersionCodesFull.S -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.SV2 = Android.OS.BuildVersionCodesFull.SV2 -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.Tiramisu = Android.OS.BuildVersionCodesFull.Tiramisu -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.UpsideDownCake = Android.OS.BuildVersionCodesFull.UpsideDownCake -> Android.OS.BuildVersionCodesFull
const Android.OS.Build.VERSION_CODES_FULL.VanillaIceCream = Android.OS.BuildVersionCodesFull.VanillaIceCream -> Android.OS.BuildVersionCodesFull
const Android.OS.CpuHeadroomParams.CpuHeadroomCalculationTypeAverage = Android.OS.CpuHeadroomCalculationType.Average -> Android.OS.CpuHeadroomCalculationType
const Android.OS.CpuHeadroomParams.CpuHeadroomCalculationTypeMin = Android.OS.CpuHeadroomCalculationType.Min -> Android.OS.CpuHeadroomCalculationType
const Android.OS.Flagging.AconfigStorageReadException.ErrorCannotReadStorageFile = Android.OS.Flagging.AconfigStorageReadErrorType.CannotReadStorageFile -> Android.OS.Flagging.AconfigStorageReadErrorType
const Android.OS.Flagging.AconfigStorageReadException.ErrorContainerNotFound = Android.OS.Flagging.AconfigStorageReadErrorType.ContainerNotFound -> Android.OS.Flagging.AconfigStorageReadErrorType
const Android.OS.Flagging.AconfigStorageReadException.ErrorGeneric = Android.OS.Flagging.AconfigStorageReadErrorType.Generic -> Android.OS.Flagging.AconfigStorageReadErrorType
const Android.OS.Flagging.AconfigStorageReadException.ErrorPackageNotFound = Android.OS.Flagging.AconfigStorageReadErrorType.PackageNotFound -> Android.OS.Flagging.AconfigStorageReadErrorType
const Android.OS.Flagging.AconfigStorageReadException.ErrorStorageSystemNotFound = Android.OS.Flagging.AconfigStorageReadErrorType.StorageSystemNotFound -> Android.OS.Flagging.AconfigStorageReadErrorType
const Android.OS.GpuHeadroomParams.GpuHeadroomCalculationTypeAverage = Android.OS.GpuHeadroomCalculationType.Average -> Android.OS.GpuHeadroomCalculationType
const Android.OS.GpuHeadroomParams.GpuHeadroomCalculationTypeMin = Android.OS.GpuHeadroomCalculationType.Min -> Android.OS.GpuHeadroomCalculationType
const Android.OS.GpuHeadroomParams.GpuHeadroomCalculationWindowMillisMax = 10000 -> int
const Android.OS.GpuHeadroomParams.GpuHeadroomCalculationWindowMillisMin = 50 -> int
const Android.OS.ProfilingTrigger.TriggerTypeAnr = Android.OS.ProfilingTriggerType.Anr -> Android.OS.ProfilingTriggerType
const Android.OS.ProfilingTrigger.TriggerTypeAppFullyDrawn = Android.OS.ProfilingTriggerType.AppFullyDrawn -> Android.OS.ProfilingTriggerType
const Android.OS.ProfilingTrigger.TriggerTypeNone = Android.OS.ProfilingTriggerType.None -> Android.OS.ProfilingTriggerType
const Android.OS.RemoteCallbackList.FrozenCalleePolicyDrop = Android.OS.FrozenCalleePolicy.Drop -> Android.OS.FrozenCalleePolicy
const Android.OS.RemoteCallbackList.FrozenCalleePolicyEnqueueAll = Android.OS.FrozenCalleePolicy.EnqueueAll -> Android.OS.FrozenCalleePolicy
const Android.OS.RemoteCallbackList.FrozenCalleePolicyEnqueueMostRecent = Android.OS.FrozenCalleePolicy.EnqueueMostRecent -> Android.OS.FrozenCalleePolicy
const Android.OS.RemoteCallbackList.FrozenCalleePolicyUnset = Android.OS.FrozenCalleePolicy.Unset -> Android.OS.FrozenCalleePolicy
const Android.OS.UserManager.DisallowChangeNearFieldCommunicationRadio = "no_change_near_field_communication_radio" -> string!
const Android.OS.UserManager.DisallowThreadNetwork = "no_thread_network" -> string!
const Android.OS.VibrationEffect.Composition.DelayTypePause = Android.OS.VibrationEffectCompositionDelayType.Pause -> Android.OS.VibrationEffectCompositionDelayType
const Android.OS.VibrationEffect.Composition.DelayTypeRelativeStartOffset = Android.OS.VibrationEffectCompositionDelayType.RelativeStartOffset -> Android.OS.VibrationEffectCompositionDelayType
const Android.OS.Vibrators.VibratorEnvelopeEffectInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.OS.Vibrators.VibratorEnvelopeEffectInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Provider.CloudMediaProviderContract.Capabilities.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Provider.CloudMediaProviderContract.Capabilities.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Provider.CloudMediaProviderContract.ExtraSortOrder = "android.provider.extra.SORT_ORDER" -> string!
const Android.Provider.CloudMediaProviderContract.MediaCategoryColumns.DisplayName = "display_name" -> string!
const Android.Provider.CloudMediaProviderContract.MediaCategoryColumns.Id = "id" -> string!
const Android.Provider.CloudMediaProviderContract.MediaCategoryColumns.MediaCategoryType = "media_category_type" -> string!
const Android.Provider.CloudMediaProviderContract.MediaCategoryColumns.MediaCoverId1 = "media_cover_id1" -> string!
const Android.Provider.CloudMediaProviderContract.MediaCategoryColumns.MediaCoverId2 = "media_cover_id2" -> string!
const Android.Provider.CloudMediaProviderContract.MediaCategoryColumns.MediaCoverId3 = "media_cover_id3" -> string!
const Android.Provider.CloudMediaProviderContract.MediaCategoryColumns.MediaCoverId4 = "media_cover_id4" -> string!
const Android.Provider.CloudMediaProviderContract.MediaCategoryTypePeopleAndPets = "com.android.providers.media.MEDIA_CATEGORY_TYPE_PEOPLE_AND_PETS" -> string!
const Android.Provider.CloudMediaProviderContract.MediaSetColumns.DisplayName = "display_name" -> string!
const Android.Provider.CloudMediaProviderContract.MediaSetColumns.Id = "id" -> string!
const Android.Provider.CloudMediaProviderContract.MediaSetColumns.MediaCount = "media_count" -> string!
const Android.Provider.CloudMediaProviderContract.MediaSetColumns.MediaCoverId = "media_cover_id" -> string!
const Android.Provider.CloudMediaProviderContract.SearchSuggestionAlbum = "com.android.providers.media.SEARCH_SUGGESTION_ALBUM" -> string!
const Android.Provider.CloudMediaProviderContract.SearchSuggestionColumns.DisplayText = "display_text" -> string!
const Android.Provider.CloudMediaProviderContract.SearchSuggestionColumns.MediaCoverId = "media_cover_id" -> string!
const Android.Provider.CloudMediaProviderContract.SearchSuggestionColumns.MediaSetId = "media_set_id" -> string!
const Android.Provider.CloudMediaProviderContract.SearchSuggestionColumns.Type = "type" -> string!
const Android.Provider.CloudMediaProviderContract.SearchSuggestionDate = "com.android.providers.media.SEARCH_SUGGESTION_DATE" -> string!
const Android.Provider.CloudMediaProviderContract.SearchSuggestionFace = "com.android.providers.media.SEARCH_SUGGESTION_FACE" -> string!
const Android.Provider.CloudMediaProviderContract.SearchSuggestionLocation = "com.android.providers.media.SEARCH_SUGGESTION_LOCATION" -> string!
const Android.Provider.CloudMediaProviderContract.SearchSuggestionText = "com.android.providers.media.SEARCH_SUGGESTION_TEXT" -> string!
const Android.Provider.CloudMediaProviderContract.SortOrderDescDateTaken = Android.Provider.CloudMediaProviderContractSortOrder.DescDateTaken -> Android.Provider.CloudMediaProviderContractSortOrder
const Android.Provider.ContactsContract.RawContacts.DefaultAccount.ActionMoveContactsToDefaultAccount = "android.provider.action.MOVE_CONTACTS_TO_DEFAULT_ACCOUNT" -> string!
const Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.DefaultAccountStateCloud = Android.Provider.DefaultAccountState.Cloud -> Android.Provider.DefaultAccountState
const Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.DefaultAccountStateLocal = Android.Provider.DefaultAccountState.Local -> Android.Provider.DefaultAccountState
const Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.DefaultAccountStateNotSet = Android.Provider.DefaultAccountState.NotSet -> Android.Provider.DefaultAccountState
const Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.DefaultAccountStateSim = Android.Provider.DefaultAccountState.Sim -> Android.Provider.DefaultAccountState
const Android.Provider.MediaStore.AccessOemMetadataPermission = "com.android.providers.media.permission.ACCESS_OEM_METADATA" -> string!
const Android.Provider.MediaStore.ActionMotionPhotoCapture = "android.provider.action.MOTION_PHOTO_CAPTURE" -> string!
const Android.Provider.MediaStore.ActionMotionPhotoCaptureSecure = "android.provider.action.MOTION_PHOTO_CAPTURE_SECURE" -> string!
const Android.Provider.MediaStore.Audio.AudioColumns.BitsPerSample = "bits_per_sample" -> string!
const Android.Provider.MediaStore.Audio.AudioColumns.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Audio.AudioColumns.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.Audio.AudioColumns.Samplerate = "samplerate" -> string!
const Android.Provider.MediaStore.Audio.Genres.Members.InterfaceConsts.BitsPerSample = "bits_per_sample" -> string!
const Android.Provider.MediaStore.Audio.Genres.Members.InterfaceConsts.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Audio.Genres.Members.InterfaceConsts.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.Audio.Genres.Members.InterfaceConsts.Samplerate = "samplerate" -> string!
const Android.Provider.MediaStore.Audio.IAudioColumns.BitsPerSample = "bits_per_sample" -> string!
const Android.Provider.MediaStore.Audio.IAudioColumns.Samplerate = "samplerate" -> string!
const Android.Provider.MediaStore.Audio.Media.InterfaceConsts.BitsPerSample = "bits_per_sample" -> string!
const Android.Provider.MediaStore.Audio.Media.InterfaceConsts.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Audio.Media.InterfaceConsts.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.Audio.Media.InterfaceConsts.Samplerate = "samplerate" -> string!
const Android.Provider.MediaStore.Audio.Playlists.InterfaceConsts.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Audio.Playlists.InterfaceConsts.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.Audio.Playlists.Members.InterfaceConsts.BitsPerSample = "bits_per_sample" -> string!
const Android.Provider.MediaStore.Audio.Playlists.Members.InterfaceConsts.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Audio.Playlists.Members.InterfaceConsts.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.Audio.Playlists.Members.InterfaceConsts.Samplerate = "samplerate" -> string!
const Android.Provider.MediaStore.Audio.PlaylistsColumns.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Audio.PlaylistsColumns.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.DownloadColumns.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.DownloadColumns.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.Downloads.InterfaceConsts.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Downloads.InterfaceConsts.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.ExtraPickerPreSelectionUris = "android.provider.extra.PICKER_PRE_SELECTION_URIS" -> string!
const Android.Provider.MediaStore.Files.FileColumns.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Files.FileColumns.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.Images.ImageColumns.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Images.ImageColumns.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.Images.Media.InterfaceConsts.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Images.Media.InterfaceConsts.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.IMediaColumns.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.IMediaColumns.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.MediaColumns.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.MediaColumns.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.QueryArgMediaStandardSortOrder = "android:query-arg-media-standard-sort-order" -> string!
const Android.Provider.MediaStore.Video.Media.InterfaceConsts.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Video.Media.InterfaceConsts.OemMetadata = "oem_metadata" -> string!
const Android.Provider.MediaStore.Video.VideoColumns.InferredDate = "inferred_date" -> string!
const Android.Provider.MediaStore.Video.VideoColumns.OemMetadata = "oem_metadata" -> string!
const Android.Provider.Settings.ActionAppNotificationPromotionSettings = "android.settings.APP_NOTIFICATION_PROMOTION_SETTINGS" -> string!
const Android.Provider.Settings.ActionFirstDayOfWeekSettings = "android.settings.FIRST_DAY_OF_WEEK_SETTINGS" -> string!
const Android.Provider.Settings.ActionMeasurementSystemSettings = "android.settings.MEASUREMENT_SYSTEM_SETTINGS" -> string!
const Android.Provider.Settings.ActionRegionSettings = "android.settings.REGION_SETTINGS" -> string!
const Android.Provider.Settings.ActionTemperatureUnitSettings = "android.settings.TEMPERATURE_UNIT_SETTINGS" -> string!
const Android.Ranging.Ble.CS.BleCsRangingCapabilities.CsSecurityLevelFour = Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel.Four -> Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel
const Android.Ranging.Ble.CS.BleCsRangingCapabilities.CsSecurityLevelOne = Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel.One -> Android.Ranging.Ble.Cs.BleCsRangingCapabilitiesCsSecurityLevel
const Android.Ranging.Ble.CS.BleCsRangingCapabilities.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Ble.CS.BleCsRangingCapabilities.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Ble.CS.BleCsRangingParams.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Ble.CS.BleCsRangingParams.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Ble.CS.BleCsRangingParams.LocationTypeIndoor = Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType.Indoor -> Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType
const Android.Ranging.Ble.CS.BleCsRangingParams.LocationTypeOutdoor = Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType.Outdoor -> Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType
const Android.Ranging.Ble.CS.BleCsRangingParams.LocationTypeUnknown = Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType.Unknown -> Android.Ranging.Ble.Cs.BleCsRangingParamsLocationType
const Android.Ranging.Ble.CS.BleCsRangingParams.SightTypeLineOfSight = Android.Ranging.Ble.Cs.BleCsRangingParamsSightType.LineOfSight -> Android.Ranging.Ble.Cs.BleCsRangingParamsSightType
const Android.Ranging.Ble.CS.BleCsRangingParams.SightTypeNonLineOfSight = Android.Ranging.Ble.Cs.BleCsRangingParamsSightType.NonLineOfSight -> Android.Ranging.Ble.Cs.BleCsRangingParamsSightType
const Android.Ranging.Ble.CS.BleCsRangingParams.SightTypeUnknown = Android.Ranging.Ble.Cs.BleCsRangingParamsSightType.Unknown -> Android.Ranging.Ble.Cs.BleCsRangingParamsSightType
const Android.Ranging.Ble.Rssi.BleRssiRangingParams.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Ble.Rssi.BleRssiRangingParams.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.DataNotificationConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.DataNotificationConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.DataNotificationConfig.NotificationConfigDisable = Android.Ranging.DataNotificationConfigType.Disable -> Android.Ranging.DataNotificationConfigType
const Android.Ranging.DataNotificationConfig.NotificationConfigEnable = Android.Ranging.DataNotificationConfigType.Enable -> Android.Ranging.DataNotificationConfigType
const Android.Ranging.DataNotificationConfig.NotificationConfigProximityEdge = Android.Ranging.DataNotificationConfigType.ProximityEdge -> Android.Ranging.DataNotificationConfigType
const Android.Ranging.DataNotificationConfig.NotificationConfigProximityLevel = Android.Ranging.DataNotificationConfigType.ProximityLevel -> Android.Ranging.DataNotificationConfigType
const Android.Ranging.Oob.DeviceHandle.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Oob.DeviceHandle.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Oob.OobInitiatorRangingConfig.RangingModeAuto = Android.Ranging.Oob.OobInitiatorRangingConfigMode.Auto -> Android.Ranging.Oob.OobInitiatorRangingConfigMode
const Android.Ranging.Oob.OobInitiatorRangingConfig.RangingModeFused = Android.Ranging.Oob.OobInitiatorRangingConfigMode.Fused -> Android.Ranging.Oob.OobInitiatorRangingConfigMode
const Android.Ranging.Oob.OobInitiatorRangingConfig.RangingModeHighAccuracy = Android.Ranging.Oob.OobInitiatorRangingConfigMode.HighAccuracy -> Android.Ranging.Oob.OobInitiatorRangingConfigMode
const Android.Ranging.Oob.OobInitiatorRangingConfig.RangingModeHighAccuracyPreferred = Android.Ranging.Oob.OobInitiatorRangingConfigMode.HighAccuracyPreferred -> Android.Ranging.Oob.OobInitiatorRangingConfigMode
const Android.Ranging.Oob.OobInitiatorRangingConfig.SecurityLevelBasic = Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel.Basic -> Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel
const Android.Ranging.Oob.OobInitiatorRangingConfig.SecurityLevelSecure = Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel.Secure -> Android.Ranging.Oob.OobInitiatorRangingConfigSecurityLevel
const Android.Ranging.RangingCapabilities.DisabledRegulatory = Android.Ranging.RangingCapabilitiesStatus.DisabledRegulatory -> Android.Ranging.RangingCapabilitiesStatus
const Android.Ranging.RangingCapabilities.DisabledUser = Android.Ranging.RangingCapabilitiesStatus.DisabledUser -> Android.Ranging.RangingCapabilitiesStatus
const Android.Ranging.RangingCapabilities.DisabledUserRestrictions = Android.Ranging.RangingCapabilitiesStatus.DisabledUserRestrictions -> Android.Ranging.RangingCapabilitiesStatus
const Android.Ranging.RangingCapabilities.Enabled = Android.Ranging.RangingCapabilitiesStatus.Enabled -> Android.Ranging.RangingCapabilitiesStatus
const Android.Ranging.RangingCapabilities.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.RangingCapabilities.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.RangingCapabilities.NotSupported = Android.Ranging.RangingCapabilitiesStatus.NotSupported -> Android.Ranging.RangingCapabilitiesStatus
const Android.Ranging.RangingConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.RangingConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.RangingConfig.RangingSessionOob = Android.Ranging.RangingConfigSessionType.Oob -> Android.Ranging.RangingConfigSessionType
const Android.Ranging.RangingConfig.RangingSessionRaw = Android.Ranging.RangingConfigSessionType.Raw -> Android.Ranging.RangingConfigSessionType
const Android.Ranging.RangingData.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.RangingData.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.RangingDevice.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.RangingDevice.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.RangingManager.BleCs = Android.Ranging.RangingManagerType.BleCs -> Android.Ranging.RangingManagerType
const Android.Ranging.RangingManager.BleRssi = Android.Ranging.RangingManagerType.BleRssi -> Android.Ranging.RangingManagerType
const Android.Ranging.RangingManager.Uwb = Android.Ranging.RangingManagerType.Uwb -> Android.Ranging.RangingManagerType
const Android.Ranging.RangingManager.WifiNanRtt = Android.Ranging.RangingManagerType.WifiNanRtt -> Android.Ranging.RangingManagerType
const Android.Ranging.RangingMeasurement.ConfidenceHigh = Android.Ranging.RangingMeasurementConfidence.High -> Android.Ranging.RangingMeasurementConfidence
const Android.Ranging.RangingMeasurement.ConfidenceLow = Android.Ranging.RangingMeasurementConfidence.Low -> Android.Ranging.RangingMeasurementConfidence
const Android.Ranging.RangingMeasurement.ConfidenceMedium = Android.Ranging.RangingMeasurementConfidence.Medium -> Android.Ranging.RangingMeasurementConfidence
const Android.Ranging.RangingMeasurement.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.RangingMeasurement.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.RangingPreference.DeviceRoleInitiator = Android.Ranging.RangingDeviceRole.Initiator -> Android.Ranging.RangingDeviceRole
const Android.Ranging.RangingPreference.DeviceRoleResponder = Android.Ranging.RangingDeviceRole.Responder -> Android.Ranging.RangingDeviceRole
const Android.Ranging.RangingPreference.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.RangingPreference.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Raw.RawRangingDevice.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Raw.RawRangingDevice.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Raw.RawRangingDevice.UpdateRateFrequent = Android.Ranging.Raw.RangingDeviceUpdateRate.Frequent -> Android.Ranging.Raw.RangingDeviceUpdateRate
const Android.Ranging.Raw.RawRangingDevice.UpdateRateInfrequent = Android.Ranging.Raw.RangingDeviceUpdateRate.Infrequent -> Android.Ranging.Raw.RangingDeviceUpdateRate
const Android.Ranging.Raw.RawRangingDevice.UpdateRateNormal = Android.Ranging.Raw.RangingDeviceUpdateRate.Normal -> Android.Ranging.Raw.RangingDeviceUpdateRate
const Android.Ranging.SensorFusionParams.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.SensorFusionParams.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.SessionConfig.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.SessionConfig.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Uwb.UwbAddress.ExtendedAddressByteLength = 8 -> int
const Android.Ranging.Uwb.UwbAddress.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Uwb.UwbAddress.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Uwb.UwbAddress.ShortAddressByteLength = 2 -> int
const Android.Ranging.Uwb.UwbComplexChannel.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Uwb.UwbComplexChannel.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Uwb.UwbComplexChannel.UwbChannel10 = Android.Ranging.Uwb.UwbComplexChannelNumber.Channel10 -> Android.Ranging.Uwb.UwbComplexChannelNumber
const Android.Ranging.Uwb.UwbComplexChannel.UwbChannel12 = Android.Ranging.Uwb.UwbComplexChannelNumber.Channel12 -> Android.Ranging.Uwb.UwbComplexChannelNumber
const Android.Ranging.Uwb.UwbComplexChannel.UwbChannel13 = Android.Ranging.Uwb.UwbComplexChannelNumber.Channel13 -> Android.Ranging.Uwb.UwbComplexChannelNumber
const Android.Ranging.Uwb.UwbComplexChannel.UwbChannel14 = Android.Ranging.Uwb.UwbComplexChannelNumber.Channel14 -> Android.Ranging.Uwb.UwbComplexChannelNumber
const Android.Ranging.Uwb.UwbComplexChannel.UwbChannel5 = Android.Ranging.Uwb.UwbComplexChannelNumber.Channel5 -> Android.Ranging.Uwb.UwbComplexChannelNumber
const Android.Ranging.Uwb.UwbComplexChannel.UwbChannel6 = Android.Ranging.Uwb.UwbComplexChannelNumber.Channel6 -> Android.Ranging.Uwb.UwbComplexChannelNumber
const Android.Ranging.Uwb.UwbComplexChannel.UwbChannel8 = Android.Ranging.Uwb.UwbComplexChannelNumber.Channel8 -> Android.Ranging.Uwb.UwbComplexChannelNumber
const Android.Ranging.Uwb.UwbComplexChannel.UwbChannel9 = Android.Ranging.Uwb.UwbComplexChannelNumber.Channel9 -> Android.Ranging.Uwb.UwbComplexChannelNumber
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex10 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index10 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex11 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index11 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex12 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index12 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex25 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index25 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex26 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index26 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex27 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index27 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex28 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index28 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex29 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index29 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex30 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index30 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex31 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index31 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex32 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index32 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbComplexChannel.UwbPreambleCodeIndex9 = Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex.Index9 -> Android.Ranging.Uwb.UwbComplexChannelPreambleCodeIndex
const Android.Ranging.Uwb.UwbRangingCapabilities.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Uwb.UwbRangingCapabilities.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Uwb.UwbRangingParams.ConfigMulticastDsTwr = Android.Ranging.Uwb.UwbRangingConfig.MulticastDsTwr -> Android.Ranging.Uwb.UwbRangingConfig
const Android.Ranging.Uwb.UwbRangingParams.ConfigProvisionedIndividualMulticastDsTwr = Android.Ranging.Uwb.UwbRangingConfig.ProvisionedIndividualMulticastDsTwr -> Android.Ranging.Uwb.UwbRangingConfig
const Android.Ranging.Uwb.UwbRangingParams.ConfigProvisionedMulticastDsTwr = Android.Ranging.Uwb.UwbRangingConfig.ProvisionedMulticastDsTwr -> Android.Ranging.Uwb.UwbRangingConfig
const Android.Ranging.Uwb.UwbRangingParams.ConfigProvisionedUnicastDsTwr = Android.Ranging.Uwb.UwbRangingConfig.ProvisionedUnicastDsTwr -> Android.Ranging.Uwb.UwbRangingConfig
const Android.Ranging.Uwb.UwbRangingParams.ConfigProvisionedUnicastDsTwrVeryFast = Android.Ranging.Uwb.UwbRangingConfig.ProvisionedUnicastDsTwrVeryFast -> Android.Ranging.Uwb.UwbRangingConfig
const Android.Ranging.Uwb.UwbRangingParams.ConfigUnicastDsTwr = Android.Ranging.Uwb.UwbRangingConfig.UnicastDsTwr -> Android.Ranging.Uwb.UwbRangingConfig
const Android.Ranging.Uwb.UwbRangingParams.Duration1Ms = Android.Ranging.Uwb.UwbRangingParamsDuration.Duration1Ms -> Android.Ranging.Uwb.UwbRangingParamsDuration
const Android.Ranging.Uwb.UwbRangingParams.Duration2Ms = Android.Ranging.Uwb.UwbRangingParamsDuration.Duration2Ms -> Android.Ranging.Uwb.UwbRangingParamsDuration
const Android.Ranging.Uwb.UwbRangingParams.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Uwb.UwbRangingParams.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Uwb.UwbRangingParams.SubSessionUndefined = -1 -> int
const Android.Ranging.Wifi.Rtt.RttRangingCapabilities.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Wifi.Rtt.RttRangingCapabilities.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Ranging.Wifi.Rtt.RttRangingParams.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Ranging.Wifi.Rtt.RttRangingParams.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Resource.Attribute.AdServiceTypes = 16844452 -> int
const Android.Resource.Attribute.IntentMatchingFlags = 16844457 -> int
const Android.Resource.Attribute.LanguageSettingsActivity = 16844453 -> int
const Android.Resource.Attribute.LayoutLabel = 16844458 -> int
const Android.Resource.Attribute.PageSizeCompat = 16844459 -> int
const Android.Resource.Attribute.SupplementalDescription = 16844456 -> int
const Android.Resource.Attribute.WantsRoleHolderPriority = 16844460 -> int
const Android.Security.Keystore.KeyStoreManager.ModuleHash = -1879047468 -> int
const Android.Service.Autofill.FillEventHistory.Event.NoSaveUiReasonUsingCredman = Android.Service.Autofill.EventNoSaveUiReason.UsingCredman -> Android.Service.Autofill.EventNoSaveUiReason
const Android.Service.Autofill.FillEventHistory.Event.UiTypeCredentialManager = Android.Service.Autofill.EventUIType.CredentialManager -> Android.Service.Autofill.EventUIType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorConfigurationError = Android.Service.Carrier.DownloadStatusMmsErrorType.ConfigurationError -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorDataDisabled = Android.Service.Carrier.DownloadStatusMmsErrorType.DataDisabled -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorHttpFailure = Android.Service.Carrier.DownloadStatusMmsErrorType.HttpFailure -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorInactiveSubscription = Android.Service.Carrier.DownloadStatusMmsErrorType.InactiveSubscription -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorInvalidApn = Android.Service.Carrier.DownloadStatusMmsErrorType.InvalidApn -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorInvalidSubscriptionId = Android.Service.Carrier.DownloadStatusMmsErrorType.InvalidSubscriptionId -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorIoError = Android.Service.Carrier.DownloadStatusMmsErrorType.IoError -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorMmsDisabledByCarrier = Android.Service.Carrier.DownloadStatusMmsErrorType.MmsDisabledByCarrier -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorNoDataNetwork = Android.Service.Carrier.DownloadStatusMmsErrorType.NoDataNetwork -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorRetry = Android.Service.Carrier.DownloadStatusMmsErrorType.Retry -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorUnableConnectMms = Android.Service.Carrier.DownloadStatusMmsErrorType.UnableConnectMms -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.DownloadStatusMmsErrorUnspecified = Android.Service.Carrier.DownloadStatusMmsErrorType.Unspecified -> Android.Service.Carrier.DownloadStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorConfigurationError = Android.Service.Carrier.SendStatusMmsErrorType.ConfigurationError -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorDataDisabled = Android.Service.Carrier.SendStatusMmsErrorType.DataDisabled -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorHttpFailure = Android.Service.Carrier.SendStatusMmsErrorType.HttpFailure -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorInactiveSubscription = Android.Service.Carrier.SendStatusMmsErrorType.InactiveSubscription -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorInvalidApn = Android.Service.Carrier.SendStatusMmsErrorType.InvalidApn -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorInvalidSubscriptionId = Android.Service.Carrier.SendStatusMmsErrorType.InvalidSubscriptionId -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorIoError = Android.Service.Carrier.SendStatusMmsErrorType.IoError -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorMmsDisabledByCarrier = Android.Service.Carrier.SendStatusMmsErrorType.MmsDisabledByCarrier -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorNoDataNetwork = Android.Service.Carrier.SendStatusMmsErrorType.NoDataNetwork -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorRetry = Android.Service.Carrier.SendStatusMmsErrorType.Retry -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorUnableConnectMms = Android.Service.Carrier.SendStatusMmsErrorType.UnableConnectMms -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusMmsErrorUnspecified = Android.Service.Carrier.SendStatusMmsErrorType.Unspecified -> Android.Service.Carrier.SendStatusMmsErrorType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultCancelled = Android.Service.Carrier.SendStatusResultType.Cancelled -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultEncodingError = Android.Service.Carrier.SendStatusResultType.EncodingError -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultErrorFdnCheckFailure = Android.Service.Carrier.SendStatusResultType.ErrorFdnCheckFailure -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultErrorGenericFailure = Android.Service.Carrier.SendStatusResultType.ErrorGenericFailure -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultErrorLimitExceeded = Android.Service.Carrier.SendStatusResultType.ErrorLimitExceeded -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultErrorNoService = Android.Service.Carrier.SendStatusResultType.ErrorNoService -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultErrorNullPdu = Android.Service.Carrier.SendStatusResultType.ErrorNullPdu -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultErrorShortCodeNeverAllowed = Android.Service.Carrier.SendStatusResultType.ErrorShortCodeNeverAllowed -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultErrorShortCodeNotAllowed = Android.Service.Carrier.SendStatusResultType.ErrorShortCodeNotAllowed -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultInvalidArguments = Android.Service.Carrier.SendStatusResultType.InvalidArguments -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultInvalidSmscAddress = Android.Service.Carrier.SendStatusResultType.InvalidSmscAddress -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultInvalidSmsFormat = Android.Service.Carrier.SendStatusResultType.InvalidSmsFormat -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultInvalidState = Android.Service.Carrier.SendStatusResultType.InvalidState -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultNetworkError = Android.Service.Carrier.SendStatusResultType.NetworkError -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultNetworkReject = Android.Service.Carrier.SendStatusResultType.NetworkReject -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultOperationNotAllowed = Android.Service.Carrier.SendStatusResultType.OperationNotAllowed -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultRequestNotSupported = Android.Service.Carrier.SendStatusResultType.RequestNotSupported -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultSmsBlockedDuringEmergency = Android.Service.Carrier.SendStatusResultType.SmsBlockedDuringEmergency -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Carrier.CarrierMessagingService.SendStatusResultSmsSendRetryFailed = Android.Service.Carrier.SendStatusResultType.SmsSendRetryFailed -> Android.Service.Carrier.SendStatusResultType
const Android.Service.Settings.Preferences.GetValueRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Settings.Preferences.GetValueRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Settings.Preferences.GetValueResult.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Settings.Preferences.GetValueResult.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Settings.Preferences.GetValueResult.ResultDisallow = Android.Service.Settings.Preferences.GetValueResultType.Disallow -> Android.Service.Settings.Preferences.GetValueResultType
const Android.Service.Settings.Preferences.GetValueResult.ResultInternalError = Android.Service.Settings.Preferences.GetValueResultType.InternalError -> Android.Service.Settings.Preferences.GetValueResultType
const Android.Service.Settings.Preferences.GetValueResult.ResultInvalidRequest = Android.Service.Settings.Preferences.GetValueResultType.InvalidRequest -> Android.Service.Settings.Preferences.GetValueResultType
const Android.Service.Settings.Preferences.GetValueResult.ResultOk = Android.Service.Settings.Preferences.GetValueResultType.Ok -> Android.Service.Settings.Preferences.GetValueResultType
const Android.Service.Settings.Preferences.GetValueResult.ResultRequireAppPermission = Android.Service.Settings.Preferences.GetValueResultType.RequireAppPermission -> Android.Service.Settings.Preferences.GetValueResultType
const Android.Service.Settings.Preferences.GetValueResult.ResultUnavailable = Android.Service.Settings.Preferences.GetValueResultType.Unavailable -> Android.Service.Settings.Preferences.GetValueResultType
const Android.Service.Settings.Preferences.GetValueResult.ResultUnsupported = Android.Service.Settings.Preferences.GetValueResultType.Unsupported -> Android.Service.Settings.Preferences.GetValueResultType
const Android.Service.Settings.Preferences.MetadataRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Settings.Preferences.MetadataRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Settings.Preferences.MetadataResult.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Settings.Preferences.MetadataResult.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Settings.Preferences.MetadataResult.ResultInternalError = Android.Service.Settings.Preferences.MetadataResultType.InternalError -> Android.Service.Settings.Preferences.MetadataResultType
const Android.Service.Settings.Preferences.MetadataResult.ResultOk = Android.Service.Settings.Preferences.MetadataResultType.Ok -> Android.Service.Settings.Preferences.MetadataResultType
const Android.Service.Settings.Preferences.MetadataResult.ResultUnsupported = Android.Service.Settings.Preferences.MetadataResultType.Unsupported -> Android.Service.Settings.Preferences.MetadataResultType
const Android.Service.Settings.Preferences.SettingsPreferenceMetadata.DeeplinkOnly = Android.Service.Settings.Preferences.SettingsPreferenceMetadataType.DeeplinkOnly -> Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
const Android.Service.Settings.Preferences.SettingsPreferenceMetadata.ExpectPostConfirmation = Android.Service.Settings.Preferences.SettingsPreferenceMetadataType.ExpectPostConfirmation -> Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
const Android.Service.Settings.Preferences.SettingsPreferenceMetadata.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Settings.Preferences.SettingsPreferenceMetadata.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Settings.Preferences.SettingsPreferenceMetadata.NoDirectAccess = Android.Service.Settings.Preferences.SettingsPreferenceMetadataType.NoDirectAccess -> Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
const Android.Service.Settings.Preferences.SettingsPreferenceMetadata.NoSensitivity = Android.Service.Settings.Preferences.SettingsPreferenceMetadataType.NoSensitivity -> Android.Service.Settings.Preferences.SettingsPreferenceMetadataType
const Android.Service.Settings.Preferences.SettingsPreferenceService.ActionPreferenceService = "android.service.settings.preferences.action.PREFERENCE_SERVICE" -> string!
const Android.Service.Settings.Preferences.SettingsPreferenceValue.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Settings.Preferences.SettingsPreferenceValue.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Settings.Preferences.SettingsPreferenceValue.TypeBoolean = Android.Service.Settings.Preferences.SettingsPreferenceValueType.Boolean -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
const Android.Service.Settings.Preferences.SettingsPreferenceValue.TypeDouble = Android.Service.Settings.Preferences.SettingsPreferenceValueType.Double -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
const Android.Service.Settings.Preferences.SettingsPreferenceValue.TypeInt = Android.Service.Settings.Preferences.SettingsPreferenceValueType.Int -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
const Android.Service.Settings.Preferences.SettingsPreferenceValue.TypeLong = Android.Service.Settings.Preferences.SettingsPreferenceValueType.Long -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
const Android.Service.Settings.Preferences.SettingsPreferenceValue.TypeString = Android.Service.Settings.Preferences.SettingsPreferenceValueType.String -> Android.Service.Settings.Preferences.SettingsPreferenceValueType
const Android.Service.Settings.Preferences.SetValueRequest.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Settings.Preferences.SetValueRequest.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Settings.Preferences.SetValueResult.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Service.Settings.Preferences.SetValueResult.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Service.Settings.Preferences.SetValueResult.ResultDisabled = Android.Service.Settings.Preferences.SetValueResultType.Disabled -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Service.Settings.Preferences.SetValueResult.ResultDisallow = Android.Service.Settings.Preferences.SetValueResultType.Disallow -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Service.Settings.Preferences.SetValueResult.ResultInternalError = Android.Service.Settings.Preferences.SetValueResultType.InternalError -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Service.Settings.Preferences.SetValueResult.ResultInvalidRequest = Android.Service.Settings.Preferences.SetValueResultType.InvalidRequest -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Service.Settings.Preferences.SetValueResult.ResultOk = Android.Service.Settings.Preferences.SetValueResultType.Ok -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Service.Settings.Preferences.SetValueResult.ResultRequireAppPermission = Android.Service.Settings.Preferences.SetValueResultType.RequireAppPermission -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Service.Settings.Preferences.SetValueResult.ResultRequireUserConsent = Android.Service.Settings.Preferences.SetValueResultType.RequireUserConsent -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Service.Settings.Preferences.SetValueResult.ResultRestricted = Android.Service.Settings.Preferences.SetValueResultType.Restricted -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Service.Settings.Preferences.SetValueResult.ResultUnavailable = Android.Service.Settings.Preferences.SetValueResultType.Unavailable -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Service.Settings.Preferences.SetValueResult.ResultUnsupported = Android.Service.Settings.Preferences.SetValueResultType.Unsupported -> Android.Service.Settings.Preferences.SetValueResultType
const Android.Telephony.CarrierConfigManager.Gps.KeyEnableNiSuplMessageInjectionBool = "gps.enable_ni_supl_message_injection_bool" -> string!
const Android.Telephony.CarrierConfigManager.KeyCarrierRoamingNtnEmergencyCallToSatelliteHandoverTypeInt = "carrier_roaming_ntn_emergency_call_to_satellite_handover_type_int" -> string!
const Android.Telephony.CarrierConfigManager.KeySatelliteEsosSupportedBool = "satellite_esos_supported_bool" -> string!
const Android.Telephony.CarrierConfigManager.KeySatelliteRoamingEsosInactivityTimeoutSecInt = "satellite_roaming_esos_inactivity_timeout_sec_int" -> string!
const Android.Telephony.CarrierConfigManager.KeySatelliteRoamingP2pSmsInactivityTimeoutSecInt = "satellite_roaming_p2p_sms_inactivity_timeout_sec_int" -> string!
const Android.Telephony.CarrierConfigManager.KeySatelliteRoamingP2pSmsSupportedBool = "satellite_roaming_p2p_sms_supported_bool" -> string!
const Android.Telephony.CarrierConfigManager.KeySatelliteRoamingScreenOffInactivityTimeoutSecInt = "satellite_roaming_screen_off_inactivity_timeout_sec_int" -> string!
const Android.Telephony.Data.ApnSetting.TypeOemPaid = Android.Telephony.Data.ApnType.OemPaid -> Android.Telephony.Data.ApnType
const Android.Telephony.Data.ApnSetting.TypeOemPrivate = Android.Telephony.Data.ApnType.OemPrivate -> Android.Telephony.Data.ApnType
const Android.Telephony.SubscriptionPlan.SubscriptionStatusActive = Android.Telephony.SubscriptionStatus.Active -> Android.Telephony.SubscriptionStatus
const Android.Telephony.SubscriptionPlan.SubscriptionStatusInactive = Android.Telephony.SubscriptionStatus.Inactive -> Android.Telephony.SubscriptionStatus
const Android.Telephony.SubscriptionPlan.SubscriptionStatusSuspended = Android.Telephony.SubscriptionStatus.Suspended -> Android.Telephony.SubscriptionStatus
const Android.Telephony.SubscriptionPlan.SubscriptionStatusTrial = Android.Telephony.SubscriptionStatus.Trial -> Android.Telephony.SubscriptionStatus
const Android.Telephony.SubscriptionPlan.SubscriptionStatusUnknown = Android.Telephony.SubscriptionStatus.Unknown -> Android.Telephony.SubscriptionStatus
const Android.Text.Style.NoWritingToolsSpan.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Text.Style.NoWritingToolsSpan.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Text.Style.TtsSpan.ArgSeconds = "android.arg.seconds" -> string!
const Android.Text.Style.TtsSpan.TypeDuration = "android.type.duration" -> string!
const Android.Views.Accessibility.AccessibilityEvent.ContentChangeTypeChecked = Android.Views.Accessibility.ContentChangeTypes.Checked -> Android.Views.Accessibility.ContentChangeTypes
const Android.Views.Accessibility.AccessibilityEvent.ContentChangeTypeExpanded = Android.Views.Accessibility.ContentChangeTypes.Expanded -> Android.Views.Accessibility.ContentChangeTypes
const Android.Views.Accessibility.AccessibilityEvent.ContentChangeTypeSupplementalDescription = Android.Views.Accessibility.ContentChangeTypes.SupplementalDescription -> Android.Views.Accessibility.ContentChangeTypes
const Android.Views.Accessibility.AccessibilityNodeInfo.CheckedStateFalse = Android.Views.Accessibility.CheckedState.False -> Android.Views.Accessibility.CheckedState
const Android.Views.Accessibility.AccessibilityNodeInfo.CheckedStatePartial = Android.Views.Accessibility.CheckedState.Partial -> Android.Views.Accessibility.CheckedState
const Android.Views.Accessibility.AccessibilityNodeInfo.CheckedStateTrue = Android.Views.Accessibility.CheckedState.True -> Android.Views.Accessibility.CheckedState
const Android.Views.Accessibility.AccessibilityNodeInfo.ExpandedStateCollapsed = Android.Views.Accessibility.ExpandedState.Collapsed -> Android.Views.Accessibility.ExpandedState
const Android.Views.Accessibility.AccessibilityNodeInfo.ExpandedStateFull = Android.Views.Accessibility.ExpandedState.Full -> Android.Views.Accessibility.ExpandedState
const Android.Views.Accessibility.AccessibilityNodeInfo.ExpandedStatePartial = Android.Views.Accessibility.ExpandedState.Partial -> Android.Views.Accessibility.ExpandedState
const Android.Views.Accessibility.AccessibilityNodeInfo.ExpandedStateUndefined = Android.Views.Accessibility.ExpandedState.Undefined -> Android.Views.Accessibility.ExpandedState
const Android.Views.Accessibility.AccessibilityNodeInfo.ExtraDataTextCharacterLocationInWindowKey = "android.view.accessibility.extra.DATA_TEXT_CHARACTER_LOCATION_IN_WINDOW_KEY" -> string!
const Android.Views.Accessibility.AccessibilityNodeInfo.RangeInfo.RangeTypeIndeterminate = Android.Views.Accessibility.RangeType.Indeterminate -> Android.Views.Accessibility.RangeType
const Android.Views.Accessibility.AccessibilityWindowInfo.TypeWindowControl = Android.Views.Accessibility.AccessibilityWindowType.WindowControl -> Android.Views.Accessibility.AccessibilityWindowType
const Android.Views.Display.FrameRateCategoryHigh = Android.Views.DisplayFrameRateCategory.High -> Android.Views.DisplayFrameRateCategory
const Android.Views.Display.FrameRateCategoryNormal = Android.Views.DisplayFrameRateCategory.Normal -> Android.Views.DisplayFrameRateCategory
const Android.Views.FrameMetrics.FrameTimelineVsyncId = Android.Views.FrameMetricsId.FrameTimelineVsyncId -> Android.Views.FrameMetricsId
const Android.Views.InputMethods.InputMethodInfo.ActionImeLanguageSettings = "android.view.inputmethod.action.IME_LANGUAGE_SETTINGS" -> string!
const Android.Views.KeyEvent.KeycodeClose = Android.Views.Keycode.Close -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeDictate = Android.Views.Keycode.Dictate -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeDoNotDisturb = Android.Views.Keycode.DoNotDisturb -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF13 = Android.Views.Keycode.F13 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF14 = Android.Views.Keycode.F14 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF15 = Android.Views.Keycode.F15 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF16 = Android.Views.Keycode.F16 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF17 = Android.Views.Keycode.F17 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF18 = Android.Views.Keycode.F18 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF19 = Android.Views.Keycode.F19 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF20 = Android.Views.Keycode.F20 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF21 = Android.Views.Keycode.F21 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF22 = Android.Views.Keycode.F22 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF23 = Android.Views.Keycode.F23 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeF24 = Android.Views.Keycode.F24 -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeFullscreen = Android.Views.Keycode.Fullscreen -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeLock = Android.Views.Keycode.Lock -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodeNew = Android.Views.Keycode.New -> Android.Views.Keycode
const Android.Views.KeyEvent.KeycodePrint = Android.Views.Keycode.Print -> Android.Views.Keycode
const Android.Views.Surface.FrameRateCompatibilityAtLeast = Android.Views.SurfaceFrameRateCompatibility.AtLeast -> Android.Views.SurfaceFrameRateCompatibility
const Android.Views.SurfaceControl.JankData.JankApplication = Android.Views.SurfaceJankType.Application -> Android.Views.SurfaceJankType
const Android.Views.SurfaceControl.JankData.JankComposer = Android.Views.SurfaceJankType.Composer -> Android.Views.SurfaceJankType
const Android.Views.SurfaceControl.JankData.JankNone = Android.Views.SurfaceJankType.None -> Android.Views.SurfaceJankType
const Android.Views.SurfaceControl.JankData.JankOther = Android.Views.SurfaceJankType.Other -> Android.Views.SurfaceJankType
const Android.Views.TextClassifiers.ITextClassifier.ExtraTextOriginPackage = "android.view.textclassifier.extra.TEXT_ORIGIN_PACKAGE" -> string!
const Android.Views.TextClassifiers.ITextClassifier.TypeOtp = "otp" -> string!
const Android.Views.TextClassifiers.TextClassifier.ExtraTextOriginPackage = "android.view.textclassifier.extra.TEXT_ORIGIN_PACKAGE" -> string!
const Android.Views.TextClassifiers.TextClassifier.TypeOtp = "otp" -> string!
const Android.Views.View.DragFlagHideCallingTaskOnDragStart = Android.Views.DragFlags.HideCallingTaskOnDragStart -> Android.Views.DragFlags
const Android.Views.ViewStructure.ExtraVirtualStructureType = "android.view.extra.VIRTUAL_STRUCTURE_TYPE" -> string!
const Android.Views.ViewStructure.ExtraVirtualStructureVersionNumber = "android.view.extra.VIRTUAL_STRUCTURE_VERSION_NUMBER" -> string!
const Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.InterfaceConsts.ContentsFileDescriptor = 1 -> int
const Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.InterfaceConsts.ParcelableWriteReturnValue = Android.OS.ParcelableWriteFlags.ReturnValue -> Android.OS.ParcelableWriteFlags
const Android.Window.BackEvent.EdgeNone = Android.Window.BackEventEdge.None -> Android.Window.BackEventEdge
const Android.Window.IOnBackInvokedDispatcher.PrioritySystemNavigationObserver = -2 -> int
Java.Lang.Invoke.StringConcatException
Java.Lang.Invoke.StringConcatException.StringConcatException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Java.Lang.Invoke.StringConcatException.StringConcatException(string? msg) -> void
Java.Lang.Invoke.StringConcatException.StringConcatException(string? msg, Java.Lang.Throwable? cause) -> void
Java.Lang.MatchException
Java.Lang.MatchException.MatchException(string? message, Java.Lang.Throwable? cause) -> void
Java.Lang.Runtimes.SwitchBootstraps
Java.Lang.Runtimes.SwitchBootstraps.SwitchBootstraps(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Java.Lang.Thread.IsVirtual.get -> bool
Java.Lang.Thread.ThreadId() -> long
Java.Util.Concurrent.ForkJoinTask.QuietlyJoin(long timeout, Java.Util.Concurrent.TimeUnit? unit) -> bool
Java.Util.Concurrent.ForkJoinTask.QuietlyJoinUninterruptibly(long timeout, Java.Util.Concurrent.TimeUnit? unit) -> bool
Java.Util.Concurrent.ForkJoinWorkerThread.ForkJoinWorkerThread(Java.Lang.ThreadGroup? group, Java.Util.Concurrent.ForkJoinPool? pool, bool preserveThreadLocals) -> void
Java.Util.Concurrent.IExecutorService.Close() -> void
Java.Util.Concurrent.IFuture.ExceptionNow() -> Java.Lang.Throwable?
Java.Util.Concurrent.IFuture.InvokeState() -> Java.Util.Concurrent.IFuture.State?
Java.Util.Concurrent.IFuture.ResultNow() -> Java.Lang.Object?
Java.Util.Concurrent.IFuture.State
override Android.AdServices.AdSelection.PerBuyerConfiguration.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.PerBuyerConfiguration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.SellerConfiguration.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.AdSelection.SellerConfiguration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.Common.ComponentAdData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceResponse.ThresholdClass.get -> nint
override Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceResponse.ThresholdType.get -> System.Type!
override Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppFunctions.AppFunctionException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppFunctions.AppFunctionManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppFunctions.AppFunctionService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppFunctions.AppFunctionService.ThresholdClass.get -> nint
override Android.App.AppFunctions.AppFunctionService.ThresholdType.get -> System.Type!
override Android.App.AppFunctions.ExecuteAppFunctionRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppFunctions.ExecuteAppFunctionRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppFunctions.ExecuteAppFunctionResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.AppSearchBlobHandle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.AppSearchSchema.BlobHandlePropertyConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.AppSearchSchema.BlobHandlePropertyConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.AppSearchSchema.EmbeddingPropertyConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.CommitBlobResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.EmbeddingVector.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.OpenBlobForReadResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.OpenBlobForWriteResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.RemoveBlobResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.SetBlobVisibilityRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.SetBlobVisibilityRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.AppSearch.SetBlobVisibilityRequest.ThresholdClass.get -> nint
override Android.App.AppSearch.SetBlobVisibilityRequest.ThresholdType.get -> System.Type!
override Android.App.Jank.AppJankStats.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Jank.RelativeFrameTimeHistogram.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Jank.RelativeFrameTimeHistogram.ThresholdClass.get -> nint
override Android.App.Jank.RelativeFrameTimeHistogram.ThresholdType.get -> System.Type!
override Android.App.Job.PendingJobReasonsInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Notification.ProgressStyle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Notification.ProgressStyle.Point.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Notification.ProgressStyle.Segment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Notification.ProgressStyle.ThresholdClass.get -> nint
override Android.App.Notification.ProgressStyle.ThresholdType.get -> System.Type!
override Android.App.Wallpaper.WallpaperDescription.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Wallpaper.WallpaperDescription.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.App.Wallpaper.WallpaperInstance.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Bluetooth.BluetoothDevice.BluetoothAddress.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Bluetooth.BluetoothSocketSettings.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Bluetooth.BluetoothSocketSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Companion.DeviceId.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Companion.DeviceId.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Companion.DevicePresenceEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Companion.ObservingDevicePresenceRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Companion.ObservingDevicePresenceRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.PM.SigningInfoException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Content.PM.SigningInfoException.ThresholdClass.get -> nint
override Android.Content.PM.SigningInfoException.ThresholdType.get -> System.Type!
override Android.Graphics.RuntimeColorFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.RuntimeColorFilter.ThresholdClass.get -> nint
override Android.Graphics.RuntimeColorFilter.ThresholdType.get -> System.Type!
override Android.Graphics.RuntimeXfermode.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Graphics.RuntimeXfermode.ThresholdClass.get -> nint
override Android.Graphics.RuntimeXfermode.ThresholdType.get -> System.Type!
override Android.Hardware.DisplayLuts.Entry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.DisplayLuts.Entry.ThresholdClass.get -> nint
override Android.Hardware.DisplayLuts.Entry.ThresholdType.get -> System.Type!
override Android.Hardware.DisplayLuts.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Hardware.LutProperties.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.CreateMedicalDataSourceRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.CreateMedicalDataSourceRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ActivityIntensityRecord.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.ActivityIntensityRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.FhirResource.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.FhirResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.FhirVersion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.MedicalDataSource.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.MedicalDataSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.MedicalResource.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.MedicalResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.MindfulnessSessionRecord.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DataTypes.MindfulnessSessionRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DeleteMedicalResourcesRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.DeleteMedicalResourcesRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.GetMedicalDataSourcesRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.GetMedicalDataSourcesRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.MedicalResourceId.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.ReadMedicalResourcesInitialRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.ReadMedicalResourcesInitialRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.ReadMedicalResourcesPageRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.ReadMedicalResourcesPageRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.ReadMedicalResourcesRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.ReadMedicalResourcesRequest.ThresholdClass.get -> nint
override Android.Health.Connect.ReadMedicalResourcesRequest.ThresholdType.get -> System.Type!
override Android.Health.Connect.ReadMedicalResourcesResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.UpsertMedicalResourceRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Health.Connect.UpsertMedicalResourceRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.ActiveProcessingPicture.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.AmbientBacklightEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.AmbientBacklightMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.AmbientBacklightSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.MediaQualityContract.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.MediaQualityContract.PictureQuality.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.MediaQualityContract.SoundQuality.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.MediaQualityContract.ThresholdClass.get -> nint
override Android.Media.Quality.MediaQualityContract.ThresholdType.get -> System.Type!
override Android.Media.Quality.MediaQualityManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.MediaQualityManager.PictureProfileCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.MediaQualityManager.PictureProfileCallback.ThresholdClass.get -> nint
override Android.Media.Quality.MediaQualityManager.PictureProfileCallback.ThresholdType.get -> System.Type!
override Android.Media.Quality.MediaQualityManager.ProfileQueryParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.MediaQualityManager.ProfileQueryParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.MediaQualityManager.SoundProfileCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.MediaQualityManager.SoundProfileCallback.ThresholdClass.get -> nint
override Android.Media.Quality.MediaQualityManager.SoundProfileCallback.ThresholdType.get -> System.Type!
override Android.Media.Quality.ParameterCapability.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.PictureProfile.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.PictureProfile.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.SoundProfile.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.Quality.SoundProfile.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.Ads.TvAdManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback.ThresholdClass.get -> nint
override Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback.ThresholdType.get -> System.Type!
override Android.Media.TV.Ads.TvAdService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.Ads.TvAdService.Session.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.Ads.TvAdService.Session.ThresholdClass.get -> nint
override Android.Media.TV.Ads.TvAdService.Session.ThresholdType.get -> System.Type!
override Android.Media.TV.Ads.TvAdService.ThresholdClass.get -> nint
override Android.Media.TV.Ads.TvAdService.ThresholdType.get -> System.Type!
override Android.Media.TV.Ads.TvAdServiceInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.Ads.TvAdView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.Ads.TvAdView.OnLayout(bool changed, int left, int top, int right, int bottom) -> void
override Android.Media.TV.Ads.TvAdView.ThresholdClass.get -> nint
override Android.Media.TV.Ads.TvAdView.ThresholdType.get -> System.Type!
override Android.Media.TV.Ads.TvAdView.TvAdCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.Ads.TvAdView.TvAdCallback.ThresholdClass.get -> nint
override Android.Media.TV.Ads.TvAdView.TvAdCallback.ThresholdType.get -> System.Type!
override Android.Media.TV.SignalingDataInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.SignalingDataRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Media.TV.SignalingDataResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.L2capNetworkSpecifier.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.L2capNetworkSpecifier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Nsd.AdvertisingRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Nsd.AdvertisingRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.TetheringInterface.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.TetheringManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.TetheringManager.TetheringRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.TetheringManager.TetheringRequest.Builder.ThresholdClass.get -> nint
override Android.Net.TetheringManager.TetheringRequest.Builder.ThresholdType.get -> System.Type!
override Android.Net.TetheringManager.TetheringRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.TetheringManager.ThresholdClass.get -> nint
override Android.Net.TetheringManager.ThresholdType.get -> System.Type!
override Android.Net.Wifi.BlockingOption.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.BlockingOption.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.WifiP2pDirInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.Rtt.PasnConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.Rtt.PasnConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.Rtt.SecureRangingConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.Rtt.SecureRangingConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Net.Wifi.SoftApConfiguration.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.Build.VERSION_CODES_FULL.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.Build.VERSION_CODES_FULL.ThresholdClass.get -> nint
override Android.OS.Build.VERSION_CODES_FULL.ThresholdType.get -> System.Type!
override Android.OS.CpuHeadroomParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.CpuHeadroomParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.Flagging.AconfigPackage.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.Flagging.AconfigPackage.ThresholdClass.get -> nint
override Android.OS.Flagging.AconfigPackage.ThresholdType.get -> System.Type!
override Android.OS.Flagging.AconfigStorageReadException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.Flagging.AconfigStorageReadException.ThresholdClass.get -> nint
override Android.OS.Flagging.AconfigStorageReadException.ThresholdType.get -> System.Type!
override Android.OS.GpuHeadroomParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.GpuHeadroomParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.ProfilingTrigger.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.ProfilingTrigger.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.RemoteCallbackList.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.VibrationEffect.BasicEnvelopeBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.VibrationEffect.WaveformEnvelopeBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.Vibrators.VibratorEnvelopeEffectInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.OS.Vibrators.VibratorFrequencyProfile.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.CloudMediaProviderContract.Capabilities.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.CloudMediaProviderContract.Capabilities.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.CloudMediaProviderContract.MediaCategoryColumns.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.CloudMediaProviderContract.MediaSetColumns.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.CloudMediaProviderContract.SearchSuggestionColumns.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Provider.ContactsContract.RawContacts.DefaultAccount.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Ble.CS.BleCsRangingCapabilities.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Ble.CS.BleCsRangingParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Ble.CS.BleCsRangingParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Ble.Rssi.BleRssiRangingParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Ble.Rssi.BleRssiRangingParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.DataNotificationConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.DataNotificationConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Oob.DeviceHandle.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Oob.DeviceHandle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Oob.OobInitiatorRangingConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Oob.OobInitiatorRangingConfig.DescribeContents() -> int
override Android.Ranging.Oob.OobInitiatorRangingConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Oob.OobInitiatorRangingConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
override Android.Ranging.Oob.OobResponderRangingConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Oob.OobResponderRangingConfig.DescribeContents() -> int
override Android.Ranging.Oob.OobResponderRangingConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Oob.OobResponderRangingConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
override Android.Ranging.RangingCapabilities.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.RangingConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.RangingConfig.ThresholdClass.get -> nint
override Android.Ranging.RangingConfig.ThresholdType.get -> System.Type!
override Android.Ranging.RangingData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.RangingDevice.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.RangingDevice.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.RangingManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.RangingMeasurement.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.RangingPreference.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.RangingPreference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.RangingSession.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Raw.RawInitiatorRangingConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Raw.RawInitiatorRangingConfig.DescribeContents() -> int
override Android.Ranging.Raw.RawInitiatorRangingConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Raw.RawInitiatorRangingConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
override Android.Ranging.Raw.RawRangingDevice.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Raw.RawRangingDevice.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Raw.RawResponderRangingConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Raw.RawResponderRangingConfig.DescribeContents() -> int
override Android.Ranging.Raw.RawResponderRangingConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Raw.RawResponderRangingConfig.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
override Android.Ranging.SensorFusionParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.SensorFusionParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.SessionConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.SessionConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Uwb.UwbAddress.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Uwb.UwbComplexChannel.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Uwb.UwbComplexChannel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Uwb.UwbRangingCapabilities.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Uwb.UwbRangingParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Uwb.UwbRangingParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Wifi.Rtt.RttRangingCapabilities.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Wifi.Rtt.RttRangingParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Ranging.Wifi.Rtt.RttRangingParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Security.AdvancedProtection.AdvancedProtectionManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Security.Keystore.KeyStoreManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.GetValueRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.GetValueRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.GetValueResult.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.GetValueResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.MetadataRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.MetadataRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.MetadataResult.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.MetadataResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SettingsPreferenceMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SettingsPreferenceService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SettingsPreferenceService.ThresholdClass.get -> nint
override Android.Service.Settings.Preferences.SettingsPreferenceService.ThresholdType.get -> System.Type!
override Android.Service.Settings.Preferences.SettingsPreferenceServiceClient.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SettingsPreferenceServiceClient.ThresholdClass.get -> nint
override Android.Service.Settings.Preferences.SettingsPreferenceServiceClient.ThresholdType.get -> System.Type!
override Android.Service.Settings.Preferences.SettingsPreferenceValue.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SettingsPreferenceValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SetValueRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SetValueRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SetValueResult.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Service.Settings.Preferences.SetValueResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Telephony.Satellite.SatelliteManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Text.Style.NoWritingToolsSpan.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Text.Style.TtsSpan.DurationBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Text.Style.TtsSpan.DurationBuilder.ThresholdClass.get -> nint
override Android.Text.Style.TtsSpan.DurationBuilder.ThresholdType.get -> System.Type!
override Android.Views.SurfaceControl.JankData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Views.SurfaceControl.JankData.ThresholdClass.get -> nint
override Android.Views.SurfaceControl.JankData.ThresholdType.get -> System.Type!
override Android.Views.SurfaceControl.OnJankDataListenerRegistration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Views.SurfaceControl.OnJankDataListenerRegistration.ThresholdClass.get -> nint
override Android.Views.SurfaceControl.OnJankDataListenerRegistration.ThresholdType.get -> System.Type!
override Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Widget.PhotoPicker.EmbeddedPhotoPickerProviderFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Widget.PhotoPicker.EmbeddedPhotoPickerProviderFactory.ThresholdClass.get -> nint
override Android.Widget.PhotoPicker.EmbeddedPhotoPickerProviderFactory.ThresholdType.get -> System.Type!
override Android.Window.SystemOnBackInvokedCallbacks.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Lang.Invoke.StringConcatException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Lang.Invoke.StringConcatException.ThresholdClass.get -> nint
override Java.Lang.Invoke.StringConcatException.ThresholdType.get -> System.Type!
override Java.Lang.MatchException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Lang.Runtimes.SwitchBootstraps.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Java.Lang.Runtimes.SwitchBootstraps.ThresholdClass.get -> nint
override Java.Lang.Runtimes.SwitchBootstraps.ThresholdType.get -> System.Type!
override Java.Util.Concurrent.IFuture.State.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Android.App.AppFunctions.AppFunctionService.OnBind(Android.Content.Intent? intent) -> Android.OS.IBinder!
override sealed Android.Media.TV.Ads.TvAdService.OnBind(Android.Content.Intent? intent) -> Android.OS.IBinder?
override sealed Android.Service.Settings.Preferences.SettingsPreferenceService.OnBind(Android.Content.Intent? intent) -> Android.OS.IBinder!
static Android.AdServices.AdSelection.PerBuyerConfiguration.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.AdSelection.SellerConfiguration.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.Common.ComponentAdData.Creator.get -> Android.OS.IParcelableCreator!
static Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.BuildBestValueSpec(int maxIntValue) -> Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec!
static Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.Default.get -> Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec!
static Android.App.AppFunctions.AppFunctionException.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppFunctions.ExecuteAppFunctionRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppFunctions.ExecuteAppFunctionResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.AppSearchBlobHandle.CreateWithSha256(byte[]! digest, string! packageName, string! databaseName, string! namespace) -> Android.App.AppSearch.AppSearchBlobHandle!
static Android.App.AppSearch.AppSearchBlobHandle.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.CommitBlobResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.EmbeddingVector.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.OpenBlobForReadResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.OpenBlobForWriteResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.AppSearch.RemoveBlobResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.Job.PendingJobReasonsInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.Wallpaper.WallpaperDescription.Creator.get -> Android.OS.IParcelableCreator!
static Android.App.Wallpaper.WallpaperInstance.Creator.get -> Android.OS.IParcelableCreator!
static Android.Bluetooth.BluetoothDevice.BluetoothAddress.Creator.get -> Android.OS.IParcelableCreator!
static Android.Companion.DeviceId.Creator.get -> Android.OS.IParcelableCreator!
static Android.Companion.DevicePresenceEvent.Creator.get -> Android.OS.IParcelableCreator!
static Android.Companion.ObservingDevicePresenceRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Content.PM.PackageManager.GetVerifiedSigningInfo(string! path, int minAppSigningSchemeVersion) -> Android.Content.PM.SigningInfo!
static Android.Graphics.ColorSpace.Named.OkLab.get -> Android.Graphics.ColorSpace.Named?
static Android.Hardware.Camera2.CameraCharacteristics.ColorCorrectionAvailableModes.get -> Android.Hardware.Camera2.CameraCharacteristics.Key!
static Android.Hardware.Camera2.CameraCharacteristics.ColorCorrectionColorTemperatureRange.get -> Android.Hardware.Camera2.CameraCharacteristics.Key!
static Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailablePriorityModes.get -> Android.Hardware.Camera2.CameraCharacteristics.Key!
static Android.Hardware.Camera2.CaptureRequest.ColorCorrectionColorTemperature.get -> Android.Hardware.Camera2.CaptureRequest.Key!
static Android.Hardware.Camera2.CaptureRequest.ColorCorrectionColorTint.get -> Android.Hardware.Camera2.CaptureRequest.Key!
static Android.Hardware.Camera2.CaptureRequest.ControlAePriorityMode.get -> Android.Hardware.Camera2.CaptureRequest.Key!
static Android.Hardware.Camera2.CaptureRequest.ControlZoomMethod.get -> Android.Hardware.Camera2.CaptureRequest.Key!
static Android.Hardware.Camera2.CaptureResult.ColorCorrectionColorTemperature.get -> Android.Hardware.Camera2.CaptureResult.Key!
static Android.Hardware.Camera2.CaptureResult.ColorCorrectionColorTint.get -> Android.Hardware.Camera2.CaptureResult.Key!
static Android.Hardware.Camera2.CaptureResult.ControlAePriorityMode.get -> Android.Hardware.Camera2.CaptureResult.Key!
static Android.Hardware.Camera2.CaptureResult.ControlZoomMethod.get -> Android.Hardware.Camera2.CaptureResult.Key!
static Android.Hardware.Camera2.CaptureResult.ExtensionNightModeIndicator.get -> Android.Hardware.Camera2.CaptureResult.Key!
static Android.Health.Connect.CreateMedicalDataSourceRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.DataTypes.ActivityIntensityRecord.DurationTotal.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.ActivityIntensityRecord.IntensityMinutesTotal.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.ActivityIntensityRecord.ModerateDurationTotal.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.ActivityIntensityRecord.VigorousDurationTotal.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DataTypes.FhirResource.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.DataTypes.FhirVersion.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.DataTypes.FhirVersion.ParseFhirVersion(string! fhirVersionString) -> Android.Health.Connect.DataTypes.FhirVersion!
static Android.Health.Connect.DataTypes.MedicalDataSource.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.DataTypes.MedicalResource.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.DataTypes.MindfulnessSessionRecord.MindfulnessDurationTotal.get -> Android.Health.Connect.DataTypes.AggregationType!
static Android.Health.Connect.DeleteMedicalResourcesRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.GetMedicalDataSourcesRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.MedicalResourceId.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.MedicalResourceId.FromFhirReference(string! dataSourceId, string! fhirReference) -> Android.Health.Connect.MedicalResourceId!
static Android.Health.Connect.ReadMedicalResourcesResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.Health.Connect.UpsertMedicalResourceRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Icu.Lang.UCharacter.UnicodeBlock.EgyptianHieroglyphsExtendedA.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Lang.UCharacter.UnicodeBlock.Garay.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Lang.UCharacter.UnicodeBlock.GurungKhema.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Lang.UCharacter.UnicodeBlock.KiratRai.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Lang.UCharacter.UnicodeBlock.MyanmarExtendedC.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Lang.UCharacter.UnicodeBlock.OlOnal.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Lang.UCharacter.UnicodeBlock.Sunuwar.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Lang.UCharacter.UnicodeBlock.SymbolsForLegacyComputingSupplement.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Lang.UCharacter.UnicodeBlock.Todhri.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Lang.UCharacter.UnicodeBlock.TuluTigalari.get -> Android.Icu.Lang.UCharacter.UnicodeBlock?
static Android.Icu.Text.Normalizer2.NFKCSimpleCasefoldInstance.get -> Android.Icu.Text.Normalizer2?
static Android.Icu.Util.MeasureUnit.Beaufort.get -> Android.Icu.Util.MeasureUnit?
static Android.Icu.Util.MeasureUnit.GasolineEnergyDensity.get -> Android.Icu.Util.MeasureUnit?
static Android.Icu.Util.TimeZone.GetIanaID(string? id) -> string?
static Android.Icu.Util.VersionInfo.Unicode160.get -> Android.Icu.Util.VersionInfo?
static Android.Media.Quality.ActiveProcessingPicture.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.Quality.AmbientBacklightEvent.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.Quality.AmbientBacklightMetadata.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.Quality.AmbientBacklightSettings.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.Quality.MediaQualityManager.ProfileQueryParams.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.Quality.ParameterCapability.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.Quality.PictureProfile.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.Quality.SoundProfile.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.TV.Ads.TvAdServiceInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.TV.SignalingDataInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.TV.SignalingDataRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Media.TV.SignalingDataResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.L2capNetworkSpecifier.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Nsd.AdvertisingRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.TetheringInterface.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.TetheringManager.TetheringRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.BlockingOption.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig.MaxAllowedServiceSpecificInfoLength.get -> int
static Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceResponse.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.P2p.WifiP2pDirInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.Rtt.PasnConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Net.Wifi.Rtt.SecureRangingConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.OS.Build.GetMajorSdkVersion(int sdkIntFull) -> int
static Android.OS.Build.GetMinorSdkVersion(int sdkIntFull) -> int
static Android.OS.Build.VERSION.SdkIntFull.get -> int
static Android.OS.Flagging.AconfigPackage.Load(string! packageName) -> Android.OS.Flagging.AconfigPackage!
static Android.OS.VibrationEffect.CreateRepeatingEffect(Android.OS.VibrationEffect! effect) -> Android.OS.VibrationEffect!
static Android.OS.VibrationEffect.CreateRepeatingEffect(Android.OS.VibrationEffect! preamble, Android.OS.VibrationEffect! repeatingEffect) -> Android.OS.VibrationEffect!
static Android.OS.Vibrators.VibratorEnvelopeEffectInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.Provider.CloudMediaProviderContract.Capabilities.Creator.get -> Android.OS.IParcelableCreator!
static Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.OfCloud(Android.Accounts.Account! cloudAccount) -> Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState!
static Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.OfLocal() -> Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState!
static Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.OfNotSet() -> Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState!
static Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState.OfSim(Android.Accounts.Account! simAccount) -> Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState!
static Android.Provider.ContactsContract.RawContacts.DefaultAccount.GetDefaultAccountForNewContacts(Android.Content.ContentResolver! resolver) -> Android.Provider.ContactsContract.RawContacts.DefaultAccount.DefaultAccountAndState!
static Android.Provider.MediaStore.MarkIsFavoriteStatus(Android.Content.ContentResolver! resolver, System.Collections.Generic.ICollection<Android.Net.Uri!>! uris, bool areFavorites) -> void
static Android.Provider.MediaStore.OpenAssetFileDescriptor(Android.Content.ContentResolver! resolver, Android.Net.Uri! uri, string! mode, Android.OS.CancellationSignal? cancellationSignal) -> Android.Content.Res.AssetFileDescriptor?
static Android.Provider.MediaStore.OpenFileDescriptor(Android.Content.ContentResolver! resolver, Android.Net.Uri! uri, string! mode, Android.OS.CancellationSignal? cancellationSignal) -> Android.OS.ParcelFileDescriptor?
static Android.Provider.MediaStore.OpenTypedAssetFileDescriptor(Android.Content.ContentResolver! resolver, Android.Net.Uri! uri, string! mimeType, Android.OS.Bundle? opts, Android.OS.CancellationSignal? cancellationSignal) -> Android.Content.Res.AssetFileDescriptor?
static Android.Ranging.Ble.CS.BleCsRangingCapabilities.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Ble.CS.BleCsRangingParams.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Ble.Rssi.BleRssiRangingParams.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.DataNotificationConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Oob.DeviceHandle.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Oob.OobInitiatorRangingConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Oob.OobResponderRangingConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.RangingCapabilities.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.RangingData.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.RangingDevice.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.RangingMeasurement.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.RangingPreference.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Raw.RawInitiatorRangingConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Raw.RawRangingDevice.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Raw.RawResponderRangingConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.SensorFusionParams.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.SessionConfig.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Uwb.UwbAddress.CreateRandomShortAddress() -> Android.Ranging.Uwb.UwbAddress!
static Android.Ranging.Uwb.UwbAddress.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Uwb.UwbAddress.FromBytes(byte[]! address) -> Android.Ranging.Uwb.UwbAddress!
static Android.Ranging.Uwb.UwbComplexChannel.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Uwb.UwbRangingCapabilities.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Uwb.UwbRangingParams.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Wifi.Rtt.RttRangingCapabilities.Creator.get -> Android.OS.IParcelableCreator!
static Android.Ranging.Wifi.Rtt.RttRangingParams.Creator.get -> Android.OS.IParcelableCreator!
static Android.Service.Settings.Preferences.GetValueRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Service.Settings.Preferences.GetValueResult.Creator.get -> Android.OS.IParcelableCreator!
static Android.Service.Settings.Preferences.MetadataRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Service.Settings.Preferences.MetadataResult.Creator.get -> Android.OS.IParcelableCreator!
static Android.Service.Settings.Preferences.SettingsPreferenceMetadata.Creator.get -> Android.OS.IParcelableCreator!
static Android.Service.Settings.Preferences.SettingsPreferenceValue.Creator.get -> Android.OS.IParcelableCreator!
static Android.Service.Settings.Preferences.SetValueRequest.Creator.get -> Android.OS.IParcelableCreator!
static Android.Service.Settings.Preferences.SetValueResult.Creator.get -> Android.OS.IParcelableCreator!
static Android.Text.Style.NoWritingToolsSpan.Creator.get -> Android.OS.IParcelableCreator!
static Android.Views.Accessibility.AccessibilityNodeInfo.RangeInfo.Indeterminate.get -> Android.Views.Accessibility.AccessibilityNodeInfo.RangeInfo!
static Android.Widget.PhotoPicker.EmbeddedPhotoPickerFeatureInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.Widget.PhotoPicker.EmbeddedPhotoPickerProviderFactory.Create(Android.Content.Context! context) -> Android.Widget.PhotoPicker.IEmbeddedPhotoPickerProvider!
static Android.Window.SystemOnBackInvokedCallbacks.FinishAndRemoveTaskCallback(Android.App.Activity! activity) -> Android.Window.IOnBackInvokedCallback!
static Android.Window.SystemOnBackInvokedCallbacks.MoveTaskToBackCallback(Android.App.Activity! activity) -> Android.Window.IOnBackInvokedCallback!
static Java.Lang.Character.IsEmoji(int codePoint) -> bool
static Java.Lang.Character.IsEmojiComponent(int codePoint) -> bool
static Java.Lang.Character.IsEmojiModifier(int codePoint) -> bool
static Java.Lang.Character.IsEmojiModifierBase(int codePoint) -> bool
static Java.Lang.Character.IsEmojiPresentation(int codePoint) -> bool
static Java.Lang.Character.IsExtendedPictographic(int codePoint) -> bool
static Java.Lang.Character.UnicodeBlock.ArabicExtendedB.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.ArabicExtendedC.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.CjkUnifiedIdeographsExtensionH.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.CyproMinoan.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.CyrillicExtendedD.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.DevanagariExtendedA.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.EthiopicExtendedB.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.KaktovikNumerals.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.KanaExtendedB.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.Kawi.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.LatinExtendedF.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.LatinExtendedG.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.NagMundari.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.OldUyghur.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.Tangsa.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.Toto.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.UnifiedCanadianAboriginalSyllabicsExtendedA.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.Vithkuqi.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeBlock.ZnamennyMusicalNotation.get -> Java.Lang.Character.UnicodeBlock?
static Java.Lang.Character.UnicodeScript.CyproMinoan.get -> Java.Lang.Character.UnicodeScript?
static Java.Lang.Character.UnicodeScript.Kawi.get -> Java.Lang.Character.UnicodeScript?
static Java.Lang.Character.UnicodeScript.NagMundari.get -> Java.Lang.Character.UnicodeScript?
static Java.Lang.Character.UnicodeScript.OldUyghur.get -> Java.Lang.Character.UnicodeScript?
static Java.Lang.Character.UnicodeScript.Tangsa.get -> Java.Lang.Character.UnicodeScript?
static Java.Lang.Character.UnicodeScript.Toto.get -> Java.Lang.Character.UnicodeScript?
static Java.Lang.Character.UnicodeScript.Vithkuqi.get -> Java.Lang.Character.UnicodeScript?
static Java.Lang.Float.Float16ToFloat(short floatBinary16) -> float
static Java.Lang.Float.FloatToFloat16(float f) -> short
static Java.Lang.Integer.Compress(int i, int mask) -> int
static Java.Lang.Integer.Expand(int i, int mask) -> int
static Java.Lang.Long.Compress(long i, long mask) -> long
static Java.Lang.Long.Expand(long i, long mask) -> long
static Java.Lang.Runtimes.SwitchBootstraps.EnumSwitch(Java.Lang.Invoke.MethodHandles.Lookup? lookup, string? invocationName, Java.Lang.Invoke.MethodType? invocationType, params Java.Lang.Object![]? labels) -> Java.Lang.Invoke.CallSite?
static Java.Lang.Runtimes.SwitchBootstraps.TypeSwitch(Java.Lang.Invoke.MethodHandles.Lookup? lookup, string? invocationName, Java.Lang.Invoke.MethodType? invocationType, params Java.Lang.Object![]? labels) -> Java.Lang.Invoke.CallSite?
static Java.Util.Concurrent.ForkJoinTask.AdaptInterruptible(Java.Util.Concurrent.ICallable? callable) -> Java.Util.Concurrent.ForkJoinTask?
static Java.Util.Concurrent.IFuture.State.Cancelled.get -> Java.Util.Concurrent.IFuture.State?
static Java.Util.Concurrent.IFuture.State.Failed.get -> Java.Util.Concurrent.IFuture.State?
static Java.Util.Concurrent.IFuture.State.Running.get -> Java.Util.Concurrent.IFuture.State?
static Java.Util.Concurrent.IFuture.State.Success.get -> Java.Util.Concurrent.IFuture.State?
static Java.Util.Concurrent.IFuture.State.ValueOf(string? name) -> Java.Util.Concurrent.IFuture.State?
static Java.Util.Concurrent.IFuture.State.Values() -> Java.Util.Concurrent.IFuture.State![]?
static Java.Util.Locale.Of(string! language) -> Java.Util.Locale!
static Java.Util.Locale.Of(string! language, string! country) -> Java.Util.Locale!
static Java.Util.Locale.Of(string! language, string! country, string! variant) -> Java.Util.Locale!
static Java.Util.Objects.ToIdentityString(Java.Lang.Object! o) -> string!
static Java.Util.Random.From(Java.Util.RandomGenerators.IRandomGenerator? generator) -> Java.Util.Random?
static Java.Util.WeakHashMap.NewWeakHashMap(int numMappings) -> Java.Util.WeakHashMap!
virtual Android.AdServices.AdSelection.AdSelectionOutcome.ComponentAdUris.get -> System.Collections.Generic.IList<Android.Net.Uri!>!
virtual Android.AdServices.AdSelection.AdSelectionOutcome.WinningSeller.get -> Android.AdServices.Common.AdTechIdentifier!
virtual Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.AppParams.get -> Android.OS.PersistableBundle!
virtual Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.GetOutputSpec() -> Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec!
virtual Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.MaxIntValue.get -> int
virtual Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.OutputSpec.OutputType.get -> int
virtual Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest.Service.get -> Android.Content.ComponentName!
virtual Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceResponse.BestValue.get -> int
virtual Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceResponse.SurfacePackageToken.get -> Android.AdServices.OnDevicePersonalization.SurfacePackageToken?
virtual Android.AdServices.OnDevicePersonalization.FederatedComputeScheduler.Schedule(Android.AdServices.OnDevicePersonalization.FederatedComputeScheduleRequest! federatedComputeScheduleRequest, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! outcomeReceiver) -> void
virtual Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.ExecuteInIsolatedService(Android.AdServices.OnDevicePersonalization.ExecuteInIsolatedServiceRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.AdServices.OnDevicePersonalization.OnDevicePersonalizationManager.QueryFeatureAvailability(string! featureName, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.App.ActivityOptions.AllowPassThroughOnTouchOutside.get -> bool
virtual Android.App.ActivityOptions.AllowPassThroughOnTouchOutside.set -> void
virtual Android.App.Admin.DevicePolicyManager.AppFunctionsPolicy.get -> Android.App.Admin.DevicePolicyManagerAppFunctionsStatus
virtual Android.App.Admin.DevicePolicyManager.AppFunctionsPolicy.set -> void
virtual Android.App.Admin.DevicePolicyManager.AutoTimePolicy.get -> Android.App.Admin.DevicePolicyManagerAutoTimeStatus
virtual Android.App.Admin.DevicePolicyManager.AutoTimePolicy.set -> void
virtual Android.App.Admin.DevicePolicyManager.AutoTimeZonePolicy.get -> Android.App.Admin.DevicePolicyManagerAutoTimeZoneStatus
virtual Android.App.Admin.DevicePolicyManager.AutoTimeZonePolicy.set -> void
virtual Android.App.AppOpsManager.CheckOp(string! op, int uid, string! packageName, string? attributionTag) -> Android.App.AppOpsManagerMode
virtual Android.App.AppOpsManager.CheckOpNoThrow(string! op, int uid, string! packageName, string? attributionTag) -> Android.App.AppOpsManagerMode
virtual Android.App.AppOpsManager.CheckOpRawNoThrow(string! op, int uid, string! packageName, string? attributionTag) -> Android.App.AppOpsManagerMode
virtual Android.App.AppOpsManager.SetOnOpNotedCallback(Java.Util.Concurrent.IExecutor? asyncExecutor, Android.App.AppOpsManager.OnOpNotedCallback? callback, Android.App.AppOpsManagerCallbackFlag flags) -> void
virtual Android.App.AppSearch.EnterpriseGlobalSearchSession.OpenBlobForRead(System.Collections.Generic.ICollection<Android.App.AppSearch.AppSearchBlobHandle!>! handles, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
virtual Android.App.AppSearch.GenericDocument.Builder.SetPropertyBlobHandle(string! name, params Android.App.AppSearch.AppSearchBlobHandle![]! values) -> Java.Lang.Object!
virtual Android.App.AppSearch.GenericDocument.Builder.SetPropertyEmbedding(string! name, params Android.App.AppSearch.EmbeddingVector![]! values) -> Java.Lang.Object!
virtual Android.App.AppSearch.GenericDocument.GetPropertyBlobHandle(string! path) -> Android.App.AppSearch.AppSearchBlobHandle?
virtual Android.App.AppSearch.GenericDocument.GetPropertyBlobHandleArray(string! path) -> Android.App.AppSearch.AppSearchBlobHandle![]?
virtual Android.App.AppSearch.GenericDocument.GetPropertyEmbedding(string! path) -> Android.App.AppSearch.EmbeddingVector?
virtual Android.App.AppSearch.GenericDocument.GetPropertyEmbeddingArray(string! path) -> Android.App.AppSearch.EmbeddingVector![]?
virtual Android.App.AppSearch.GlobalSearchSession.OpenBlobForRead(System.Collections.Generic.ICollection<Android.App.AppSearch.AppSearchBlobHandle!>! handles, Java.Util.Concurrent.IExecutor! executor, Java.Util.Functions.IConsumer! callback) -> void
virtual Android.App.AppSearch.SetBlobVisibilityRequest.NamespacesNotDisplayedBySystem.get -> System.Collections.Generic.ICollection<string!>!
virtual Android.App.AppSearch.SetBlobVisibilityRequest.NamespacesVisibleToConfigs.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.ICollection<Android.App.AppSearch.SchemaVisibilityConfig!>!>!
virtual Android.App.AppSearch.StorageInfo.BlobsCount.get -> int
virtual Android.App.AppSearch.StorageInfo.BlobsSizeBytes.get -> long
virtual Android.App.Assist.AssistContent.SessionTransferUri.get -> Android.Net.Uri?
virtual Android.App.Assist.AssistContent.SessionTransferUri.set -> void
virtual Android.App.Jank.RelativeFrameTimeHistogram.AddRelativeFrameTimeMillis(int frameTimeMillis) -> void
virtual Android.App.Jank.RelativeFrameTimeHistogram.GetBucketCounters() -> int[]!
virtual Android.App.Jank.RelativeFrameTimeHistogram.GetBucketEndpointsMillis() -> int[]!
virtual Android.App.Job.JobScheduler.GetPendingJobReasons(int jobId) -> int[]!
virtual Android.App.Job.JobScheduler.GetPendingJobReasonsHistory(int jobId) -> System.Collections.Generic.IList<Android.App.Job.PendingJobReasonsInfo!>!
virtual Android.App.Notification.Builder.SetShortCriticalText(string? shortCriticalText) -> Android.App.Notification.Builder!
virtual Android.App.Notification.HasPromotableCharacteristics.get -> bool
virtual Android.App.Notification.ProgressStyle.AddProgressPoint(Android.App.Notification.ProgressStyle.Point! point) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ProgressStyle.AddProgressSegment(Android.App.Notification.ProgressStyle.Segment! segment) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ProgressStyle.IsProgressIndeterminate.get -> bool
virtual Android.App.Notification.ProgressStyle.IsStyledByProgress.get -> bool
virtual Android.App.Notification.ProgressStyle.Progress.get -> int
virtual Android.App.Notification.ProgressStyle.ProgressEndIcon.get -> Android.Graphics.Drawables.Icon?
virtual Android.App.Notification.ProgressStyle.ProgressMax.get -> int
virtual Android.App.Notification.ProgressStyle.ProgressPoints.get -> System.Collections.Generic.IList<Android.App.Notification.ProgressStyle.Point!>!
virtual Android.App.Notification.ProgressStyle.ProgressSegments.get -> System.Collections.Generic.IList<Android.App.Notification.ProgressStyle.Segment!>!
virtual Android.App.Notification.ProgressStyle.ProgressStartIcon.get -> Android.Graphics.Drawables.Icon?
virtual Android.App.Notification.ProgressStyle.ProgressTrackerIcon.get -> Android.Graphics.Drawables.Icon?
virtual Android.App.Notification.ProgressStyle.SetProgress(int progress) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ProgressStyle.SetProgressEndIcon(Android.Graphics.Drawables.Icon? endIcon) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ProgressStyle.SetProgressIndeterminate(bool indeterminate) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ProgressStyle.SetProgressPoints(System.Collections.Generic.IList<Android.App.Notification.ProgressStyle.Point!>! points) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ProgressStyle.SetProgressSegments(System.Collections.Generic.IList<Android.App.Notification.ProgressStyle.Segment!>! progressSegments) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ProgressStyle.SetProgressStartIcon(Android.Graphics.Drawables.Icon? startIcon) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ProgressStyle.SetProgressTrackerIcon(Android.Graphics.Drawables.Icon? trackerIcon) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ProgressStyle.SetStyledByProgress(bool enabled) -> Android.App.Notification.ProgressStyle!
virtual Android.App.Notification.ShortCriticalText.get -> string?
virtual Android.App.NotificationManager.CanPostPromotedNotifications() -> bool
virtual Android.App.SdkSandbox.SdkProvider.SdkSandboxController.RegisterSdkSandboxClientImportanceListener(Java.Util.Concurrent.IExecutor! executor, Android.App.SdkSandbox.SdkProvider.ISdkSandboxClientImportanceListener! listener) -> void
virtual Android.App.SdkSandbox.SdkProvider.SdkSandboxController.UnregisterSdkSandboxClientImportanceListener(Android.App.SdkSandbox.SdkProvider.ISdkSandboxClientImportanceListener! listener) -> void
virtual Android.Companion.CompanionDeviceManager.Callback.OnFailure(int errorCode, Java.Lang.ICharSequence? error) -> void
virtual Android.Companion.CompanionDeviceService.OnDevicePresenceEvent(Android.Companion.DevicePresenceEvent! e) -> void
virtual Android.Content.Intent.RemoveLaunchSecurityProtection() -> void
virtual Android.Content.IntentSender.SendIntent(Android.Content.Context? context, Android.App.Result code, Android.Content.Intent? intent, string? requiredPermission, Android.OS.Bundle? options, Java.Util.Concurrent.IExecutor? executor, Android.Content.IntentSender.IOnFinished? onFinished) -> void
virtual Android.Content.PM.LauncherApps.Callback.OnUserConfigChanged(Android.Content.PM.LauncherUserInfo! launcherUserInfo) -> void
virtual Android.Content.PM.LauncherApps.PrivateSpaceSettingsIntent.get -> Android.Content.IntentSender?
virtual Android.Content.PM.PackageInstaller.SessionInfo.IsAutoInstallDependenciesEnabled.get -> bool
virtual Android.Content.PM.PackageInstaller.SessionParams.SetAutoInstallDependenciesEnabled(bool enableAutoInstallDependencies) -> void
virtual Android.Content.PM.PackageManager.ParseAndroidManifest(Android.OS.ParcelFileDescriptor! apkFileDescriptor, Java.Util.Functions.IFunction! parserFunction) -> Java.Lang.Object?
virtual Android.Content.PM.SigningInfoException.Code.get -> int
virtual Android.Graphics.Canvas.DrawRegion(Android.Graphics.Region! region, Android.Graphics.Paint! paint) -> void
virtual Android.Graphics.Path.ComputeBounds(Android.Graphics.RectF! bounds) -> void
virtual Android.Graphics.RuntimeColorFilter.SetColorUniform(string! uniformName, Android.Graphics.Color color) -> void
virtual Android.Graphics.RuntimeColorFilter.SetColorUniform(string! uniformName, Android.Graphics.ColorObject! color) -> void
virtual Android.Graphics.RuntimeColorFilter.SetColorUniform(string! uniformName, long color) -> void
virtual Android.Graphics.RuntimeColorFilter.SetFloatUniform(string! uniformName, float value) -> void
virtual Android.Graphics.RuntimeColorFilter.SetFloatUniform(string! uniformName, float value1, float value2) -> void
virtual Android.Graphics.RuntimeColorFilter.SetFloatUniform(string! uniformName, float value1, float value2, float value3) -> void
virtual Android.Graphics.RuntimeColorFilter.SetFloatUniform(string! uniformName, float value1, float value2, float value3, float value4) -> void
virtual Android.Graphics.RuntimeColorFilter.SetFloatUniform(string! uniformName, float[]! values) -> void
virtual Android.Graphics.RuntimeColorFilter.SetInputColorFilter(string! filterName, Android.Graphics.ColorFilter! colorFilter) -> void
virtual Android.Graphics.RuntimeColorFilter.SetInputShader(string! shaderName, Android.Graphics.Shader! shader) -> void
virtual Android.Graphics.RuntimeColorFilter.SetInputXfermode(string! xfermodeName, Android.Graphics.RuntimeXfermode! xfermode) -> void
virtual Android.Graphics.RuntimeColorFilter.SetIntUniform(string! uniformName, int value) -> void
virtual Android.Graphics.RuntimeColorFilter.SetIntUniform(string! uniformName, int value1, int value2) -> void
virtual Android.Graphics.RuntimeColorFilter.SetIntUniform(string! uniformName, int value1, int value2, int value3) -> void
virtual Android.Graphics.RuntimeColorFilter.SetIntUniform(string! uniformName, int value1, int value2, int value3, int value4) -> void
virtual Android.Graphics.RuntimeColorFilter.SetIntUniform(string! uniformName, int[]! values) -> void
virtual Android.Graphics.RuntimeShader.SetInputColorFilter(string! filterName, Android.Graphics.ColorFilter! colorFilter) -> void
virtual Android.Graphics.RuntimeShader.SetInputXfermode(string! xfermodeName, Android.Graphics.RuntimeXfermode! xfermode) -> void
virtual Android.Graphics.RuntimeXfermode.SetColorUniform(string! uniformName, Android.Graphics.Color color) -> void
virtual Android.Graphics.RuntimeXfermode.SetColorUniform(string! uniformName, Android.Graphics.ColorObject! color) -> void
virtual Android.Graphics.RuntimeXfermode.SetColorUniform(string! uniformName, long color) -> void
virtual Android.Graphics.RuntimeXfermode.SetFloatUniform(string! uniformName, float value) -> void
virtual Android.Graphics.RuntimeXfermode.SetFloatUniform(string! uniformName, float value1, float value2) -> void
virtual Android.Graphics.RuntimeXfermode.SetFloatUniform(string! uniformName, float value1, float value2, float value3) -> void
virtual Android.Graphics.RuntimeXfermode.SetFloatUniform(string! uniformName, float value1, float value2, float value3, float value4) -> void
virtual Android.Graphics.RuntimeXfermode.SetFloatUniform(string! uniformName, float[]! values) -> void
virtual Android.Graphics.RuntimeXfermode.SetInputColorFilter(string! filterName, Android.Graphics.ColorFilter! colorFilter) -> void
virtual Android.Graphics.RuntimeXfermode.SetInputShader(string! shaderName, Android.Graphics.Shader! shader) -> void
virtual Android.Graphics.RuntimeXfermode.SetInputXfermode(string! xfermodeName, Android.Graphics.RuntimeXfermode! xfermode) -> void
virtual Android.Graphics.RuntimeXfermode.SetIntUniform(string! uniformName, int value) -> void
virtual Android.Graphics.RuntimeXfermode.SetIntUniform(string! uniformName, int value1, int value2) -> void
virtual Android.Graphics.RuntimeXfermode.SetIntUniform(string! uniformName, int value1, int value2, int value3) -> void
virtual Android.Graphics.RuntimeXfermode.SetIntUniform(string! uniformName, int value1, int value2, int value3, int value4) -> void
virtual Android.Graphics.RuntimeXfermode.SetIntUniform(string! uniformName, int[]! values) -> void
virtual Android.Hardware.DisplayLuts.Entry.Dimension.get -> int
virtual Android.Hardware.DisplayLuts.Entry.GetBuffer() -> float[]!
virtual Android.Hardware.DisplayLuts.Entry.SamplingKey.get -> int
virtual Android.Hardware.Usb.UsbManager.OpenAccessoryInputStream(Android.Hardware.Usb.UsbAccessory! accessory) -> System.IO.Stream!
virtual Android.Hardware.Usb.UsbManager.OpenAccessoryOutputStream(Android.Hardware.Usb.UsbAccessory! accessory) -> System.IO.Stream!
virtual Android.Health.Connect.HealthConnectManager.CreateMedicalDataSource(Android.Health.Connect.CreateMedicalDataSourceRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Health.Connect.HealthConnectManager.DeleteMedicalDataSourceWithData(string! id, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Health.Connect.HealthConnectManager.DeleteMedicalResources(Android.Health.Connect.DeleteMedicalResourcesRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Health.Connect.HealthConnectManager.DeleteMedicalResources(System.Collections.Generic.IList<Android.Health.Connect.MedicalResourceId!>! ids, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Health.Connect.HealthConnectManager.GetMedicalDataSources(Android.Health.Connect.GetMedicalDataSourcesRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Health.Connect.HealthConnectManager.GetMedicalDataSources(System.Collections.Generic.IList<string!>! ids, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Health.Connect.HealthConnectManager.ReadMedicalResources(Android.Health.Connect.ReadMedicalResourcesRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Health.Connect.HealthConnectManager.ReadMedicalResources(System.Collections.Generic.IList<Android.Health.Connect.MedicalResourceId!>! ids, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Health.Connect.HealthConnectManager.UpsertMedicalResources(System.Collections.Generic.IList<Android.Health.Connect.UpsertMedicalResourceRequest!>! requests, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Health.Connect.ReadMedicalResourcesRequest.PageSize.get -> int
virtual Android.Icu.Number.LocalizedNumberFormatter.WithoutLocale() -> Android.Icu.Number.UnlocalizedNumberFormatter?
virtual Android.Icu.Number.LocalizedNumberRangeFormatter.WithoutLocale() -> Android.Icu.Number.UnlocalizedNumberRangeFormatter?
virtual Android.Icu.Util.Calendar.InTemporalLeapYear() -> bool
virtual Android.Icu.Util.Calendar.TemporalMonthCode.get -> string?
virtual Android.Icu.Util.Calendar.TemporalMonthCode.set -> void
virtual Android.InputMethodServices.AbstractInputMethodService.AbstractInputMethodSessionImpl.OnShouldVerifyKeyEvent(Android.Views.KeyEvent! e) -> bool
virtual Android.InputMethodServices.AbstractInputMethodService.OnShouldVerifyKeyEvent(Android.Views.KeyEvent! e) -> bool
virtual Android.InputMethodServices.InputMethodService.OnCustomImeSwitcherButtonRequestedVisible(bool visible) -> void
virtual Android.Media.AudioRecord.RoutedDevices.get -> System.Collections.Generic.IList<Android.Media.AudioDeviceInfo!>!
virtual Android.Media.AudioTrack.RoutedDevices.get -> System.Collections.Generic.IList<Android.Media.AudioDeviceInfo!>!
virtual Android.Media.MediaCodec.Callback.OnMetricsFlushed(Android.Media.MediaCodec! codec, Android.OS.PersistableBundle! metrics) -> void
virtual Android.Media.MediaPlayer.RoutedDevices.get -> System.Collections.Generic.IList<Android.Media.AudioDeviceInfo!>!
virtual Android.Media.MediaRecorder.RoutedDevices.get -> System.Collections.Generic.IList<Android.Media.AudioDeviceInfo!>!
virtual Android.Media.Quality.MediaQualityManager.PictureProfileCallback.OnError(string? profileId, int errorCode) -> void
virtual Android.Media.Quality.MediaQualityManager.PictureProfileCallback.OnParameterCapabilitiesChanged(string? profileId, System.Collections.Generic.IList<Android.Media.Quality.ParameterCapability!>! updatedCaps) -> void
virtual Android.Media.Quality.MediaQualityManager.PictureProfileCallback.OnPictureProfileAdded(string! profileId, Android.Media.Quality.PictureProfile! profile) -> void
virtual Android.Media.Quality.MediaQualityManager.PictureProfileCallback.OnPictureProfileRemoved(string! profileId, Android.Media.Quality.PictureProfile! profile) -> void
virtual Android.Media.Quality.MediaQualityManager.PictureProfileCallback.OnPictureProfileUpdated(string! profileId, Android.Media.Quality.PictureProfile! profile) -> void
virtual Android.Media.Quality.MediaQualityManager.SoundProfileCallback.OnError(string? profileId, int errorCode) -> void
virtual Android.Media.Quality.MediaQualityManager.SoundProfileCallback.OnParameterCapabilitiesChanged(string? profileId, System.Collections.Generic.IList<Android.Media.Quality.ParameterCapability!>! updatedCaps) -> void
virtual Android.Media.Quality.MediaQualityManager.SoundProfileCallback.OnSoundProfileAdded(string! profileId, Android.Media.Quality.SoundProfile! profile) -> void
virtual Android.Media.Quality.MediaQualityManager.SoundProfileCallback.OnSoundProfileRemoved(string! profileId, Android.Media.Quality.SoundProfile! profile) -> void
virtual Android.Media.Quality.MediaQualityManager.SoundProfileCallback.OnSoundProfileUpdated(string! profileId, Android.Media.Quality.SoundProfile! profile) -> void
virtual Android.Media.Spatializer.SpatializedChannelMasks.get -> System.Collections.Generic.IList<Java.Lang.Integer!>!
virtual Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback.OnAdServiceAdded(string! serviceId) -> void
virtual Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback.OnAdServiceRemoved(string! serviceId) -> void
virtual Android.Media.TV.Ads.TvAdManager.TvAdServiceCallback.OnAdServiceUpdated(string! serviceId) -> void
virtual Android.Media.TV.Ads.TvAdService.OnAppLinkCommand(Android.OS.Bundle! command) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.LayoutSurface(int left, int top, int right, int bottom) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.MediaViewEnabled.get -> bool
virtual Android.Media.TV.Ads.TvAdService.Session.MediaViewEnabled.set -> void
virtual Android.Media.TV.Ads.TvAdService.Session.NotifySessionStateChanged(int state, int err) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnCreateMediaView() -> Android.Views.View?
virtual Android.Media.TV.Ads.TvAdService.Session.OnCurrentChannelUri(Android.Net.Uri? channelUri) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnCurrentTvInputId(string? inputId) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnCurrentVideoBounds(Android.Graphics.Rect! bounds) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnError(string! errMsg, Android.OS.Bundle! params) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnGenericMotionEvent(Android.Views.MotionEvent! e) -> bool
virtual Android.Media.TV.Ads.TvAdService.Session.OnKeyDown(Android.Views.Keycode keyCode, Android.Views.KeyEvent? e) -> bool
virtual Android.Media.TV.Ads.TvAdService.Session.OnKeyLongPress(Android.Views.Keycode keyCode, Android.Views.KeyEvent? e) -> bool
virtual Android.Media.TV.Ads.TvAdService.Session.OnKeyMultiple(Android.Views.Keycode keyCode, int count, Android.Views.KeyEvent? e) -> bool
virtual Android.Media.TV.Ads.TvAdService.Session.OnKeyUp(Android.Views.Keycode keyCode, Android.Views.KeyEvent? e) -> bool
virtual Android.Media.TV.Ads.TvAdService.Session.OnMediaViewSizeChanged(int width, int height) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnResetAdService() -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnSigningResult(string! signingId, byte[]! result) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnStartAdService() -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnStopAdService() -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnSurfaceChanged(int format, int width, int height) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnTouchEvent(Android.Views.MotionEvent! e) -> bool
virtual Android.Media.TV.Ads.TvAdService.Session.OnTrackballEvent(Android.Views.MotionEvent! e) -> bool
virtual Android.Media.TV.Ads.TvAdService.Session.OnTrackInfoList(System.Collections.Generic.IList<Android.Media.TV.TvTrackInfo!>! tracks) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnTvInputSessionData(string! type, Android.OS.Bundle! data) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.OnTvMessage(int type, Android.OS.Bundle! data) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.RequestCurrentChannelUri() -> void
virtual Android.Media.TV.Ads.TvAdService.Session.RequestCurrentTvInputId() -> void
virtual Android.Media.TV.Ads.TvAdService.Session.RequestCurrentVideoBounds() -> void
virtual Android.Media.TV.Ads.TvAdService.Session.RequestSigning(string! signingId, string! algorithm, string! alias, byte[]! data) -> void
virtual Android.Media.TV.Ads.TvAdService.Session.RequestTrackInfoList() -> void
virtual Android.Media.TV.Ads.TvAdService.Session.SendTvAdSessionData(string! type, Android.OS.Bundle! data) -> void
virtual Android.Media.TV.Ads.TvAdView.ClearCallback() -> void
virtual Android.Media.TV.Ads.TvAdView.ClearOnUnhandledInputEventListener() -> void
virtual Android.Media.TV.Ads.TvAdView.DispatchUnhandledInputEvent(Android.Views.InputEvent! e) -> bool
virtual Android.Media.TV.Ads.TvAdView.NotifyError(string! errMsg, Android.OS.Bundle! params) -> void
virtual Android.Media.TV.Ads.TvAdView.NotifyTvMessage(Android.Media.TV.TVMessageType type, Android.OS.Bundle! data) -> void
virtual Android.Media.TV.Ads.TvAdView.OnAttachedToWindow() -> void
virtual Android.Media.TV.Ads.TvAdView.OnDetachedFromWindow() -> void
virtual Android.Media.TV.Ads.TvAdView.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
virtual Android.Media.TV.Ads.TvAdView.OnUnhandledInputEvent(Android.Views.InputEvent! e) -> bool
virtual Android.Media.TV.Ads.TvAdView.OnUnhandledInputEventListener.get -> Android.Media.TV.Ads.TvAdView.IOnUnhandledInputEventListener?
virtual Android.Media.TV.Ads.TvAdView.OnUnhandledInputEventListener.set -> void
virtual Android.Media.TV.Ads.TvAdView.OnVisibilityChanged(Android.Views.View! changedView, Android.Views.ViewStates visibility) -> void
virtual Android.Media.TV.Ads.TvAdView.PrepareAdService(string! serviceId, string! type) -> void
virtual Android.Media.TV.Ads.TvAdView.Reset() -> void
virtual Android.Media.TV.Ads.TvAdView.ResetAdService() -> void
virtual Android.Media.TV.Ads.TvAdView.SendCurrentChannelUri(Android.Net.Uri? channelUri) -> void
virtual Android.Media.TV.Ads.TvAdView.SendCurrentTvInputId(string? inputId) -> void
virtual Android.Media.TV.Ads.TvAdView.SendCurrentVideoBounds(Android.Graphics.Rect! bounds) -> void
virtual Android.Media.TV.Ads.TvAdView.SendSigningResult(string! signingId, byte[]! result) -> void
virtual Android.Media.TV.Ads.TvAdView.SendTrackInfoList(System.Collections.Generic.IList<Android.Media.TV.TvTrackInfo!>? tracks) -> void
virtual Android.Media.TV.Ads.TvAdView.SetCallback(Java.Util.Concurrent.IExecutor! executor, Android.Media.TV.Ads.TvAdView.TvAdCallback! callback) -> void
virtual Android.Media.TV.Ads.TvAdView.SetTvView(Android.Media.TV.TvView? tvView) -> bool
virtual Android.Media.TV.Ads.TvAdView.SetZOrderMediaOverlay(bool isMediaOverlay) -> void
virtual Android.Media.TV.Ads.TvAdView.SetZOrderOnTop(bool onTop) -> void
virtual Android.Media.TV.Ads.TvAdView.StartAdService() -> void
virtual Android.Media.TV.Ads.TvAdView.StopAdService() -> void
virtual Android.Media.TV.Ads.TvAdView.TvAdCallback.OnRequestCurrentChannelUri(string! serviceId) -> void
virtual Android.Media.TV.Ads.TvAdView.TvAdCallback.OnRequestCurrentTvInputId(string! serviceId) -> void
virtual Android.Media.TV.Ads.TvAdView.TvAdCallback.OnRequestCurrentVideoBounds(string! serviceId) -> void
virtual Android.Media.TV.Ads.TvAdView.TvAdCallback.OnRequestSigning(string! serviceId, string! signingId, string! algorithm, string! alias, byte[]! data) -> void
virtual Android.Media.TV.Ads.TvAdView.TvAdCallback.OnRequestTrackInfoList(string! serviceId) -> void
virtual Android.Media.TV.Ads.TvAdView.TvAdCallback.OnStateChanged(string! serviceId, int state, int err) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppService.Session.OnCertificate(string! host, int port, Android.Net.Http.SslCertificate! cert) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppService.Session.OnSelectedTrackInfo(System.Collections.Generic.IList<Android.Media.TV.TvTrackInfo!>! tracks) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppService.Session.OnVideoFreezeUpdated(bool isFrozen) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppService.Session.RequestCertificate(string! host, int port) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppService.Session.RequestSelectedTrackInfo() -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppService.Session.RequestSigning(string! signingId, string! algorithm, string! host, int port, byte[]! data) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppView.NotifyVideoFreezeUpdated(bool isFrozen) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppView.SendCertificate(string! host, int port, Android.Net.Http.SslCertificate! cert) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppView.SendSelectedTrackInfo(System.Collections.Generic.IList<Android.Media.TV.TvTrackInfo!>? tracks) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppView.SetZOrderMediaOverlay(bool isMediaOverlay) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppView.SetZOrderOnTop(bool onTop) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppView.TvInteractiveAppCallback.OnRequestCertificate(string! iAppServiceId, string! host, int port) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppView.TvInteractiveAppCallback.OnRequestSelectedTrackInfo(string! iAppServiceId) -> void
virtual Android.Media.TV.Interactive.TvInteractiveAppView.TvInteractiveAppCallback.OnRequestSigning(string! iAppServiceId, string! signingId, string! algorithm, string! host, int port, byte[]! data) -> void
virtual Android.Media.TV.TvInputService.Session.NotifyVideoFreezeUpdated(bool isFrozen) -> void
virtual Android.Media.TV.TvInputService.Session.OnResumePlayback() -> void
virtual Android.Media.TV.TvInputService.Session.OnStopPlayback(int mode) -> void
virtual Android.Media.TV.TvInputService.Session.OnTvAdSessionData(string! type, Android.OS.Bundle! data) -> void
virtual Android.Media.TV.TvInputService.Session.SendTvInputSessionData(string! type, Android.OS.Bundle! data) -> void
virtual Android.Media.TV.TvView.ResumePlayback() -> void
virtual Android.Media.TV.TvView.SetVideoFrozen(bool isFrozen) -> void
virtual Android.Media.TV.TvView.StopPlayback(Android.Media.TV.Interactive.CommandParameterValueStopMode mode) -> void
virtual Android.Media.TV.TvView.TvInputCallback.OnVideoFreezeUpdated(string! inputId, bool isFrozen) -> void
virtual Android.Net.ConnectivityManager.NetworkCallback.OnReserved(Android.Net.NetworkCapabilities! networkCapabilities) -> void
virtual Android.Net.ConnectivityManager.ReserveNetwork(Android.Net.NetworkRequest! request, Android.OS.Handler! handler, Android.Net.ConnectivityManager.NetworkCallback! networkCallback) -> void
virtual Android.Net.Http.X509TrustManagerExtensions.CheckServerTrusted(Java.Security.Cert.X509Certificate![]! chain, byte[]? ocspData, byte[]? tlsSctData, string! authType, string! host) -> System.Collections.Generic.IList<Java.Security.Cert.X509Certificate!>!
virtual Android.Net.TetheringManager.RegisterTetheringEventCallback(Java.Util.Concurrent.IExecutor! executor, Android.Net.TetheringManager.ITetheringEventCallback! callback) -> void
virtual Android.Net.TetheringManager.StartTethering(Android.Net.TetheringManager.TetheringRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.Net.TetheringManager.IStartTetheringCallback! callback) -> void
virtual Android.Net.TetheringManager.StopTethering(Android.Net.TetheringManager.TetheringRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.Net.TetheringManager.IStopTetheringCallback! callback) -> void
virtual Android.Net.TetheringManager.TetheringRequest.Builder.Build() -> Android.Net.TetheringManager.TetheringRequest!
virtual Android.Net.TetheringManager.TetheringRequest.Builder.SetSoftApConfiguration(Android.Net.Wifi.SoftApConfiguration? softApConfig) -> Android.Net.TetheringManager.TetheringRequest.Builder!
virtual Android.Net.TetheringManager.UnregisterTetheringEventCallback(Android.Net.TetheringManager.ITetheringEventCallback! callback) -> void
virtual Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo.WifiP2pUsdBasedServiceConfig.get -> Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig?
virtual Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest.WifiP2pUsdBasedServiceConfig.get -> Android.Net.Wifi.P2p.Nsd.WifiP2pUsdBasedServiceConfig?
virtual Android.Net.Wifi.P2p.WifiP2pConfig.GroupOwnerVersion.get -> Android.Net.Wifi.P2p.Version
virtual Android.Net.Wifi.P2p.WifiP2pConfig.GroupOwnerVersion.set -> void
virtual Android.Net.Wifi.P2p.WifiP2pConfig.IsAuthorizeConnectionFromPeerEnabled.get -> bool
virtual Android.Net.Wifi.P2p.WifiP2pConfig.PairingBootstrappingConfig.get -> Android.Net.Wifi.P2p.WifiP2pPairingBootstrappingConfig?
virtual Android.Net.Wifi.P2p.WifiP2pConfig.PccModeConnectionType.get -> Android.Net.Wifi.P2p.PccModeConnectionType
virtual Android.Net.Wifi.P2p.WifiP2pDevice.IsOpportunisticBootstrappingMethodSupported.get -> bool
virtual Android.Net.Wifi.P2p.WifiP2pDevice.IsPassphraseDisplayBootstrappingMethodSupported.get -> bool
virtual Android.Net.Wifi.P2p.WifiP2pDevice.IsPassphraseKeypadBootstrappingMethodSupported.get -> bool
virtual Android.Net.Wifi.P2p.WifiP2pDevice.IsPinCodeDisplayBootstrappingMethodSupported.get -> bool
virtual Android.Net.Wifi.P2p.WifiP2pDevice.IsPinCodeKeypadBootstrappingMethodSupported.get -> bool
virtual Android.Net.Wifi.P2p.WifiP2pGroup.GroupOwnerBssid.get -> Android.Net.MacAddress?
virtual Android.Net.Wifi.P2p.WifiP2pGroup.SecurityType.get -> Android.Net.Wifi.P2p.GroupSecurityType
virtual Android.Net.Wifi.P2p.WifiP2pManager.DiscoverUsdBasedServices(Android.Net.Wifi.P2p.WifiP2pManager.Channel! channel, Android.Net.Wifi.P2p.WifiP2pUsdBasedServiceDiscoveryConfig! config, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener? listener) -> void
virtual Android.Net.Wifi.P2p.WifiP2pManager.IsPccModeSupported.get -> bool
virtual Android.Net.Wifi.P2p.WifiP2pManager.IsWiFiDirectR2Supported.get -> bool
virtual Android.Net.Wifi.P2p.WifiP2pManager.RequestDirInfo(Android.Net.Wifi.P2p.WifiP2pManager.Channel! c, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Net.Wifi.P2p.WifiP2pManager.StartUsdBasedLocalServiceAdvertisement(Android.Net.Wifi.P2p.WifiP2pManager.Channel! channel, Android.Net.Wifi.P2p.Nsd.WifiP2pServiceInfo! servInfo, Android.Net.Wifi.P2p.WifiP2pUsdBasedLocalServiceAdvertisementConfig! config, Android.Net.Wifi.P2p.WifiP2pManager.IActionListener? listener) -> void
virtual Android.Net.Wifi.P2p.WifiP2pManager.ValidateDirInfo(Android.Net.Wifi.P2p.WifiP2pManager.Channel! c, Android.Net.Wifi.P2p.WifiP2pDirInfo! dirInfo, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! callback) -> void
virtual Android.Net.Wifi.ScanResult.IsRangingFrameProtectionRequired.get -> bool
virtual Android.Net.Wifi.ScanResult.IsSecureHeLtfSupported.get -> bool
virtual Android.Net.Wifi.WifiManager.AddWifiStateChangedListener(Java.Util.Concurrent.IExecutor! executor, Android.Net.Wifi.WifiManager.IWifiStateChangedListener! listener) -> void
virtual Android.Net.Wifi.WifiManager.DisallowCurrentSuggestedNetwork(Android.Net.Wifi.BlockingOption! blockingOption) -> void
virtual Android.Net.Wifi.WifiManager.RemoveWifiStateChangedListener(Android.Net.Wifi.WifiManager.IWifiStateChangedListener! listener) -> void
virtual Android.Net.Wifi.WifiManager.StartLocalOnlyHotspotWithConfiguration(Android.Net.Wifi.SoftApConfiguration! config, Java.Util.Concurrent.IExecutor! executor, Android.Net.Wifi.WifiManager.LocalOnlyHotspotCallback! callback) -> void
virtual Android.OS.Flagging.AconfigPackage.GetBooleanFlagValue(string! flagName, bool defaultValue) -> bool
virtual Android.OS.Flagging.AconfigStorageReadException.ErrorCode.get -> Android.OS.Flagging.AconfigStorageReadErrorType
virtual Android.OS.Health.SystemHealthManager.CpuHeadroomCalculationWindowRange.get -> Android.Util.Pair!
virtual Android.OS.Health.SystemHealthManager.CpuHeadroomMinIntervalMillis.get -> long
virtual Android.OS.Health.SystemHealthManager.GetCpuHeadroom(Android.OS.CpuHeadroomParams? params) -> float
virtual Android.OS.Health.SystemHealthManager.GetGpuHeadroom(Android.OS.GpuHeadroomParams? params) -> float
virtual Android.OS.Health.SystemHealthManager.GpuHeadroomCalculationWindowRange.get -> Android.Util.Pair!
virtual Android.OS.Health.SystemHealthManager.GpuHeadroomMinIntervalMillis.get -> long
virtual Android.OS.Health.SystemHealthManager.MaxCpuHeadroomTidsSize.get -> int
virtual Android.OS.PowerManager.AddThermalHeadroomListener(Android.OS.PowerManager.IOnThermalHeadroomChangedListener! listener) -> void
virtual Android.OS.PowerManager.AddThermalHeadroomListener(Java.Util.Concurrent.IExecutor! executor, Android.OS.PowerManager.IOnThermalHeadroomChangedListener! listener) -> void
virtual Android.OS.PowerManager.RemoveThermalHeadroomListener(Android.OS.PowerManager.IOnThermalHeadroomChangedListener! listener) -> void
virtual Android.OS.RemoteCallbackList.Broadcast(Java.Util.Functions.IConsumer! callback) -> void
virtual Android.OS.RemoteCallbackList.Executor.get -> Java.Util.Concurrent.IExecutor?
virtual Android.OS.RemoteCallbackList.FrozenCalleePolicy.get -> Android.OS.FrozenCalleePolicy
virtual Android.OS.RemoteCallbackList.MaxQueueSize.get -> int
virtual Android.OS.TestLooperManager.IsBlockedOnSyncBarrier.get -> bool
virtual Android.OS.TestLooperManager.PeekWhen() -> Java.Lang.Long?
virtual Android.OS.TestLooperManager.Poll() -> Android.OS.Message?
virtual Android.OS.Vibrator.AreEnvelopeEffectsSupported() -> bool
virtual Android.OS.Vibrator.EnvelopeEffectInfo.get -> Android.OS.Vibrators.VibratorEnvelopeEffectInfo!
virtual Android.OS.Vibrator.FrequencyProfile.get -> Android.OS.Vibrators.VibratorFrequencyProfile?
virtual Android.Provider.CloudMediaProvider.OnGetCapabilities() -> Android.Provider.CloudMediaProviderContract.Capabilities!
virtual Android.Provider.CloudMediaProvider.OnQueryMediaCategories(string? parentCategoryId, Android.OS.Bundle! extras, Android.OS.CancellationSignal? cancellationSignal) -> Android.Database.ICursor!
virtual Android.Provider.CloudMediaProvider.OnQueryMediaInMediaSet(string! mediaSetId, Android.OS.Bundle! extras, Android.OS.CancellationSignal? cancellationSignal) -> Android.Database.ICursor!
virtual Android.Provider.CloudMediaProvider.OnQueryMediaSets(string! mediaCategoryId, Android.OS.Bundle! extras, Android.OS.CancellationSignal? cancellationSignal) -> Android.Database.ICursor!
virtual Android.Provider.CloudMediaProvider.OnQuerySearchSuggestions(string! prefixText, Android.OS.Bundle! extras, Android.OS.CancellationSignal? cancellationSignal) -> Android.Database.ICursor!
virtual Android.Provider.CloudMediaProvider.OnSearchMedia(string! searchText, Android.OS.Bundle! extras, Android.OS.CancellationSignal? cancellationSignal) -> Android.Database.ICursor!
virtual Android.Provider.CloudMediaProvider.OnSearchMedia(string! suggestedMediaSetId, string? fallbackSearchText, Android.OS.Bundle! extras, Android.OS.CancellationSignal? cancellationSignal) -> Android.Database.ICursor!
virtual Android.Ranging.RangingConfig.RangingSessionType.get -> Android.Ranging.RangingConfigSessionType
virtual Android.Security.NetworkSecurityPolicy.IsCertificateTransparencyVerificationRequired(string! hostname) -> bool
virtual Android.Service.Autofill.AutofillService.OnSessionDestroyed(Android.Service.Autofill.FillEventHistory? history) -> void
virtual Android.Service.QuickAccessWallet.QuickAccessWalletService.GestureTargetActivityPendingIntent.get -> Android.App.PendingIntent?
virtual Android.Service.Settings.Preferences.SettingsPreferenceServiceClient.Close() -> void
virtual Android.Service.Settings.Preferences.SettingsPreferenceServiceClient.GetAllPreferenceMetadata(Android.Service.Settings.Preferences.MetadataRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.Service.Settings.Preferences.SettingsPreferenceServiceClient.GetPreferenceValue(Android.Service.Settings.Preferences.GetValueRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.Service.Settings.Preferences.SettingsPreferenceServiceClient.SetPreferenceValue(Android.Service.Settings.Preferences.SetValueRequest! request, Java.Util.Concurrent.IExecutor! executor, Android.OS.IOutcomeReceiver! receiver) -> void
virtual Android.Service.Wallpaper.WallpaperService.Engine.OnApplyWallpaper(int which) -> Android.App.Wallpaper.WallpaperDescription?
virtual Android.Service.Wallpaper.WallpaperService.OnCreateEngine(Android.App.Wallpaper.WallpaperDescription! description) -> Android.Service.Wallpaper.WallpaperService.Engine?
virtual Android.Telephony.SmsMessage.RecipientAddress.get -> string?
virtual Android.Telephony.SubscriptionPlan.Builder.SetSubscriptionStatus(int subscriptionStatus) -> Android.Telephony.SubscriptionPlan.Builder!
virtual Android.Text.Style.TtsSpan.DurationBuilder.SetHours(int hours) -> Android.Text.Style.TtsSpan.DurationBuilder!
virtual Android.Text.Style.TtsSpan.DurationBuilder.SetMinutes(int minutes) -> Android.Text.Style.TtsSpan.DurationBuilder!
virtual Android.Text.Style.TtsSpan.DurationBuilder.SetSeconds(int seconds) -> Android.Text.Style.TtsSpan.DurationBuilder!
virtual Android.Text.Style.TtsSpan.TimeBuilder.SetSeconds(int seconds) -> Android.Text.Style.TtsSpan.TimeBuilder!
virtual Android.Views.Accessibility.AccessibilityNodeInfo.AddLabeledBy(Android.Views.View! label) -> void
virtual Android.Views.Accessibility.AccessibilityNodeInfo.AddLabeledBy(Android.Views.View! root, int virtualDescendantId) -> void
virtual Android.Views.Accessibility.AccessibilityNodeInfo.CheckedState.get -> Android.Views.Accessibility.CheckedState
virtual Android.Views.Accessibility.AccessibilityNodeInfo.CheckedState.set -> void
virtual Android.Views.Accessibility.AccessibilityNodeInfo.ExpandedState.get -> Android.Views.Accessibility.ExpandedState
virtual Android.Views.Accessibility.AccessibilityNodeInfo.ExpandedState.set -> void
virtual Android.Views.Accessibility.AccessibilityNodeInfo.FieldRequired.get -> bool
virtual Android.Views.Accessibility.AccessibilityNodeInfo.FieldRequired.set -> void
virtual Android.Views.Accessibility.AccessibilityNodeInfo.LabeledByList.get -> System.Collections.Generic.IList<Android.Views.Accessibility.AccessibilityNodeInfo!>!
virtual Android.Views.Accessibility.AccessibilityNodeInfo.RemoveLabeledBy(Android.Views.View! label) -> bool
virtual Android.Views.Accessibility.AccessibilityNodeInfo.RemoveLabeledBy(Android.Views.View! root, int virtualDescendantId) -> bool
virtual Android.Views.Accessibility.AccessibilityNodeInfo.SupplementalDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual Android.Views.Accessibility.AccessibilityNodeInfo.SupplementalDescriptionFormatted.set -> void
virtual Android.Views.ContentCaptures.ContentCaptureSession.Flush() -> void
virtual Android.Views.Display.GetSuggestedFrameRate(Android.Views.DisplayFrameRateCategory category) -> float
virtual Android.Views.Display.HasArrSupport.get -> bool
virtual Android.Views.Display.HighestHdrSdrRatio.get -> float
virtual Android.Views.InputMethods.EditorInfo.AutofillId.get -> Android.Views.Autofill.AutofillId?
virtual Android.Views.InputMethods.EditorInfo.AutofillId.set -> void
virtual Android.Views.InputMethods.EditorInfo.WritingToolsEnabled.get -> bool
virtual Android.Views.InputMethods.EditorInfo.WritingToolsEnabled.set -> void
virtual Android.Views.InputMethods.InputMethodSubtype.InputMethodSubtypeBuilder.SetLayoutLabelNonLocalized(Java.Lang.ICharSequence! layoutLabelNonLocalized) -> Android.Views.InputMethods.InputMethodSubtype.InputMethodSubtypeBuilder!
virtual Android.Views.InputMethods.InputMethodSubtype.InputMethodSubtypeBuilder.SetLayoutLabelResource(int layoutLabelResId) -> Android.Views.InputMethods.InputMethodSubtype.InputMethodSubtypeBuilder!
virtual Android.Views.SurfaceControl.JankData.ActualAppFrameTimeNanos.get -> long
virtual Android.Views.SurfaceControl.JankData.JankType.get -> int
virtual Android.Views.SurfaceControl.JankData.ScheduledAppFrameTimeNanos.get -> long
virtual Android.Views.SurfaceControl.JankData.VsyncId.get -> long
virtual Android.Views.SurfaceControl.OnJankDataListenerRegistration.Flush() -> void
virtual Android.Views.SurfaceControl.OnJankDataListenerRegistration.RemoveAfter(long afterVsync) -> void
virtual Android.Views.SurfaceControl.Transaction.SetContentPriority(Android.Views.SurfaceControl! sc, int priority) -> Android.Views.SurfaceControl.Transaction!
virtual Android.Views.SurfaceControl.Transaction.SetLuts(Android.Views.SurfaceControl! sc, Android.Hardware.DisplayLuts? displayLuts) -> Android.Views.SurfaceControl.Transaction!
virtual Android.Views.SurfaceView.ChildSurfacePackage.get -> Android.Views.SurfaceControlViewHost.SurfacePackage?
virtual Android.Views.SurfaceView.ClearChildSurfacePackage() -> void
virtual Android.Views.SurfaceView.CompositionOrder.get -> int
virtual Android.Views.SurfaceView.CompositionOrder.set -> void
virtual Android.Views.View.ReportAppJankStats(Android.App.Jank.AppJankStats! appJankStats) -> void
virtual Android.Views.View.SupplementalDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual Android.Views.View.SupplementalDescriptionFormatted.set -> void
virtual Android.Views.ViewGroup.PropagateRequestedFrameRate(float frameRate, bool forceOverride) -> void
virtual Java.Util.Concurrent.CompletableFuture.ExceptionNow() -> Java.Lang.Throwable?
virtual Java.Util.Concurrent.CompletableFuture.ResultNow() -> Java.Lang.Object?
virtual Java.Util.Concurrent.CompletableFuture.State() -> Java.Util.Concurrent.IFuture.State?
virtual Java.Util.Concurrent.ForkJoinPool.Close() -> void
virtual Java.Util.Concurrent.ForkJoinPool.ExternalSubmit(Java.Util.Concurrent.ForkJoinTask? task) -> Java.Util.Concurrent.ForkJoinTask?
virtual Java.Util.Concurrent.ForkJoinPool.LazySubmit(Java.Util.Concurrent.ForkJoinTask? task) -> Java.Util.Concurrent.ForkJoinTask?
virtual Java.Util.Concurrent.ForkJoinPool.SetParallelism(int size) -> int
virtual Java.Util.Concurrent.ForkJoinTask.ExceptionNow() -> Java.Lang.Throwable?
virtual Java.Util.Concurrent.ForkJoinTask.ResultNow() -> Java.Lang.Object?
virtual Java.Util.Concurrent.ForkJoinTask.State() -> Java.Util.Concurrent.IFuture.State?
virtual Java.Util.Concurrent.ForkJoinWorkerThread.QueuedTaskCount.get -> int
virtual Java.Util.Concurrent.FutureTask.ExceptionNow() -> Java.Lang.Throwable?
virtual Java.Util.Concurrent.FutureTask.ResultNow() -> Java.Lang.Object?
virtual Java.Util.Concurrent.FutureTask.State() -> Java.Util.Concurrent.IFuture.State?
virtual Java.Util.IdentityHashMap.Remove(Java.Lang.Object? key, Java.Lang.Object? value) -> bool
virtual Java.Util.IdentityHashMap.Replace(Java.Lang.Object? key, Java.Lang.Object? oldValue, Java.Lang.Object? newValue) -> bool
