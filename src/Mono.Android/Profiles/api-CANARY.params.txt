
package android.crypto.hpke
;---------------------------------------
  class Hpke
    getInstance(java.lang.String suiteName, java.lang.String providerName)
    getInstance(java.lang.String suiteName, java.security.Provider provider)
    getInstance(java.lang.String suiteName)
    getSuiteName(android.crypto.hpke.KemParameterSpec kem, android.crypto.hpke.KdfParameterSpec kdf, android.crypto.hpke.AeadParameterSpec aead)
    open(java.security.PrivateKey recipientKey, byte[] info, android.crypto.hpke.Message message, byte[] aad)
    seal(java.security.PublicKey recipientKey, byte[] info, byte[] plaintext, byte[] aad)
  interface HpkeSpi
    engineExport(int length, byte[] context)
    engineInitRecipient(byte[] encapsulated, java.security.PrivateKey recipientKey, byte[] info, java.security.PublicKey senderKey, byte[] psk, byte[] psk_id)
    engineInitSender(java.security.PublicKey recipientKey, byte[] info, java.security.PrivateKey senderKey, byte[] psk, byte[] psk_id)
    engineInitSenderWithSeed(java.security.PublicKey recipientKey, byte[] info, java.security.PrivateKey senderKey, byte[] psk, byte[] psk_id, byte[] sKe)
    engineOpen(byte[] ciphertext, byte[] aad)
    engineSeal(byte[] plaintext, byte[] aad)
  class Message
    #ctor(byte[] encapsulated, byte[] ciphertext)
  class Recipient
    export(int length, byte[] context)
    open(byte[] ciphertext, byte[] aad)
  class Recipient.Builder
    #ctor(android.crypto.hpke.Hpke hpke, byte[] encapsulated, java.security.PrivateKey recipientKey)
    setApplicationInfo(byte[] applicationInfo)
    setPsk(byte[] psk, byte[] pskId)
    setSenderKey(java.security.PublicKey senderKey)
  class Sender
    export(int length, byte[] context)
    seal(byte[] plaintext, byte[] aad)
  class Sender.Builder
    #ctor(android.crypto.hpke.Hpke hpke, java.security.PublicKey recipientKey)
    setApplicationInfo(byte[] applicationInfo)
    setPsk(byte[] psk, byte[] pskId)
    setSenderKey(java.security.PrivateKey senderKey)
  class XdhKeySpec
    equals(java.lang.Object o)
    #ctor(byte[] encoded)

package android.net.eap
;---------------------------------------
  class EapAkaInfo.Builder
    setReauthId(byte[] reauthId)
  class EapSessionConfig
    equals(java.lang.Object o)
  class EapSessionConfig.Builder
    setEapAkaConfig(int subId, int apptype, android.net.eap.EapSessionConfig.EapAkaOption options)
    setEapAkaConfig(int subId, int apptype)
    setEapAkaPrimeConfig(int subId, int apptype, java.lang.String networkName, boolean allowMismatchedNetworkNames)
    setEapIdentity(byte[] eapIdentity)
    setEapMsChapV2Config(java.lang.String username, java.lang.String password)
    setEapSimConfig(int subId, int apptype)
    setEapTtlsConfig(java.security.cert.X509Certificate serverCaCert, android.net.eap.EapSessionConfig innerEapSessionConfig)
  class EapSessionConfig.EapAkaConfig
    equals(java.lang.Object o)
  class EapSessionConfig.EapAkaOption
    equals(java.lang.Object o)
  class EapSessionConfig.EapAkaOption.Builder
    setReauthId(byte[] reauthId)
  class EapSessionConfig.EapAkaPrimeConfig
    equals(java.lang.Object o)
  class EapSessionConfig.EapMethodConfig
    equals(java.lang.Object o)
  class EapSessionConfig.EapMsChapV2Config
    equals(java.lang.Object o)
  class EapSessionConfig.EapSimConfig
    equals(java.lang.Object o)
  class EapSessionConfig.EapTtlsConfig
    equals(java.lang.Object o)

package android.net.ipsec.ike
;---------------------------------------
  class ChildSaProposal
    equals(java.lang.Object o)
  class ChildSaProposal.Builder
    addDhGroup(int dhGroup)
    addEncryptionAlgorithm(int algorithm, int keyLength)
    addIntegrityAlgorithm(int algorithm)
  interface ChildSessionCallback
    onClosedWithException(android.net.ipsec.ike.exceptions.IkeException exception)
    onIpSecTransformCreated(android.net.IpSecTransform ipSecTransform, int direction)
    onIpSecTransformDeleted(android.net.IpSecTransform ipSecTransform, int direction)
    onOpened(android.net.ipsec.ike.ChildSessionConfiguration sessionConfiguration)
  class ChildSessionConfiguration.Builder
    #ctor(java.util.List<android.net.ipsec.ike.IkeTrafficSelector> inTs, java.util.List<android.net.ipsec.ike.IkeTrafficSelector> outTs)
  class ChildSessionParams
    equals(java.lang.Object o)
  class IkeDerAsn1DnIdentification
    equals(java.lang.Object o)
    #ctor(javax.security.auth.x500.X500Principal derAsn1Dn)
  class IkeFqdnIdentification
    equals(java.lang.Object o)
    #ctor(java.lang.String fqdn)
  class IkeIpv4AddrIdentification
    equals(java.lang.Object o)
    #ctor(java.net.Inet4Address address)
  class IkeIpv6AddrIdentification
    equals(java.lang.Object o)
    #ctor(java.net.Inet6Address address)
  class IkeKeyIdIdentification
    equals(java.lang.Object o)
    #ctor(byte[] keyId)
  class IkeRfc822AddrIdentification
    equals(java.lang.Object o)
    #ctor(java.lang.String rfc822Name)
  class IkeSaProposal
    equals(java.lang.Object o)
  class IkeSaProposal.Builder
    addDhGroup(int dhGroup)
    addEncryptionAlgorithm(int algorithm, int keyLength)
    addIntegrityAlgorithm(int algorithm)
    addPseudorandomFunction(int algorithm)
  class IkeSession
    closeChildSession(android.net.ipsec.ike.ChildSessionCallback childSessionCallback)
    dump(java.io.PrintWriter pw)
    #ctor(android.content.Context context, android.net.ipsec.ike.IkeSessionParams ikeSessionParams, android.net.ipsec.ike.ChildSessionParams firstChildSessionParams, java.util.concurrent.Executor userCbExecutor, android.net.ipsec.ike.IkeSessionCallback ikeSessionCallback, android.net.ipsec.ike.ChildSessionCallback firstChildSessionCallback)
    openChildSession(android.net.ipsec.ike.ChildSessionParams childSessionParams, android.net.ipsec.ike.ChildSessionCallback childSessionCallback)
  interface IkeSessionCallback
    onClosedWithException(android.net.ipsec.ike.exceptions.IkeException exception)
    onError(android.net.ipsec.ike.exceptions.IkeException exception)
    onOpened(android.net.ipsec.ike.IkeSessionConfiguration sessionConfiguration)
  class IkeSessionConfiguration
    isIkeExtensionEnabled(int extensionType)
  class IkeSessionConfiguration.Builder
    addIkeExtension(int extensionType)
    addRemoteVendorId(byte[] remoteVendorId)
    #ctor(android.net.ipsec.ike.IkeSessionConnectionInfo ikeConnInfo)
    setEapInfo(android.net.eap.EapInfo eapInfo)
    setRemoteApplicationVersion(java.lang.String remoteApplicationVersion)
  class IkeSessionConnectionInfo
    #ctor(java.net.InetAddress localAddress, java.net.InetAddress remoteAddress, android.net.Network network)
  class IkeSessionParams
    equals(java.lang.Object o)
    hasIkeOption(int ikeOption)
  class IkeSessionParams.Builder
    addIkeOption(int ikeOption)
    addIkeSaProposal(android.net.ipsec.ike.IkeSaProposal proposal)
    #ctor(android.net.ipsec.ike.IkeSessionParams ikeSessionParams)
    removeIkeOption(int ikeOption)
    setAuthDigitalSignature(java.security.cert.X509Certificate serverCaCert, java.security.cert.X509Certificate clientEndCert, java.security.PrivateKey clientPrivateKey)
    setAuthDigitalSignature(java.security.cert.X509Certificate serverCaCert, java.security.cert.X509Certificate clientEndCert, java.util.List<java.security.cert.X509Certificate> clientIntermediateCerts, java.security.PrivateKey clientPrivateKey)
    setAuthEap(java.security.cert.X509Certificate serverCaCert, android.net.eap.EapSessionConfig eapConfig)
    setAuthPsk(byte[] sharedKey)
    setDpdDelaySeconds(int dpdDelaySeconds)
    setLifetimeSeconds(int hardLifetimeSeconds, int softLifetimeSeconds)
    setLocalIdentification(android.net.ipsec.ike.IkeIdentification identification)
    setNattKeepAliveDelaySeconds(int nattKeepaliveDelaySeconds)
    setNetwork(android.net.Network network)
    setRemoteIdentification(android.net.ipsec.ike.IkeIdentification identification)
    setRetransmissionTimeoutsMillis(int[] retransTimeoutMillisList)
    setServerHostname(java.lang.String serverHostname)
  class IkeSessionParams.IkeAuthConfig
    equals(java.lang.Object o)
  class IkeSessionParams.IkeAuthDigitalSignLocalConfig
    equals(java.lang.Object o)
  class IkeSessionParams.IkeAuthDigitalSignRemoteConfig
    equals(java.lang.Object o)
  class IkeSessionParams.IkeAuthEapConfig
    equals(java.lang.Object o)
  class IkeSessionParams.IkeAuthPskConfig
    equals(java.lang.Object o)
  class IkeTrafficSelector
    equals(java.lang.Object o)
    #ctor(int startPort, int endPort, java.net.InetAddress startingAddress, java.net.InetAddress endingAddress)
  class IkeTunnelConnectionParams
    equals(java.lang.Object o)
    #ctor(android.net.ipsec.ike.IkeSessionParams ikeParams, android.net.ipsec.ike.TunnelModeChildSessionParams childParams)
  class SaProposal
    equals(java.lang.Object o)
  class TransportModeChildSessionParams.Builder
    addChildSaProposal(android.net.ipsec.ike.ChildSaProposal proposal)
    addInboundTrafficSelectors(android.net.ipsec.ike.IkeTrafficSelector trafficSelector)
    addOutboundTrafficSelectors(android.net.ipsec.ike.IkeTrafficSelector trafficSelector)
    setLifetimeSeconds(int hardLifetimeSeconds, int softLifetimeSeconds)
    #ctor(android.net.ipsec.ike.TransportModeChildSessionParams childParams)
  class TunnelModeChildSessionParams
    equals(java.lang.Object o)
  class TunnelModeChildSessionParams.Builder
    addChildSaProposal(android.net.ipsec.ike.ChildSaProposal proposal)
    addInboundTrafficSelectors(android.net.ipsec.ike.IkeTrafficSelector trafficSelector)
    addInternalAddressRequest(int addressFamily)
    addInternalAddressRequest(java.net.Inet4Address address)
    addInternalAddressRequest(java.net.Inet6Address address, int prefixLen)
    addInternalDhcpServerRequest(int addressFamily)
    addInternalDnsServerRequest(int addressFamily)
    addOutboundTrafficSelectors(android.net.ipsec.ike.IkeTrafficSelector trafficSelector)
    setLifetimeSeconds(int hardLifetimeSeconds, int softLifetimeSeconds)
    #ctor(android.net.ipsec.ike.TunnelModeChildSessionParams childParams)

package android.net.ipsec.ike.exceptions
;---------------------------------------
  class IkeInternalException
    #ctor(java.lang.String message, java.lang.Throwable cause)
    #ctor(java.lang.Throwable cause)
  class IkeIOException
    #ctor(java.io.IOException cause)
    initCause(java.lang.Throwable cause)
  class IkeNetworkLostException
    #ctor(android.net.Network network)
  class IkeTimeoutException
    #ctor(java.lang.String message)
  class InvalidKeException
    #ctor(int dhGroup)
  class InvalidMajorVersionException
    #ctor(byte version)
  class InvalidSelectorsException
    #ctor(int spi, byte[] packetInfo)

package android.system
;---------------------------------------
  class ErrnoException
    #ctor(java.lang.String functionName, int errno, java.lang.Throwable cause)
    #ctor(java.lang.String functionName, int errno)
  class Int64Ref
    #ctor(long value)
  class Os
    accept(java.io.FileDescriptor fd, java.net.InetSocketAddress peerAddress)
    access(java.lang.String path, int mode)
    bind(java.io.FileDescriptor fd, java.net.InetAddress address, int port)
    bind(java.io.FileDescriptor fd, java.net.SocketAddress address)
    chmod(java.lang.String path, int mode)
    chown(java.lang.String path, int uid, int gid)
    close(java.io.FileDescriptor fd)
    connect(java.io.FileDescriptor fd, java.net.InetAddress address, int port)
    connect(java.io.FileDescriptor fd, java.net.SocketAddress address)
    dladdr(long addr)
    dup(java.io.FileDescriptor oldFd)
    dup2(java.io.FileDescriptor oldFd, int newFd)
    execv(java.lang.String filename, java.lang.String[] argv)
    execve(java.lang.String filename, java.lang.String[] argv, java.lang.String[] envp)
    fchmod(java.io.FileDescriptor fd, int mode)
    fchown(java.io.FileDescriptor fd, int uid, int gid)
    fcntlInt(java.io.FileDescriptor fd, int cmd, int arg)
    fdatasync(java.io.FileDescriptor fd)
    fstat(java.io.FileDescriptor fd)
    fstatvfs(java.io.FileDescriptor fd)
    fsync(java.io.FileDescriptor fd)
    ftruncate(java.io.FileDescriptor fd, long length)
    gai_strerror(int error)
    getenv(java.lang.String name)
    getpeername(java.io.FileDescriptor fd)
    getsockname(java.io.FileDescriptor fd)
    getsockoptTimeval(java.io.FileDescriptor fd, int level, int option)
    getxattr(java.lang.String path, java.lang.String name)
    if_indextoname(int index)
    if_nametoindex(java.lang.String name)
    inet_pton(int family, java.lang.String address)
    isatty(java.io.FileDescriptor fd)
    kill(int pid, int signal)
    lchown(java.lang.String path, int uid, int gid)
    link(java.lang.String oldPath, java.lang.String newPath)
    listen(java.io.FileDescriptor fd, int backlog)
    listxattr(java.lang.String path)
    lseek(java.io.FileDescriptor fd, long offset, int whence)
    lstat(java.lang.String path)
    madvise(long address, long byteCount, int advice)
    memfd_create(java.lang.String name, int flags)
    mincore(long address, long byteCount, byte[] vector)
    mkdir(java.lang.String path, int mode)
    mkfifo(java.lang.String path, int mode)
    mlock(long address, long byteCount)
    mmap(long address, long byteCount, int prot, int flags, java.io.FileDescriptor fd, long offset)
    msync(long address, long byteCount, int flags)
    munlock(long address, long byteCount)
    munmap(long address, long byteCount)
    open(java.lang.String path, int flags, int mode)
    poll(android.system.StructPollfd[] fds, int timeoutMs)
    posix_fallocate(java.io.FileDescriptor fd, long offset, long length)
    prctl(int option, long arg2, long arg3, long arg4, long arg5)
    pread(java.io.FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount, long offset)
    pread(java.io.FileDescriptor fd, java.nio.ByteBuffer buffer, long offset)
    pwrite(java.io.FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount, long offset)
    pwrite(java.io.FileDescriptor fd, java.nio.ByteBuffer buffer, long offset)
    read(java.io.FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount)
    read(java.io.FileDescriptor fd, java.nio.ByteBuffer buffer)
    readlink(java.lang.String path)
    readv(java.io.FileDescriptor fd, java.lang.Object[] buffers, int[] offsets, int[] byteCounts)
    recvfrom(java.io.FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount, int flags, java.net.InetSocketAddress srcAddress)
    recvfrom(java.io.FileDescriptor fd, java.nio.ByteBuffer buffer, int flags, java.net.InetSocketAddress srcAddress)
    recvmsg(java.io.FileDescriptor fd, android.system.StructMsghdr msg, int flags)
    remove(java.lang.String path)
    removexattr(java.lang.String path, java.lang.String name)
    rename(java.lang.String oldPath, java.lang.String newPath)
    sendfile(java.io.FileDescriptor outFd, java.io.FileDescriptor inFd, android.system.Int64Ref offset, long byteCount)
    sendmsg(java.io.FileDescriptor fd, android.system.StructMsghdr msg, int flags)
    sendto(java.io.FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount, int flags, java.net.InetAddress inetAddress, int port)
    sendto(java.io.FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount, int flags, java.net.SocketAddress address)
    sendto(java.io.FileDescriptor fd, java.nio.ByteBuffer buffer, int flags, java.net.InetAddress inetAddress, int port)
    setegid(int egid)
    setenv(java.lang.String name, java.lang.String value, boolean overwrite)
    seteuid(int euid)
    setgid(int gid)
    setsockoptInt(java.io.FileDescriptor fd, int level, int option, int value)
    setsockoptTimeval(java.io.FileDescriptor fd, int level, int option, android.system.StructTimeval value)
    setuid(int uid)
    setxattr(java.lang.String path, java.lang.String name, byte[] value, int flags)
    shutdown(java.io.FileDescriptor fd, int how)
    socket(int domain, int type, int protocol)
    socketpair(int domain, int type, int protocol, java.io.FileDescriptor fd1, java.io.FileDescriptor fd2)
    stat(java.lang.String path)
    statvfs(java.lang.String path)
    strerror(int errno)
    strsignal(int signal)
    symlink(java.lang.String oldPath, java.lang.String newPath)
    sysconf(int name)
    tcdrain(java.io.FileDescriptor fd)
    tcsendbreak(java.io.FileDescriptor fd, int duration)
    umask(int mask)
    unsetenv(java.lang.String name)
    write(java.io.FileDescriptor fd, byte[] bytes, int byteOffset, int byteCount)
    write(java.io.FileDescriptor fd, java.nio.ByteBuffer buffer)
    writev(java.io.FileDescriptor fd, java.lang.Object[] buffers, int[] offsets, int[] byteCounts)
  class OsConstants
    errnoName(int errno)
    gaiName(int error)
    S_ISBLK(int mode)
    S_ISCHR(int mode)
    S_ISDIR(int mode)
    S_ISFIFO(int mode)
    S_ISLNK(int mode)
    S_ISREG(int mode)
    S_ISSOCK(int mode)
    WCOREDUMP(int status)
    WEXITSTATUS(int status)
    WIFEXITED(int status)
    WIFSIGNALED(int status)
    WIFSTOPPED(int status)
    WSTOPSIG(int status)
    WTERMSIG(int status)
  class StructCmsghdr
    #ctor(int cmsg_level, int cmsg_type, byte[] value)
    #ctor(int cmsg_level, int cmsg_type, short value)
  class StructDlInfo
    #ctor(java.lang.String dli_fname, long dli_fbase, java.lang.String dli_sname, long dli_saddr)
  class StructMsghdr
    #ctor(java.net.SocketAddress msg_name, java.nio.ByteBuffer[] msg_iov, android.system.StructCmsghdr[] msg_control, int msg_flags)
  class StructStat
    #ctor(long st_dev, long st_ino, int st_mode, long st_nlink, int st_uid, int st_gid, long st_rdev, long st_size, android.system.StructTimespec st_atim, android.system.StructTimespec st_mtim, android.system.StructTimespec st_ctim, long st_blksize, long st_blocks)
    #ctor(long st_dev, long st_ino, int st_mode, long st_nlink, int st_uid, int st_gid, long st_rdev, long st_size, long st_atime, long st_mtime, long st_ctime, long st_blksize, long st_blocks)
  class StructStatVfs
    #ctor(long f_bsize, long f_frsize, long f_blocks, long f_bfree, long f_bavail, long f_files, long f_ffree, long f_favail, long f_fsid, long f_flag, long f_namemax)
  class StructTimespec
    compareTo(android.system.StructTimespec other)
    equals(java.lang.Object o)
    #ctor(long tv_sec, long tv_nsec)
  class StructTimeval
    equals(java.lang.Object o)
    fromMillis(long millis)
  class StructUtsname
    #ctor(java.lang.String sysname, java.lang.String nodename, java.lang.String release, java.lang.String version, java.lang.String machine)
  class VmSocketAddress
    #ctor(int svmPort, int svmCid)

package dalvik.annotation
;---------------------------------------

package dalvik.annotation.optimization
;---------------------------------------

package dalvik.bytecode
;---------------------------------------

package dalvik.system
;---------------------------------------
  class BaseDexClassLoader
    #ctor(java.lang.String dexPath, java.io.File optimizedDirectory, java.lang.String librarySearchPath, java.lang.ClassLoader parent)
    findClass(java.lang.String name)
    findLibrary(java.lang.String name)
    findResource(java.lang.String name)
    findResources(java.lang.String name)
    getPackage(java.lang.String name)
  class DelegateLastClassLoader
    #ctor(java.lang.String dexPath, java.lang.ClassLoader parent)
    #ctor(java.lang.String dexPath, java.lang.String librarySearchPath, java.lang.ClassLoader parent, boolean delegateResourceLoading)
    #ctor(java.lang.String dexPath, java.lang.String librarySearchPath, java.lang.ClassLoader parent)
    getResource(java.lang.String name)
    getResources(java.lang.String name)
    loadClass(java.lang.String name, boolean resolve)
  class DexClassLoader
    #ctor(java.lang.String dexPath, java.lang.String optimizedDirectory, java.lang.String librarySearchPath, java.lang.ClassLoader parent)
  class DexFile
    #ctor(java.io.File file)
    #ctor(java.lang.String fileName)
    isDexOptNeeded(java.lang.String fileName)
    loadClass(java.lang.String name, java.lang.ClassLoader loader)
    loadDex(java.lang.String sourcePathName, java.lang.String outputPathName, int flags)
  class InMemoryDexClassLoader
    #ctor(java.nio.ByteBuffer dexBuffer, java.lang.ClassLoader parent)
    #ctor(java.nio.ByteBuffer[] dexBuffers, java.lang.ClassLoader parent)
    #ctor(java.nio.ByteBuffer[] dexBuffers, java.lang.String librarySearchPath, java.lang.ClassLoader parent)
  class PathClassLoader
    #ctor(java.lang.String dexPath, java.lang.ClassLoader parent)
    #ctor(java.lang.String dexPath, java.lang.String librarySearchPath, java.lang.ClassLoader parent)
  class ZipPathValidator
    setCallback(dalvik.system.ZipPathValidator.Callback callback)
  interface ZipPathValidator.Callback
    onZipEntryAccess(java.lang.String path)

package java.awt.font
;---------------------------------------
  class NumericShaper
    equals(java.lang.Object o)
    getContextualShaper(int ranges, int defaultContext)
    getContextualShaper(int ranges)
    getContextualShaper(java.util.Set<java.awt.font.NumericShaper.Range> ranges, java.awt.font.NumericShaper.Range defaultContext)
    getContextualShaper(java.util.Set<java.awt.font.NumericShaper.Range> ranges)
    getShaper(int singleRange)
    getShaper(java.awt.font.NumericShaper.Range singleRange)
    shape(char[] text, int start, int count, int context)
    shape(char[] text, int start, int count, java.awt.font.NumericShaper.Range context)
    shape(char[] text, int start, int count)
  class TextAttribute
    #ctor(java.lang.String name)

package java.beans
;---------------------------------------
  class IndexedPropertyChangeEvent
    #ctor(java.lang.Object source, java.lang.String propertyName, java.lang.Object oldValue, java.lang.Object newValue, int index)
  class PropertyChangeEvent
    #ctor(java.lang.Object source, java.lang.String propertyName, java.lang.Object oldValue, java.lang.Object newValue)
    setPropagationId(java.lang.Object propagationId)
  interface PropertyChangeListener
    propertyChange(java.beans.PropertyChangeEvent evt)
  class PropertyChangeListenerProxy
    propertyChange(java.beans.PropertyChangeEvent event)
    #ctor(java.lang.String propertyName, java.beans.PropertyChangeListener listener)
  class PropertyChangeSupport
    addPropertyChangeListener(java.beans.PropertyChangeListener listener)
    addPropertyChangeListener(java.lang.String propertyName, java.beans.PropertyChangeListener listener)
    fireIndexedPropertyChange(java.lang.String propertyName, int index, boolean oldValue, boolean newValue)
    fireIndexedPropertyChange(java.lang.String propertyName, int index, int oldValue, int newValue)
    fireIndexedPropertyChange(java.lang.String propertyName, int index, java.lang.Object oldValue, java.lang.Object newValue)
    firePropertyChange(java.beans.PropertyChangeEvent event)
    firePropertyChange(java.lang.String propertyName, boolean oldValue, boolean newValue)
    firePropertyChange(java.lang.String propertyName, int oldValue, int newValue)
    firePropertyChange(java.lang.String propertyName, java.lang.Object oldValue, java.lang.Object newValue)
    getPropertyChangeListeners(java.lang.String propertyName)
    hasListeners(java.lang.String propertyName)
    #ctor(java.lang.Object sourceBean)
    removePropertyChangeListener(java.beans.PropertyChangeListener listener)
    removePropertyChangeListener(java.lang.String propertyName, java.beans.PropertyChangeListener listener)

package java.io
;---------------------------------------
  class BufferedInputStream
    #ctor(java.io.InputStream in, int size)
    #ctor(java.io.InputStream in)
    mark(int readlimit)
    read(byte[] b, int off, int len)
    skip(long n)
  class BufferedOutputStream
    #ctor(java.io.OutputStream out, int size)
    #ctor(java.io.OutputStream out)
    write(byte[] b, int off, int len)
    write(int b)
  class BufferedReader
    #ctor(java.io.Reader in, int sz)
    #ctor(java.io.Reader in)
    mark(int readAheadLimit)
    read(char[] cbuf, int off, int len)
    skip(long n)
  class BufferedWriter
    #ctor(java.io.Writer out, int sz)
    #ctor(java.io.Writer out)
    write(char[] cbuf, int off, int len)
    write(int c)
    write(java.lang.String s, int off, int len)
  class ByteArrayInputStream
    #ctor(byte[] buf, int offset, int length)
    #ctor(byte[] buf)
    mark(int readAheadLimit)
    read(byte[] b, int off, int len)
    readNBytes(byte[] b, int off, int len)
    skip(long n)
    transferTo(java.io.OutputStream out)
  class ByteArrayOutputStream
    #ctor(int size)
    toString(int hibyte)
    toString(java.lang.String charsetName)
    toString(java.nio.charset.Charset charset)
    write(byte[] b, int off, int len)
    write(int b)
    writeBytes(byte[] b)
    writeTo(java.io.OutputStream out)
  class CharArrayReader
    #ctor(char[] buf, int offset, int length)
    #ctor(char[] buf)
    mark(int readAheadLimit)
    read(char[] cbuf, int off, int len)
    read(java.nio.CharBuffer target)
    skip(long n)
  class CharArrayWriter
    append(char c)
    append(java.lang.CharSequence csq, int start, int end)
    append(java.lang.CharSequence csq)
    #ctor(int initialSize)
    write(char[] c, int off, int len)
    write(int c)
    write(java.lang.String str, int off, int len)
    writeTo(java.io.Writer out)
  class CharConversionException
    #ctor(java.lang.String s)
  class Console
    format(java.lang.String fmt, java.lang.Object... args)
    printf(java.lang.String format, java.lang.Object... args)
    readLine(java.lang.String fmt, java.lang.Object... args)
    readPassword(java.lang.String fmt, java.lang.Object... args)
  interface DataInput
    readFully(byte[] b, int off, int len)
    readFully(byte[] b)
    skipBytes(int n)
  class DataInputStream
    #ctor(java.io.InputStream in)
    read(byte[] b, int off, int len)
    read(byte[] b)
    readFully(byte[] b, int off, int len)
    readFully(byte[] b)
    readUTF(java.io.DataInput in)
    skipBytes(int n)
  interface DataOutput
    write(byte[] b, int off, int len)
    write(byte[] b)
    write(int b)
    writeBoolean(boolean v)
    writeByte(int v)
    writeBytes(java.lang.String s)
    writeChar(int v)
    writeChars(java.lang.String s)
    writeDouble(double v)
    writeFloat(float v)
    writeInt(int v)
    writeLong(long v)
    writeShort(int v)
    writeUTF(java.lang.String s)
  class DataOutputStream
    #ctor(java.io.OutputStream out)
    write(byte[] b, int off, int len)
    write(int b)
    writeBoolean(boolean v)
    writeByte(int v)
    writeBytes(java.lang.String s)
    writeChar(int v)
    writeChars(java.lang.String s)
    writeDouble(double v)
    writeFloat(float v)
    writeInt(int v)
    writeLong(long v)
    writeShort(int v)
    writeUTF(java.lang.String str)
  class EOFException
    #ctor(java.lang.String s)
  interface Externalizable
    readExternal(java.io.ObjectInput in)
    writeExternal(java.io.ObjectOutput out)
  class File
    compareTo(java.io.File pathname)
    createTempFile(java.lang.String prefix, java.lang.String suffix, java.io.File directory)
    createTempFile(java.lang.String prefix, java.lang.String suffix)
    equals(java.lang.Object obj)
    #ctor(java.io.File parent, java.lang.String child)
    #ctor(java.lang.String parent, java.lang.String child)
    #ctor(java.lang.String pathname)
    #ctor(java.net.URI uri)
    list(java.io.FilenameFilter filter)
    listFiles(java.io.FileFilter filter)
    listFiles(java.io.FilenameFilter filter)
    renameTo(java.io.File dest)
    setExecutable(boolean executable, boolean ownerOnly)
    setExecutable(boolean executable)
    setLastModified(long time)
    setReadable(boolean readable, boolean ownerOnly)
    setReadable(boolean readable)
    setWritable(boolean writable, boolean ownerOnly)
    setWritable(boolean writable)
  interface FileFilter
    accept(java.io.File pathname)
  class FileInputStream
    #ctor(java.io.File file)
    #ctor(java.io.FileDescriptor fdObj)
    #ctor(java.lang.String name)
    read(byte[] b, int off, int len)
    read(byte[] b)
    skip(long n)
  interface FilenameFilter
    accept(java.io.File dir, java.lang.String name)
  class FileNotFoundException
    #ctor(java.lang.String s)
  class FileOutputStream
    #ctor(java.io.File file, boolean append)
    #ctor(java.io.File file)
    #ctor(java.io.FileDescriptor fdObj)
    #ctor(java.lang.String name, boolean append)
    #ctor(java.lang.String name)
    write(byte[] b, int off, int len)
    write(byte[] b)
    write(int b)
  class FilePermission
    #ctor(java.lang.String path, java.lang.String actions)
    implies(java.security.Permission p)
  class FileReader
    #ctor(java.io.File file, java.nio.charset.Charset charset)
    #ctor(java.io.File file)
    #ctor(java.io.FileDescriptor fd)
    #ctor(java.lang.String fileName, java.nio.charset.Charset charset)
    #ctor(java.lang.String fileName)
  class FileWriter
    #ctor(java.io.File file, boolean append)
    #ctor(java.io.File file, java.nio.charset.Charset charset, boolean append)
    #ctor(java.io.File file, java.nio.charset.Charset charset)
    #ctor(java.io.File file)
    #ctor(java.io.FileDescriptor fd)
    #ctor(java.lang.String fileName, boolean append)
    #ctor(java.lang.String fileName, java.nio.charset.Charset charset, boolean append)
    #ctor(java.lang.String fileName, java.nio.charset.Charset charset)
    #ctor(java.lang.String fileName)
  class FilterInputStream
    #ctor(java.io.InputStream in)
    mark(int readlimit)
    read(byte[] b, int off, int len)
    read(byte[] b)
    skip(long n)
  class FilterOutputStream
    #ctor(java.io.OutputStream out)
    write(byte[] b, int off, int len)
    write(byte[] b)
    write(int b)
  class FilterReader
    #ctor(java.io.Reader in)
    mark(int readAheadLimit)
    read(char[] cbuf, int off, int len)
    skip(long n)
  class FilterWriter
    #ctor(java.io.Writer out)
    write(char[] cbuf, int off, int len)
    write(int c)
    write(java.lang.String str, int off, int len)
  class InputStream
    mark(int readlimit)
    read(byte[] b, int off, int len)
    read(byte[] b)
    readNBytes(byte[] b, int off, int len)
    readNBytes(int len)
    skip(long n)
    skipNBytes(long n)
    transferTo(java.io.OutputStream out)
  class InputStreamReader
    #ctor(java.io.InputStream in, java.lang.String charsetName)
    #ctor(java.io.InputStream in, java.nio.charset.Charset cs)
    #ctor(java.io.InputStream in, java.nio.charset.CharsetDecoder dec)
    #ctor(java.io.InputStream in)
    read(char[] cbuf, int off, int len)
    read(java.nio.CharBuffer target)
  class InterruptedIOException
    #ctor(java.lang.String s)
  class InvalidClassException
    #ctor(java.lang.String cname, java.lang.String reason)
    #ctor(java.lang.String reason)
  class InvalidObjectException
    #ctor(java.lang.String reason)
  class IOError
    #ctor(java.lang.Throwable cause)
  class IOException
    #ctor(java.lang.String message, java.lang.Throwable cause)
    #ctor(java.lang.String message)
    #ctor(java.lang.Throwable cause)
  class LineNumberInputStream
    #ctor(java.io.InputStream in)
    mark(int readlimit)
    read(byte[] b, int off, int len)
    setLineNumber(int lineNumber)
    skip(long n)
  class LineNumberReader
    #ctor(java.io.Reader in, int sz)
    #ctor(java.io.Reader in)
    mark(int readAheadLimit)
    read(char[] cbuf, int off, int len)
    setLineNumber(int lineNumber)
    skip(long n)
  class NotActiveException
    #ctor(java.lang.String reason)
  class NotSerializableException
    #ctor(java.lang.String classname)
  interface ObjectInput
    read(byte[] b, int off, int len)
    read(byte[] b)
    skip(long n)
  class ObjectInputStream
    enableResolveObject(boolean enable)
    #ctor(java.io.InputStream in)
    read(byte[] buf, int off, int len)
    readFully(byte[] buf, int off, int len)
    readFully(byte[] buf)
    registerValidation(java.io.ObjectInputValidation obj, int prio)
    resolveClass(java.io.ObjectStreamClass desc)
    resolveObject(java.lang.Object obj)
    resolveProxyClass(java.lang.String[] interfaces)
    skipBytes(int len)
  class ObjectInputStream.GetField
    defaulted(java.lang.String name)
    get(java.lang.String name, boolean val)
    get(java.lang.String name, byte val)
    get(java.lang.String name, char val)
    get(java.lang.String name, double val)
    get(java.lang.String name, float val)
    get(java.lang.String name, int val)
    get(java.lang.String name, java.lang.Object val)
    get(java.lang.String name, long val)
    get(java.lang.String name, short val)
  interface ObjectOutput
    write(byte[] b, int off, int len)
    write(byte[] b)
    write(int b)
    writeObject(java.lang.Object obj)
  class ObjectOutputStream
    annotateClass(java.lang.Class<?> cl)
    annotateProxyClass(java.lang.Class<?> cl)
    enableReplaceObject(boolean enable)
    #ctor(java.io.OutputStream out)
    replaceObject(java.lang.Object obj)
    useProtocolVersion(int version)
    write(byte[] buf, int off, int len)
    write(byte[] buf)
    write(int val)
    writeBoolean(boolean val)
    writeByte(int val)
    writeBytes(java.lang.String str)
    writeChar(int val)
    writeChars(java.lang.String str)
    writeClassDescriptor(java.io.ObjectStreamClass desc)
    writeDouble(double val)
    writeFloat(float val)
    writeInt(int val)
    writeLong(long val)
    writeObject(java.lang.Object obj)
    writeObjectOverride(java.lang.Object obj)
    writeShort(int val)
    writeUnshared(java.lang.Object obj)
    writeUTF(java.lang.String str)
  class ObjectOutputStream.PutField
    put(java.lang.String name, boolean val)
    put(java.lang.String name, byte val)
    put(java.lang.String name, char val)
    put(java.lang.String name, double val)
    put(java.lang.String name, float val)
    put(java.lang.String name, int val)
    put(java.lang.String name, java.lang.Object val)
    put(java.lang.String name, long val)
    put(java.lang.String name, short val)
    write(java.io.ObjectOutput out)
  class ObjectStreamClass
    getField(java.lang.String name)
    lookup(java.lang.Class<?> cl)
    lookupAny(java.lang.Class<?> cl)
  class ObjectStreamException
    #ctor(java.lang.String message)
  class ObjectStreamField
    compareTo(java.lang.Object obj)
    #ctor(java.lang.String name, java.lang.Class<?> type, boolean unshared)
    #ctor(java.lang.String name, java.lang.Class<?> type)
    setOffset(int offset)
  class OutputStream
    write(byte[] b, int off, int len)
    write(byte[] b)
    write(int b)
  class OutputStreamWriter
    append(java.lang.CharSequence csq, int start, int end)
    append(java.lang.CharSequence csq)
    #ctor(java.io.OutputStream out, java.lang.String charsetName)
    #ctor(java.io.OutputStream out, java.nio.charset.Charset cs)
    #ctor(java.io.OutputStream out, java.nio.charset.CharsetEncoder enc)
    #ctor(java.io.OutputStream out)
    write(char[] cbuf, int off, int len)
    write(int c)
    write(java.lang.String str, int off, int len)
  class PipedInputStream
    connect(java.io.PipedOutputStream src)
    #ctor(int pipeSize)
    #ctor(java.io.PipedOutputStream src, int pipeSize)
    #ctor(java.io.PipedOutputStream src)
    read(byte[] b, int off, int len)
    receive(int b)
  class PipedOutputStream
    connect(java.io.PipedInputStream snk)
    #ctor(java.io.PipedInputStream snk)
    write(byte[] b, int off, int len)
    write(int b)
  class PipedReader
    connect(java.io.PipedWriter src)
    #ctor(int pipeSize)
    #ctor(java.io.PipedWriter src, int pipeSize)
    #ctor(java.io.PipedWriter src)
    read(char[] cbuf, int off, int len)
  class PipedWriter
    connect(java.io.PipedReader snk)
    #ctor(java.io.PipedReader snk)
    write(char[] cbuf, int off, int len)
    write(int c)
  class PrintStream
    append(char c)
    append(java.lang.CharSequence csq, int start, int end)
    append(java.lang.CharSequence csq)
    format(java.lang.String format, java.lang.Object... args)
    format(java.util.Locale l, java.lang.String format, java.lang.Object... args)
    print(boolean b)
    print(char c)
    print(char[] s)
    print(double d)
    print(float f)
    print(int i)
    print(java.lang.Object obj)
    print(java.lang.String s)
    print(long l)
    printf(java.lang.String format, java.lang.Object... args)
    printf(java.util.Locale l, java.lang.String format, java.lang.Object... args)
    println(boolean x)
    println(char x)
    println(char[] x)
    println(double x)
    println(float x)
    println(int x)
    println(java.lang.Object x)
    println(java.lang.String x)
    println(long x)
    #ctor(java.io.File file, java.lang.String csn)
    #ctor(java.io.File file, java.nio.charset.Charset charset)
    #ctor(java.io.File file)
    #ctor(java.io.OutputStream out, boolean autoFlush, java.lang.String encoding)
    #ctor(java.io.OutputStream out, boolean autoFlush, java.nio.charset.Charset charset)
    #ctor(java.io.OutputStream out, boolean autoFlush)
    #ctor(java.io.OutputStream out)
    #ctor(java.lang.String fileName, java.lang.String csn)
    #ctor(java.lang.String fileName, java.nio.charset.Charset charset)
    #ctor(java.lang.String fileName)
    write(byte[] buf, int off, int len)
    write(byte[] buf)
    write(int b)
    writeBytes(byte[] buf)
  class PrintWriter
    append(char c)
    append(java.lang.CharSequence csq, int start, int end)
    append(java.lang.CharSequence csq)
    format(java.lang.String format, java.lang.Object... args)
    format(java.util.Locale l, java.lang.String format, java.lang.Object... args)
    print(boolean b)
    print(char c)
    print(char[] s)
    print(double d)
    print(float f)
    print(int i)
    print(java.lang.Object obj)
    print(java.lang.String s)
    print(long l)
    printf(java.lang.String format, java.lang.Object... args)
    printf(java.util.Locale l, java.lang.String format, java.lang.Object... args)
    println(boolean x)
    println(char x)
    println(char[] x)
    println(double x)
    println(float x)
    println(int x)
    println(java.lang.Object x)
    println(java.lang.String x)
    println(long x)
    #ctor(java.io.File file, java.lang.String csn)
    #ctor(java.io.File file, java.nio.charset.Charset charset)
    #ctor(java.io.File file)
    #ctor(java.io.OutputStream out, boolean autoFlush, java.nio.charset.Charset charset)
    #ctor(java.io.OutputStream out, boolean autoFlush)
    #ctor(java.io.OutputStream out)
    #ctor(java.io.Writer out, boolean autoFlush)
    #ctor(java.io.Writer out)
    #ctor(java.lang.String fileName, java.lang.String csn)
    #ctor(java.lang.String fileName, java.nio.charset.Charset charset)
    #ctor(java.lang.String fileName)
    write(char[] buf, int off, int len)
    write(char[] buf)
    write(int c)
    write(java.lang.String s, int off, int len)
    write(java.lang.String s)
  class PushbackInputStream
    mark(int readlimit)
    #ctor(java.io.InputStream in, int size)
    #ctor(java.io.InputStream in)
    read(byte[] b, int off, int len)
    skip(long n)
    unread(byte[] b, int off, int len)
    unread(byte[] b)
    unread(int b)
  class PushbackReader
    mark(int readAheadLimit)
    #ctor(java.io.Reader in, int size)
    #ctor(java.io.Reader in)
    read(char[] cbuf, int off, int len)
    skip(long n)
    unread(char[] cbuf, int off, int len)
    unread(char[] cbuf)
    unread(int c)
  class RandomAccessFile
    #ctor(java.io.File file, java.lang.String mode)
    #ctor(java.lang.String name, java.lang.String mode)
    read(byte[] b, int off, int len)
    read(byte[] b)
    readFully(byte[] b, int off, int len)
    readFully(byte[] b)
    seek(long pos)
    setLength(long newLength)
    skipBytes(int n)
    write(byte[] b, int off, int len)
    write(byte[] b)
    write(int b)
    writeBoolean(boolean v)
    writeByte(int v)
    writeBytes(java.lang.String s)
    writeChar(int v)
    writeChars(java.lang.String s)
    writeDouble(double v)
    writeFloat(float v)
    writeInt(int v)
    writeLong(long v)
    writeShort(int v)
    writeUTF(java.lang.String str)
  class Reader
    mark(int readAheadLimit)
    read(char[] cbuf, int off, int len)
    read(char[] cbuf)
    read(java.nio.CharBuffer target)
    #ctor(java.lang.Object lock)
    skip(long n)
    transferTo(java.io.Writer out)
  class SequenceInputStream
    read(byte[] b, int off, int len)
    #ctor(java.io.InputStream s1, java.io.InputStream s2)
    #ctor(java.util.Enumeration<? extends java.io.InputStream> e)
  class SerializablePermission
    #ctor(java.lang.String name, java.lang.String actions)
    #ctor(java.lang.String name)
  class StreamCorruptedException
    #ctor(java.lang.String reason)
  class StreamTokenizer
    commentChar(int ch)
    eolIsSignificant(boolean flag)
    lowerCaseMode(boolean fl)
    ordinaryChar(int ch)
    ordinaryChars(int low, int hi)
    quoteChar(int ch)
    slashSlashComments(boolean flag)
    slashStarComments(boolean flag)
    #ctor(java.io.InputStream is)
    #ctor(java.io.Reader r)
    whitespaceChars(int low, int hi)
    wordChars(int low, int hi)
  class StringBufferInputStream
    read(byte[] b, int off, int len)
    skip(long n)
    #ctor(java.lang.String s)
  class StringReader
    mark(int readAheadLimit)
    read(char[] cbuf, int off, int len)
    skip(long ns)
    #ctor(java.lang.String s)
  class StringWriter
    append(char c)
    append(java.lang.CharSequence csq, int start, int end)
    append(java.lang.CharSequence csq)
    #ctor(int initialSize)
    write(char[] cbuf, int off, int len)
    write(int c)
    write(java.lang.String str, int off, int len)
    write(java.lang.String str)
  class SyncFailedException
    #ctor(java.lang.String desc)
  class UncheckedIOException
    #ctor(java.io.IOException cause)
    #ctor(java.lang.String message, java.io.IOException cause)
  class UnsupportedEncodingException
    #ctor(java.lang.String s)
  class UTFDataFormatException
    #ctor(java.lang.String s)
  class WriteAbortedException
    #ctor(java.lang.String s, java.lang.Exception ex)
  class Writer
    append(char c)
    append(java.lang.CharSequence csq, int start, int end)
    append(java.lang.CharSequence csq)
    write(char[] cbuf, int off, int len)
    write(char[] cbuf)
    write(int c)
    write(java.lang.String str, int off, int len)
    write(java.lang.String str)
    #ctor(java.lang.Object lock)

package java.lang
;---------------------------------------
  class AbstractMethodError
    #ctor(java.lang.String s)
  interface Appendable
    append(char c)
    append(java.lang.CharSequence csq, int start, int end)
    append(java.lang.CharSequence csq)
  class ArithmeticException
    #ctor(java.lang.String s)
  class ArrayIndexOutOfBoundsException
    #ctor(int index)
    #ctor(java.lang.String s)
  class ArrayStoreException
    #ctor(java.lang.String s)
  class AssertionError
    #ctor(boolean detailMessage)
    #ctor(char detailMessage)
    #ctor(double detailMessage)
    #ctor(float detailMessage)
    #ctor(int detailMessage)
    #ctor(java.lang.Object detailMessage)
    #ctor(java.lang.String message, java.lang.Throwable cause)
    #ctor(long detailMessage)
  class Boolean
    #ctor(boolean value)
    #ctor(java.lang.String s)
    compare(boolean x, boolean y)
    compareTo(java.lang.Boolean b)
    equals(java.lang.Object obj)
    getBoolean(java.lang.String name)
    hashCode(boolean value)
    logicalAnd(boolean a, boolean b)
    logicalOr(boolean a, boolean b)
    logicalXor(boolean a, boolean b)
    parseBoolean(java.lang.String s)
    toString(boolean b)
    valueOf(boolean b)
    valueOf(java.lang.String s)
  class BootstrapMethodError
    #ctor(java.lang.String s, java.lang.Throwable cause)
    #ctor(java.lang.String s)
    #ctor(java.lang.Throwable cause)
  class Byte
    #ctor(byte value)
    #ctor(java.lang.String s)
    compare(byte x, byte y)
    compareTo(java.lang.Byte anotherByte)
    compareUnsigned(byte x, byte y)
    decode(java.lang.String nm)
    equals(java.lang.Object obj)
    hashCode(byte value)
    parseByte(java.lang.String s, int radix)
    parseByte(java.lang.String s)
    toString(byte b)
    toUnsignedInt(byte x)
    toUnsignedLong(byte x)
    valueOf(byte b)
    valueOf(java.lang.String s, int radix)
    valueOf(java.lang.String s)
  interface CharSequence
    charAt(int index)
    compare(java.lang.CharSequence cs1, java.lang.CharSequence cs2)
    subSequence(int start, int end)
