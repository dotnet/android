<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)..\..\bin\Build$(Configuration)\xa-prep-tasks.dll"  TaskName="Xamarin.Android.BuildTools.PrepTasks.GitCommitTime" />
  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)" />
  <PropertyGroup>
    <_SourceTopDir>..\..</_SourceTopDir>
    <_BclFrameworkDir>$(XAInstallPrefix)xbuild-frameworks\MonoAndroid\v1.0\</_BclFrameworkDir>
    <_MSBuildDir>$(XAInstallPrefix)xbuild\Xamarin\Android</_MSBuildDir>
    <_OutputIncludeDir>..\..\bin\$(Configuration)\include\</_OutputIncludeDir>
    <_DebugFileExt Condition=" '$(_DebugFileExt)' == '' ">.pdb</_DebugFileExt>
  </PropertyGroup>
  <ItemGroup>
    <MonoDocCopyItem Include="monodoc.dll" />
    <MonoDocCopyItem
        Condition=" '$(_DebugFileExt)' == '.pdb'"
        Include="mdoc.pdb;monodoc.pdb"
    />
    <MonoDocCopyItem
        Condition=" '$(_DebugFileExt)' == '.mdb'"
        Include="mdoc.exe.mdb;monodoc.dll.mdb"
    />
    <MonoDocCopyItem Include="monodoc.dll.config" />
  </ItemGroup>
  <UsingTask AssemblyFile="$(_SourceTopDir)\bin\Build$(Configuration)\Xamarin.Android.Tools.BootstrapTasks.dll" TaskName="Xamarin.Android.Tools.BootstrapTasks.GetNugetPackageBasePath" />
  <ItemGroup>
    <_MonoDocCopyItems Include="@(MonoDocCopyItem->'$(_MonoOutputDir)\%(Identity)')" />
  </ItemGroup>
  <ItemGroup>
    <_MonoDocInstalledItems Include="@(MonoDocCopyItem->'$(_MSBuildDir)\%(Identity)')" />
    <_MonoDocInstalledItems Include="$(_MSBuildDir)\mdoc.exe" />
  </ItemGroup>
  <PropertyGroup>
    <_MonoProfileDir>$(MonoSourceFullPath)\mcs\class\lib\monodroid</_MonoProfileDir>
    <_MonoOutputDir>$(MonoSourceFullPath)\mcs\class\lib\monodroid_tools</_MonoOutputDir>
  </PropertyGroup>
  <PropertyGroup>
    <_MonoSdksConfiguration Condition=" '$(Configuration)' == 'Release' ">release</_MonoSdksConfiguration>
    <_MonoSdksConfiguration Condition=" '$(Configuration)' != 'Release' ">debug</_MonoSdksConfiguration>

    <_MonoSdksAndroidToolchainDir>$(AndroidToolchainDirectory)</_MonoSdksAndroidToolchainDir>
    <_MonoSdksAndroidToolchainCacheDir>$(AndroidToolchainCacheDirectory)</_MonoSdksAndroidToolchainCacheDir>
    <_MonoSdksAndroidToolchainPrefix>$(AndroidToolchainDirectory)\toolchains</_MonoSdksAndroidToolchainPrefix>
    <_MonoSdksLlvmSrc>$(MSBuildThisFileDirectory)..\..\external\llvm</_MonoSdksLlvmSrc>
    <_MonoSdksMxePrefixDir>$(AndroidToolchainDirectory)</_MonoSdksMxePrefixDir>
    <_MonoSdksMxeSrc>$(MSBuildThisFileDirectory)..\..\external\mxe</_MonoSdksMxeSrc>

    <_MonoSdksParameters>CONFIGURATION=$(_MonoSdksConfiguration) IGNORE_PROVISION_MXE=true IGNORE_PROVISION_ANDROID=true IGNORE_PROVISION_LLVM=true ANDROID_TOOLCHAIN_DIR=&quot;$(_MonoSdksAndroidToolchainDir)&quot; ANDROID_TOOLCHAIN_CACHE_DIR=&quot;$(_MonoSdksAndroidToolchainCacheDir)&quot; ANDROID_TOOLCHAIN_PREFIX=&quot;$(_MonoSdksAndroidToolchainPrefix)&quot; LLVM_SRC=&quot;$(_MonoSdksLlvmSrc)&quot; MXE_PREFIX_DIR=&quot;$(_MonoSdksMxePrefixDir)&quot; MXE_SRC=&quot;$(_MonoSdksMxeSrc)&quot;</_MonoSdksParameters>
  </PropertyGroup>
  <PropertyGroup>
    <ForceBuildDependsOn>
      _BuildLlvm;
      _InstallLlvm;
      _Autogen;
      _BuildRuntimes;
      _InstallRuntimes;
      _InstallBcl;
      _InstallCilStrip;
      _InstallMonoDoc;
      _InstallMonoUtilities;
    </ForceBuildDependsOn>
  </PropertyGroup>
  <Import Project="mono-runtimes.projitems" />
  <Import Project="ProfileAssemblies.projitems" />
  <ItemGroup>
    <_BclAssembly Include="@(MonoProfileAssembly)" />
    <_BclExcludeDebugSymbols  Include="System.Windows.dll" />
    <_BclExcludeDebugSymbols  Include="System.Xml.Serialization.dll" />
    <_BclTestAssemblyDestination  Include="@(MonoTestAssembly->'$(XAInstallPrefix)\..\..\bcl-tests\%(Identity)')" />
    <_BclTestAssemblyDestination
        Include="@(MonoTestAssembly->'$(XAInstallPrefix)\..\..\bcl-tests\%(Filename).pdb')"
        Exclude="$(XAInstallPrefix)\..\..\bcl-tests\System.Runtime.CompilerServices.Unsafe.pdb"
    />
    <_BclTestAssemblyDestination  Include="@(MonoTestRunner->'$(XAInstallPrefix)\..\..\bcl-tests\%(Identity)')" />
    <_BclTestAssemblyDestination  Include="@(MonoTestRunner->'$(XAInstallPrefix)\..\..\bcl-tests\%(Filename).pdb')" />
  </ItemGroup>
  <ItemGroup>
    <_BclTestOutput Include="@(_BclTestAssemblyDestination)" />
    <_BclTestOutput Include="$(XAInstallPrefix)\..\..\bcl-tests\bcl-tests.zip" />
  </ItemGroup>
  <ItemGroup>
    <_BclProfileItems Include="@(_BclAssembly->'$(_MonoProfileDir)\%(Identity)')" />
    <_BclProfileItems
        Condition=" '$(_DebugFileExt)' == '.mdb' "
        Include="@(_BclAssembly->'$(_MonoProfileDir)\%(Identity).mdb')"
        Exclude="@(_BclExcludeDebugSymbols->'$(_MonoProfileDir)\%(Identity).mdb')"
    />
    <_BclProfileItems
        Condition=" '$(_DebugFileExt)' == '.pdb' "
        Include="@(_BclAssembly->'$(_MonoProfileDir)\%(Filename).pdb')"
        Exclude="@(_BclExcludeDebugSymbols->'$(_MonoProfileDir)\%(Filename).pdb')"
    />
  </ItemGroup>
  <ItemGroup>
    <_BclInstalledItem Include="@(_BclAssembly->'$(_BclFrameworkDir)%(Identity)')" />
    <_BclInstalledItem
        Condition=" '$(_DebugFileExt)' == '.mdb' "
        Include="@(_BclAssembly->'$(_BclFrameworkDir)%(Identity).mdb')"
        Exclude="@(_BclExcludeDebugSymbols->'$(_BclFrameworkDir)%(Identity).mdb')"
    />
    <_BclInstalledItem
        Condition=" '$(_DebugFileExt)' == '.pdb' "
        Include="@(_BclAssembly->'$(_BclFrameworkDir)%(Filename).pdb')"
        Exclude="@(_BclExcludeDebugSymbols->'$(_BclFrameworkDir)%(Filename).pdb')"
    />
  </ItemGroup>
  <ItemGroup>
    <_MonoUtility  Include="illinkanalyzer.exe" />
    <_MonoUtility  Include="mono-symbolicate.exe" />
    <_MonoUtility  Include="mkbundle.exe" />
  </ItemGroup>
  <ItemGroup>
    <_MonoUtilitySource Include="@(_MonoUtility->'$(_MonoOutputDir)\%(Identity)')" />
    <_MonoUtilityDest   Include="@(_MonoUtility->'$(_MSBuildDir)\%(Identity)')" />
    <_MonoUtilitySource
        Condition=" '$(_DebugFileExt)' == '.mdb'"
        Include="@(_MonoUtility->'$(_MonoOutputDir)\%(Identity).mdb')"
    />
    <_MonoUtilityDest
        Condition=" '$(_DebugFileExt)' == '.mdb'"
        Include="@(_MonoUtility->'$(_MSBuildDir)\%(Identity).mdb')"
    />
    <_MonoUtilitySource
        Condition=" '$(_DebugFileExt)' == '.pdb'"
        Include="@(_MonoUtility->'$(_MonoOutputDir)\%(Filename).pdb')"
    />
    <_MonoUtilityDest
        Condition=" '$(_DebugFileExt)' == '.pdb'"
        Include="@(_MonoUtility->'$(_MSBuildDir)\%(Filename).pdb')"
    />
  </ItemGroup>
  <Target Name="_SetAutogenShTimeToLastCommitTimestamp">
    <GitCommitTime
        WorkingDirectory="$(MonoSourceFullPath)"
        ToolPath="$(GitToolPath)"
        ToolExe="$(GitToolExe)">
      <Output TaskParameter="Time" PropertyName="_MonoCommitTime" />
    </GitCommitTime>
    <Touch Files="$(MonoSourceFullPath)\autogen.sh" Time="$(_MonoCommitTime)" />
    <GitCommitTime
        WorkingDirectory="$(LlvmSourceFullPath)"
        ToolPath="$(GitToolPath)"
        ToolExe="$(GitToolExe)">
      <Output TaskParameter="Time" PropertyName="_LlvmCommitTime" />
    </GitCommitTime>
    <Touch Files="$(LlvmSourceFullPath)\CMakeLists.txt" Time="$(_LlvmCommitTime)" />
  </Target>

  <Target Name="_PrepareLlvmItems">
    <ItemGroup>
      <_LlvmSourceBinary Include="@(_LlvmRuntime->'$(MonoSourceFullPath)\sdks\out\llvm-%(Identity)\bin\opt%(ExeSuffix)')" Condition=" '%(_LlvmRuntime.InstallBinaries)' == 'true' " />
      <_LlvmTargetBinary Include="@(_LlvmRuntime->'$(_MSBuildDir)\%(InstallPath)opt%(ExeSuffix)')" Condition=" '%(_LlvmRuntime.InstallBinaries)' == 'true' " />

      <_LlvmSourceBinary Include="@(_LlvmRuntime->'$(MonoSourceFullPath)\sdks\out\llvm-%(Identity)\bin\llc%(ExeSuffix)')" Condition=" '%(_LlvmRuntime.InstallBinaries)' == 'true' " />
      <_LlvmTargetBinary Include="@(_LlvmRuntime->'$(_MSBuildDir)\%(InstallPath)llc%(ExeSuffix)')" Condition=" '%(_LlvmRuntime.InstallBinaries)' == 'true' " />
    </ItemGroup>
  </Target>
  
  <Target Name="_BuildLlvm"
      Condition=" '@(_LlvmRuntime)' != '' "
      DependsOnTargets="_SetAutogenShTimeToLastCommitTimestamp;_PrepareLlvmItems"
      Inputs="$(LlvmSourceFullPath)\CMakeLists.txt"
      Outputs="@(_LlvmSourceBinary)">
    <Exec
        Command="make DISABLE_IOS=1 $(MakeConcurrency) @(_LlvmRuntime->'package-llvm-%(Identity)', ' ') $(_MonoSdksParameters) @(_LlvmRuntime->'%(PackageOptions)', ' ')"
        IgnoreStandardErrorWarningFormat="True"
        WorkingDirectory="$(MonoSourceFullPath)\sdks\builds"
    />
  </Target>

  <Target Name="_InstallLlvm"
          DependsOnTargets="_BuildLlvm"
          Inputs="@(_LlvmSourceBinary)"
          Outputs="@(_LlvmTargetBinary)"
          Condition=" '@(_LlvmRuntime)' != '' ">
    <Copy
        SourceFiles="@(_LlvmSourceBinary)"
        DestinationFiles="@(_LlvmTargetBinary)" />
    <Touch
        Files="@(_LlvmTargetBinary)" />
  </Target>

  <Target Name="_Autogen"
      DependsOnTargets="_SetAutogenShTimeToLastCommitTimestamp"
      Inputs="$(MonoSourceFullPath)\autogen.sh"
      Outputs="$(MonoSourceFullPath)\configure">
    <Exec
        Command="make DISABLE_IOS=1 configure-mono"
        WorkingDirectory="$(MonoSourceFullPath)\sdks\builds"
    />
  </Target>

  <Target Name="_GetRuntimesOutputItems">
    <ItemGroup>
      <_RuntimeSource
          Include="@(_MonoRuntime->'$(MonoSourceFullPath)\sdks\out\android-%(Identity)-$(_MonoSdksConfiguration)\lib\%(NativeLibraryPrefix)%(OutputRuntimeFilename).%(NativeLibraryExtension)')"
      />
      <_InstallRuntimeOutput
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputRuntimeFilename).%(NativeLibraryExtension)')"
      />
      <_InstallUnstrippedRuntimeOutput
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputRuntimeFilename).d.%(NativeLibraryExtension)')"
      />
      <_RuntimeBinarySource
          Condition=" 'host-$(HostOS)' == '%(Identity)' "
          Include="@(_MonoRuntime->'$(MonoSourceFullPath)\sdks\out\android-%(Identity)-$(_MonoSdksConfiguration)\bin\mono')"
      />
      <_InstallRuntimeBinaryOutput
          Condition=" 'host-$(HostOS)' == '%(Identity)' "
          Include="@(_MonoRuntime->'$(_MSBuildDir)\$(HostOS)\mono')"
      />
      <_CrossRuntimeBinarySource
          Include="@(_MonoCrossRuntime->'$(MonoSourceFullPath)\sdks\out\android-%(Identity)-$(_MonoSdksConfiguration)\bin\%(ExePrefix)mono-sgen%(ExeSuffix)')"
      />
      <_InstallCrossRuntimeBinaryOutput
          Include="@(_MonoCrossRuntime->'$(_MSBuildDir)\%(InstallPath)%(CrossMonoName)%(ExeSuffix)')"
      />
      <_InstallUnstrippedCrossRuntimeBinaryOutput
          Include="@(_MonoCrossRuntime->'$(_MSBuildDir)\%(InstallPath)%(CrossMonoName).d%(ExeSuffix)')"
      />
      <_ProfilerSource
          Condition=" '%(_MonoRuntime.OutputProfilerFilename)' != '' "
          Include="@(_MonoRuntime->'$(MonoSourceFullPath)\sdks\out\android-%(Identity)-$(_MonoSdksConfiguration)\lib\%(NativeLibraryPrefix)%(OutputProfilerFilename).%(NativeLibraryExtension)')"
      />
      <_ProfilerSource
          Condition=" '%(_MonoRuntime.OutputAotProfilerFilename)' != '' "
          Include="@(_MonoRuntime->'$(MonoSourceFullPath)\sdks\out\android-%(Identity)-$(_MonoSdksConfiguration)\lib\%(NativeLibraryPrefix)%(OutputAotProfilerFilename).%(NativeLibraryExtension)')"
      />
      <_InstallProfilerOutput
          Condition=" '%(_MonoRuntime.OutputProfilerFilename)' != '' "
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputProfilerFilename).%(NativeLibraryExtension)')"
      />
      <_InstallProfilerOutput
          Condition=" '%(_MonoRuntime.OutputAotProfilerFilename)' != '' "
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputAotProfilerFilename).%(NativeLibraryExtension)')"
      />
      <_InstallUnstrippedProfilerOutput
          Condition=" '%(_MonoRuntime.OutputProfilerFilename)' != '' "
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputProfilerFilename).d.%(NativeLibraryExtension)')"
      />
      <_InstallUnstrippedProfilerOutput
          Condition=" '%(_MonoRuntime.OutputAotProfilerFilename)' != '' "
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputAotProfilerFilename).d.%(NativeLibraryExtension)')"
      />
      <_MonoBtlsSource
          Condition=" '%(_MonoRuntime.OutputMonoBtlsFilename)' != '' "
          Include="@(_MonoRuntime->'$(MonoSourceFullPath)\sdks\out\android-%(Identity)-$(_MonoSdksConfiguration)\lib\%(NativeLibraryPrefix)%(OutputMonoBtlsFilename).%(NativeLibraryExtension)')"
      />
      <_InstallMonoBtlsOutput
          Condition=" '%(_MonoRuntime.OutputMonoBtlsFilename)' != '' "
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputMonoBtlsFilename).%(NativeLibraryExtension)')"
      />
      <_InstallUnstrippedMonoBtlsOutput
          Condition=" '%(_MonoRuntime.OutputMonoBtlsFilename)' != '' "
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputMonoBtlsFilename).d.%(NativeLibraryExtension)')"
      />
      <_MonoPosixHelperSource
          Condition=" '%(_MonoRuntime.OutputMonoPosixHelperFilename)' != '' "
          Include="@(_MonoRuntime->'$(MonoSourceFullPath)\sdks\out\android-%(Identity)-$(_MonoSdksConfiguration)\lib\%(NativeLibraryPrefix)%(OutputMonoPosixHelperFilename).%(NativeLibraryExtension)')"
      />
      <_InstallMonoPosixHelperOutput
          Condition=" '%(_MonoRuntime.OutputMonoPosixHelperFilename)' != '' "
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputMonoPosixHelperFilename).%(NativeLibraryExtension)')"
      />
      <_InstallUnstrippedMonoPosixHelperOutput
          Condition=" '%(_MonoRuntime.OutputMonoPosixHelperFilename)' != '' "
          Include="@(_MonoRuntime->'$(_MSBuildDir)\lib\%(Identity)\%(OutputMonoPosixHelperFilename).d.%(NativeLibraryExtension)')"
      />
      <_RuntimeEglibHeaderSource
          Include="@(_MonoRuntime->'$(MonoSourceFullPath)\sdks\builds\android-%(Identity)-$(_MonoSdksConfiguration)\mono\eglib\eglib-config.h')"
      />
      <_RuntimeEglibHeaderOutput
          Include="@(_MonoRuntime->'$(_OutputIncludeDir)%(Identity)\eglib\eglib-config.h')"
      />
      <_MonoConstsSource
          Include="$(MonoSourceFullPath)\mcs\build\common\Consts.cs"
      />
      <_MonoConstsOutput
          Include="$(_OutputIncludeDir)Consts.cs"
      />
    </ItemGroup>
  </Target>

  <Target Name="_BuildRuntimes"
      Condition=" '@(_MonoRuntime)' != '' Or '@(_MonoCrossRuntime)' != '' "
      DependsOnTargets="_GetRuntimesOutputItems"
      Outputs="@(_RuntimeSource);@(_RuntimeBinarySource);@(_CrossRuntimeBinarySource);@(_ProfilerSource);@(_MonoPosixHelperSource);@(_RuntimeEglibHeaderSource);@(_MonoBtlsSource);@(_BclTestOutput)">
    <Exec
        Command="make DISABLE_IOS=1 $(MakeConcurrency) @(_MonoRuntime->'package-android-%(Identity)', ' ') @(_MonoCrossRuntime->'package-android-%(Identity)', ' ') $(_MonoSdksParameters)"
        IgnoreStandardErrorWarningFormat="True"
        WorkingDirectory="$(MonoSourceFullPath)\sdks\builds"
    />
    <Exec
        Condition=" '%(_MonoRuntime.BuildTests)' == 'True' "
        Command="make DISABLE_IOS=1 $(MakeConcurrency) -C android-%(_MonoRuntime.Identity)-$(_MonoSdksConfiguration) -C runtime test"
        IgnoreStandardErrorWarningFormat="True"
        WorkingDirectory="$(MonoSourceFullPath)\sdks\builds"
    />
    <Exec
        Condition=" '%(MonoTestAssembly.TestType)' == 'xunit' "
        Command="make DISABLE_IOS=1 -C $(MonoSourceFullPath)\mcs\class\%(MonoTestAssembly.SourcePath) xunit-test-local"
        WorkingDirectory="$(MonoSourceFullPath)"
    />
  </Target>

  <Target Name="_InstallRuntimes"
      DependsOnTargets="_GetRuntimesOutputItems"
      Inputs="@(_RuntimeSource);@(_RuntimeBinarySource);@(_CrossRuntimeBinarySource);@(_ProfilerSource);@(_MonoPosixHelperSource);@(_RuntimeEglibHeaderSource);@(_MonoBtlsSource)"
      Outputs="@(_InstallRuntimeOutput);@(_InstallRuntimeBinaryOutput);@(_InstallCrossRuntimeBinaryOutput);@(_InstallProfilerOutput);@(_InstallMonoPosixHelperOutput);@(_RuntimeEglibHeaderOutput)">
    <ItemGroup>
      <_BclTestAssemblyReference Include="@(MonoTestAssembly)" Condition="'%(MonoTestAssembly.TestType)' == 'reference'" />
      <_BclTestAssemblyXUnit  Include="@(MonoTestAssembly)" Condition="'%(MonoTestAssembly.TestType)' == 'xunit'" />
      <_BclTestAssemblyNUnit  Include="@(MonoTestAssembly)" Condition="'%(MonoTestAssembly.TestType)' == ''" />
      <_BclTestAssemblySource Include="@(_BclTestAssemblyReference->'$(MonoSourceFullPath)\mcs\class\lib\monodroid\%(Identity)')" />
      <_BclTestAssemblySource Include="@(_BclTestAssemblyReference->'$(MonoSourceFullPath)\mcs\class\lib\monodroid\%(Filename).pdb')" Condition="Exists('@(_BclTestAssemblyReference->'$(MonoSourceFullPath)\mcs\class\lib\monodroid\%(Filename).pdb')')" />
      <_BclTestAssemblySource Include="@(_BclTestAssemblyXUnit->'$(MonoSourceFullPath)\mcs\class\%(SourcePath)\%(Identity)')" />
      <_BclTestAssemblySource Include="@(_BclTestAssemblyXUnit->'$(MonoSourceFullPath)\mcs\class\%(SourcePath)\%(Filename).pdb')" />
      <_BclTestAssemblySource Include="@(_BclTestAssemblyNUnit->'$(MonoSourceFullPath)\mcs\class\lib\monodroid\tests\%(Identity)')" />
      <_BclTestAssemblySource Include="@(_BclTestAssemblyNUnit->'$(MonoSourceFullPath)\mcs\class\lib\monodroid\tests\%(Filename).pdb')" />
      <_BclTestAssemblySource Include="@(MonoTestRunner->'$(MonoSourceFullPath)\mcs\class\lib\monodroid\%(Identity)')" />
      <_BclTestAssemblySource Include="@(MonoTestRunner->'$(MonoSourceFullPath)\mcs\class\lib\monodroid\%(Filename).pdb')" />
    </ItemGroup>
    <Copy
        SourceFiles="@(_BclTestAssemblySource)"
        DestinationFolder="$(XAInstallPrefix)\..\..\bcl-tests"
    />
    <Touch
        Files="@(_BclTestAssemblySource->'$(XAInstallPrefix)\..\..\bcl-tests\%(Filename)%(Extension)')"
    />
    <ItemGroup>
      <_BclTestContent      Include="$(MonoSourceFullPath)\mcs\class\%(MonoTestAssembly.SourcePath)\Test\**\*.*" />
      <_BclTestContent      Remove="$(MonoSourceFullPath)\mcs\class\%(MonoTestAssembly.SourcePath)\Test\**\*.cs" />
      <_BclTestContent      Remove="$(MonoSourceFullPath)\mcs\class\%(MonoTestAssembly.SourcePath)\Test\**\.gitattributes" />
      <_BclTestContentDest  Include="@(_BclTestContent->'$(XAInstallPrefix)\..\..\bcl-tests\Test\%(RecursiveDir)%(Filename)%(Extension)')" />
    </ItemGroup>
    <ItemGroup>
      <_BclTestContent      Include="$(MonoSourceFullPath)\mcs\class\System.IO.Compression\test.nupkg" />
      <_BclTestContentDest  Include="$(XAInstallPrefix)\..\..\bcl-tests\test.nupkg" />
      <_BclTestContent      Include="$(MonoSourceFullPath)\mcs\class\System.IO.Compression\archive.zip" />
      <_BclTestContentDest  Include="$(XAInstallPrefix)\..\..\bcl-tests\archive.zip" />
    </ItemGroup>
    <ItemGroup>
      <_ZipTestContent      Include="$(MonoSourceFullPath)\mcs\class\System.IO.Compression.FileSystem\foo\**\*.*" />
      <_ZipTestContentDest  Include="@(_ZipTestContent->'$(XAInstallPrefix)\..\..\bcl-tests\foo\%(RecursiveDir)%(Filename)%(Extension)')" />
      <_BclTestContent      Include="@(_ZipTestContent)" />
      <_BclTestContentDest  Include="@(_ZipTestContentDest)" />
    </ItemGroup>
    <Copy
        SourceFiles="@(_BclTestContent)"
        DestinationFiles="@(_BclTestContentDest)"
    />
    <Exec
        Condition="!Exists('$(XAInstallPrefix)\..\..\bcl-tests\Test\test.db')"
        Command="sqlite3 &quot;$(XAInstallPrefix)\..\..\bcl-tests\Test\test.db&quot; &lt; &quot;$(MonoSourceFullPath)\mcs\class\Mono.Data.Sqlite\Test\test.sql&quot;"
    />
    <Exec
        Command="zip -r bcl-tests.zip ."
        WorkingDirectory="$(XAInstallPrefix)\..\..\bcl-tests"
    />
    <Touch
        Files="$(XAInstallPrefix)\..\..\bcl-tests\bcl-tests.zip"
    />

    <MakeDir
        Directories="$(_MSBuildDir)\lib\%(_MonoRuntime.Identity)"
    />
    <MakeDir
        Condition=" 'host-$(HostOS)' == '%(_MonoRuntime.Identity)' "
        Directories="$(_MSBuildDir)\$(HostOS)"
    />
    <MakeDir
        Directories="$(_OutputIncludeDir)%(_MonoRuntime.Identity)\eglib"
    />
    <Copy
        SourceFiles="@(_RuntimeEglibHeaderSource)"
        DestinationFiles="@(_RuntimeEglibHeaderOutput)"
    />
    <Touch Files="@(_RuntimeEglibHeaderOutput)" />

    <Copy
        SourceFiles="@(_MonoConstsSource)"
        DestinationFiles="@(_MonoConstsOutput)"
    />
    <Touch Files="@(_MonoConstsOutput)" />

    <Copy
        SourceFiles="@(_RuntimeSource)"
        DestinationFiles="@(_InstallRuntimeOutput)"
    />
    <Copy
        SourceFiles="@(_RuntimeSource)"
        DestinationFiles="@(_InstallUnstrippedRuntimeOutput)"
    />
    <Exec
        Condition=" '$(Configuration)' != 'Debug' Or '%(_MonoRuntime.NativeLibraryExtension)' == 'dll' "
        Command="&quot;%(_MonoRuntime.Strip)&quot; %(_MonoRuntime.StripFlags) &quot;$(_MSBuildDir)\lib\%(_MonoRuntime.Identity)\%(_MonoRuntime.OutputRuntimeFilename).%(_MonoRuntime.NativeLibraryExtension)&quot;"
    />
    <Touch Files="@(_InstallRuntimeOutput);@(_InstallUnstrippedRuntimeOutput)" />

    <Copy
        SourceFiles="@(_RuntimeBinarySource)"
        DestinationFiles="@(_InstallRuntimeBinaryOutput)"
    />
    <Touch Files="@(_InstallRuntimeBinaryOutput)" />

    <Copy
        SourceFiles="@(_CrossRuntimeBinarySource)"
        DestinationFiles="@(_InstallCrossRuntimeBinaryOutput)"
    />
    <Copy
        SourceFiles="@(_CrossRuntimeBinarySource)"
        DestinationFiles="@(_InstallUnstrippedCrossRuntimeBinaryOutput)"
    />
    <Exec
        Condition=" '$(Configuration)' != 'Debug' Or '%(_MonoCrossRuntime.ExeSuffix)' == '.exe' "
        Command="&quot;%(_MonoCrossRuntime.Strip)&quot; %(_MonoCrossRuntime.StripFlags) &quot;$(_MSBuildDir)\%(_MonoCrossRuntime.InstallPath)%(_MonoCrossRuntime.CrossMonoName)%(_MonoCrossRuntime.ExeSuffix)&quot;"
    />
    <Touch Files="@(_InstallCrossRuntimeBinaryOutput);@(_InstallCrossRuntimeBinaryOutput)" />

    <Copy
        SourceFiles="@(_ProfilerSource)"
        DestinationFiles="@(_InstallProfilerOutput)"
    />
    <Copy
        SourceFiles="@(_ProfilerSource)"
        DestinationFiles="@(_InstallUnstrippedProfilerOutput)"
    />
    <Exec
        Condition=" '$(Configuration)' != 'Debug' And '%(_MonoRuntime.OutputProfilerFilename)' != '' "
        Command="&quot;%(_MonoRuntime.Strip)&quot; %(_MonoRuntime.StripFlags) &quot;$(_MSBuildDir)\lib\%(_MonoRuntime.Identity)\%(_MonoRuntime.OutputProfilerFilename).%(_MonoRuntime.NativeLibraryExtension)&quot;"
    />
    <Touch Files="@(_InstallProfilerOutput);@(_InstallUnstrippedProfilerOutput)" />

    <Copy
        SourceFiles="@(_MonoBtlsSource)"
        DestinationFiles="@(_InstallMonoBtlsOutput)"
    />
    <Copy
        SourceFiles="@(_MonoBtlsSource)"
        DestinationFiles="@(_InstallUnstrippedMonoBtlsOutput)"
    />
    <Exec
        Condition=" '$(Configuration)' != 'Debug' And '%(_MonoRuntime.OutputMonoBtlsFilename)' != '' "
        Command="&quot;%(_MonoRuntime.Strip)&quot; %(_MonoRuntime.StripFlags) &quot;$(_MSBuildDir)\lib\%(_MonoRuntime.Identity)\%(_MonoRuntime.OutputMonoBtlsFilename).%(_MonoRuntime.NativeLibraryExtension)&quot;"
    />
    <Touch Files="@(_InstallMonoBtlsOutput);@(_InstallUnstrippedMonoBtlsOutput)" />

    <Copy
        SourceFiles="@(_MonoPosixHelperSource)"
        DestinationFiles="@(_InstallMonoPosixHelperOutput)"
    />
    <Copy
        SourceFiles="@(_MonoPosixHelperSource)"
        DestinationFiles="@(_InstallUnstrippedMonoPosixHelperOutput)"
    />
    <Exec
        Condition=" '$(Configuration)' != 'Debug' And '%(_MonoRuntime.OutputMonoPosixHelperFilename)' != '' "
        Command="&quot;%(_MonoRuntime.Strip)&quot; %(_MonoRuntime.StripFlags) &quot;$(_MSBuildDir)\lib\%(_MonoRuntime.Identity)\%(_MonoRuntime.OutputMonoPosixHelperFilename).%(_MonoRuntime.NativeLibraryExtension)&quot;"
    />
    <Touch Files="@(_InstallMonoPosixHelperOutput);@(_InstallUnstrippedMonoPosixHelperOutput)" />
  </Target>
  <ItemGroup>
    <_MonoCilStripSource  Include="$(_MonoOutputDir)\mono-cil-strip.exe" />
    <_MonoCilStripDest    Include="$(_MSBuildDir)\cil-strip.exe" />
    <_MonoCilStripSource
        Condition=" '$(_DebugFileExt)' == '.mdb' "
        Include="$(_MonoOutputDir)\mono-cil-strip.exe.mdb"
    />
    <_MonoCilStripDest
        Condition=" '$(_DebugFileExt)' == '.mdb' "
        Include="$(_MonoOutputDir)\cil-strip.exe.mdb"
    />
    <_MonoCilStripSource
        Condition=" '$(_DebugFileExt)' == '.pdb' "
        Include="$(_MonoOutputDir)\mono-cil-strip.pdb"
    />
    <_MonoCilStripDest
        Condition=" '$(_DebugFileExt)' == '.pdb' "
        Include="$(_MSBuildDir)\cil-strip.pdb"
    />
  </ItemGroup>
  <Target Name="_InstallCilStrip"
      Inputs="@(_MonoCilStripSource)"
      Outputs="@(_MonoCilStripDest)">
    <MakeDir Directories="$(_MSBuildDir)" />
    <Copy
        SourceFiles="@(_MonoCilStripSource)"
        DestinationFiles="@(_MonoCilStripDest)"
    />
  </Target>
  <Target Name="_InstallMonoDoc"
      Inputs="@(_MonoDocCopyItems);$(_MonoOutputDir)\mdoc.exe"
      Outputs="@(_MonoDocInstalledItems)">
    <MakeDir Directories="$(_MSBuildDir)" />
    <Copy
        SourceFiles="@(_MonoDocCopyItems)"
        DestinationFolder="$(_MSBuildDir)"
    />
    <Exec
        Command="$(RemapAssemblyRefTool) &quot;$(_MonoOutputDir)\mdoc.exe&quot; &quot;$(_MSBuildDir)\mdoc.exe&quot; Mono.Cecil &quot;..\..\bin\Build$(Configuration)\Xamarin.Android.Cecil.dll&quot;"
    />
    <Touch
        Files="@(_MonoDocInstalledItems)"
    />
  </Target>
  <Target Name="_InstallMonoUtilities"
      Inputs="@(_MonoUtilitySource)"
      Outputs="@(_MonoUtilityDest)">
    <MakeDir Directories="$(_MSBuildDir)" />
    <Copy
        SourceFiles="@(_MonoUtilitySource)"
        DestinationFiles="@(_MonoUtilityDest)"
    />
    <ItemGroup>
      <_MonoUtilityExe Include="@(_MonoUtility)">
        <Source>$(_MonoOutputDir)\%(Identity)</Source>
        <Dest>$(_MSBuildDir)\%(Identity)</Dest>
      </_MonoUtilityExe>
    </ItemGroup>
    <Exec
        Command="$(RemapAssemblyRefTool) &quot;%(_MonoUtilityExe.Source)&quot; &quot;%(_MonoUtilityExe.Dest)&quot; Mono.Cecil &quot;..\..\bin\Build$(Configuration)\Xamarin.Android.Cecil.dll&quot;"
    />
  </Target>
  <Target Name="_InstallBcl"
      Inputs="@(_BclProfileItems)"
      Outputs="@(_BclInstalledItem);$(_BclFrameworkDir)RedistList\FrameworkList.xml">
    <MakeDir Directories="$(_BclFrameworkDir)" />
    <MakeDir Directories="$(_BclFrameworkDir)RedistList" />
    <MakeDir Directories="$(_BclFrameworkDir)Facades" />
    <ItemGroup>
      <_PackageConfigFiles Include="$(_SourceTopDir)\src\Xamarin.Android.Build.Tasks\packages.config" />
    </ItemGroup>
    <ItemGroup>
      <_Facades Include="$(_MonoProfileDir)\Facades\*.dll" />
    </ItemGroup>
    <Copy
        SourceFiles="@(_BclProfileItems)"
        DestinationFiles="@(_BclInstalledItem)"
    />
    <Copy
        SourceFiles="@(_Facades)"
        DestinationFolder="$(_BclFrameworkDir)Facades"
    />
    <Touch
        Files="@(_BclInstalledItem)"
    />
    <ItemGroup>
      <FrameworkList Include="&lt;FileList Redist=&quot;MonoAndroid&quot; Name=&quot;Xamarin.Android Base Class Libraries&quot;&gt;" />
      <FrameworkList Include="&lt;/FileList&gt;" />
    </ItemGroup>
    <WriteLinesToFile
        File="$(_BclFrameworkDir)RedistList\FrameworkList.xml"
        Lines="@(FrameworkList)"
        Overwrite="True"
    />
  </Target>

  <Target Name="GetMonoBundleItems"
      DependsOnTargets="_GetRuntimesOutputItems;_PrepareLlvmItems">
    <ItemGroup>
      <BundleItem Include="@(_BclInstalledItem)" />
      <BundleItem Include="@(_MonoDocInstalledItems)" />
      <BundleItem Include="@(_MonoCilStripDest)" />
      <BundleItem Include="@(_MonoUtilityDest)" />
      <BundleItem Include="@(MonoFacadeAssembly->'$(_BclFrameworkDir)Facades\%(Identity)')" />
      <BundleItem Include="$(_BclFrameworkDir)RedistList\FrameworkList.xml" />
      <BundleItem Include="@(_InstallRuntimeOutput)" />
      <BundleItem Include="@(_InstallUnstrippedRuntimeOutput)" />
      <BundleItem Include="@(_InstallRuntimeBinaryOutput)" />
      <BundleItem Include="@(_InstallCrossRuntimeBinaryOutput)" />
      <BundleItem Include="@(_InstallUnstrippedCrossRuntimeBinaryOutput)" />
      <BundleItem Include="@(_InstallProfilerOutput)" />
      <BundleItem Include="@(_InstallUnstrippedProfilerOutput)" />
      <BundleItem Include="@(_InstallMonoBtlsOutput)" />
      <BundleItem Include="@(_InstallUnstrippedMonoBtlsOutput)" />
      <BundleItem Include="@(_InstallMonoPosixHelperOutput)" />
      <BundleItem Include="@(_InstallUnstrippedMonoPosixHelperOutput)" />
      <BundleItem Include="@(_RuntimeEglibHeaderOutput)" />
      <BundleItem Include="@(_MonoConstsOutput)" />
      <BundleItem Include="@(_LlvmTargetBinary)" />
      <BundleItem Include="$(_MSBuildDir)\%(_MonoCrossRuntime.InstallPath)%(_MonoCrossRuntime.CrossMonoName).d%(_MonoCrossRuntime.ExeSuffix)" Condition=" '@(_MonoCrossRuntime)' != '' " />
      <BundleItem Include="$(_MSBuildDir)\%(_MonoCrossRuntime.InstallPath)%(_MonoCrossRuntime.CrossMonoName)%(_MonoCrossRuntime.ExeSuffix)" Condition=" '@(_MonoCrossRuntime)' != '' " />
      <BundleItem Include="@(_BclTestOutput)" />
    </ItemGroup>
  </Target>
  <Target Name="ForceBuild"
      DependsOnTargets="GetMonoBundleItems;$(ForceBuildDependsOn)"
      Inputs="$(MonoSourceFullPath)\autogen.sh;$(LlvmSourceFullPath)\CMakeLists.txt"
      Outputs="@(BundleItem)">
  </Target>
  <Target Name="_BuildUnlessCached"
      DependsOnTargets="_SetAutogenShTimeToLastCommitTimestamp;GetMonoBundleItems"
      Inputs="$(MonoSourceFullPath)\autogen.sh;$(LlvmSourceFullPath)\CMakeLists.txt"
      Outputs="@(BundleItem)">
    <PropertyGroup>
      <_Now>$([System.DateTime]::Now.Ticks)</_Now>
    </PropertyGroup>
    <MSBuild
        Projects="$(MSBuildThisFileDirectory)\mono-runtimes.csproj"
        Properties="_ForceXbuildToNotCacheTargets=$(_Now)"
        Targets="ForceBuild"
    />
  </Target>
  <Target Name="_CleanRuntimes"
      AfterTargets="Clean">
    <Exec
        Condition=" '@(_MonoRuntime)' != '' Or '@(_MonoCrossRuntime)' != '' Or '@(_LlvmRuntime)' != '' "
        Command="make $(MakeConcurrency) @(_MonoRuntime->'clean-android-%(Identity)', ' ') @(_MonoCrossRuntime->'clean-android-%(Identity)', ' ') @(_LlvmRuntime->'clean-llvm-%(Identity)', ' ') $(_MonoSdksParameters)"
        IgnoreStandardErrorWarningFormat="True"
        WorkingDirectory="$(MonoSourceFullPath)\sdks\builds"
    />
  </Target>

  <Target Name="CoreCompile"
      DependsOnTargets="_BuildRuntimes">
  </Target>
</Project>
