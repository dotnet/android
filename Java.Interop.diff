diff --git a/src/Java.Interop.Tools.JavaCallableWrappers/Java.Interop.Tools.JavaCallableWrappers/JavaCallableWrapperGenerator.cs b/src/Java.Interop.Tools.JavaCallableWrappers/Java.Interop.Tools.JavaCallableWrappers/JavaCallableWrapperGenerator.cs
index bcd073bd..43128177 100644
--- a/src/Java.Interop.Tools.JavaCallableWrappers/Java.Interop.Tools.JavaCallableWrappers/JavaCallableWrapperGenerator.cs
+++ b/src/Java.Interop.Tools.JavaCallableWrappers/Java.Interop.Tools.JavaCallableWrappers/JavaCallableWrapperGenerator.cs
@@ -59,6 +59,7 @@ namespace Java.Interop.Tools.JavaCallableWrappers {
 		List<Signature> methods = new List<Signature> ();
 		List<Signature> ctors   = new List<Signature> ();
 		List<JavaCallableWrapperGenerator> children;
+		List<string> overriddenMethods;
 		readonly IMetadataResolver cache;
 
 		[Obsolete ("Use the TypeDefinitionCache overload for better performance.")]
@@ -80,6 +81,7 @@ namespace Java.Interop.Tools.JavaCallableWrappers {
 			}
 		}
 
+		public  List<string>    OverriddenMethods               => overriddenMethods;
 		public  string          ApplicationJavaClass            { get; set; }
 		public  JavaPeerStyle   CodeGenerationTarget            { get; set; }
 
@@ -89,7 +91,7 @@ namespace Java.Interop.Tools.JavaCallableWrappers {
 
 		/// <summary>
 		/// The Java source code to be included in Instrumentation.onCreate
-		/// 
+		///
 		/// Originally came from MonoRuntimeProvider.java delimited by:
 		/// // Mono Runtime Initialization {{{
 		/// // }}}
@@ -497,6 +499,7 @@ namespace Java.Interop.Tools.JavaCallableWrappers {
 
 		public void Generate (TextWriter writer)
 		{
+			overriddenMethods = new List<string> ();
 			if (!string.IsNullOrEmpty (package)) {
 				writer.WriteLine ("package " + package + ";");
 				writer.WriteLine ();
@@ -530,6 +533,17 @@ namespace Java.Interop.Tools.JavaCallableWrappers {
 				}
 
 			GenerateFooter (writer);
+
+			string javaTypeName = $"{package}.{name}";
+			AddOverridenMethods (methods);
+			AddOverridenMethods (ctors);
+
+			void AddOverridenMethods (List<Signature> list)
+			{
+				foreach (Signature sig in list) {
+					overriddenMethods.Add ($"{javaTypeName}:{sig.Method}");
+				}
+			}
 		}
 
 		public void Generate (string outputPath)
@@ -958,5 +972,3 @@ namespace Java.Interop.Tools.JavaCallableWrappers {
 		}
 	}
 }
-
-
