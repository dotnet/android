<Project>

  <PropertyGroup>
    <DotNetTargetFrameworkVersion>8.0</DotNetTargetFrameworkVersion>
    <DotNetTargetFramework>net$(DotNetTargetFrameworkVersion)</DotNetTargetFramework>
    <DotNetAndroidTargetFramework>$(DotNetTargetFramework)-android</DotNetAndroidTargetFramework>
    <!-- Used for bootstrap, command-line tooling, and desktop NUnit projects -->
    <DotNetStableTargetFramework>net7.0</DotNetStableTargetFramework>
    <TargetFrameworkNETStandard>netstandard2.0</TargetFrameworkNETStandard>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <BuildOutputDirectory>$(MSBuildThisFileDirectory)bin\$(Configuration)\</BuildOutputDirectory>
    <BootstrapOutputDirectory>$(MSBuildThisFileDirectory)bin\Build$(Configuration)\</BootstrapOutputDirectory>
    <TestOutputDirectory>$(MSBuildThisFileDirectory)bin\Test$(Configuration)\</TestOutputDirectory>
    <BootstrapTasksAssembly>$(BootstrapOutputDirectory)$(TargetFrameworkNETStandard)\Xamarin.Android.Tools.BootstrapTasks.dll</BootstrapTasksAssembly>
    <PrepTasksAssembly>$(BootstrapOutputDirectory)$(TargetFrameworkNETStandard)\xa-prep-tasks.dll</PrepTasksAssembly>
    <DotNetPreviewPath Condition=" '$(DotNetPreviewPath)' == '' ">$(BuildOutputDirectory)dotnet\</DotNetPreviewPath>
    <DotNetPreviewTool Condition=" '$(DotNetPreviewTool)' == '' ">$(DotNetPreviewPath)dotnet</DotNetPreviewTool>
    <!-- Copy PackageReference content to OutputDir for our build tasks, tests, and installer creation logic. This no longer happens by default in short-form projects. -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- Ensure reference assemblies copied to bin -->
    <ProduceReferenceAssemblyInOutDir>true</ProduceReferenceAssemblyInOutDir>
    <!-- Ensure command-line apps can use a newer .NET -->
    <RollForward>Major</RollForward>
    <!-- We don't need to be warned that we are using a preview .NET -->
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <!-- Disables the transitive restore of packages like Microsoft.AspNetCore.App.Ref, Microsoft.WindowsDesktop.App.Ref -->
    <DisableTransitiveFrameworkReferenceDownloads>true</DisableTransitiveFrameworkReferenceDownloads>
  </PropertyGroup>

  <PropertyGroup>
    <ProductVersion>13.2.99</ProductVersion>
    <!-- NuGet package version numbers. See Documentation/guides/OneDotNet.md.
         Rules:
         * Major/Minor match Android stable API level, such as 30.0 for API 30.
         * Bump first digit of the patch version for feature releases (and reset the first two digits to 0)
    -->
    <AndroidPackVersion>34.0.0</AndroidPackVersion>
    <AndroidPackVersionSuffix>preview.4</AndroidPackVersionSuffix>
  </PropertyGroup>

  <!-- Common <PackageReference/> versions -->
  <PropertyGroup>
    <LibZipSharpVersion>2.1.0</LibZipSharpVersion>
    <MicroBuildCoreVersion>1.0.0</MicroBuildCoreVersion>
    <MonoCecilVersion>0.11.4</MonoCecilVersion>
    <NewtonsoftJsonPackageVersion>13.0.1</NewtonsoftJsonPackageVersion>
    <NuGetApiPackageVersion>5.4.0</NuGetApiPackageVersion>
    <LZ4PackageVersion>1.1.11</LZ4PackageVersion>
    <MonoOptionsVersion>6.12.0.148</MonoOptionsVersion>
    <SystemCollectionsImmutableVersion>6.0.0</SystemCollectionsImmutableVersion>
    <SystemRuntimeCompilerServicesUnsafeVersion>6.0.0</SystemRuntimeCompilerServicesUnsafeVersion>
    <ELFSharpVersion>2.16.1</ELFSharpVersion>
    <MdocPackageVersion Condition=" '$(MdocPackageVersion)' == '' ">5.8.9.2</MdocPackageVersion>
  </PropertyGroup>

  <!-- Properties to help us run managed assemblies on various runtimes.
       Ex:
       * Mono: mono xaprepare.exe
       * Windows .NET: xaprepare.exe
       * dotnet: dotnet xaprepare.dll
-->
  <PropertyGroup Condition=" '$(MSBuildRuntimeType)' != 'Core' ">
    <ManagedToolInvocationRuntime>$(Runtime) </ManagedToolInvocationRuntime>
    <ManagedToolInvocationExtension>.exe</ManagedToolInvocationExtension>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(MSBuildRuntimeType)' == 'Core' ">
    <ManagedToolInvocationRuntime>dotnet </ManagedToolInvocationRuntime>
    <ManagedToolInvocationExtension>.dll</ManagedToolInvocationExtension>
  </PropertyGroup>
</Project>
