import android.os;
import android.view;
import android.animation;

interface Test {
	void arrayList(inout List list);
	void map(inout Map m);
}

####

// This file is automatically generated and not supposed to be modified.
using System;
using Boolean = System.Boolean;
using String = System.String;
using List = Android.Runtime.JavaList;
using Map = Android.Runtime.JavaDictionary;
using Android;
	public interface ITest : global::Android.OS.IInterface
	{
		void ArrayList (Android.Runtime.JavaList list);
		void Map (Android.Runtime.JavaDictionary m);
	}

	public abstract class ITestStub : global::Android.OS.Binder, global::Android.OS.IInterface, ITest
	{
		const string descriptor = "Test";
		public ITestStub ()
		{
			this.AttachInterface (this, descriptor);
		}

		public static ITest AsInterface (global::Android.OS.IBinder obj)
		{
			if (obj == null)
				return null;
			var iin = (global::Android.OS.IInterface) obj.QueryLocalInterface (descriptor);
			if (iin != null && iin is ITest)
				return (ITest) iin;
			return new Proxy (obj);
		}

		public global::Android.OS.IBinder AsBinder ()
		{
			return this;
		}

		protected override bool OnTransact (int code, global::Android.OS.Parcel data, global::Android.OS.Parcel reply, int flags)
		{
			switch (code) {
			case global::Android.OS.BinderConsts.InterfaceTransaction:
				reply.WriteString (descriptor);
				return true;

			case TransactionArrayList: {
				data.EnforceInterface (descriptor);
				Android.Runtime.JavaList arg0 = default (Android.Runtime.JavaList);
				arg0 = (global::Android.Runtime.JavaList) data.ReadArrayList ((global::Java.Lang.ClassLoader) null);
				this.ArrayList (arg0);
				reply.WriteNoException ();
				reply.WriteList (arg0);
				return true;
				}

			case TransactionMap: {
				data.EnforceInterface (descriptor);
				Android.Runtime.JavaDictionary arg0 = default (Android.Runtime.JavaDictionary);
				arg0 = (global::Android.Runtime.JavaDictionary) data.ReadHashMap ((global::Java.Lang.ClassLoader) null);
				this.Map (arg0);
				reply.WriteNoException ();
				reply.WriteMap (arg0);
				return true;
				}

			}
			return base.OnTransact (code, data, reply, flags);
		}

		public class Proxy : Java.Lang.Object, ITest
		{
			global::Android.OS.IBinder remote;

			public Proxy (global::Android.OS.IBinder remote)
			{
				this.remote = remote;
			}

			public global::Android.OS.IBinder AsBinder ()
			{
				return remote;
			}

			public string GetInterfaceDescriptor ()
			{
				return descriptor;
			}

			public void ArrayList (Android.Runtime.JavaList list)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteList (list);
					remote.Transact (ITestStub.TransactionArrayList, __data, __reply, 0);
					__reply.ReadException ();
					__reply.ReadList (list, (global::Java.Lang.ClassLoader) null);

				} finally {
					__data.Recycle ();
				}

			}


			public void Map (Android.Runtime.JavaDictionary m)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteMap (m);
					remote.Transact (ITestStub.TransactionMap, __data, __reply, 0);
					__reply.ReadException ();
					__reply.ReadMap (m, (global::Java.Lang.ClassLoader) null);

				} finally {
					__data.Recycle ();
				}

			}


		}

		internal const int TransactionArrayList = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 0;

		internal const int TransactionMap = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 1;

		public abstract void ArrayList (Android.Runtime.JavaList list);

		public abstract void Map (Android.Runtime.JavaDictionary m);

	}

