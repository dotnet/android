package com.xamarin.test;
interface Test {
	void test0();
	int test1 ();
	// now those test methods are explicitly added 'inout' because otherwise Android SDK aidl rejects it...
	int test2 (inout int [] args);
	boolean test3 (inout boolean [] args);
	byte test4 (inout byte [] args);
	char test5 (inout char [] args);
	long test6 (inout long [] args);
	float test7 (inout float [] args);
	double test8 (inout double [] args);
	String test9 (inout String [] args);
	// thought that it's missing 'short' ? It's not supported - http://stackoverflow.com/questions/6742167/android-aidl-support-short-type
	
	void test10 (in byte [] args);
	void test11 (out byte [] args);
	void test12 (inout byte [] args);
	
	int [] test20 ();
	boolean [] test21 ();
	byte [] test22 ();
	String [] test23 ();
}

####

// This file is automatically generated and not supposed to be modified.
using System;
using Boolean = System.Boolean;
using String = System.String;
using List = Android.Runtime.JavaList;
using Map = Android.Runtime.JavaDictionary;

namespace Com.Xamarin.Test
{
	public interface ITest : global::Android.OS.IInterface
	{
		void Test0 ();
		int Test1 ();
		int Test2 (int [] args);
		bool Test3 (bool [] args);
		sbyte Test4 (byte [] args);
		char Test5 (char [] args);
		long Test6 (long [] args);
		float Test7 (float [] args);
		double Test8 (double [] args);
		String Test9 (String [] args);
		void Test10 (byte [] args);
		void Test11 (byte [] args);
		void Test12 (byte [] args);
		int [] Test20 ();
		bool [] Test21 ();
		byte [] Test22 ();
		String [] Test23 ();
	}

	public abstract class ITestStub : global::Android.OS.Binder, global::Android.OS.IInterface, Com.Xamarin.Test.ITest
	{
		const string descriptor = "com.xamarin.test.Test";
		public ITestStub ()
		{
			this.AttachInterface (this, descriptor);
		}

		public static Com.Xamarin.Test.ITest AsInterface (global::Android.OS.IBinder obj)
		{
			if (obj == null)
				return null;
			var iin = (global::Android.OS.IInterface) obj.QueryLocalInterface (descriptor);
			if (iin != null && iin is Com.Xamarin.Test.ITest)
				return (Com.Xamarin.Test.ITest) iin;
			return new Proxy (obj);
		}

		public global::Android.OS.IBinder AsBinder ()
		{
			return this;
		}

		protected override bool OnTransact (int code, global::Android.OS.Parcel data, global::Android.OS.Parcel reply, int flags)
		{
			switch (code) {
			case global::Android.OS.BinderConsts.InterfaceTransaction:
				reply.WriteString (descriptor);
				return true;

			case TransactionTest0: {
				data.EnforceInterface (descriptor);
				this.Test0 ();
				reply.WriteNoException ();
				return true;
				}

			case TransactionTest1: {
				data.EnforceInterface (descriptor);
				var result = this.Test1 ();
				reply.WriteNoException ();
				reply.WriteInt (result);
				return true;
				}

			case TransactionTest2: {
				data.EnforceInterface (descriptor);
				int [] arg0 = default (int []);
				arg0 = data.CreateIntArray ();
				var result = this.Test2 (arg0);
				reply.WriteNoException ();
				reply.WriteInt (result);
				reply.WriteIntArray (arg0);
				return true;
				}

			case TransactionTest3: {
				data.EnforceInterface (descriptor);
				bool [] arg0 = default (bool []);
				arg0 = data.CreateBooleanArray ();
				var result = this.Test3 (arg0);
				reply.WriteNoException ();
				reply.WriteInt (result ? 1 : 0);
				reply.WriteBooleanArray (arg0);
				return true;
				}

			case TransactionTest4: {
				data.EnforceInterface (descriptor);
				byte [] arg0 = default (byte []);
				arg0 = data.CreateByteArray ();
				var result = this.Test4 (arg0);
				reply.WriteNoException ();
				reply.WriteByte (result);
				reply.WriteByteArray (arg0);
				return true;
				}

			case TransactionTest5: {
				data.EnforceInterface (descriptor);
				char [] arg0 = default (char []);
				arg0 = data.CreateCharArray ();
				var result = this.Test5 (arg0);
				reply.WriteNoException ();
				reply.WriteInt ((int) result);
				reply.WriteCharArray (arg0);
				return true;
				}

			case TransactionTest6: {
				data.EnforceInterface (descriptor);
				long [] arg0 = default (long []);
				arg0 = data.CreateLongArray ();
				var result = this.Test6 (arg0);
				reply.WriteNoException ();
				reply.WriteLong (result);
				reply.WriteLongArray (arg0);
				return true;
				}

			case TransactionTest7: {
				data.EnforceInterface (descriptor);
				float [] arg0 = default (float []);
				arg0 = data.CreateFloatArray ();
				var result = this.Test7 (arg0);
				reply.WriteNoException ();
				reply.WriteFloat (result);
				reply.WriteFloatArray (arg0);
				return true;
				}

			case TransactionTest8: {
				data.EnforceInterface (descriptor);
				double [] arg0 = default (double []);
				arg0 = data.CreateDoubleArray ();
				var result = this.Test8 (arg0);
				reply.WriteNoException ();
				reply.WriteDouble (result);
				reply.WriteDoubleArray (arg0);
				return true;
				}

			case TransactionTest9: {
				data.EnforceInterface (descriptor);
				String [] arg0 = default (String []);
				arg0 = data.CreateStringArray ();
				var result = this.Test9 (arg0);
				reply.WriteNoException ();
				reply.WriteString (result);
				reply.WriteStringArray (arg0);
				return true;
				}

			case TransactionTest10: {
				data.EnforceInterface (descriptor);
				byte [] arg0 = default (byte []);
				arg0 = data.CreateByteArray ();
				this.Test10 (arg0);
				reply.WriteNoException ();
				return true;
				}

			case TransactionTest11: {
				data.EnforceInterface (descriptor);
				byte [] arg0 = default (byte []);
				int arg0_length = data.ReadInt();
				if (arg0_length < 0) {
					arg0 = null;
				}
				else {
					arg0 = new byte [arg0_length];
				}
				this.Test11 (arg0);
				reply.WriteNoException ();
				reply.WriteByteArray (arg0);
				return true;
				}

			case TransactionTest12: {
				data.EnforceInterface (descriptor);
				byte [] arg0 = default (byte []);
				arg0 = data.CreateByteArray ();
				this.Test12 (arg0);
				reply.WriteNoException ();
				reply.WriteByteArray (arg0);
				return true;
				}

			case TransactionTest20: {
				data.EnforceInterface (descriptor);
				var result = this.Test20 ();
				reply.WriteNoException ();
				reply.WriteIntArray (result);
				return true;
				}

			case TransactionTest21: {
				data.EnforceInterface (descriptor);
				var result = this.Test21 ();
				reply.WriteNoException ();
				reply.WriteBooleanArray (result);
				return true;
				}

			case TransactionTest22: {
				data.EnforceInterface (descriptor);
				var result = this.Test22 ();
				reply.WriteNoException ();
				reply.WriteByteArray (result);
				return true;
				}

			case TransactionTest23: {
				data.EnforceInterface (descriptor);
				var result = this.Test23 ();
				reply.WriteNoException ();
				reply.WriteStringArray (result);
				return true;
				}

			}
			return base.OnTransact (code, data, reply, flags);
		}

		public class Proxy : Java.Lang.Object, Com.Xamarin.Test.ITest
		{
			global::Android.OS.IBinder remote;

			public Proxy (global::Android.OS.IBinder remote)
			{
				this.remote = remote;
			}

			public global::Android.OS.IBinder AsBinder ()
			{
				return remote;
			}

			public string GetInterfaceDescriptor ()
			{
				return descriptor;
			}

			public void Test0 ()
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();

				try {
					__data.WriteInterfaceToken (descriptor);
					remote.Transact (ITestStub.TransactionTest0, __data, __reply, 0);
					__reply.ReadException ();

				} finally {
					__data.Recycle ();
				}

			}


			public int Test1 ()
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				int __result = default (int);

				try {
					__data.WriteInterfaceToken (descriptor);
					remote.Transact (ITestStub.TransactionTest1, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadInt ();

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public int Test2 (int [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				int __result = default (int);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteIntArray (args);
					remote.Transact (ITestStub.TransactionTest2, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadInt ();
					__reply.ReadIntArray (args);

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public bool Test3 (bool [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				bool __result = default (bool);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteBooleanArray (args);
					remote.Transact (ITestStub.TransactionTest3, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadInt () != 0;
					__reply.ReadBooleanArray (args);

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public sbyte Test4 (byte [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				sbyte __result = default (sbyte);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteByteArray (args);
					remote.Transact (ITestStub.TransactionTest4, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadByte ();
					__reply.ReadByteArray (args);

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public char Test5 (char [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				char __result = default (char);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteCharArray (args);
					remote.Transact (ITestStub.TransactionTest5, __data, __reply, 0);
					__reply.ReadException ();
					__result = (char) __reply.ReadInt ();
					__reply.ReadCharArray (args);

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public long Test6 (long [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				long __result = default (long);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteLongArray (args);
					remote.Transact (ITestStub.TransactionTest6, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadLong ();
					__reply.ReadLongArray (args);

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public float Test7 (float [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				float __result = default (float);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteFloatArray (args);
					remote.Transact (ITestStub.TransactionTest7, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadFloat ();
					__reply.ReadFloatArray (args);

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public double Test8 (double [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				double __result = default (double);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteDoubleArray (args);
					remote.Transact (ITestStub.TransactionTest8, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadDouble ();
					__reply.ReadDoubleArray (args);

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public String Test9 (String [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				String __result = default (String);

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteStringArray (args);
					remote.Transact (ITestStub.TransactionTest9, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.ReadString ();
					__reply.ReadStringArray (args);

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public void Test10 (byte [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteByteArray (args);
					remote.Transact (ITestStub.TransactionTest10, __data, __reply, 0);
					__reply.ReadException ();

				} finally {
					__data.Recycle ();
				}

			}


			public void Test11 (byte [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();

				try {
					__data.WriteInterfaceToken (descriptor);
					if (args == null) { __data.WriteInt(-1); } else { __data.WriteInt(args.Length); }
					remote.Transact (ITestStub.TransactionTest11, __data, __reply, 0);
					__reply.ReadException ();
					__reply.ReadByteArray (args);

				} finally {
					__data.Recycle ();
				}

			}


			public void Test12 (byte [] args)
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();

				try {
					__data.WriteInterfaceToken (descriptor);
					__data.WriteByteArray (args);
					remote.Transact (ITestStub.TransactionTest12, __data, __reply, 0);
					__reply.ReadException ();
					__reply.ReadByteArray (args);

				} finally {
					__data.Recycle ();
				}

			}


			public int [] Test20 ()
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				int [] __result = default (int []);

				try {
					__data.WriteInterfaceToken (descriptor);
					remote.Transact (ITestStub.TransactionTest20, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.CreateIntArray ();

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public bool [] Test21 ()
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				bool [] __result = default (bool []);

				try {
					__data.WriteInterfaceToken (descriptor);
					remote.Transact (ITestStub.TransactionTest21, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.CreateBooleanArray ();

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public byte [] Test22 ()
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				byte [] __result = default (byte []);

				try {
					__data.WriteInterfaceToken (descriptor);
					remote.Transact (ITestStub.TransactionTest22, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.CreateByteArray ();

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


			public String [] Test23 ()
			{
				global::Android.OS.Parcel __data = global::Android.OS.Parcel.Obtain ();

				global::Android.OS.Parcel __reply = global::Android.OS.Parcel.Obtain ();
				String [] __result = default (String []);

				try {
					__data.WriteInterfaceToken (descriptor);
					remote.Transact (ITestStub.TransactionTest23, __data, __reply, 0);
					__reply.ReadException ();
					__result = __reply.CreateStringArray ();

				} finally {
					__reply.Recycle ();
					__data.Recycle ();
				}
				return __result;

			}


		}

		internal const int TransactionTest0 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 0;

		internal const int TransactionTest1 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 1;

		internal const int TransactionTest2 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 2;

		internal const int TransactionTest3 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 3;

		internal const int TransactionTest4 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 4;

		internal const int TransactionTest5 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 5;

		internal const int TransactionTest6 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 6;

		internal const int TransactionTest7 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 7;

		internal const int TransactionTest8 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 8;

		internal const int TransactionTest9 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 9;

		internal const int TransactionTest10 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 10;

		internal const int TransactionTest11 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 11;

		internal const int TransactionTest12 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 12;

		internal const int TransactionTest20 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 13;

		internal const int TransactionTest21 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 14;

		internal const int TransactionTest22 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 15;

		internal const int TransactionTest23 = global::Android.OS.Binder.InterfaceConsts.FirstCallTransaction + 16;

		public abstract void Test0 ();

		public abstract int Test1 ();

		public abstract int Test2 (int [] args);

		public abstract bool Test3 (bool [] args);

		public abstract sbyte Test4 (byte [] args);

		public abstract char Test5 (char [] args);

		public abstract long Test6 (long [] args);

		public abstract float Test7 (float [] args);

		public abstract double Test8 (double [] args);

		public abstract String Test9 (String [] args);

		public abstract void Test10 (byte [] args);

		public abstract void Test11 (byte [] args);

		public abstract void Test12 (byte [] args);

		public abstract int [] Test20 ();

		public abstract bool [] Test21 ();

		public abstract byte [] Test22 ();

		public abstract String [] Test23 ();

	}
}

