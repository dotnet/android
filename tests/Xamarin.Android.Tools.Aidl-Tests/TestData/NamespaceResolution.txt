import android.os;
import android.view;
import android.animation;

interface Test {
}

####

// This file is automatically generated and not supposed to be modified.
using System;
using Boolean = System.Boolean;
using String = System.String;
using List = Android.Runtime.JavaList;
using Map = Android.Runtime.JavaDictionary;
using Android;
	public interface ITest : global::Android.OS.IInterface
	{
	}

	public abstract class ITestStub : global::Android.OS.Binder, global::Android.OS.IInterface, ITest
	{
		const string descriptor = "Test";
		public ITestStub ()
		{
			this.AttachInterface (this, descriptor);
		}

		public static ITest AsInterface (global::Android.OS.IBinder obj)
		{
			if (obj == null)
				return null;
			var iin = (global::Android.OS.IInterface) obj.QueryLocalInterface (descriptor);
			if (iin != null && iin is ITest)
				return (ITest) iin;
			return new Proxy (obj);
		}

		public global::Android.OS.IBinder AsBinder ()
		{
			return this;
		}

		protected override bool OnTransact (int code, global::Android.OS.Parcel data, global::Android.OS.Parcel reply, int flags)
		{
			switch (code) {
			case global::Android.OS.BinderConsts.InterfaceTransaction:
				reply.WriteString (descriptor);
				return true;

			}
			return base.OnTransact (code, data, reply, flags);
		}

		public class Proxy : Java.Lang.Object, ITest
		{
			global::Android.OS.IBinder remote;

			public Proxy (global::Android.OS.IBinder remote)
			{
				this.remote = remote;
			}

			public global::Android.OS.IBinder AsBinder ()
			{
				return remote;
			}

			public string GetInterfaceDescriptor ()
			{
				return descriptor;
			}

		}

	}

