<?xml version="1.0" encoding="utf-8"?>
<tests>
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2AndroidResgenExtraArgsAreInvalid" duration="316" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2AndroidResgenExtraArgsAreSplit" duration="615" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2Compile" duration="153" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2CompileFiles" duration="214" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2CompileFixesUpErrors" duration="298" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2CompileUmlautsAndSpaces" duration="649" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2DaemonInstances(1,1,1,10)" duration="157" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2DaemonInstances(6,6,2,1)" duration="66" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2DaemonInstances(6,6,3,2)" duration="50" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2DaemonInstances(6,6,6,50)" duration="697" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2Link(False)" duration="593" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.Aapt2Link(True)" duration="321" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.CheckForInvalidVersionCode(&quot;-1&quot;,&quot;&quot;,&quot;XA0004&quot;)" duration="70" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.CheckForInvalidVersionCode(&quot;-1&quot;,&quot;{abi}{versionCode:D5}&quot;,&quot;XA0004&quot;)" duration="138" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.CheckForInvalidVersionCode(&quot;1.0&quot;,&quot;&quot;,&quot;XA0003&quot;)" duration="108" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.CheckForInvalidVersionCode(&quot;1.0&quot;,&quot;{abi}{versionCode:D5}&quot;,&quot;XA0003&quot;)" duration="90" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.CheckForInvalidVersionCode(&quot;2100000001&quot;,&quot;&quot;,&quot;XA0004&quot;)" duration="74" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.CheckForInvalidVersionCode(&quot;2100000001&quot;,&quot;{abi}{versionCode:D5}&quot;,&quot;XA0004&quot;)" duration="75" />
  <test name="Xamarin.Android.Build.Tests.Aapt2Tests.CollectNonEmptyDirectoriesTest" duration="15" />
  <test name="Xamarin.Android.Build.Tests.AidlTest.ListAndMap" duration="57937" />
  <test name="Xamarin.Android.Build.Tests.AidlTest.NamespaceResolution" duration="58037" />
  <test name="Xamarin.Android.Build.Tests.AidlTest.PrimitiveTypes" duration="56671" />
  <test name="Xamarin.Android.Build.Tests.AndroidComputeResPathsTests.AndroidComputeResPathsTest(&quot;Assets\\asset1.txt&quot;,&quot;%FOO%Assets\\subfolder\\..\\..\\asset1.txt&quot;,&quot;asset1.txt&quot;,&quot;Assets\\asset1.txt&quot;)" duration="9" />
  <test name="Xamarin.Android.Build.Tests.AndroidComputeResPathsTests.AndroidComputeResPathsTest(&quot;Assets\\asset1.txt&quot;,&quot;%FOO%Assets\\subfolder\\asset1.txt&quot;,&quot;subfolder\\asset1.txt&quot;,&quot;Assets\\asset1.txt&quot;)" duration="54" />
  <test name="Xamarin.Android.Build.Tests.AndroidComputeResPathsTests.AndroidComputeResPathsTest(&quot;Assets\\asset1.txt&quot;,&quot;Assets\\subfolder\\asset1.txt&quot;,&quot;subfolder\\asset1.txt&quot;,&quot;Assets\\asset1.txt&quot;)" duration="6" />
  <test name="Xamarin.Android.Build.Tests.AndroidComputeResPathsTests.AndroidComputeResPathsTest(&quot;Assets\\asset1.txt&quot;,null,&quot;asset1.txt&quot;,&quot;Assets\\asset1.txt&quot;)" duration="20" />
  <test name="Xamarin.Android.Build.Tests.AndroidComputeResPathsTests.AndroidComputeResPathsTest(&quot;Assets\\subfolder\\asset1.txt&quot;,null,&quot;subfolder\\asset1.txt&quot;,&quot;Assets\\subfolder\\asset1.txt&quot;)" duration="8" />
  <test name="Xamarin.Android.Build.Tests.AndroidDependenciesTests.GetDependencyNdkRequiredConditions(&quot;AndroidEnableProfiledAot&quot;,False)" duration="2709" />
  <test name="Xamarin.Android.Build.Tests.AndroidDependenciesTests.GetDependencyNdkRequiredConditions(&quot;AotAssemblies&quot;,False)" duration="11878" />
  <test name="Xamarin.Android.Build.Tests.AndroidDependenciesTests.GetDependencyNdkRequiredConditions(&quot;EnableLLVM&quot;,True)" duration="16522" />
  <test name="Xamarin.Android.Build.Tests.AndroidDependenciesTests.GetDependencyWhenBuildToolsAreMissingTest" duration="13591" />
  <test name="Xamarin.Android.Build.Tests.AndroidDependenciesTests.GetDependencyWhenSDKIsMissingTest(False)" duration="2802" />
  <test name="Xamarin.Android.Build.Tests.AndroidDependenciesTests.GetDependencyWhenSDKIsMissingTest(True)" duration="2826" />
  <test name="Xamarin.Android.Build.Tests.AndroidDependenciesTests.InstallAndroidDependenciesTest" duration="93315" />
  <test name="Xamarin.Android.Build.Tests.AndroidDotnetToolTests.ShouldUseFullToolPath" duration="141" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;aapt2 W 09-17 18:15:27 98796 12879433 ApkAssets.cpp:138] resources.arsc in APK 'android.jar' is compressed.&quot;,True,&quot;&quot;,&quot;&quot;,&quot;aapt2 W 09-17 18&quot;,&quot;15:27 98796 12879433 ApkAssets.cpp:138] resources.arsc in APK 'android.jar' is compressed.&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;aapt2.exe W 09-17 18:15:27 98796 12879433 ApkAssets.cpp:138] resources.arsc in APK 'android.jar' is compressed.&quot;,True,&quot;&quot;,&quot;&quot;,&quot;aapt2.exe W 09-17 18&quot;,&quot;15:27 98796 12879433 ApkAssets.cpp:138] resources.arsc in APK 'android.jar' is compressed.&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;Error: malformed resource filename&quot;,True,&quot;&quot;,&quot;&quot;,&quot;Error&quot;,&quot;malformed resource filename&quot;)" duration="25" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;Error: unable to generate entry for resource data&quot;,True,&quot;&quot;,&quot;&quot;,&quot;Error&quot;,&quot;unable to generate entry for resource data&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;invalid resource directory name: bar-55&quot;,True,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;invalid resource directory name: bar-55&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;max res 10, skipping values-sw600dp-land&quot;,True,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;max res 10, skipping values-sw600dp-land&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;max res 10, skipping values-sw600dp&quot;,True,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;max res 10, skipping values-sw600dp&quot;)" duration="3" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;max res 10, skipping values-sw720dp-land-v13&quot;,True,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;max res 10, skipping values-sw720dp-land-v13&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;package name is required with --rename-manifest-package.&quot;,True,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;package name is required with --rename-manifest-package.&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;res/drawable/foo-bar.jpg: Invalid file name: must contain only [a-z0-9_.]&quot;,True,&quot;res/drawable/foo-bar.jpg&quot;,&quot;&quot;,&quot;&quot;,&quot;Invalid file name: must contain only [a-z0-9_.]&quot;)" duration="24" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;res\\layout\\main.axml: error: No resource identifier found for attribute \&quot;id2\&quot; in package \&quot;android\&quot; (TaskId:22)&quot;,True,&quot;res\\layout\\main.axml&quot;,&quot;&quot;,&quot;error&quot;,&quot;No resource identifier found for attribute \&quot;id2\&quot; in package \&quot;android\&quot; (TaskId:22)&quot;)" duration="3" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;Resources/values/theme.xml:2: error APT0000: Error retrieving parent for item: No resource found that matches the given name '@android:style/Theme.AppCompat'.&quot;,True,&quot;Resources/values/theme.xml&quot;,&quot;2&quot;,&quot;error APT0000&quot;,&quot;Error retrieving parent for item: No resource found that matches the given name '@android:style/Theme.AppCompat'.&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;Resources/values/theme.xml:55: No start tag found&quot;,True,&quot;Resources/values/theme.xml&quot;,&quot;55&quot;,&quot;&quot;,&quot;No start tag found&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;Resources/values/theme.xml(2): error APT0000: Error retrieving parent for item: No resource found that matches the given name '@android:style/Theme.AppCompat'.&quot;,True,&quot;Resources/values/theme.xml&quot;,&quot;2&quot;,&quot;error APT0000&quot;,&quot;Error retrieving parent for item: No resource found that matches the given name '@android:style/Theme.AppCompat'.&quot;)" duration="3" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;W/ResourceType( 5536): For resource 0x0101053d, entry index(1341) is beyond type entryCount(1155)&quot;,True,&quot;W/ResourceType&quot;,&quot; 5536&quot;,&quot;&quot;,&quot;For resource 0x0101053d, entry index(1341) is beyond type entryCount(1155)&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;W/ResourceType(23681): For resource 0x0101053d, entry index(1341) is beyond type entryCount(733)&quot;,True,&quot;W/ResourceType&quot;,&quot;23681&quot;,&quot;&quot;,&quot;For resource 0x0101053d, entry index(1341) is beyond type entryCount(733)&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;warning: Multiple AndroidManifest.xml files found, using foo\\AndroidManifest.xml&quot;,True,&quot;&quot;,&quot;&quot;,&quot;warning&quot;,&quot;Multiple AndroidManifest.xml files found, using foo\\AndroidManifest.xml&quot;)" duration="0" />
  <test name="Xamarin.Android.Build.Tests.AndroidRegExTests.RegExTests(&quot;warning: string 'app_name1' has no default translation.&quot;,True,&quot;&quot;,&quot;&quot;,&quot;warning&quot;,&quot;string 'app_name1' has no default translation.&quot;)" duration="25" />
  <test name="Xamarin.Android.Build.Tests.AndroidResourceTests.HeaderLayout" duration="50" />
  <test name="Xamarin.Android.Build.Tests.AndroidResourceTests.MenuActionLayout" duration="14" />
  <test name="Xamarin.Android.Build.Tests.AndroidResourceTests.UserLayout" duration="23" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.BuildAppWithManagedResourceParser" duration="67903" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.BuildAppWithManagedResourceParserAndLibraries" duration="74388" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.BuildAppWithSystemNamespace" duration="43253" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.Check9PatchFilesAreProcessed" duration="70558" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckAaptErrorNotRaisedForInvalidFileNameWithValidLogicalName(True)" duration="56110" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckAaptErrorRaisedForDuplicateResourceinApp" duration="6475" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckAaptErrorRaisedForInvalidDirectoryName" duration="6678" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckAaptErrorRaisedForInvalidFileName(True)" duration="6015" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckAaptErrorRaisedForMissingResource" duration="7125" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckCodeBehindIsGenerated" duration="103230" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckDontUpdateResourceIfNotNeeded(False)" duration="227766" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckDontUpdateResourceIfNotNeeded(True)" duration="229513" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckEmbeddedSupportLibraryResources" duration="95239" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckFilesAreRemoved" duration="98133" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckInvalidXmlInManagedResourceParser" duration="4190" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckMultipleLibraryProjectReferenceAlias(False,False)" duration="52674" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckMultipleLibraryProjectReferenceAlias(False,True)" duration="56764" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckMultipleLibraryProjectReferenceAlias(True,False)" duration="55537" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckMultipleLibraryProjectReferenceAlias(True,True)" duration="63917" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckNoVersionVectors(True)" duration="47396" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckOldResourceDesignerIsNotUsed(False)" duration="37508" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckOldResourceDesignerIsNotUsed(True)" duration="71409" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckOldResourceDesignerWithWrongCasingIsRemoved(False)" duration="42782" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckOldResourceDesignerWithWrongCasingIsRemoved(True)" duration="78774" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated(False,CSharp)" duration="28756" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated(False,FSharp)" duration="25635" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated(True,CSharp)" duration="42924" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated(True,FSharp)" duration="65317" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsUpdatedWhenReadOnly(False,CSharp)" duration="48891" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsUpdatedWhenReadOnly(False,FSharp)" duration="77070" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsUpdatedWhenReadOnly(True,CSharp)" duration="129060" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsUpdatedWhenReadOnly(True,FSharp)" duration="181587" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckThatXA1034IsRaisedForInvalidConfiguration(False)" duration="20464" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckThatXA1034IsRaisedForInvalidConfiguration(True)" duration="17842" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckXmlResourcesFilesAreProcessed(True)" duration="76782" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CustomViewAddResourceId(True)" duration="99565" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.DesignTimeBuild(False,False,True)" duration="45808" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.DesignTimeBuild(False,True,True)" duration="41060" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.DesignTimeBuild(True,False,True)" duration="74292" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.DesignTimeBuild(True,True,True)" duration="60097" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.InvalidFilenames" duration="41071" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.LightlyModifyLayout" duration="101230" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.MoveResource" duration="79441" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.RepetiviteBuildUpdateSingleResource(True)" duration="46481" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.ReportAaptErrorsInOriginalFileName" duration="8054" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.ReportAaptWarningsForBlankLevel(True)" duration="16103" />
  <test name="Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.SolutionBuildSeveralProjects" duration="88974" />
  <test name="Xamarin.Android.Build.Tests.AotTests.AotAssembliesInIDE" duration="42477" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildAMassiveApp" duration="323670" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildAotApplicationAndÜmläüts(&quot;arm64-v8a&quot;,False,False)" duration="41185" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildAotApplicationAndÜmläüts(&quot;armeabi-v7a;arm64-v8a;x86;x86_64&quot;,False,True)" duration="59623" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildAotApplicationAndÜmläüts(&quot;armeabi-v7a;arm64-v8a;x86;x86_64&quot;,True,False)" duration="72634" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildAotApplicationAndÜmläüts(&quot;armeabi-v7a;x86&quot;,True,True)" duration="50898" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildAotApplicationWithNdkAndBundleAndÜmläüts(&quot;arm64-v8a&quot;,False,False)" duration="42912" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildAotApplicationWithNdkAndBundleAndÜmläüts(&quot;armeabi-v7a;arm64-v8a;x86;x86_64&quot;,False,True)" duration="60969" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildAotApplicationWithNdkAndBundleAndÜmläüts(&quot;armeabi-v7a;arm64-v8a;x86;x86_64&quot;,True,False)" duration="71123" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildAotApplicationWithNdkAndBundleAndÜmläüts(&quot;armeabi-v7a;x86&quot;,True,True)" duration="67126" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildBasicApplicationReleaseProfiledAot(False)" duration="53957" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildBasicApplicationReleaseProfiledAotWithoutDefaultProfile" duration="57974" />
  <test name="Xamarin.Android.Build.Tests.AotTests.BuildBasicApplicationReleaseWithCustomAotProfile" duration="55509" />
  <test name="Xamarin.Android.Build.Tests.AotTests.NoSymbolsArgShouldReduceAppSize(&quot;&quot;,False)" duration="93836" />
  <test name="Xamarin.Android.Build.Tests.AotTests.NoSymbolsArgShouldReduceAppSize(&quot;&quot;,True)" duration="94881" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.AarWithRClassesJar" duration="38312" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.AnnotationSupport" duration="8009" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BindByteArrayInMethodParameter" duration="7461" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BindDefaultInterfaceMethods(&quot;class-parse&quot;)" duration="6665" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BindingCheckHiddenFiles" duration="30634" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BindingCustomJavaApplicationClass" duration="31476" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BindingDoNotPackage" duration="30077" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BindingWithAndroidJavaSource" duration="42158" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BindngFilterUnsupportedNativeAbiLibraries" duration="35592" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BuildAarBindigLibraryWithNuGetPackageOfJar(&quot;class-parse&quot;)" duration="11064" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BuildAarBindingLibraryStandalone(&quot;class-parse&quot;)" duration="7039" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BuildBasicBindingLibrary(&quot;class-parse&quot;)" duration="10353" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.BuildLibraryZipBindigLibraryWithAarOfJar(&quot;class-parse&quot;)" duration="8049" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.CleanBasicBindingLibrary(&quot;class-parse&quot;)" duration="9715" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.DesignTimeBuild(&quot;class-parse&quot;)" duration="7253" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.JavaSourceJar" duration="9160" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.LibraryProjectZipWithLint" duration="63090" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.MergeAndroidManifest" duration="62691" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.NothingToBind(&quot;class-parse&quot;)" duration="4013" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.NullableReferenceTypes(&quot;class-parse&quot;)" duration="7647" />
  <test name="Xamarin.Android.Build.Tests.BindingBuildTest.RemoveEventHandlerResolution" duration="10835" />
  <test name="Xamarin.Android.Build.Tests.BuildAssetsTest.CheckAssetsAreIncludedInAPK(True)" duration="51137" />
  <test name="Xamarin.Android.Build.Tests.BuildAssetsTest.CheckPostCompileAssetsIncludedInAPK" duration="40699" />
  <test name="Xamarin.Android.Build.Tests.BuildAssetsTest.FullPath" duration="3511" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.AarContentExtraction(True)" duration="68076" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.AbiNameInIntermediateOutputPath" duration="42589" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.AllResourcesInClassLibrary(True,False)" duration="52529" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.AllResourcesInClassLibrary(True,True)" duration="50688" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.AndroidXClassLibraryNoResources" duration="6262" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.ApplicationIdPlaceholder" duration="31449" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.ApplicationJavaClassProperties" duration="33495" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.AssemblyWithMissingTargetFramework" duration="69214" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildAfterAddingNuget" duration="200959" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildAfterUpgradingNuget" duration="81356" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildApplicationCheckThatAddStaticResourcesTargetDoesNotRerun" duration="58052" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildApplicationWithJavaSource(False,True)" duration="40289" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildApplicationWithJavaSource(True,True)" duration="85144" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildApplicationWithSpacesInPath(False,&quot;&quot;)" duration="42719" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildApplicationWithSpacesInPath(False,&quot;r8&quot;)" duration="44221" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildApplicationWithSpacesInPath(True,&quot;&quot;)" duration="44442" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildApplicationWithSpacesInPath(True,&quot;r8&quot;)" duration="45192" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildInDesignTimeMode(False)" duration="13874" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildInDesignTimeMode(True)" duration="10730" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildLibraryWhichUsesResources(False)" duration="7034" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildLibraryWhichUsesResources(True)" duration="5222" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildOutsideVisualStudio" duration="63344" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildReleaseApplicationWithNugetPackages" duration="77070" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildWithExternalJavaLibrary" duration="48407" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildWithNativeLibraries(False)" duration="27137" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildWithNativeLibraries(True)" duration="54513" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.BuildWithNativeLibraryUnknownAbi" duration="37672" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckAssemblyCounts(False,False)" duration="37867" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckAssemblyCounts(True,False)" duration="62813" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckAssemblyCounts(True,True)" duration="105302" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckContentBuildAction" duration="47345" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckItemMetadata(False)" duration="32874" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckItemMetadata(True)" duration="75131" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckJavaError" duration="8309" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckLintConfigMerging" duration="66727" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckLintErrorsAndWarnings" duration="44971" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckLintResourceFileReferencesAreFixed" duration="71550" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckLogicalNamePathSeperators(False,False)" duration="41892" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckLogicalNamePathSeperators(False,True)" duration="41680" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckLogicalNamePathSeperators(True,False)" duration="87093" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckLogicalNamePathSeperators(True,True)" duration="92482" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckMonoComponentsMask(False,False,True,1)" duration="26723" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckMonoComponentsMask(True,False,False,4)" duration="60451" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckMonoComponentsMask(True,False,True,5)" duration="28585" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckMonoComponentsMask(True,True,True,7)" duration="26152" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckWhetherLibcAndLibmAreReferencedInAOTLibraries" duration="90631" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckWhichRuntimeIsIncluded(&quot;armeabi-v7a&quot;,False,null,null,&quot;debug&quot;)" duration="20331" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckWhichRuntimeIsIncluded(&quot;armeabi-v7a&quot;,True,False,False,&quot;debug&quot;)" duration="22735" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckWhichRuntimeIsIncluded(&quot;armeabi-v7a&quot;,True,False,True,&quot;debug&quot;)" duration="22482" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckWhichRuntimeIsIncluded(&quot;armeabi-v7a&quot;,True,True,False,&quot;debug&quot;)" duration="32004" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CheckWhichRuntimeIsIncluded(&quot;armeabi-v7a&quot;,True,True,True,&quot;release&quot;)" duration="40152" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.CompilerErrorShouldNotRunLinkAssemblies" duration="9066" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.Desugar(False,&quot;&quot;)" duration="41236" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.Desugar(False,&quot;r8&quot;)" duration="40226" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.Desugar(True,&quot;&quot;)" duration="76104" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.Desugar(True,&quot;r8&quot;)" duration="83854" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.DuplicateJCWNames" duration="36663" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.DuplicateManagedNames" duration="49022" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.DuplicateValuesInResourceCaseMap" duration="43010" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.ExtraAaptManifest" duration="44205" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.FastDeploymentDoesNotAddContentProvider" duration="38008" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.GeneratorValidateEventName(False,False,&quot;&lt;attr path=\&quot;/api/package/class[@name='Test']/method[@name='setOn123Listener']\&quot; name='eventName'&gt;OneTwoThree&lt;/attr&gt;&quot;,&quot;&quot;)" duration="24339" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.GeneratorValidateEventName(False,True,&quot;&quot;,&quot;&quot;)" duration="13357" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.GeneratorValidateEventName(True,True,&quot;&quot;,&quot;String s&quot;)" duration="10235" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.GeneratorValidateMultiMethodEventName(False,&quot;BG8505&quot;,&quot;&quot;,&quot;&quot;)" duration="19588" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.GeneratorValidateMultiMethodEventName(False,null,&quot;\n\t\t\t\t\t&lt;attr path=\&quot;/api/package/interface[@name='Test.OnFooListener']/method[@name='on123']\&quot; name='eventName'&gt;One23&lt;/attr&gt;\n\t\t\t\t\t&lt;attr path=\&quot;/api/package/interface[@name='Test.OnFooListener']/method[@name='on123']\&quot; name='argsType'&gt;OneTwoThreeEventArgs&lt;/attr&gt;\n\t\t\t\t&quot;,&quot;String s&quot;)" duration="12438" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.GeneratorValidateMultiMethodEventName(False,null,&quot;&lt;attr path=\&quot;/api/package/interface[@name='Test.OnFooListener']/method[@name='on123']\&quot; name='eventName'&gt;One23&lt;/attr&gt;&quot;,&quot;&quot;)" duration="12643" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.GeneratorValidateMultiMethodEventName(True,&quot;BG8504&quot;,&quot;&quot;,&quot;String s&quot;)" duration="10622" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.IfAndroidJarDoesNotExistThrowXA5207" duration="10673" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.KotlinServiceLoader(&quot;aab&quot;)" duration="67846" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.KotlinServiceLoader(&quot;apk&quot;)" duration="35514" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.LibraryProjectsShouldSkipGetPrimaryCpuAbi" duration="6713" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.MicrosoftExtensionsHttp" duration="36332" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.MissingOrgApacheHttpClient" duration="38164" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.NetworkSecurityConfig" duration="35974" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.NuGetizer3000" duration="13308" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.NUnitLiteNugetWorks" duration="42808" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.OpenTKNugetWorks" duration="40775" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.PackageNamingPolicy(&quot;LowercaseCrc64&quot;)" duration="25315" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.PackageNamingPolicy(&quot;LowercaseMD5&quot;)" duration="25178" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.RemoveOldMonoPackageManager" duration="58460" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.SmokeTestBuildWithSpecialCharacters(False,False)" duration="50971" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.SmokeTestBuildWithSpecialCharacters(True,False)" duration="87529" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.WarningForMinSdkVersion" duration="39494" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.WorkManager" duration="70426" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA0119" duration="35198" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA0119AAB" duration="31354" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA0119Interpreter" duration="63005" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA1018" duration="8029" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA1027XA1028(&quot;proguard&quot;,null,&quot;true&quot;,False,&quot;0 Warning(s)&quot;)" duration="3556" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA1027XA1028(&quot;r8&quot;,null,&quot;true&quot;,True,&quot;0 Warning(s)&quot;)" duration="3798" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA1027XA1028(null,&quot;true&quot;,null,False,&quot;warning XA1027:&quot;)" duration="4257" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA1027XA1028(null,null,&quot;true&quot;,False,&quot;warning XA1028:&quot;)" duration="3286" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA1027XA1028(null,null,null,True,&quot;0 Warning(s)&quot;)" duration="12090" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA4212" duration="43659" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA4310(&quot;aab&quot;)" duration="55830" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA4310(&quot;apk&quot;)" duration="61940" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA4313(&quot;OpenTK-1.0&quot;)" duration="6756" />
  <test name="Xamarin.Android.Build.Tests.BuildTest.XA4313(&quot;Xamarin.Android.NUnitLite&quot;)" duration="5931" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.AndroidResourceNotExist" duration="6042" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.AndroidXMigration(False)" duration="43153" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.AndroidXMigration(True)" duration="115998" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildAfterMultiDexIsNotRequired" duration="97154" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildAppCheckDebugSymbols" duration="45825" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildApplicationAndClean(False,&quot;aab&quot;)" duration="69602" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildApplicationAndClean(False,&quot;apk&quot;)" duration="43456" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildApplicationAndClean(True,&quot;aab&quot;)" duration="108755" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildApplicationAndClean(True,&quot;apk&quot;)" duration="100039" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildApplicationOver65536Methods" duration="45961" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildApplicationWithLibraryAndClean(False)" duration="61562" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildApplicationWithLibraryAndClean(True)" duration="119906" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplication(&quot;v13.0&quot;,False,&quot;&quot;)" duration="42443" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplication(&quot;v13.0&quot;,False,&quot;en_US.UTF-8&quot;)" duration="34020" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplication(&quot;v13.0&quot;,False,&quot;sv_SE.UTF-8&quot;)" duration="43494" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplication(&quot;v13.0&quot;,True,&quot;&quot;)" duration="90613" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplication(&quot;v13.0&quot;,True,&quot;en_US.UTF-8&quot;)" duration="71438" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplication(&quot;v13.0&quot;,True,&quot;sv_SE.UTF-8&quot;)" duration="76648" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationAppCompat(True)" duration="28918" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationCheckConfigFiles" duration="43501" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationCheckPdb" duration="52608" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationCheckPdbRepeatBuild" duration="52063" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationFSharp(False,False)" duration="23633" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationFSharp(True,False)" duration="38184" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationFSharp(True,True)" duration="62707" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationThenMoveIt(False)" duration="108728" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationThenMoveIt(True)" duration="143896" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildBasicApplicationWithNuGetPackageConflicts" duration="31614" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildHasNoWarnings(False,False,False,&quot;aab&quot;)" duration="77572" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildHasNoWarnings(False,False,False,&quot;apk&quot;)" duration="42350" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildHasNoWarnings(False,True,False,&quot;apk&quot;)" duration="60564" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildHasNoWarnings(False,True,True,&quot;apk&quot;)" duration="73903" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildHasNoWarnings(True,False,False,&quot;aab&quot;)" duration="81314" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildHasNoWarnings(True,False,False,&quot;apk&quot;)" duration="28532" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildHasNoWarnings(True,True,False,&quot;apk&quot;)" duration="65866" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildIncrementingAssemblyVersion" duration="70586" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildIncrementingClassName" duration="87113" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildInParallel" duration="89381" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildMultiDexApplication" duration="52203" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildProguardEnabledProject(False,&quot;&quot;,&quot;&quot;)" duration="42789" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildProguardEnabledProject(True,&quot;r8&quot;,&quot;&quot;)" duration="115670" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildProguardEnabledProject(True,&quot;r8&quot;,&quot;android-arm64&quot;)" duration="89148" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildReleaseArm64(False)" duration="43414" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildReleaseArm64(True)" duration="99328" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildWithJavaToolOptions" duration="29205" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildXamarinFormsMapsApplication(False)" duration="75370" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.BuildXamarinFormsMapsApplication(True)" duration="89968" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.CheckKeystoreIsCreated" duration="83997" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.CheckTimestamps(False)" duration="74484" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.CheckTimestamps(True)" duration="221389" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.ClassLibraryHasNoWarnings" duration="5553" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.CompressedWithoutLinker" duration="235215" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.CreateMultiDexWithSpacesInConfig" duration="57344" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.CSharp8Features(False)" duration="36473" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.CSharp8Features(True)" duration="17370" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.CustomApplicationClassAndMultiDex" duration="54881" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.DesignTimeBuildHasAndroidDefines" duration="6936" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.DuplicateRJavaOutput" duration="73227" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.FSharpAppHasAndroidDefine" duration="24207" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.MarshalMethodsDefaultEnabledStatus(False,False,False)" duration="27921" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.MarshalMethodsDefaultEnabledStatus(False,True,True)" duration="62800" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.MultiDexAndCodeShrinker" duration="90494" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.MultiDexCustomMainDexFileList(&quot;19&quot;)" duration="69741" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.MultiDexCustomMainDexFileList(&quot;21&quot;)" duration="50145" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.MultiDexR8ConfigWithNoCodeShrinking" duration="61761" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.SkipConvertResourcesCases(True)" duration="38919" />
  <test name="Xamarin.Android.Build.Tests.BuildTest2.SwitchBetweenDesignTimeBuild" duration="55231" />
  <test name="Xamarin.Android.Build.Tests.CheckClientHandlerTypeTests.ErrorIsNotRaised(&quot;System.Net.Http.SocketsHttpHandler, System.Net.Http&quot;,&quot;System.Net.Http.HttpMessageHandler, System.Net.Http&quot;)" duration="21767" />
  <test name="Xamarin.Android.Build.Tests.CheckClientHandlerTypeTests.ErrorIsNotRaised(&quot;Xamarin.Android.Net.AndroidClientHandler&quot;,&quot;System.Net.Http.HttpClientHandler, System.Net.Http&quot;)" duration="21474" />
  <test name="Xamarin.Android.Build.Tests.CheckClientHandlerTypeTests.ErrorIsNotRaised(&quot;Xamarin.Android.Net.AndroidMessageHandler&quot;,&quot;System.Net.Http.HttpMessageHandler, System.Net.Http&quot;)" duration="22079" />
  <test name="Xamarin.Android.Build.Tests.CheckClientHandlerTypeTests.ErrorIsRaised(&quot;Xamarin.Android.Net.AndroidMessageHandler&quot;,&quot;System.Net.Http.HttpClientHandler, System.Net.Http&quot;)" duration="22036" />
  <test name="Xamarin.Android.Build.Tests.CheckDuplicateJavaLibrariesTests.XA1014ConflictingJarNames" duration="8" />
  <test name="Xamarin.Android.Build.Tests.CheckForInvalidResourceFileNamesTests.InvalidResourceFileNames(&quot;_myresource.xml&quot;,True,0)" duration="2" />
  <test name="Xamarin.Android.Build.Tests.CheckForInvalidResourceFileNamesTests.InvalidResourceFileNames(&quot;-myresource.xml&quot;,False,2)" duration="3" />
  <test name="Xamarin.Android.Build.Tests.CheckForInvalidResourceFileNamesTests.InvalidResourceFileNames(&quot;.myresource.xml&quot;,False,1)" duration="2" />
  <test name="Xamarin.Android.Build.Tests.CheckForInvalidResourceFileNamesTests.InvalidResourceFileNames(&quot;@myresource.xml&quot;,False,2)" duration="2" />
  <test name="Xamarin.Android.Build.Tests.CheckForInvalidResourceFileNamesTests.InvalidResourceFileNames(&quot;5myresource.xml&quot;,False,1)" duration="2" />
  <test name="Xamarin.Android.Build.Tests.CheckForInvalidResourceFileNamesTests.InvalidResourceFileNames(&quot;myresource.xml&quot;,True,0)" duration="2" />
  <test name="Xamarin.Android.Build.Tests.CheckForInvalidResourceFileNamesTests.InvalidResourceFileNames(&quot;Myresource.xml&quot;,True,0)" duration="1" />
  <test name="Xamarin.Android.Build.Tests.CheckGoogleSdkRequirementsTests.CheckManifestCompileSdkLowerThanTargetSdk" duration="14" />
  <test name="Xamarin.Android.Build.Tests.CheckGoogleSdkRequirementsTests.CheckManifestIsOK" duration="9" />
  <test name="Xamarin.Android.Build.Tests.CheckGoogleSdkRequirementsTests.CheckManifestMinSdkLowerThanTargetSdk" duration="8" />
  <test name="Xamarin.Android.Build.Tests.CheckGoogleSdkRequirementsTests.CheckManifestTargetSdkLowerThanCompileSdk" duration="9" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildFew_ConflictingButton" duration="6794" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildFew_ConflictingFragment" duration="7078" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildFew_ConflictingLinearLayout" duration="6441" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildFew_ConflictingRelativeLayout" duration="5907" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildFew_ConflictingTextView" duration="6930" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildMany_ConflictingButton" duration="6354" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildMany_ConflictingFragment" duration="6813" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildMany_ConflictingLinearLayout" duration="7183" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildMany_ConflictingRelativeLayout" duration="6487" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.FailedBuildMany_ConflictingTextView" duration="5931" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.SuccessfulAndroidXApp" duration="78387" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.SuccessfulBuildFew" duration="53313" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.SuccessfulBuildFew_DTB" duration="4352" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.SuccessfulBuildMany" duration="53619" />
  <test name="Xamarin.Android.Build.Tests.CodeBehindTests.SuccessfulBuildMany_DTB" duration="4441" />
  <test name="Xamarin.Android.Build.Tests.ConvertResourcesCasesTests.CheckAdaptiveIconIsConverted" duration="55" />
  <test name="Xamarin.Android.Build.Tests.ConvertResourcesCasesTests.CheckClassIsNotReplacedWithMd5" duration="27" />
  <test name="Xamarin.Android.Build.Tests.ConvertResourcesCasesTests.CheckClassIsReplacedWithMd5" duration="35" />
  <test name="Xamarin.Android.Build.Tests.CopyIfChangedTests.CaseChanges" duration="5" />
  <test name="Xamarin.Android.Build.Tests.CopyIfChangedTests.DestinationNoExist" duration="4" />
  <test name="Xamarin.Android.Build.Tests.CopyIfChangedTests.DestinationOlder" duration="5" />
  <test name="Xamarin.Android.Build.Tests.CopyIfChangedTests.DestinationOlderNoLengthCheck" duration="5" />
  <test name="Xamarin.Android.Build.Tests.CopyIfChangedTests.NoChange" duration="3" />
  <test name="Xamarin.Android.Build.Tests.CopyIfChangedTests.SourceOlder" duration="3" />
  <test name="Xamarin.Android.Build.Tests.CopyIfChangedTests.SourceOlderDifferentLength" duration="2" />
  <test name="Xamarin.Android.Build.Tests.CopyIfChangedTests.SourceOlderDifferentLengthButNoLengthCheck" duration="2" />
  <test name="Xamarin.Android.Build.Tests.CopyResourceTests.FilesThatAreExpected(&quot;machine.config&quot;)" duration="2" />
  <test name="Xamarin.Android.Build.Tests.CopyResourceTests.FilesThatAreExpected(&quot;MonoRuntimeProvider.Bundled.java&quot;)" duration="2" />
  <test name="Xamarin.Android.Build.Tests.CopyResourceTests.FileThatDoesNotExist" duration="1" />
  <test name="Xamarin.Android.Build.Tests.DebuggingTasksTests.TestResolveToolsExists" duration="810" />
  <test name="Xamarin.Android.Build.Tests.DeferredBuildTest.RunUpdateAndroidResourcesIfBackgroundBuildNotSupported" duration="2752" />
  <test name="Xamarin.Android.Build.Tests.DeferredBuildTest.SelectivelyRunUpdateAndroidResources" duration="25095" />
  <test name="Xamarin.Android.Build.Tests.DesignerTests.CustomDesignerTargetSetupDependenciesForDesigner" duration="41057" />
  <test name="Xamarin.Android.Build.Tests.DesignerTests.DesignerBeforeNuGetRestore(False)" duration="18052" />
  <test name="Xamarin.Android.Build.Tests.DesignerTests.DesignerBeforeNuGetRestore(True)" duration="15520" />
  <test name="Xamarin.Android.Build.Tests.DesignerTests.GetExtraLibraryLocationsForDesigner" duration="45298" />
  <test name="Xamarin.Android.Build.Tests.DesignerTests.IncrementalDesignTimeBuild" duration="15115" />
  <test name="Xamarin.Android.Build.Tests.DesignerTests.IncrementalFullBuild" duration="36681" />
  <test name="Xamarin.Android.Build.Tests.DesignerTests.IncrementalSetupDependenciesForDesigner" duration="17106" />
  <test name="Xamarin.Android.Build.Tests.EnvironmentContentTests.BuildApplicationWithMonoEnvironment(&quot;&quot;)" duration="95859" />
  <test name="Xamarin.Android.Build.Tests.EnvironmentContentTests.BuildApplicationWithMonoEnvironment(&quot;Normal&quot;)" duration="99661" />
  <test name="Xamarin.Android.Build.Tests.EnvironmentContentTests.BuildApplicationWithMonoEnvironment(&quot;Offline&quot;)" duration="96902" />
  <test name="Xamarin.Android.Build.Tests.EnvironmentContentTests.CheckConcurrentGC" duration="64218" />
  <test name="Xamarin.Android.Build.Tests.EnvironmentContentTests.CheckForInvalidHttpClientHandlerType" duration="3757" />
  <test name="Xamarin.Android.Build.Tests.EnvironmentContentTests.CheckHttpClientHandlerType" duration="72949" />
  <test name="Xamarin.Android.Build.Tests.EnvironmentContentTests.CheckMonoDebugIsAddedToEnvironment(&quot;&quot;)" duration="32787" />
  <test name="Xamarin.Android.Build.Tests.EnvironmentContentTests.CheckMonoDebugIsAddedToEnvironment(&quot;Normal&quot;)" duration="33791" />
  <test name="Xamarin.Android.Build.Tests.EnvironmentContentTests.CheckMonoDebugIsAddedToEnvironment(&quot;Offline&quot;)" duration="33397" />
  <test name="Xamarin.Android.Build.Tests.FilterAssembliesTests.CircleImageView" duration="234" />
  <test name="Xamarin.Android.Build.Tests.FilterAssembliesTests.GuavaListenableFuture" duration="198" />
  <test name="Xamarin.Android.Build.Tests.FilterAssembliesTests.XamarinForms" duration="259" />
  <test name="Xamarin.Android.Build.Tests.GenerateLibraryResourcesTests.Anim" duration="13" />
  <test name="Xamarin.Android.Build.Tests.GenerateLibraryResourcesTests.Collision" duration="18" />
  <test name="Xamarin.Android.Build.Tests.GenerateLibraryResourcesTests.Id" duration="12" />
  <test name="Xamarin.Android.Build.Tests.GenerateLibraryResourcesTests.ManifestDoesNotExist" duration="8" />
  <test name="Xamarin.Android.Build.Tests.GenerateLibraryResourcesTests.NoMatches" duration="14" />
  <test name="Xamarin.Android.Build.Tests.GenerateLibraryResourcesTests.Styleable" duration="22" />
  <test name="Xamarin.Android.Build.Tests.GenerateLibraryResourcesTests.TextFileDoesNotExist" duration="6" />
  <test name="Xamarin.Android.Build.Tests.GeneratePackageManagerJavaTests.CheckPackageManagerAssemblyOrder([&quot;linked/HelloAndroid.dll&quot;, &quot;linked/Xamarin.AndroidX.SavedState.dll&quot;],[&quot;linked/Xamarin.AndroidX.SavedState.dll&quot;, &quot;linked/System.Console.dll&quot;, &quot;linked/System.Linq.dll&quot;, &quot;linked/HelloAndroid.dll&quot;])" duration="83" />
  <test name="Xamarin.Android.Build.Tests.GeneratePackageManagerJavaTests.CheckPackageManagerAssemblyOrder([&quot;linked/Xamarin.AndroidX.SavedState.dll&quot;, &quot;linked/HelloAndroid.dll&quot;],[&quot;linked/Xamarin.AndroidX.SavedState.dll&quot;, &quot;linked/HelloAndroid.dll&quot;, &quot;linked/System.Console.dll&quot;, &quot;linked/System.Linq.dll&quot;])" duration="79" />
  <test name="Xamarin.Android.Build.Tests.GenerateResourceCaseMapTests.CaseMapAllCapsWorks" duration="8" />
  <test name="Xamarin.Android.Build.Tests.GetDependenciesTest.CheckNdkBundle(False)" duration="5" />
  <test name="Xamarin.Android.Build.Tests.GetDependenciesTest.CheckNdkBundle(True)" duration="5" />
  <test name="Xamarin.Android.Build.Tests.GetDependenciesTest.ManifestFileDoesNotExist" duration="5" />
  <test name="Xamarin.Android.Build.Tests.GetDependenciesTest.ManifestFileExists" duration="6" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.AaptError(True)" duration="30180" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.AllProjectsHaveSameOutputDirectory" duration="83102" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.AndroidAssetChange" duration="64056" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.AndroidAssetMissing" duration="52216" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.AndroidResourceChange" duration="45196" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.AndroidXMigrationBug" duration="51464" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.AppProjectTargetsDoNotBreak" duration="82738" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.BasicApplicationRepetitiveBuild" duration="87202" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.BasicApplicationRepetitiveReleaseBuild" duration="161578" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.BuildPropsBreaksConvertResourcesCasesOnSecondBuild(True)" duration="103352" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.BuildSolutionWithMultipleProjectsInParallel" duration="1002032" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.CasingOnJavaLangObject" duration="85918" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.ChangePackageNamingPolicy" duration="82205" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.ChangeSupportedAbis" duration="72125" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.CheckNothingIsDeletedByIncrementalClean(False,True)" duration="329217" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.CheckNothingIsDeletedByIncrementalClean(True,True)" duration="300835" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.CheckResourceDirectoryDoesNotGetHosed" duration="161897" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.ConvertCustomView(True)" duration="38349" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.CSProjUserFileChanges" duration="67402" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.DesignTimeBuild" duration="11040" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.DeterministicBuilds(False)" duration="46825" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.DeterministicBuilds(True)" duration="68224" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.GenerateJavaStubsAndAssembly(False)" duration="40122" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.GenerateJavaStubsAndAssembly(True)" duration="79130" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.IncrementalCleanDuringClean" duration="201131" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.InvalidAndroidResource(True)" duration="29932" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.JavacTaskDoesNotRunOnSecondBuild" duration="91697" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.LibraryIncrementalBuild" duration="7531" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.LibraryProjectTargetsDoNotBreak" duration="14061" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.LinkAssembliesNoShrink" duration="105567" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.ManifestMergerIncremental" duration="75203" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.MissingProjectReference" duration="55861" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.ProduceReferenceAssembly" duration="48592" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.ResolveLibraryProjectImports(True)" duration="100159" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.ResolveNativeLibrariesInManagedReferences" duration="104736" />
  <test name="Xamarin.Android.Build.Tests.IncrementalBuildTest.TransitiveDependencyProduceReferenceAssembly" duration="64571" />
  <test name="Xamarin.Android.Build.Tests.KeyToolTests.CreateDebugKeyStore" duration="1574" />
  <test name="Xamarin.Android.Build.Tests.KeyToolTests.CreateDebugKeyStoreWithStrongPassword" duration="1548" />
  <test name="Xamarin.Android.Build.Tests.KeyToolTests.ListEmptyKey" duration="242" />
  <test name="Xamarin.Android.Build.Tests.KeyToolTests.ListInvalidAlias" duration="348" />
  <test name="Xamarin.Android.Build.Tests.KeyToolTests.ListInvalidPassword" duration="288" />
  <test name="Xamarin.Android.Build.Tests.KeyToolTests.ListSuccessWithPassword" duration="421" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.AndroidAddKeepAlives(False,False,False,False)" duration="21157" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.AndroidAddKeepAlives(False,True,False,True)" duration="21406" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.AndroidAddKeepAlives(True,False,False,True)" duration="40355" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.AndroidAddKeepAlives(True,False,True,True)" duration="177120" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.AndroidUseNegotiateAuthentication(False)" duration="49289" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.AndroidUseNegotiateAuthentication(null)" duration="48890" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.AndroidUseNegotiateAuthentication(True)" duration="52790" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.DoNotErrorOnPerArchJavaTypeDuplicates" duration="53238" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.FixAbstractMethodsStep_Explicit" duration="68" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.FixAbstractMethodsStep_SkipDimMembers" duration="61" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.LinkDescription(False)" duration="72832" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.LinkDescription(True)" duration="73229" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.LinkWithNullAttribute" duration="41353" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.PreserveCustomHttpClientHandlers" duration="91848" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.RemoveDesigner(False)" duration="40657" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.RemoveDesigner(True)" duration="42231" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.TypeRegistrationsFallback(False)" duration="41014" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.TypeRegistrationsFallback(True)" duration="40857" />
  <test name="Xamarin.Android.Build.Tests.LinkerTests.WarnAboutAppDomains(False)" duration="18572" />
  <test name="Xamarin.Android.Build.Tests.MakeBundleNativeCodeExternalTests.XA5104AndroidNdkNotFound(&quot;&quot;)" duration="9" />
  <test name="Xamarin.Android.Build.Tests.MakeBundleNativeCodeExternalTests.XA5104AndroidNdkNotFound(&quot;DoesNotExist&quot;)" duration="3" />
  <test name="Xamarin.Android.Build.Tests.MakeBundleNativeCodeExternalTests.XA5104AndroidNdkNotFound(null)" duration="62" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.CheckPerformanceOfManagedParser" duration="435" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.CompareAapt2AndManagedParserOutput" duration="348" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.CompareAaptAndManagedParserOutputWithCustomIds" duration="894" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.GenerateDesignerFileFromEmptyRtxt" duration="205" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.GenerateDesignerFileFromRtxt(False)" duration="313" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.GenerateDesignerFileFromRtxt(True)" duration="3659" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.GenerateDesignerFileWithElevenStyleableAttributesFromRtxt" duration="115" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.GenerateDesignerFileWithÜmläüts" duration="200" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.RtxtGeneratorOutput" duration="49" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.UpdateLayoutIdIsIncludedInDesigner(False)" duration="246" />
  <test name="Xamarin.Android.Build.Tests.ManagedResourceParserTests.UpdateLayoutIdIsIncludedInDesigner(True)" duration="319" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.AllActivityAttributeProperties(&quot;legacy&quot;)" duration="39930" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.AllActivityAttributeProperties(&quot;manifestmerger.jar&quot;)" duration="47952" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.AllServiceAttributeProperties(&quot;legacy&quot;)" duration="37109" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.AllServiceAttributeProperties(&quot;manifestmerger.jar&quot;)" duration="47042" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ApplicationVersionTests(&quot;1&quot;,False,&quot;manifest=1&quot;)" duration="76273" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ApplicationVersionTests(&quot;1&quot;,True,&quot;x86_64=500001;arm64-v8a=400001&quot;)" duration="93651" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ApplicationVersionTests(&quot;2&quot;,False,&quot;manifest=2&quot;)" duration="83444" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ApplicationVersionTests(&quot;2&quot;,True,&quot;x86_64=500002;arm64-v8a=400002&quot;)" duration="89400" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ApplicationVersionTests(&quot;999&quot;,False,&quot;manifest=999&quot;)" duration="80785" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ApplicationVersionTests(&quot;999&quot;,True,&quot;x86_64=500999;arm64-v8a=400999&quot;)" duration="92627" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.Bug12935(True)" duration="200360" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.CheckElementReOrdering(True)" duration="147750" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;&quot;,False,True)" duration="44426" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;&quot;,True,False)" duration="91642" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;Full&quot;,False,True)" duration="49090" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;Full&quot;,True,False)" duration="89036" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;None&quot;,False,True)" duration="51319" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;None&quot;,True,False)" duration="88018" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;PdbOnly&quot;,False,True)" duration="45085" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;PdbOnly&quot;,True,False)" duration="92702" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;Portable&quot;,False,True)" duration="49199" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DebuggerAttribute(&quot;Portable&quot;,True,False)" duration="88836" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.DirectBootAwareAttribute" duration="84174" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ExportedErrorMessage" duration="19244" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.IntentFilterData" duration="82393" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.IntentFilterDataLists" duration="75731" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.IntentFilterMultipleItems" duration="73023" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.LayoutAttributeElement" duration="75888" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ManifestPlaceholders(&quot;legacy&quot;)" duration="65108" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ManifestPlaceholders(&quot;manifestmerger.jar&quot;)" duration="82600" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ManifestPlaceHolders2" duration="80678" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ManifestPlaceHoldersXA1010(&quot;legacy&quot;)" duration="37445" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ManifestPlaceHoldersXA1010(&quot;manifestmerger.jar&quot;)" duration="15967" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.MergeLibraryManifest" duration="65149" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ModifyManifest(False)" duration="37068" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.ModifyManifest(True)" duration="71612" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.OverlayManifestTest" duration="82656" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.RemovePermissionTest" duration="91255" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(False,&quot;armeabi-v7a;x86&quot;,&quot;123&quot;,False,&quot;{abi}{versionCode}&quot;,null,True,&quot;123&quot;)" duration="43360" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(False,&quot;armeabi-v7a&quot;,&quot;1&quot;,False,&quot;{abi}{versionCode}&quot;,&quot;versionCode=123&quot;,True,&quot;123&quot;)" duration="61634" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(False,&quot;armeabi-v7a&quot;,&quot;123&quot;,False,&quot;{abi}{versionCode}&quot;,null,True,&quot;123&quot;)" duration="35122" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(False,&quot;armeabi-v7a&quot;,&quot;123&quot;,False,null,null,True,&quot;123&quot;)" duration="55392" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(False,&quot;armeabi-v7a&quot;,&quot;123&quot;,True,null,null,True,&quot;123&quot;)" duration="44714" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(True,&quot;armeabi-v7a;x86&quot;,&quot;12&quot;,False,&quot;{abi}{minSDK:00}{screen}{foo:0}{versionCode:000}&quot;,&quot;screen=24;foo=$(Foo)&quot;,True,&quot;219241012;319241012&quot;)" duration="48611" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(True,&quot;armeabi-v7a;x86&quot;,&quot;12&quot;,False,&quot;{abi}{minSDK:00}{screen}{foo:00}{versionCode:000}&quot;,&quot;screen=24;foo=$(Foo)&quot;,False,&quot;2192401012;3192401012&quot;)" duration="26460" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(True,&quot;armeabi-v7a;x86&quot;,&quot;12&quot;,False,&quot;{abi}{minSDK:00}{screen}{versionCode:000}&quot;,&quot;screen=24&quot;,True,&quot;21924012;31924012&quot;)" duration="43630" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(True,&quot;armeabi-v7a;x86&quot;,&quot;12&quot;,False,&quot;{abi}{minSDK:00}{versionCode:000}&quot;,null,True,&quot;219012;319012&quot;)" duration="38476" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(True,&quot;armeabi-v7a;x86&quot;,&quot;123&quot;,False,&quot;{abi}{versionCode}&quot;,null,True,&quot;2123;3123&quot;)" duration="35738" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(True,&quot;armeabi-v7a;x86&quot;,&quot;123&quot;,False,null,null,True,&quot;200123;300123&quot;)" duration="35811" />
  <test name="Xamarin.Android.Build.Tests.ManifestTest.VersionCodeTests(True,&quot;armeabi-v7a;x86&quot;,&quot;123&quot;,True,null,null,True,&quot;131195;196731&quot;)" duration="58729" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(-1,1)" duration="77759" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(-1,10)" duration="74521" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(-1,100)" duration="77608" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(-1,200)" duration="67173" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(-1,5)" duration="76146" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(1,-1)" duration="55105" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(100,-1)" duration="76069" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(1024,-1)" duration="71488" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(5,-1)" duration="80620" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(50,-1)" duration="66701" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.BuildApkWithZipFlushLimits(512,-1)" duration="73740" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckAppBundle(False)" duration="66001" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckAppBundle(True)" duration="84975" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckClassesDexIsIncluded" duration="71616" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckExcludedFilesAreMissing" duration="85074" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckIncludedAssemblies(False)" duration="33012" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckIncludedAssemblies(True)" duration="33217" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckIncludedNativeLibraries(False,True)" duration="29669" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckIncludedNativeLibraries(True,True)" duration="29693" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckMetadataSkipItemsAreProcessedCorrectly" duration="42119" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckProguardMappingFileExists" duration="68627" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckSignApk(False,False)" duration="63294" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckSignApk(False,True)" duration="98049" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckSignApk(True,False)" duration="80176" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.CheckSignApk(True,True)" duration="102327" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.EmbeddedDSOs" duration="45993" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.ExplicitPackageNamingPolicy" duration="45390" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.ExtractNativeLibsTrue" duration="36362" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.IgnoreManifestFromJar" duration="75534" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.IncrementalCompression" duration="47930" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.MissingSatelliteAssemblyInApp" duration="65549" />
  <test name="Xamarin.Android.Build.Tests.PackagingTest.MissingSatelliteAssemblyInLibrary" duration="64974" />
  <test name="Xamarin.Android.Build.Tests.PackagingUtilsTests.Directories" duration="2" />
  <test name="Xamarin.Android.Build.Tests.PackagingUtilsTests.HiddenFiles" duration="2" />
  <test name="Xamarin.Android.Build.Tests.PackagingUtilsTests.JavaFiles" duration="2" />
  <test name="Xamarin.Android.Build.Tests.PackagingUtilsTests.KotlinServices" duration="2" />
  <test name="Xamarin.Android.Build.Tests.PackagingUtilsTests.SigningFiles" duration="2" />
  <test name="Xamarin.Android.Build.Tests.PackagingUtilsTests.SvnDirectories" duration="2" />
  <test name="Xamarin.Android.Build.Tests.RemoveDirTests.LongPath" duration="5" />
  <test name="Xamarin.Android.Build.Tests.RemoveDirTests.NoExist" duration="4" />
  <test name="Xamarin.Android.Build.Tests.RemoveDirTests.NormalDelete" duration="4" />
  <test name="Xamarin.Android.Build.Tests.RemoveDirTests.ReadonlyFile" duration="5" />
  <test name="Xamarin.Android.Build.Tests.ResolveMonoAndroidSdksTests.HasTrailingSlash" duration="2035" />
  <test name="Xamarin.Android.Build.Tests.ResolveMonoAndroidSdksTests.MissingAndroidNDK" duration="2009" />
  <test name="Xamarin.Android.Build.Tests.ResolveMonoAndroidSdksTests.NormalInputs" duration="2059" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.LatestTFV_OldTargetSdkVersion" duration="21035" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.ResolveSdkTiming" duration="79" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.TargetFrameworkPairing(&quot;New Unstable API&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo],[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo],null,&quot;27&quot;,&quot;27&quot;,&quot;v8.1&quot;)" duration="28" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.TargetFrameworkPairing(&quot;Newer API Installed&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo],[Xamarin.Android.Build.Tests.BaseTest+ApiInfo],null,&quot;27&quot;,&quot;27&quot;,&quot;v8.1&quot;)" duration="27" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.TargetFrameworkPairing(&quot;Older API Installed&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo],[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo],null,&quot;27&quot;,&quot;27&quot;,&quot;v8.1&quot;)" duration="29" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.TargetFrameworkPairing(&quot;Paired Downgrade&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo],[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo],null,&quot;26&quot;,&quot;26&quot;,&quot;v8.0&quot;)" duration="31" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.TargetFrameworkPairing(&quot;User Selected Unstable API&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo],[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo],&quot;v9.0&quot;,&quot;28&quot;,&quot;28&quot;,&quot;v9.0&quot;)" duration="32" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],False,&quot;v6.0&quot;,False,&quot;v6.0&quot;,&quot;XA0001&quot;,&quot;Unsupported or invalid $(TargetFrameworkVersion) value of 'v6.0'. Please update your Project Options.&quot;)" duration="86" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],False,&quot;v8.0&quot;,True,&quot;v8.0&quot;,&quot;&quot;,&quot;&quot;)" duration="81" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],False,&quot;v8.1&quot;,True,&quot;v8.1&quot;,&quot;&quot;,&quot;&quot;)" duration="78" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],False,&quot;v9.0&quot;,True,&quot;v9.0&quot;,&quot;&quot;,&quot;&quot;)" duration="80" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],False,null,True,&quot;v8.1&quot;,&quot;&quot;,&quot;&quot;)" duration="81" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],True,&quot;v6.0&quot;,True,&quot;v8.1&quot;,&quot;&quot;,&quot;&quot;)" duration="85" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],True,&quot;v7.1&quot;,True,&quot;v8.1&quot;,&quot;&quot;,&quot;&quot;)" duration="112" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],True,&quot;v8.0&quot;,True,&quot;v8.1&quot;,&quot;&quot;,&quot;&quot;)" duration="90" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],True,&quot;v8.1&quot;,True,&quot;v8.1&quot;,&quot;&quot;,&quot;&quot;)" duration="83" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],True,&quot;v9.0&quot;,True,&quot;v9.0&quot;,&quot;&quot;,&quot;&quot;)" duration="82" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;26.0.3&quot;,&quot;1.8.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],True,null,True,&quot;v8.1&quot;,&quot;&quot;,&quot;&quot;)" duration="85" />
  <test name="Xamarin.Android.Build.Tests.ResolveSdksTaskTests.UseLatestAndroidSdk(&quot;30.0.0&quot;,&quot;11.0&quot;,[Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, Xamarin.Android.Build.Tests.BaseTest+ApiInfo, ...],False,&quot;v11.0.99&quot;,True,&quot;v11.0.99&quot;,&quot;&quot;,&quot;&quot;)" duration="87" />
  <test name="Xamarin.Android.Build.Tests.SingleProjectTest.AndroidManifestProperties(&quot;1.0.0&quot;,&quot;1.0.0&quot;,&quot;XA0003&quot;)" duration="9132" />
  <test name="Xamarin.Android.Build.Tests.SingleProjectTest.AndroidManifestProperties(&quot;2.1&quot;,&quot;42&quot;,&quot;&quot;)" duration="21426" />
  <test name="Xamarin.Android.Build.Tests.SingleProjectTest.AndroidManifestProperties(&quot;3.1.3a1&quot;,&quot;42&quot;,&quot;&quot;)" duration="20950" />
  <test name="Xamarin.Android.Build.Tests.SingleProjectTest.AndroidManifestProperties(&quot;6.0-preview.7&quot;,&quot;42&quot;,&quot;&quot;)" duration="20949" />
  <test name="Xamarin.Android.Build.Tests.SingleProjectTest.AndroidManifestValuesWin" duration="21237" />
  <test name="Xamarin.Android.Build.Tests.Tasks.NdkUtilTests.TestNdkUtil" duration="942" />
  <test name="Xamarin.Android.Build.Tests.Tasks.ZipAlignTests.CheckAZAErrorCodeIsRaised" duration="216" />
  <test name="Xamarin.Android.Build.Tests.ValidateJavaVersionTests.BuildTools27_Requires_1_8_0" duration="39" />
  <test name="Xamarin.Android.Build.Tests.ValidateJavaVersionTests.CacheInvalidates" duration="117" />
  <test name="Xamarin.Android.Build.Tests.ValidateJavaVersionTests.CacheWorks" duration="60" />
  <test name="Xamarin.Android.Build.Tests.ValidateJavaVersionTests.ExtraJavacOutputIsIgnored" duration="88" />
  <test name="Xamarin.Android.Build.Tests.ValidateJavaVersionTests.TargetFramework8_1_Requires_1_8_0" duration="37" />
  <test name="Xamarin.Android.Build.Tests.WearTests.BasicProject(False)" duration="29261" />
  <test name="Xamarin.Android.Build.Tests.WearTests.BasicProject(True)" duration="57948" />
  <test name="Xamarin.Android.Build.Tests.WearTests.BundledWearApp" duration="23668" />
  <test name="Xamarin.Android.Build.Tests.WearTests.ResolveLibraryImportsWithReadonlyFiles" duration="28586" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.AppWithSingleJar" duration="32005" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.BenchmarkDotNet" duration="30071" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DefaultItems" duration="21074" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm;android-arm64;android-x86;android-x64&quot;,False,False,False)" duration="39552" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm;android-arm64;android-x86;android-x64&quot;,False,False,True)" duration="39053" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm;android-arm64;android-x86;android-x64&quot;,True,False,False)" duration="90154" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm;android-arm64;android-x86;android-x64&quot;,True,False,True)" duration="91377" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm;android-arm64;android-x86;android-x64&quot;,True,True,False)" duration="210439" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm;android-arm64;android-x86&quot;,True,False,False)" duration="74057" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm&quot;,False,False,False)" duration="36073" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm&quot;,False,False,True)" duration="34754" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm&quot;,True,False,False)" duration="43829" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm&quot;,True,False,True)" duration="46239" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm&quot;,True,True,False)" duration="81661" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm&quot;,True,True,True)" duration="80367" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm64&quot;,False,False,False)" duration="32257" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-arm64&quot;,True,False,False)" duration="45782" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-x64&quot;,False,False,False)" duration="35979" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuild(&quot;android-x86&quot;,False,False,False)" duration="35145" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuildBinding" duration="9212" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuildLibrary(False,False,False)" duration="35987" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuildLibrary(False,False,True)" duration="37005" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuildLibrary(False,True,False)" duration="38420" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuildLibrary(False,True,True)" duration="38124" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuildLibrary(True,False,False)" duration="99187" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuildLibrary(True,False,True)" duration="100812" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuildXamarinForms(False)" duration="38090" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetBuildXamarinForms(True)" duration="39552" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetDesignTimeBuild" duration="29768" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetIncremental(False,&quot;&quot;)" duration="29498" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetIncremental(False,&quot;android-arm64&quot;)" duration="23277" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetIncremental(True,&quot;&quot;)" duration="94946" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetIncremental(True,&quot;android-arm64&quot;)" duration="35592" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetLibraryAarChanges" duration="11065" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetNew(&quot;android-bindinglib&quot;)" duration="14625" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetNew(&quot;android&quot;)" duration="106986" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetNew(&quot;androidlib&quot;)" duration="14798" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetNew(&quot;androidwear&quot;)" duration="137201" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPack(&quot;net7.0&quot;,&quot;android&quot;,33)" duration="13597" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPack(&quot;net7.0&quot;,&quot;android33&quot;,33)" duration="13238" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPack(&quot;net8.0&quot;,&quot;android&quot;,33)" duration="8938" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPack(&quot;net8.0&quot;,&quot;android33&quot;,33)" duration="9059" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPublish(False,[&quot;net7.0&quot;, &quot;android&quot;, 33])" duration="18933" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPublish(False,[&quot;net8.0&quot;, &quot;android&quot;, 33])" duration="14593" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPublish(False,[&quot;net8.0&quot;, &quot;android33&quot;, 33])" duration="14674" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPublish(False,[&quot;net8.0&quot;, &quot;android34.0&quot;, 34])" duration="14816" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPublish(True,[&quot;net7.0&quot;, &quot;android&quot;, 33])" duration="36668" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPublish(True,[&quot;net8.0&quot;, &quot;android&quot;, 33])" duration="28865" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPublish(True,[&quot;net8.0&quot;, &quot;android33&quot;, 33])" duration="29136" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.DotNetPublish(True,[&quot;net8.0&quot;, &quot;android34.0&quot;, 34])" duration="29078" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.GenerateResourceDesigner_false(False)" duration="6082" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.GenerateResourceDesigner_false(True)" duration="6449" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.GenerateResourceDesigner(False,False)" duration="30734" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.GenerateResourceDesigner(False,True)" duration="31284" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.GenerateResourceDesigner(True,False)" duration="31121" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.GenerateResourceDesigner(True,True)" duration="31822" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.MauiTargetFramework(&quot;net7.0&quot;,&quot;android&quot;,33)" duration="7748" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.MauiTargetFramework(&quot;net8.0&quot;,&quot;android&quot;,33)" duration="4086" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.MauiTargetFramework(&quot;net8.0&quot;,&quot;android33&quot;,33)" duration="4050" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.MauiTargetFramework(&quot;net8.0&quot;,&quot;android34.0&quot;,34)" duration="4046" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.ProjectDependencies(False)" duration="93896" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.ProjectDependencies(True)" duration="93782" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.SettingCombinations(False,False,True,False,True)" duration="52312" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.SettingCombinations(False,False,True,True,True)" duration="79544" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.SettingCombinations(True,False,False,True,False)" duration="2546" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.SettingCombinations(True,True,True,True,True)" duration="79710" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.SignAndroidPackage" duration="20857" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.SupportedOSPlatformVersion(21)" duration="21312" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.SupportedOSPlatformVersion(31)" duration="21114" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.WearProjectJavaBuildFailure" duration="100475" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.XamarinLegacySdk(&quot;net7.0-android33.0&quot;)" duration="18646" />
  <test name="Xamarin.Android.Build.Tests.XASdkTests.XamarinLegacySdk(&quot;net8.0-android33.0&quot;)" duration="12686" />
  <test name="Xamarin.Android.Build.Tests.ZipArchiveExTests.AddDirectory" duration="17" />
  <test name="Xamarin.Android.Build.Tests.ZipArchiveExTests.AddDirectoryCurrentDirectory" duration="15" />
  <test name="Xamarin.Android.Build.Tests.ZipArchiveExTests.AddDirectoryOddPaths" duration="18" />
  <test name="Xamarin.Android.Build.Tests.ZipArchiveExTests.SkipExistingFile_Compression" duration="389" />
  <test name="Xamarin.Android.Build.Tests.ZipArchiveExTests.SkipExistingFile_Exist" duration="333" />
  <test name="Xamarin.Android.Build.Tests.ZipArchiveExTests.SkipExistingFile_TimeStamp" duration="341" />
</tests>