namespace Xamarin.Android.Application.Utilities;

enum RelocationTypeARM64
{
	R_AARCH64_TLSGD_MOVW_G1                = 515, //  GOT-rel. MOV{N,Z} 31:16.
	R_AARCH64_TLSGD_MOVW_G0_NC             = 516, //  GOT-rel. MOVK imm. 15:0.
	R_AARCH64_TLSLD_ADR_PREL21             = 517, //  Like 512; local dynamic model.
	R_AARCH64_TLSLD_ADR_PAGE21             = 518, //  Like 513; local dynamic model.
	R_AARCH64_TLSLD_ADD_LO12_NC            = 519, //  Like 514; local dynamic model.
	R_AARCH64_TLSLD_MOVW_G1                = 520, //  Like 515; local dynamic model.
	R_AARCH64_TLSLD_MOVW_G0_NC             = 521, //  Like 516; local dynamic model.
	R_AARCH64_TLSLD_LD_PREL19              = 522, //  TLS PC-rel. load imm. 20:2.
	R_AARCH64_TLSLD_MOVW_DTPREL_G2         = 523, //  TLS DTP-rel. MOV{N,Z} 47:32.
	R_AARCH64_TLSLD_MOVW_DTPREL_G1         = 524, //  TLS DTP-rel. MOV{N,Z} 31:16.
	R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC      = 525, //  Likewise; MOVK; no check.
	R_AARCH64_TLSLD_MOVW_DTPREL_G0         = 526, //  TLS DTP-rel. MOV{N,Z} 15:0.
	R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC      = 527, //  Likewise; MOVK; no check.
	R_AARCH64_TLSLD_ADD_DTPREL_HI12        = 528, //  DTP-rel. ADD imm. from 23:12.
	R_AARCH64_TLSLD_ADD_DTPREL_LO12        = 529, //  DTP-rel. ADD imm. from 11:0.
	R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC     = 530, //  Likewise; no ovfl. check.
	R_AARCH64_TLSLD_LDST8_DTPREL_LO12      = 531, //  DTP-rel. LD/ST imm. 11:0.
	R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC   = 532, //  Likewise; no check.
	R_AARCH64_TLSLD_LDST16_DTPREL_LO12     = 533, //  DTP-rel. LD/ST imm. 11:1.
	R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC  = 534, //  Likewise; no check.
	R_AARCH64_TLSLD_LDST32_DTPREL_LO12     = 535, //  DTP-rel. LD/ST imm. 11:2.
	R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC  = 536, //  Likewise; no check.
	R_AARCH64_TLSLD_LDST64_DTPREL_LO12     = 537, //  DTP-rel. LD/ST imm. 11:3.
	R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC  = 538, //  Likewise; no check.
	R_AARCH64_TLSIE_MOVW_GOTTPREL_G1       = 539, //  GOT-rel. MOV{N,Z} 31:16.
	R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC    = 540, //  GOT-rel. MOVK 15:0.
	R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21    = 541, //  Page-rel. ADRP 32:12.
	R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC  = 542, //  Direct LD off. 11:3.
	R_AARCH64_TLSIE_LD_GOTTPREL_PREL19     = 543, //  PC-rel. load imm. 20:2.
	R_AARCH64_TLSLE_MOVW_TPREL_G2          = 544, //  TLS TP-rel. MOV{N,Z} 47:32.
	R_AARCH64_TLSLE_MOVW_TPREL_G1          = 545, //  TLS TP-rel. MOV{N,Z} 31:16.
	R_AARCH64_TLSLE_MOVW_TPREL_G1_NC       = 546, //  Likewise; MOVK; no check.
	R_AARCH64_TLSLE_MOVW_TPREL_G0          = 547, //  TLS TP-rel. MOV{N,Z} 15:0.
	R_AARCH64_TLSLE_MOVW_TPREL_G0_NC       = 548, //  Likewise; MOVK; no check.
	R_AARCH64_TLSLE_ADD_TPREL_HI12         = 549, //  TP-rel. ADD imm. 23:12.
	R_AARCH64_TLSLE_ADD_TPREL_LO12         = 550, //  TP-rel. ADD imm. 11:0.
	R_AARCH64_TLSLE_ADD_TPREL_LO12_NC      = 551, //  Likewise; no ovfl. check.
	R_AARCH64_TLSLE_LDST8_TPREL_LO12       = 552, //  TP-rel. LD/ST off. 11:0.
	R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC    = 553, //  Likewise; no ovfl. check.
	R_AARCH64_TLSLE_LDST16_TPREL_LO12      = 554, //  TP-rel. LD/ST off. 11:1.
	R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC   = 555, //  Likewise; no check.
	R_AARCH64_TLSLE_LDST32_TPREL_LO12      = 556, //  TP-rel. LD/ST off. 11:2.
	R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC   = 557, //  Likewise; no check.
	R_AARCH64_TLSLE_LDST64_TPREL_LO12      = 558, //  TP-rel. LD/ST off. 11:3.
	R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC   = 559, //  Likewise; no check.
	R_AARCH64_TLSDESC_LD_PREL19            = 560, //  PC-rel. load immediate 20:2.
	R_AARCH64_TLSDESC_ADR_PREL21           = 561, //  PC-rel. ADR immediate 20:0.
	R_AARCH64_TLSDESC_ADR_PAGE21           = 562, //  Page-rel. ADRP imm. 32:12.
	R_AARCH64_TLSDESC_LD64_LO12            = 563, //  Direct LD off. from 11:3.
	R_AARCH64_TLSDESC_ADD_LO12             = 564, //  Direct ADD imm. from 11:0.
	R_AARCH64_TLSDESC_OFF_G1               = 565, //  GOT-rel. MOV{N,Z} imm. 31:16.
	R_AARCH64_TLSDESC_OFF_G0_NC            = 566, //  GOT-rel. MOVK imm. 15:0; no ck.
	R_AARCH64_TLSDESC_LDR                  = 567, //  Relax LDR.
	R_AARCH64_TLSDESC_ADD                  = 568, //  Relax ADD.
	R_AARCH64_TLSDESC_CALL                 = 569, //  Relax BLR.
	R_AARCH64_TLSLE_LDST128_TPREL_LO12     = 570, //  TP-rel. LD/ST off. 11:4.
	R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC  = 571, //  Likewise; no check.
	R_AARCH64_TLSLD_LDST128_DTPREL_LO12    = 572, //  DTP-rel. LD/ST imm. 11:4.
	R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC = 573, //  Likewise; no check.
	R_AARCH64_COPY                         = 1024, //  Copy symbol at runtime.
	R_AARCH64_GLOB_DAT                     = 1025, //  Create GOT entry.
	R_AARCH64_JUMP_SLOT                    = 1026, //  Create PLT entry.
	R_AARCH64_RELATIVE                     = 1027, //  Adjust by program base.
	R_AARCH64_TLS_DTPMOD                   = 1028, //  Module number, 64 bit.
	R_AARCH64_TLS_DTPREL                   = 1029, //  Module-relative offset, 64 bit.
	R_AARCH64_TLS_TPREL                    = 1030, //  TP-relative offset, 64 bit.
	R_AARCH64_TLSDESC                      = 1031, //  TLS Descriptor.
	R_AARCH64_IRELATIVE                    = 1032, //  STT_GNU_IFUNC relocation.
}

enum RelocationTypeX64
{
	R_X86_64_NONE            = 0, //  No reloc
	R_X86_64_64              = 1, //  Direct 64 bit
	R_X86_64_PC32            = 2, //  PC relative 32 bit signed
	R_X86_64_GOT32           = 3, //  32 bit GOT entry
	R_X86_64_PLT32           = 4, //  32 bit PLT address
	R_X86_64_COPY            = 5, //  Copy symbol at runtime
	R_X86_64_GLOB_DAT        = 6, //  Create GOT entry
	R_X86_64_JUMP_SLOT       = 7, //  Create PLT entry
	R_X86_64_RELATIVE        = 8, //  Adjust by program base
	R_X86_64_GOTPCREL        = 9, // 32 bit signed PC relative offset to GOT
	R_X86_64_32              = 10, //  Direct 32 bit zero extended
	R_X86_64_32S             = 11, //  Direct 32 bit sign extended
	R_X86_64_16              = 12, //  Direct 16 bit zero extended
	R_X86_64_PC16            = 13, //  16 bit sign extended pc relative
	R_X86_64_8               = 14, //  Direct 8 bit sign extended
	R_X86_64_PC8             = 15, //  8 bit sign extended pc relative
	R_X86_64_DTPMOD64        = 16, //  ID of module containing symbol
	R_X86_64_DTPOFF64        = 17, //  Offset in module's TLS block
	R_X86_64_TPOFF64         = 18, //  Offset in initial TLS block
	R_X86_64_TLSGD           = 19, // 32 bit signed PC relative offset to two GOT entries for GD symbol
	R_X86_64_TLSLD           = 20, // 32 bit signed PC relative offset to two GOT entries for LD symbol
	R_X86_64_DTPOFF32        = 21, //  Offset in TLS block
	R_X86_64_GOTTPOFF        = 22, // 32 bit signed PC relative offset to GOT entry for IE symbol
	R_X86_64_TPOFF32         = 23, //  Offset in initial TLS block
	R_X86_64_PC64            = 24, //  PC relative 64 bit
	R_X86_64_GOTOFF64        = 25, //  64 bit offset to GOT
	R_X86_64_GOTPC32         = 26, // 32 bit signed pc relative offset to GOT
	R_X86_64_GOT64           = 27, //  64-bit GOT entry offset
	R_X86_64_GOTPCREL64      = 28, // 64-bit PC relative offset to GOT entry
	R_X86_64_GOTPC64         = 29, //  64-bit PC relative offset to GOT
	R_X86_64_GOTPLT64        = 30, //  like GOT64, says PLT entry needed
	R_X86_64_PLTOFF64        = 31, // 64-bit GOT relative offset to PLT entry
	R_X86_64_SIZE32          = 32, //  Size of symbol plus 32-bit addend
	R_X86_64_SIZE64          = 33, //  Size of symbol plus 64-bit addend
	R_X86_64_GOTPC32_TLSDESC = 34, //  GOT offset for TLS descriptor.
	R_X86_64_TLSDESC_CALL    = 35, // Marker for call through TLS descriptor.
	R_X86_64_TLSDESC         = 36, //  TLS descriptor.
	R_X86_64_IRELATIVE       = 37, //  Adjust indirectly by program base
	R_X86_64_RELATIVE64      = 38, //  64-bit adjust by program base
	R_X86_64_GOTPCRELX       = 41, // Load from 32 bit signed pc relative offset to GOT entry without REX prefix, relaxable.
	R_X86_64_REX_GOTPCRELX   = 42, // Load from 32 bit signed pc relative offset to GOT entry with REX prefix, relaxable.
}
